<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Problem 1</title>
    <url>/1/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-1"><a href="#Problem-1" class="headerlink" title="Problem 1"></a><a href="https://projecteuler.net/problem=1">Problem 1</a></h1><hr>
<h2 id="Multiples-of-3-or-5"><a href="#Multiples-of-3-or-5" class="headerlink" title="Multiples of $3$ or $5$"></a><strong>Multiples of $3$ or $5$</strong></h2><p>If we list all the natural numbers below $10$ that are multiples of $3$ or $5$, we get $3$, $5$, $6$ and $9$. The sum of these multiples is $23$.</p>
<p>Find the sum of all the multiples of $3$ or $5$ below $1000$.</p>
<hr>
<h2 id="3-或-5-的倍数"><a href="#3-或-5-的倍数" class="headerlink" title="$3$或$5$的倍数"></a><strong>$3$或$5$的倍数</strong></h2><p>在小于$10$的自然数中，$3$或$5$的倍数有$3$、$5$、$6$和$9$，这些数之和是$23$。</p>
<p>求小于$1000$的自然数中所有$3$或$5$的倍数之和。</p>
<p><i class=zh>译注：自然数是否包含$0$目前仍有争议，出题人应当是选择了不包含$0$的定义，但所幸本题的结果并不受此定义影响。</i></p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 100</title>
    <url>/100/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-100"><a href="#Problem-100" class="headerlink" title="Problem 100"></a><a href="https://projecteuler.net/problem=100">Problem 100</a></h1><hr>
<h2 id="Arranged-Probability"><a href="#Arranged-Probability" class="headerlink" title="Arranged Probability"></a><strong>Arranged Probability</strong></h2><p>If a box contains twenty-one coloured discs, composed of fifteen blue discs and six red discs, and two discs were taken at random, it can be seen that the probability of taking two blue discs, $P(BB) = (15/21) \times (14/20) = 1/2$.</p>
<p>The next such arrangement, for which there is exactly $50\%$ chance of taking two blue discs at random, is a box containing eighty-five blue discs and thirty-five red discs.</p>
<p>By finding the first arrangement to contain over $10^{12} = 1,000,000,000,000$ discs in total, determine the number of blue discs that the box would contain.</p>
<hr>
<h2 id="设计概率"><a href="#设计概率" class="headerlink" title="设计概率"></a><strong>设计概率</strong></h2><p>若盒子中装有$21$个彩色碟子，其中$15$个是蓝的，$6$个是红的，则随机从盒子中取出两个碟子恰好都是蓝色的概率是$P(BB) = (15/21) \times (14/20) = 1/2$。</p>
<p>下一组恰好有$50\%$概率取出两个蓝色碟子的情况，发生在盒子中装有$85$个蓝色碟子和$35$个红色碟子时。</p>
<p>若盒子中装有超过$10^{12} = 1,000,000,000,000$个碟子，找出满足上述要求且盘子数最少的情况，并求此时盒子中蓝色碟子的数量。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 10</title>
    <url>/10/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-10"><a href="#Problem-10" class="headerlink" title="Problem 10"></a><a href="https://projecteuler.net/problem=10">Problem 10</a></h1><hr>
<h2 id="Summation-of-Primes"><a href="#Summation-of-Primes" class="headerlink" title="Summation of Primes"></a><strong>Summation of Primes</strong></h2><p>The sum of the primes below $10$ is $2 + 3 + 5 + 7 = 17$.</p>
<p>Find the sum of all the primes below two million.</p>
<hr>
<h2 id="质数求和"><a href="#质数求和" class="headerlink" title="质数求和"></a><strong>质数求和</strong></h2><p>所有小于$10$的质数的和是$2 + 3 + 5 + 7 = 17$。</p>
<p>求所有小于两百万的质数的和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 101</title>
    <url>/101/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-101"><a href="#Problem-101" class="headerlink" title="Problem 101"></a><a href="https://projecteuler.net/problem=101">Problem 101</a></h1><hr>
<h2 id="Optimum-Polynomial"><a href="#Optimum-Polynomial" class="headerlink" title="Optimum Polynomial"></a><strong>Optimum Polynomial</strong></h2><p>If we are presented with the first $k$ terms of a sequence it is impossible to say with certainty the value of the next term, as there are infinitely many polynomial functions that can model the sequence.</p>
<p>As an example, let us consider the sequence of cube numbers. This is defined by the generating function, </p>
<p>$$u_n = n^3: 1, 8, 27, 64, 125, 216, \ldots$$</p>
<p>Suppose we were only given the first two terms of this sequence. Working on the principle that “simple is best” we should assume a linear relationship and predict the next term to be $15$ (common difference $7$). Even if we were presented with the first three terms, by the same principle of simplicity, a quadratic relationship should be assumed.</p>
<p>We shall define $\text{OP}(k, n)$ to be the $n$<sup>th</sup> term of the optimum polynomial generating function for the first $k$ terms of a sequence. It should be clear that $\text{OP}(k, n)$ will accurately generate the terms of the sequence for $n \le k$, and potentially the <i>first incorrect term</i> (FIT) will be $\text{OP}(k, k+1)$; in which case we shall call it a <i>bad OP</i> (BOP).</p>
<p>As a basis, if we were only given the first term of sequence, it would be most sensible to assume constancy; that is, for $n \ge 2$, $\text{OP}(1, n) = u_1$.</p>
<p>Hence we obtain the following OPs for the cubic sequence:</p>
<p>$$\begin{aligned}<br>&amp;\text{OP}(1,n)=1 &amp;&amp;1, \mathbf{\color{red}1}, 1, 1, \ldots\\<br>&amp;\text{OP}(2,n)=7n-6 &amp;&amp;1, 8, \mathbf{\color{red}15}, \ldots\\<br>&amp;\text{OP}(3,n)=6n^2-11n+6 &amp;&amp;1, 8, 27,\mathbf{\color{red}58}, \ldots\\<br>&amp;\text{OP}(4,n)=n^3 &amp;&amp;1, 8, 27, 64, 125, \ldots<br>\end{aligned}$$</p>
<p>Clearly no BOPs exist for $k \ge 4$.</p>
<p>By considering the sum of FITs generated by the BOPs (indicated in ${\color{red}\textbf{red}}$ above), we obtain $1 + 15 + 58 = 74$.</p>
<p>Consider the following tenth degree polynomial generating function:</p>
<p>$$u_n = 1-n+n^2-n^3+n^4-n^5+n^6-n^7+n^8-n^9+n^{10}$$</p>
<p>Find the sum of FITs for the BOPs.</p>
<hr>
<h2 id="最优多项式"><a href="#最优多项式" class="headerlink" title="最优多项式"></a><strong>最优多项式</strong></h2><p>给定一个数列的前$k$项，我们并不能确定其下一项的值，因为描述这个数列已知项的多项式生成函数有无数种可能。</p>
<p>例如，考虑如下的立方数数列：</p>
<p>$$u_n = n^3: 1, 8, 27, 64, 125, 216, \ldots$$</p>
<p>如果我们只知道数列的前两项，根据“简单优先”的原则，我们应当猜测数列由某个一次函数生成（也即数列为等差数列），其下一项为$15$（公差为$7$）。如果我们只知道数列的前三项，根据同样的原则，我们应当猜测数列由某个二次函数生成。</p>
<p>类似地，给定数列的前$k$项，我们可以猜测数列由某个最优多项式函数生成，并定义$\text{OP}(k, n)$是由这个函数给出的第$n$项的值。显然，若$n\le k$，$\text{OP}(k, n)$可以准确地给出这些已知项的值，而<i class=zh>第一个不正确项</i>最早可能出现在$\text{OP}(k, k+1)$，此时称这个最优多项式为<i class=zh>坏最优多项式</i>。</p>
<p>特别地，如果我们只知道数列的第一项，我们应当猜测数列为常数，也就是说，对于$n \ge 2$，$\text{OP}(1, n) = u_1$。</p>
<p>对于立方数数列，给定不同项数时的最优多项式如下所示：</p>
<p>$$\begin{aligned}<br>&amp;\text{OP}(1,n)=1 &amp;&amp;1, \mathbf{\color{red}1}, 1, 1, \ldots\\<br>&amp;\text{OP}(2,n)=7n-6 &amp;&amp;1, 8, \mathbf{\color{red}15}, \ldots\\<br>&amp;\text{OP}(3,n)=6n^2-11n+6 &amp;&amp;1, 8, 27,\mathbf{\color{red}58}, \ldots\\<br>&amp;\text{OP}(4,n)=n^3 &amp;&amp;1, 8, 27, 64, 125, \ldots<br>\end{aligned}$$</p>
<p>显然，当$k \ge 4$时，不会有坏最优多项式。</p>
<p>所有坏最优多项式的第一个不正确项（用${\color{red}\textbf{红色}}$标示的数）之和为$1 + 15 + 58 = 74$。</p>
<p>考虑下面这个十阶多项式函数生成的数列：</p>
<p>$$u_n = 1-n+n^2-n^3+n^4-n^5+n^6-n^7+n^8-n^9+n^{10}$$</p>
<p>求其所有坏最优多项式的第一个不正确项之和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 102</title>
    <url>/102/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-102"><a href="#Problem-102" class="headerlink" title="Problem 102"></a><a href="https://projecteuler.net/problem=102">Problem 102</a></h1><hr>
<h2 id="Triangle-Containment"><a href="#Triangle-Containment" class="headerlink" title="Triangle Containment"></a><strong>Triangle Containment</strong></h2><p>Three distinct points are plotted at random on a Cartesian plane, for which $-1000 \le x, y \le 1000$, such that a triangle is formed.</p>
<p>Consider the following two triangles:</p>
<p>$$A(-340,495), B(-153,-910), C(835,-947)$$<br>$$X(-175,41), Y(-421,-714), Z(574,-645)$$</p>
<p>It can be verified that triangle $ABC$ contains the origin, whereas triangle $XYZ$ does not.</p>
<p>Using <a href="https://projecteuler.net/project/resources/p102_triangles.txt">triangles.txt</a> (right click and ‘Save Link/Target As…’), a 27K text file containing the co-ordinates of one thousand “random” triangles, find the number of triangles for which the interior contains the origin.</p>
<p>NOTE: The first two examples in the file represent the triangles in the example given above.</p>
<hr>
<h2 id="包含原点的三角形"><a href="#包含原点的三角形" class="headerlink" title="包含原点的三角形"></a><strong>包含原点的三角形</strong></h2><p>在平面直角坐标系中选择三个不同的点，其坐标均满足$-1000 \le x, y \le 1000$，并以这三个点为顶点构成三角形。</p>
<p>考虑如下两个三角形：</p>
<p>$$A(-340,495), B(-153,-910), C(835,-947)$$<br>$$X(-175,41), Y(-421,-714), Z(574,-645)$$</p>
<p>可以验证三角形$ABC$包含原点，而三角形$XYZ$不包含原点。</p>
<p>在文本文件<a href="https://projecteuler.net/project/resources/p102_triangles.txt">triangles.txt</a>中包含了一千个“随机”三角形的坐标，求其中包含原点在其内部的三角形的数目。</p>
<p>注意：文件中的前两个三角形就是上述样例。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 104</title>
    <url>/104/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-104"><a href="#Problem-104" class="headerlink" title="Problem 104"></a><a href="https://projecteuler.net/problem=104">Problem 104</a></h1><hr>
<h2 id="Pandigital-Fibonacci-Ends"><a href="#Pandigital-Fibonacci-Ends" class="headerlink" title="Pandigital Fibonacci Ends"></a><strong>Pandigital Fibonacci Ends</strong></h2><p>The Fibonacci sequence is defined by the recurrence relation:<br>$F_n=F_{n-1}+F_{n-2}$, where $F_1=1$ and $F_2=1$.</p>
<p>It turns out that $F_{541}$, which contains $113$ digits, is the first Fibonacci number for which the last nine digits are $1$-$9$ pandigital (contain all the digits $1$ to $9$, but not necessarily in order). And $F_{2749}$, which contains $575$ digits, is the first Fibonacci number for which the first nine digits are $1$-$9$ pandigital.</p>
<p>Given that $F_k$ is the first Fibonacci number for which the first nine digits AND the last nine digits are $1$-$9$ pandigital, find $k$.</p>
<hr>
<h2 id="两端全数字的斐波那契数"><a href="#两端全数字的斐波那契数" class="headerlink" title="两端全数字的斐波那契数"></a><strong>两端全数字的斐波那契数</strong></h2><p>斐波那契数列由如下递归关系生成：<br>$F_n=F_{n-1}+F_{n-2}$，其中$F_1=1$，且$F_2=1$。</p>
<p>包含有$113$位数字的$F_{541}$是第一个最后$9$位数字是$1$至$9$全数字（包含$1$至$9$所有的数字，但不一定按照顺序）的斐波那契数，而包含有$575$位数字的$F_{2749}$是第一个前$9$位数字是$1$至$9$全数字的斐波那契数。</p>
<p>若$F_k$是第一个前$9$位数字和后$9$位数字都是$1$至$9$全数字的斐波那契数，求$k$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 103</title>
    <url>/103/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-103"><a href="#Problem-103" class="headerlink" title="Problem 103"></a><a href="https://projecteuler.net/problem=103">Problem 103</a></h1><hr>
<h2 id="Special-Subset-Sums-Optimum"><a href="#Special-Subset-Sums-Optimum" class="headerlink" title="Special Subset Sums: Optimum"></a><strong>Special Subset Sums: Optimum</strong></h2><p>Let $S(A)$ represent the sum of elements in set $A$ of size $n$. We shall call it a special sum set if for any two non-empty disjoint subsets, $B$ and $C$, the following properties are true:</p>
<ol>
<li>$S(B) \neq S(C)$; that is, sums of subsets cannot be equal.</li>
<li>If $B$ contains more elements than $C$ then $S(B)&gt;S(C)$.</li>
</ol>
<p>If $S(A)$ is minimised for a given $n$, we shall call it an optimum special sum set. The first five optimum special sum sets are given below.</p>
<p>$$\begin{aligned}<br>n = 1:&amp; \{1\} \\<br>n = 2:&amp; \{1, 2\} \\<br>n = 3:&amp; \{2, 3, 4\} \\<br>n = 4:&amp; \{3, 5, 6, 7\} \\<br>n = 5:&amp; \{6, 9, 11, 12, 13\}<br>\end{aligned}$$</p>
<p>It <i>seems</i> that for a given optimum set, $A = \{a_1, a_2, … , a_n\}$, the next optimum set is of the form $B = \{b, a_1+b, a_2+b, … ,a_n+b\}$, where $b$ is the “middle” element on the previous row.</p>
<p>By applying this “rule” we would expect the optimum set for $n = 6$ to be $A = \{11, 17, 20, 22, 23, 24\}$, with $S(A) = 117$. However, this is not the optimum set, as we have merely applied an algorithm to provide a near optimum set. The optimum set for $n = 6$ is $A = \{11, 18, 19, 20, 22, 25\}$, with $S(A) = 115$ and corresponding set string: $111819202225$.</p>
<p>Given that $A$ is an optimum special sum set for $n = 7$, find its set string.</p>
<p>NOTE: This problem is related to <a href="/105">Problem 105</a> and <a href="/106">Problem 106</a>.</p>
<hr>
<h2 id="特殊的子集和：最优解"><a href="#特殊的子集和：最优解" class="headerlink" title="特殊的子集和：最优解"></a><strong>特殊的子集和：最优解</strong></h2><p>记$S(A)$是大小为$n$的集合$A$中所有元素的和。若从$A$中任取两个非空且不相交的子集$B$和$C$始终满足下列条件，则称$A$是一个特殊和集：</p>
<ol>
<li>$S(B)\neq S(C)$；也就是说，任意子集的和都不相同。</li>
<li>如果$B$中的元素比$C$多，则$S(B)&gt;S(C)$。</li>
</ol>
<p>对于给定的$n$，称使得$S(A)$最小的集合$A$为最优特殊和集。前$5$个最优特殊和集如下所示。</p>
<p>$$\begin{aligned}<br>n = 1:&amp; \{1\} \\<br>n = 2:&amp; \{1, 2\} \\<br>n = 3:&amp; \{2, 3, 4\} \\<br>n = 4:&amp; \{3, 5, 6, 7\} \\<br>n = 5:&amp; \{6, 9, 11, 12, 13\}<br>\end{aligned}$$</p>
<p><i class=zh>似乎</i>对于一个给定的最优特殊和集$A = \{a_1, a_2, … , a_n\}$，下一个最优特殊和集将是$B = \{b, a_1+b, a_2+b, … ,a_n+b\}$，其中$b$是位于集合$A$“中间”位置的元素。</p>
<p>应用这条“规则”，我们猜测对于$n = 6$的最优特殊和集将是$A = \{11, 17, 20, 22, 23, 24\}$，相应的$S(A) = 117$。然而事实并非如此，上述“规则”仅仅只能给出近似最优解。对于$n = 6$，最优特殊和集是$A = \{11, 18, 19, 20, 22, 25\}$，其相应的$S(A) = 115$，并可以表示为数字字符串：$111819202225$。</p>
<p>求$n = 7$时的最优特殊和集$A$，并给出其数字字符串表示。</p>
<p>注意：此题和<a href="/105">第105题</a>及<a href="/106">第106题</a>有关。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 105</title>
    <url>/105/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-105"><a href="#Problem-105" class="headerlink" title="Problem 105"></a><a href="https://projecteuler.net/problem=105">Problem 105</a></h1><hr>
<h2 id="Special-Subset-Sums-Testing"><a href="#Special-Subset-Sums-Testing" class="headerlink" title="Special Subset Sums: Testing"></a><strong>Special Subset Sums: Testing</strong></h2><p>Let $S(A)$ represent the sum of elements in set $A$ of size $n$. We shall call it a special sum set if for any two non-empty disjoint subsets, $B$ and $C$, the following properties are true:</p>
<ol>
<li>$S(B)\neq S(C)$; that is, sums of subsets cannot be equal.</li>
<li>If $B$ contains more elements than $C$ then $S(B) &gt; S(C)$.</li>
</ol>
<p>For example, $\{81, 88, 75, 42, 87, 84, 86, 65\}$ is not a special sum set because $65 + 87 + 88 = 75 + 81 + 84$, whereas $\{157, 150, 164, 119, 79, 159, 161, 139, 158\}$ satisfies both rules for all possible subset pair combinations and $S(A) = 1286$.</p>
<p>Using <a href="https://projecteuler.net/project/resources/p105_sets.txt">sets.txt</a> (right click and “Save Link/Target As…”), a 4K text file with one-hundred sets containing seven to twelve elements (the two examples given above are the first two sets in the file), identify all the special sum sets, $A_1, A_2, \ldots , A_k$, and find the value of $S(A_1) + S(A_2) +\ldots + S(A_k)$.</p>
<p>NOTE: This problem is related to <a href="/103">Problem 103</a> and <a href="/106">Problem 106</a>.</p>
<hr>
<h2 id="特殊的子集和：检验"><a href="#特殊的子集和：检验" class="headerlink" title="特殊的子集和：检验"></a><strong>特殊的子集和：检验</strong></h2><p>记$S(A)$是大小为$n$的集合$A$中所有元素的和。若从$A$中任取两个非空且不相交的子集$B$和$C$始终满足下列条件，则称$A$是一个特殊和集：</p>
<ol>
<li>$S(B)\neq S(C)$；也就是说，任意子集的和都不相同。</li>
<li>如果$B$中的元素比$C$多，则$S(B)&gt;S(C)$。</li>
</ol>
<p>例如，$\{81, 88, 75, 42, 87, 84, 86, 65\}$不是一个特殊和集，因为$65 + 87 + 88 = 75 + 81 + 84$；而$\{157, 150, 164, 119, 79, 159, 161, 139, 158\}$满足上述规则，相应的$S(A) = 1286$。</p>
<p>在文本文件<a href="https://projecteuler.net/project/resources/p105_sets.txt">sets.txt</a>中有一百组包含七至十二个元素的集合（文档中的前两个集合就是上述样例），找出其中所有的特殊和集$A_1, A_2, \ldots, A_k$，并求$S(A_1) + S(A_2) + \ldots + S(A_k)$的值。</p>
<p>注意：此题和<a href="/103">第103题</a>及<a href="/106">第106题</a>有关。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 106</title>
    <url>/106/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-106"><a href="#Problem-106" class="headerlink" title="Problem 106"></a><a href="https://projecteuler.net/problem=106">Problem 106</a></h1><hr>
<h2 id="Special-Subset-Sums-Meta-Testing"><a href="#Special-Subset-Sums-Meta-Testing" class="headerlink" title="Special Subset Sums: Meta-Testing"></a><strong>Special Subset Sums: Meta-Testing</strong></h2><p>Let $S(A)$ represent the sum of elements in set $A$ of size $n$. We shall call it a special sum set if for any two non-empty disjoint subsets, $B$ and $C$, the following properties are true:</p>
<ol>
<li>$S(B) \neq S(C)$; that is, sums of subsets cannot be equal.</li>
<li>If $B$ contains more elements than $C$ then $S(B) &gt; S(C)$.</li>
</ol>
<p>For this problem we shall assume that a given set contains $n$ strictly increasing elements and it already satisfies the second rule.</p>
<p>Surprisingly, out of the $25$ possible subset pairs that can be obtained from a set for which $n = 4$, only $1$ of these pairs need to be tested for equality (first rule). Similarly, when $n = 7$, only $70$ out of the $966$ subset pairs need to be tested.</p>
<p>For $n = 12$, how many of the $261625$ subset pairs that can be obtained need to be tested for equality?</p>
<p>NOTE: This problem is related to <a href="/103">Problem 103</a> and <a href="/105">Problem 105</a>.</p>
<hr>
<h2 id="特殊的子集和：元检验"><a href="#特殊的子集和：元检验" class="headerlink" title="特殊的子集和：元检验"></a><strong>特殊的子集和：元检验</strong></h2><p>记$S(A)$是大小为$n$的集合$A$中所有元素的和。若任取$A$的任意两个非空且不相交的子集$B$和$C$都满足下列条件，我们称$A$是一个特殊的和集：</p>
<ol>
<li>$S(B) \neq S(C)$；也就是说，任意子集的和不相同。</li>
<li>如果$B$中的元素比$C$多，则$S(B) &gt; S(C)$。</li>
</ol>
<p>在这个问题中我们假定集合中包含有$n$个严格单调递增的元素，并且已知其满足第二个条件。</p>
<p>令人惊奇的是，当$n = 4$时，在所有可能的$25$组子集对中只有$1$组需要检验子集和是否相等（第一个条件）。同样地，当$n = 7$时，在所有可能的$966$组子集对中只有$70$组需要检验。</p>
<p>当$n = 12$时，在所有可能的$261625$组子集对中有多少组需要检验？</p>
<p>注意：此题和<a href="/103">第103题</a>及<a href="/105">第105题</a>有关。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 107</title>
    <url>/107/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-107"><a href="#Problem-107" class="headerlink" title="Problem 107"></a><a href="https://projecteuler.net/problem=107">Problem 107</a></h1><hr>
<h2 id="Minimal-Network"><a href="#Minimal-Network" class="headerlink" title="Minimal Network"></a><strong>Minimal Network</strong></h2><p>The following undirected network consists of seven vertices and twelve edges with a total weight of $243$.</p>
<center><img src="/resources/images/0107_1.png" width="381" height="278" alt=""></center>

<p>The same network can be represented by the matrix below.</p>
<table>
<thead>
<tr>
<th>&nbsp;</th>
<th><strong>$A$</strong></th>
<th><strong>$B$</strong></th>
<th><strong>$C$</strong></th>
<th><strong>$D$</strong></th>
<th><strong>$E$</strong></th>
<th><strong>$F$</strong></th>
<th><strong>$G$</strong></th>
</tr>
</thead>
<tbody><tr>
<td><strong>$A$</strong></td>
<td>-</td>
<td>16</td>
<td>12</td>
<td>21</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td><strong>$B$</strong></td>
<td>16</td>
<td>-</td>
<td>-</td>
<td>17</td>
<td>20</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td><strong>$C$</strong></td>
<td>12</td>
<td>-</td>
<td>-</td>
<td>28</td>
<td>-</td>
<td>31</td>
<td>-</td>
</tr>
<tr>
<td><strong>$D$</strong></td>
<td>21</td>
<td>17</td>
<td>28</td>
<td>-</td>
<td>18</td>
<td>19</td>
<td>23</td>
</tr>
<tr>
<td><strong>$E$</strong></td>
<td>-</td>
<td>20</td>
<td>-</td>
<td>18</td>
<td>-</td>
<td>-</td>
<td>11</td>
</tr>
<tr>
<td><strong>$F$</strong></td>
<td>-</td>
<td>-</td>
<td>31</td>
<td>19</td>
<td>-</td>
<td>-</td>
<td>27</td>
</tr>
<tr>
<td><strong>$G$</strong></td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>23</td>
<td>11</td>
<td>27</td>
<td>-</td>
</tr>
</tbody></table>
<p>However, it is possible to optimise the network by removing some edges and still ensure that all points on the network remain connected. The network which achieves the maximum saving is shown below. It has a weight of $93$, representing a saving of $243 - 93 = 150$ from the original network.</p>
<center><img src="/resources/images/0107_2.png" width="385" height="288" alt=""></center>

<p>Using <a href="https://projecteuler.net/project/resources/p107_network.txt">network.txt</a> (right click and ‘Save Link/Target As…’), a 6K text file containing a network with forty vertices, and given in matrix form, find the maximum saving which can be achieved by removing redundant edges whilst ensuring that the network remains connected.</p>
<hr>
<h2 id="最小网络"><a href="#最小网络" class="headerlink" title="最小网络"></a><strong>最小网络</strong></h2><p>如下图所示的无向网络包含有$7$个顶点和$12$条边，其总权重为$243$。</p>
<center><img src="/resources/images/0107_1.png" width="381" height="278" alt=""></center>

<p>这个网络也可以表示为如下的邻接矩阵形式：</p>
<table>
<thead>
<tr>
<th>&nbsp;</th>
<th><strong>$A$</strong></th>
<th><strong>$B$</strong></th>
<th><strong>$C$</strong></th>
<th><strong>$D$</strong></th>
<th><strong>$E$</strong></th>
<th><strong>$F$</strong></th>
<th><strong>$G$</strong></th>
</tr>
</thead>
<tbody><tr>
<td><strong>$A$</strong></td>
<td>-</td>
<td>16</td>
<td>12</td>
<td>21</td>
<td>-</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td><strong>$B$</strong></td>
<td>16</td>
<td>-</td>
<td>-</td>
<td>17</td>
<td>20</td>
<td>-</td>
<td>-</td>
</tr>
<tr>
<td><strong>$C$</strong></td>
<td>12</td>
<td>-</td>
<td>-</td>
<td>28</td>
<td>-</td>
<td>31</td>
<td>-</td>
</tr>
<tr>
<td><strong>$D$</strong></td>
<td>21</td>
<td>17</td>
<td>28</td>
<td>-</td>
<td>18</td>
<td>19</td>
<td>23</td>
</tr>
<tr>
<td><strong>$E$</strong></td>
<td>-</td>
<td>20</td>
<td>-</td>
<td>18</td>
<td>-</td>
<td>-</td>
<td>11</td>
</tr>
<tr>
<td><strong>$F$</strong></td>
<td>-</td>
<td>-</td>
<td>31</td>
<td>19</td>
<td>-</td>
<td>-</td>
<td>27</td>
</tr>
<tr>
<td><strong>$G$</strong></td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>23</td>
<td>11</td>
<td>27</td>
<td>-</td>
</tr>
</tbody></table>
<p>不过，我们其实可以优化这个网络，移除其中的一些边，同时仍然保证每个顶点之间都是连通的。节省的权重最多的新网络如下图所示，其总权重为$93$，相比原网络节省了$243 - 93 = 150$的权重。</p>
<center><img src="/resources/images/0107_2.png" width="385" height="288" alt=""></center>

<p>文本文件<a href="https://projecteuler.net/project/resources/p107_network.txt">network.txt</a>中包含了一个有四十个顶点的网络的邻接矩阵表示。移除其中冗余的边，同时仍然保证每个顶点之间都是连通的，并求出最多能节省多少权重。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 108</title>
    <url>/108/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-108"><a href="#Problem-108" class="headerlink" title="Problem 108"></a><a href="https://projecteuler.net/problem=108">Problem 108</a></h1><hr>
<h2 id="Diophantine-Reciprocals-I"><a href="#Diophantine-Reciprocals-I" class="headerlink" title="Diophantine Reciprocals I"></a><strong>Diophantine Reciprocals I</strong></h2><p>In the following equation $x$, $y$, and $n$ are positive integers.</p>
<p>$$\frac{1}{x}+\frac{1}{y}=\frac{1}{n}$$</p>
<p>For $n = 4$ there are exactly three distinct solutions:</p>
<p>$$\frac{1}{5}+\frac{1}{20}=\frac{1}{4}$$ $$\frac{1}{6}+\frac{1}{12}=\frac{1}{4}$$ $$\frac{1}{8}+\frac{1}{8}=\frac{1}{4}$$</p>
<p>What is the least value of $n$ for which the number of distinct solutions exceeds one-thousand?</p>
<p>NOTE: This problem is an easier version of <a href="/110">Problem 110</a>; it is strongly advised that you solve this one first.</p>
<hr>
<h2 id="丢番图倒数（一）"><a href="#丢番图倒数（一）" class="headerlink" title="丢番图倒数（一）"></a><strong>丢番图倒数（一）</strong></h2><p>在如下方程中，$x$、$y$、$n$均为正整数：</p>
<p>$$\frac{1}{x}+\frac{1}{y}=\frac{1}{n}$$</p>
<p>对于$n = 4$，上述方程恰好有三个不同的解：</p>
<p>$$\frac{1}{5}+\frac{1}{20}=\frac{1}{4}$$ $$\frac{1}{6}+\frac{1}{12}=\frac{1}{4}$$ $$\frac{1}{8}+\frac{1}{8}=\frac{1}{4}$$</p>
<p>最小的使得不同的解的数目超过$1000$的$n$是多少？</p>
<p>注意：这个问题是<a href="/110">第110题</a>的简单版本；强烈建议读者先解决这一题。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 109</title>
    <url>/109/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-109"><a href="#Problem-109" class="headerlink" title="Problem 109"></a><a href="https://projecteuler.net/problem=109">Problem 109</a></h1><hr>
<h2 id="Darts"><a href="#Darts" class="headerlink" title="Darts"></a><strong>Darts</strong></h2><p>In the game of darts a player throws three darts at a target board which is split into twenty equal sized sections numbered one to twenty.</p>
<center><img src="/resources/images/0109.png" width="400" height="400" alt=""></center>

<p>The score of a dart is determined by the number of the region that the dart lands in. A dart landing outside the red/green outer ring scores zero. The black and cream regions inside this ring represent single scores. However, the red/green outer ring and middle ring score double and treble scores respectively.</p>
<p>At the centre of the board are two concentric circles called the bull region, or bulls-eye. The outer bull is worth $25$ points and the inner bull is a double, worth $50$ points.</p>
<p>There are many variations of rules but in the most popular game the players will begin with a score $301$ or $501$ and the first player to reduce their running total to zero is a winner. However, it is normal to play a “doubles out” system, which means that the player must land a double (including the double bulls-eye at the centre of the board) on their final dart to win; any other dart that would reduce their running total to one or lower means the score for that set of three darts is “bust”.</p>
<p>When a player is able to finish on their current score it is called a “checkout” and the highest checkout is $170$: $T20$ $T20$ $D25$ (two treble $20$s and double bull).</p>
<p>There are exactly eleven distinct ways to checkout on a score of $6$:</p>
<table>
<thead>
<tr>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
</tr>
</thead>
<tbody><tr>
<td align="center">$D3$</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
</tr>
<tr>
<td align="center">$D1$</td>
<td align="center">$D2$</td>
<td align="center">&nbsp;</td>
</tr>
<tr>
<td align="center">$S2$</td>
<td align="center">$D2$</td>
<td align="center">&nbsp;</td>
</tr>
<tr>
<td align="center">$D2$</td>
<td align="center">$D1$</td>
<td align="center">&nbsp;</td>
</tr>
<tr>
<td align="center">$S4$</td>
<td align="center">$D1$</td>
<td align="center">&nbsp;</td>
</tr>
<tr>
<td align="center">$S1$</td>
<td align="center">$S1$</td>
<td align="center">$D2$</td>
</tr>
<tr>
<td align="center">$S1$</td>
<td align="center">$T1$</td>
<td align="center">$D1$</td>
</tr>
<tr>
<td align="center">$S1$</td>
<td align="center">$S3$</td>
<td align="center">$D1$</td>
</tr>
<tr>
<td align="center">$D1$</td>
<td align="center">$D1$</td>
<td align="center">$D1$</td>
</tr>
<tr>
<td align="center">$D1$</td>
<td align="center">$S2$</td>
<td align="center">$D1$</td>
</tr>
<tr>
<td align="center">$S2$</td>
<td align="center">$S2$</td>
<td align="center">$D1$</td>
</tr>
</tbody></table>
<p>Note that $D1$ $D2$ is considered <strong>different</strong> to $D2$ $D1$ as they finish on different doubles. However, the combination $S1$ $T1$ $D1$ is considered the <strong>same</strong> as $T1$ $S1$ $D1$.</p>
<p>In addition we shall not include misses in considering combinations; for example, $D3$ is the <strong>same</strong> as $0$ $D3$ and $0$ $0$ $D3$.</p>
<p>Incredibly there are $42336$ distinct ways of checking out in total.</p>
<p>How many distinct ways can a player checkout with a score less than $100$?</p>
<hr>
<h2 id="飞镖"><a href="#飞镖" class="headerlink" title="飞镖"></a><strong>飞镖</strong></h2><p>在飞镖游戏中，玩家每一轮需向靶子上投掷三枚飞镖；靶子被分成了二十个相等面积的区域，并分别标上$1$至$20$作为基础分值。</p>
<center><img src="/resources/images/0109.png" width="400" height="400" alt=""></center>

<p>每一枚飞镖的分数还取决于它的位置：落在外围的红/绿色圈以外时为零分，落在黑/白色区域时为一倍得分，而落在外围和中间的红/绿色圈时分别为两倍和三倍得分。</p>
<p>在靶子的正中心有两个同心圆，被称为靶心。射中靶心外圈得$25$分，射中靶心内圈则得双倍$50$分。</p>
<p>飞镖的规则有许多变种，但最热门的一种是，每个玩家从$301$分或$501$分开始，轮流投掷飞镖并减去得分，首先将自己的分数减少到恰好为$0$的玩家获胜。不过，通常会采用“双倍结束”规则，即玩家的最后一镖必须射中一个双倍区域（包括双倍的靶心内圈）才能判定获胜。若这一轮的得分使得玩家的分数减少到$1$分或更少，但最后一镖未射中双倍区域，则这一轮的得分“作废”。</p>
<p>玩家在当前分数下能够获胜则被称为“结分”。最高的结分为$170$：$T20$ $T20$ $D25$（两个三倍$20$分和一个双倍靶心）。</p>
<p>当玩家分数为$6$时，恰好有$11$种结分方式：</p>
<table>
<thead>
<tr>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
</tr>
</thead>
<tbody><tr>
<td align="center">$D3$</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
</tr>
<tr>
<td align="center">$D1$</td>
<td align="center">$D2$</td>
<td align="center">&nbsp;</td>
</tr>
<tr>
<td align="center">$S2$</td>
<td align="center">$D2$</td>
<td align="center">&nbsp;</td>
</tr>
<tr>
<td align="center">$D2$</td>
<td align="center">$D1$</td>
<td align="center">&nbsp;</td>
</tr>
<tr>
<td align="center">$S4$</td>
<td align="center">$D1$</td>
<td align="center">&nbsp;</td>
</tr>
<tr>
<td align="center">$S1$</td>
<td align="center">$S1$</td>
<td align="center">$D2$</td>
</tr>
<tr>
<td align="center">$S1$</td>
<td align="center">$T1$</td>
<td align="center">$D1$</td>
</tr>
<tr>
<td align="center">$S1$</td>
<td align="center">$S3$</td>
<td align="center">$D1$</td>
</tr>
<tr>
<td align="center">$D1$</td>
<td align="center">$D1$</td>
<td align="center">$D1$</td>
</tr>
<tr>
<td align="center">$D1$</td>
<td align="center">$S2$</td>
<td align="center">$D1$</td>
</tr>
<tr>
<td align="center">$S2$</td>
<td align="center">$S2$</td>
<td align="center">$D1$</td>
</tr>
</tbody></table>
<p>注意$D1$ $D2$被认为是<strong>不同于</strong>$D2$ $D1$的结分方式，因为它们最后的双倍不同。不过，组合$S1$ $T1$ $D1$和$T1$ $S1$ $D1$就被认为是<strong>相同的</strong>结分方式。</p>
<p>另外，在计算结分方式时，我们不考虑脱靶的情况；例如，$D3$和$0$ $D3$以及$0$ $0$ $D$3就是<strong>相同的</strong>结分方式。</p>
<p>令人惊奇的是，一共有$42336$种不同的结分方式。</p>
<p>当玩家当前分数小于$100$时，一共有多少种不同的结分方式？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 110</title>
    <url>/110/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-110"><a href="#Problem-110" class="headerlink" title="Problem 110"></a><a href="https://projecteuler.net/problem=110">Problem 110</a></h1><hr>
<h2 id="Diophantine-Reciprocals-II"><a href="#Diophantine-Reciprocals-II" class="headerlink" title="Diophantine Reciprocals II"></a><strong>Diophantine Reciprocals II</strong></h2><p>In the following equation $x$, $y$, and $n$ are positive integers.</p>
<p>$$\frac{1}{x}+\frac{1}{y}=\frac{1}{n}$$</p>
<p>It can be verified that when $n = 1260$ there are $113$ distinct solutions and this is the least value of $n$ for which the total number of distinct solutions exceeds one hundred.</p>
<p>What is the least value of $n$ for which the number of distinct solutions exceeds four million?</p>
<p>NOTE: This problem is a much more difficult version of <a href="/108">Problem 108</a> and as it is well beyond the limitations of a brute force approach it requires a clever implementation.</p>
<hr>
<h2 id="丢番图倒数（二）"><a href="#丢番图倒数（二）" class="headerlink" title="丢番图倒数（二）"></a><strong>丢番图倒数（二）</strong></h2><p>在如下方程中，$x$、$y$、$n$均为正整数。</p>
<p>$$\frac{1}{x}+\frac{1}{y}=\frac{1}{n}$$</p>
<p>可以验证当$n = 1260$时，恰好有$113$种不同的解，这也是最小的使得不同的解的数目超过一百的$n$。</p>
<p>最小的使得不同的解的数目超过四百万的$n$是多少？</p>
<p>注意：这是<a href="/108">第108题</a>一个极其困难的版本，而且远远超过暴力解法的能力范围，因此需要更加聪明的手段。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 11</title>
    <url>/11/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-11"><a href="#Problem-11" class="headerlink" title="Problem 11"></a><a href="https://projecteuler.net/problem=11">Problem 11</a></h1><hr>
<h2 id="Largest-Product-in-a-Grid"><a href="#Largest-Product-in-a-Grid" class="headerlink" title="Largest Product in a Grid"></a><strong>Largest Product in a Grid</strong></h2><p>In the $20\times 20$ grid below, four numbers along a diagonal line have been marked in red.</p>
<center style="font-family:'Courier New',monospace;">
08 02 22 97 38 15 00 40 00 75 04 05 07 78 52 12 50 77 91 08<br />
49 49 99 40 17 81 18 57 60 87 17 40 98 43 69 48 04 56 62 00<br />
81 49 31 73 55 79 14 29 93 71 40 67 53 88 30 03 49 13 36 65<br />
52 70 95 23 04 60 11 42 69 24 68 56 01 32 56 71 37 02 36 91<br />
22 31 16 71 51 67 63 89 41 92 36 54 22 40 40 28 66 33 13 80<br />
24 47 32 60 99 03 45 02 44 75 33 53 78 36 84 20 35 17 12 50<br />
32 98 81 28 64 23 67 10 <span style="color:#ff0000;"><b>26</b></span> 38 40 67 59 54 70 66 18 38 64 70<br />
67 26 20 68 02 62 12 20 95 <span style="color:#ff0000;"><b>63</b></span> 94 39 63 08 40 91 66 49 94 21<br />
24 55 58 05 66 73 99 26 97 17 <span style="color:#ff0000;"><b>78</b></span> 78 96 83 14 88 34 89 63 72<br />
21 36 23 09 75 00 76 44 20 45 35 <span style="color:#ff0000;"><b>14</b></span> 00 61 33 97 34 31 33 95<br />
78 17 53 28 22 75 31 67 15 94 03 80 04 62 16 14 09 53 56 92<br />
16 39 05 42 96 35 31 47 55 58 88 24 00 17 54 24 36 29 85 57<br />
86 56 00 48 35 71 89 07 05 44 44 37 44 60 21 58 51 54 17 58<br />
19 80 81 68 05 94 47 69 28 73 92 13 86 52 17 77 04 89 55 40<br />
04 52 08 83 97 35 99 16 07 97 57 32 16 26 26 79 33 27 98 66<br />
88 36 68 87 57 62 20 72 03 46 33 67 46 55 12 32 63 93 53 69<br />
04 42 16 73 38 25 39 11 24 94 72 18 08 46 29 32 40 62 76 36<br />
20 69 36 41 72 30 23 88 34 62 99 69 82 67 59 85 74 04 36 16<br />
20 73 35 29 78 31 90 01 74 31 49 71 48 86 81 16 23 57 05 54<br />
01 70 54 71 83 51 54 69 16 92 33 48 61 43 52 01 89 19 67 48
</center>

<p>The product of these numbers is $26 \times 63 \times 78 \times 14 = 1788696$.</p>
<p>What is the greatest product of four adjacent numbers in the same direction (up, down, left, right, or diagonally) in the $20\times20$ grid?</p>
<hr>
<h2 id="方阵中的最大乘积"><a href="#方阵中的最大乘积" class="headerlink" title="方阵中的最大乘积"></a><strong>方阵中的最大乘积</strong></h2><p>在如下的$20\times20$方阵中，有四个呈对角线排列的数被标记为红色。</p>
<center style="font-family:'Courier New',monospace;">
08 02 22 97 38 15 00 40 00 75 04 05 07 78 52 12 50 77 91 08<br />
49 49 99 40 17 81 18 57 60 87 17 40 98 43 69 48 04 56 62 00<br />
81 49 31 73 55 79 14 29 93 71 40 67 53 88 30 03 49 13 36 65<br />
52 70 95 23 04 60 11 42 69 24 68 56 01 32 56 71 37 02 36 91<br />
22 31 16 71 51 67 63 89 41 92 36 54 22 40 40 28 66 33 13 80<br />
24 47 32 60 99 03 45 02 44 75 33 53 78 36 84 20 35 17 12 50<br />
32 98 81 28 64 23 67 10 <span style="color:#ff0000;"><b>26</b></span> 38 40 67 59 54 70 66 18 38 64 70<br />
67 26 20 68 02 62 12 20 95 <span style="color:#ff0000;"><b>63</b></span> 94 39 63 08 40 91 66 49 94 21<br />
24 55 58 05 66 73 99 26 97 17 <span style="color:#ff0000;"><b>78</b></span> 78 96 83 14 88 34 89 63 72<br />
21 36 23 09 75 00 76 44 20 45 35 <span style="color:#ff0000;"><b>14</b></span> 00 61 33 97 34 31 33 95<br />
78 17 53 28 22 75 31 67 15 94 03 80 04 62 16 14 09 53 56 92<br />
16 39 05 42 96 35 31 47 55 58 88 24 00 17 54 24 36 29 85 57<br />
86 56 00 48 35 71 89 07 05 44 44 37 44 60 21 58 51 54 17 58<br />
19 80 81 68 05 94 47 69 28 73 92 13 86 52 17 77 04 89 55 40<br />
04 52 08 83 97 35 99 16 07 97 57 32 16 26 26 79 33 27 98 66<br />
88 36 68 87 57 62 20 72 03 46 33 67 46 55 12 32 63 93 53 69<br />
04 42 16 73 38 25 39 11 24 94 72 18 08 46 29 32 40 62 76 36<br />
20 69 36 41 72 30 23 88 34 62 99 69 82 67 59 85 74 04 36 16<br />
20 73 35 29 78 31 90 01 74 31 49 71 48 86 81 16 23 57 05 54<br />
01 70 54 71 83 51 54 69 16 92 33 48 61 43 52 01 89 19 67 48
</center>

<p>这四个数的乘积是$26 \times 63 \times 78 \times 14 = 1788696$。</p>
<p>在这个$20\times20$方阵中，四个呈一直线（竖直、水平或对角线）相邻的数的乘积最大是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 111</title>
    <url>/111/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-111"><a href="#Problem-111" class="headerlink" title="Problem 111"></a><a href="https://projecteuler.net/problem=111">Problem 111</a></h1><hr>
<p><strong>Primes with runs</strong></p>
<p>Considering 4-digit primes containing repeated digits it is clear that they cannot all be the same: 1111 is divisible by 11, 2222 is divisible by 22, and so on. But there are nine 4-digit primes containing three ones:</p>
<center>1117, 1151, 1171, 1181, 1511, 1811, 2111, 4111, 8111</center>

<p>We shall say that M(n, d) represents the maximum number of repeated digits for an n-digit prime where d is the repeated digit, N(n, d) represents the number of such primes, and S(n, d) represents the sum of these primes.</p>
<p>So M(4, 1) = 3 is the maximum number of repeated digits for a 4-digit prime where one is the repeated digit, there are N(4, 1) = 9 such primes, and the sum of these primes is S(4, 1) = 22275. It turns out that for d = 0, it is only possible to have M(4, 0) = 2 repeated digits, but there are N(4, 0) = 13 such cases.</p>
<p>In the same way we obtain the following results for 4-digit primes.</p>
<table>
<thead>
<tr>
<th><strong>Digit, d</strong></th>
<th><strong>M(4, d)</strong></th>
<th><strong>N(4, d)</strong></th>
<th><strong>S(4, d)</strong></th>
</tr>
</thead>
<tbody><tr>
<td>0</td>
<td>2</td>
<td>13</td>
<td>67061</td>
</tr>
<tr>
<td>1</td>
<td>3</td>
<td>9</td>
<td>22275</td>
</tr>
<tr>
<td>2</td>
<td>3</td>
<td>1</td>
<td>2221</td>
</tr>
<tr>
<td>3</td>
<td>3</td>
<td>12</td>
<td>46214</td>
</tr>
<tr>
<td>4</td>
<td>3</td>
<td>2</td>
<td>8888</td>
</tr>
<tr>
<td>5</td>
<td>3</td>
<td>1</td>
<td>5557</td>
</tr>
<tr>
<td>6</td>
<td>3</td>
<td>1</td>
<td>6661</td>
</tr>
<tr>
<td>7</td>
<td>3</td>
<td>9</td>
<td>57863</td>
</tr>
<tr>
<td>8</td>
<td>3</td>
<td>1</td>
<td>8887</td>
</tr>
<tr>
<td>9</td>
<td>3</td>
<td>7</td>
<td>48073</td>
</tr>
</tbody></table>
<p>For d = 0 to 9, the sum of all S(4, d) is 273700.</p>
<p>Find the sum of all S(10, d).</p>
<hr>
<p><strong>有重复数字的素数</strong></p>
<p>考虑一个有重复数字的4位素数，显然这4个数字不能全都一样：1111被11整除，2222被22整除，依此类推；但是，有9个4位素数包含有三个一：</p>
<center>1117, 1151, 1171, 1181, 1511, 1811, 2111, 4111, 8111</center>

<p>我们记M(n, d)是n位素数中数字d重复出现的最多次数，N(n, d)是这类素数的个数，而S(n, d)是这类素数的和。</p>
<p>因此M(4, 1) = 3是4位素数中数字1重复出现的最多次数，有N(4, 1) = 9个这类素数，而它们的和是S(4, 1) = 22275。还能得出，对于d = 0，在4位素数中最多重复出现M(4, 0) = 2次，但是有N(4, 0) = 13个这类素数。</p>
<p>同样地，我们可以得到4位素数的如下结果。</p>
<table>
<thead>
<tr>
<th><strong>数字d</strong></th>
<th><strong>M(4, d)</strong></th>
<th><strong>N(4, d)</strong></th>
<th><strong>S(4, d)</strong></th>
</tr>
</thead>
<tbody><tr>
<td>0</td>
<td>2</td>
<td>13</td>
<td>67061</td>
</tr>
<tr>
<td>1</td>
<td>3</td>
<td>9</td>
<td>22275</td>
</tr>
<tr>
<td>2</td>
<td>3</td>
<td>1</td>
<td>2221</td>
</tr>
<tr>
<td>3</td>
<td>3</td>
<td>12</td>
<td>46214</td>
</tr>
<tr>
<td>4</td>
<td>3</td>
<td>2</td>
<td>8888</td>
</tr>
<tr>
<td>5</td>
<td>3</td>
<td>1</td>
<td>5557</td>
</tr>
<tr>
<td>6</td>
<td>3</td>
<td>1</td>
<td>6661</td>
</tr>
<tr>
<td>7</td>
<td>3</td>
<td>9</td>
<td>57863</td>
</tr>
<tr>
<td>8</td>
<td>3</td>
<td>1</td>
<td>8887</td>
</tr>
<tr>
<td>9</td>
<td>3</td>
<td>7</td>
<td>48073</td>
</tr>
</tbody></table>
<p>对于d = 0至9，所有S(4, d)的和为273700。</p>
<p>求所有S(10, d)的和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 113</title>
    <url>/113/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-113"><a href="#Problem-113" class="headerlink" title="Problem 113"></a><a href="https://projecteuler.net/problem=113">Problem 113</a></h1><hr>
<p><strong>Non-bouncy numbers</strong></p>
<p>Working from left-to-right if no digit is exceeded by the digit to its left it is called an increasing number; for example, 134468.</p>
<p>Similarly if no digit is exceeded by the digit to its right it is called a decreasing number; for example, 66420.</p>
<p>We shall call a positive integer that is neither increasing nor decreasing a “bouncy” number; for example, 155349.</p>
<p>As n increases, the proportion of bouncy numbers below n increases such that there are only 12951 numbers below one-million that are not bouncy and only 277032 non-bouncy numbers below 10<sup>10</sup>.</p>
<p>How many numbers below a googol (10<sup>100</sup>) are not bouncy?</p>
<hr>
<p><strong>非弹跳数</strong></p>
<p>从左往右，如果每一位数字都大于等于其左边的数字，这样的数被称为上升数，比如134468。</p>
<p>同样地，如果每一位数字都大于等于其右边的数字，这样的数被称为下降数，比如66420。</p>
<p>如果一个正整数既不是上升数也不是下降数，我们就称之为“弹跳”数，比如155349。</p>
<p>随着n的增长，小于n的弹跳数的比例也随之增长；在小于一百万的数中，只有12951个非弹跳数，而小于10<sup>10</sup>的数中只有277032个非弹跳数。</p>
<p>在小于一古戈尔（10<sup>100</sup>）的数中有多少个非弹跳数？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 112</title>
    <url>/112/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-112"><a href="#Problem-112" class="headerlink" title="Problem 112"></a><a href="https://projecteuler.net/problem=112">Problem 112</a></h1><hr>
<p><strong>Bouncy numbers</strong></p>
<p>Working from left-to-right if no digit is exceeded by the digit to its left it is called an increasing number; for example, 134468.</p>
<p>Similarly if no digit is exceeded by the digit to its right it is called a decreasing number; for example, 66420.</p>
<p>We shall call a positive integer that is neither increasing nor decreasing a “bouncy” number; for example, 155349.</p>
<p>Clearly there cannot be any bouncy numbers below one-hundred, but just over half of the numbers below one-thousand (525) are bouncy. In fact, the least number for which the proportion of bouncy numbers first reaches 50% is 538.</p>
<p>Surprisingly, bouncy numbers become more and more common and by the time we reach 21780 the proportion of bouncy numbers is equal to 90%.</p>
<p>Find the least number for which the proportion of bouncy numbers is exactly 99%.</p>
<hr>
<p><strong>弹跳数</strong></p>
<p>从左往右，如果每一位数字都大于等于其左边的数字，这样的数被称为上升数，比如134468。</p>
<p>同样地，如果每一位数字都大于等于其右边的数字，这样的数被称为下降数，比如66420。</p>
<p>如果一个正整数既不是上升数也不是下降数，我们就称之为“弹跳”数，比如155349。</p>
<p>显然不存在小于一百的弹跳数，而在小于一千的数中有略超过一半（525）的弹跳数。事实上，使得弹跳数的比例恰好达到50%的最小数是538。</p>
<p>令人惊奇的是，弹跳数将变得越来越普遍，到21780时，弹跳数的比例恰好等于90%。</p>
<p>找出使得弹跳数的比例恰好为99%的最小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 114</title>
    <url>/114/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-114"><a href="#Problem-114" class="headerlink" title="Problem 114"></a><a href="https://projecteuler.net/problem=114">Problem 114</a></h1><hr>
<p><strong>Counting block combinations I</strong></p>
<p>A row measuring seven units in length has red blocks with a minimum length of three units placed on it, such that any two red blocks (which are allowed to be different lengths) are separated by at least one black square. There are exactly seventeen ways of doing this.</p>
<center><img src="/resources/images/0114.png"></center>

<p>How many ways can a row measuring fifty units in length be filled?</p>
<p>NOTE: Although the example above does not lend itself to the possibility, in general it is permitted to mix block sizes. For example, on a row measuring eight units in length you could use red (3), black (1), and red (4).</p>
<hr>
<p><strong>方格组合计数I</strong></p>
<p>用黑色方块和最短长度为3的红色方块摆成长度为7的一行，要求任意两个红色方块（长度可以不同）之间至少有一个黑色方块，恰好有17种不同的摆法。</p>
<center><img src="/resources/images/0114.png"></center>

<p>若要摆成长度为50的一行，有多少种不同的摆法？</p>
<p>注意：尽管上述样例没有混用不同长度的方格，但这样做是允许的。例如，要摆成长度为8的一行，你可以用红（3）、黑（1）、红（4）。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 117</title>
    <url>/117/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-117"><a href="#Problem-117" class="headerlink" title="Problem 117"></a><a href="https://projecteuler.net/problem=117">Problem 117</a></h1><hr>
<p><strong>Red, green, and blue tiles</strong></p>
<p>Using a combination of black square tiles and oblong tiles chosen from: red tiles measuring two units, green tiles measuring three units, and blue tiles measuring four units, it is possible to tile a row measuring five units in length in exactly fifteen different ways.</p>
<center><img src="/resources/images/0117.png"></center>

<p>How many ways can a row measuring fifty units in length be tiled?</p>
<p>NOTE: This is related to <a href="/Problem101-125/#Problem_116">Problem 116</a>.</p>
<hr>
<p><strong>红色、绿色和蓝色的地砖</strong></p>
<p>使用黑色地砖、长度为2的红色地砖、长度为3的绿色地砖、长度为4的蓝色地砖的组合，一共有恰好15种不同的方式铺满长度为5的一行。</p>
<center><img src="/resources/images/0117.png"></center>

<p>一共有多少种不同的方式铺满长度为50的一行？</p>
<p>注意：这道题和<a href="/Problem101-125/#Problem_116">第116题</a>有关。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 115</title>
    <url>/115/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-115"><a href="#Problem-115" class="headerlink" title="Problem 115"></a><a href="https://projecteuler.net/problem=115">Problem 115</a></h1><hr>
<p><strong>Counting block combinations II</strong></p>
<p>NOTE: This is a more difficult version of <a href="/Problem101-125/#Problem_114">Problem 114</a>.</p>
<p>A row measuring n units in length has red blocks with a minimum length of m units placed on it, such that any two red blocks (which are allowed to be different lengths) are separated by at least one black square.</p>
<p>Let the fill-count function, F(m, n), represent the number of ways that a row can be filled.</p>
<p>For example, F(3, 29) = 673135 and F(3, 30) = 1089155.</p>
<p>That is, for m = 3, it can be seen that n = 30 is the smallest value for which the fill-count function first exceeds one million.</p>
<p>In the same way, for m = 10, it can be verified that F(10, 56) = 880711 and F(10, 57) = 1148904, so n = 57 is the least value for which the fill-count function first exceeds one million.</p>
<p>For m = 50, find the least value of n for which the fill-count function first exceeds one million.</p>
<hr>
<p><strong>方格组合计数II</strong></p>
<p>注意：这是<a href="/Problem101-125/#Problem_114">第114题</a>一个更难的版本。</p>
<p>用黑色方块和最短长度为m的红色方块摆成长度为n的一行，要求任意两个红色方块（长度可以不同）之间至少有一个黑色方块。</p>
<p>我们用摆法计数函数F(m, n)代表符合上述要求的摆法数目。</p>
<p>例如，F(3, 29) = 673135以及F(3, 30) = 1089155。</p>
<p>也就是说，当m = 3时，可以看出n = 30是使得摆法计数函数首次超过一百万的最小值。 </p>
<p>同样地，当m = 10时，可以验证F(10, 56) = 880711以及F(10, 57) = 1148904，因此n = 57是使得摆法计数函数首次超过一百万的最小值。</p>
<p>当m = 50时，求使得摆法计数函数首次超过一百万的最小n值。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 116</title>
    <url>/116/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-116"><a href="#Problem-116" class="headerlink" title="Problem 116"></a><a href="https://projecteuler.net/problem=116">Problem 116</a></h1><hr>
<p><strong>Red, green or blue tiles</strong></p>
<p>A row of five black square tiles is to have a number of its tiles replaced with coloured oblong tiles chosen from red (length two), green (length three), or blue (length four).</p>
<p>If red tiles are chosen there are exactly seven ways this can be done.</p>
<center><img src="/resources/images/0116_1.png"></center>

<p>If green tiles are chosen there are three ways.</p>
<center><img src="/resources/images/0116_2.png"></center>

<p>And if blue tiles are chosen there are two ways.</p>
<center><img src="/resources/images/0116_3.png"></center>

<p>Assuming that colours cannot be mixed there are 7 + 3 + 2 = 12 ways of replacing the black tiles in a row measuring five units in length.</p>
<p>How many different ways can the black tiles in a row measuring fifty units in length be replaced if colours cannot be mixed and at least one coloured tile must be used?</p>
<p>NOTE: This is related to <a href="/Problem101-125/#Problem_117">Problem 117</a>.</p>
<hr>
<p><strong>红色、绿色或蓝色的地砖</strong></p>
<p>将一行五块黑色方形地砖的一部分替换成红色（长度为2）、绿色（长度为3）或蓝色（长度为4）的地砖。</p>
<p>如果只使用红色地砖，一共有7种不同的替换方式。</p>
<center><img src="/resources/images/0116_1.png"></center>

<p>如果只使用绿色地砖，一共有3种不同的替换方式。</p>
<center><img src="/resources/images/0116_2.png"></center>

<p>如果只使用蓝色地砖，一共有2种不同的替换方式。</p>
<center><img src="/resources/images/0116_3.png"></center>

<p>假定颜色不能混合使用，一共有7 + 3 + 2 = 12种方式替换一行五块黑色地砖。</p>
<p>假定颜色不能混合使用，且至少使用一种彩色地砖，一共有多少种方式替换一行五十块黑色地砖？</p>
<p>注意：这道题与<a href="/Problem101-125/#Problem_117">第117题</a>有关。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 118</title>
    <url>/118/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-118"><a href="#Problem-118" class="headerlink" title="Problem 118"></a><a href="https://projecteuler.net/problem=118">Problem 118</a></h1><hr>
<p><strong>Pandigital prime sets</strong></p>
<p>Using all of the digits 1 through 9 and concatenating them freely to form decimal integers, different sets can be formed. Interestingly with the set {2,5,47,89,631}, all of the elements belonging to it are prime.</p>
<p>How many distinct sets containing each of the digits one through nine exactly once contain only prime elements?</p>
<hr>
<p><strong>全数字素数集合</strong></p>
<p>使用1至9的全部数字，并自由连接起来组成十进制整数，可以构造不同的集合。其中一个集合{2,5,47,89,631}非常有趣，因为它的所有元素都是素数。</p>
<p>有些集合包含数字1至9恰好各一次，且所有元素都是素数，这样的集合有多少个？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 119</title>
    <url>/119/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-119"><a href="#Problem-119" class="headerlink" title="Problem 119"></a><a href="https://projecteuler.net/problem=119">Problem 119</a></h1><hr>
<p><strong>Digit power sum</strong></p>
<p>The number 512 is interesting because it is equal to the sum of its digits raised to some power: 5 + 1 + 2 = 8, and 8<sup>3</sup> = 512. Another example of a number with this property is 614656 = 28<sup>4</sup>.</p>
<p>We shall define a<sub>n</sub> to be the n<sup>th</sup> term of this sequence and insist that a number must contain at least two digits to have a sum.</p>
<p>You are given that a<sub>2</sub> = 512 and a<sub>10</sub> = 614656.</p>
<p>Find a<sub>30</sub>.</p>
<hr>
<p><strong>数字和的幂</strong></p>
<p>512是一个有趣的数，因为它等于其各位数字和的幂：5 + 1 + 2 = 8，而8<sup>3</sup> = 512。拥有同样性质的数的另一个例子是614656 = 28<sup>4</sup>。</p>
<p>记a<sub>n</sub>是这类数中的第n个，并且约定一个数至少需要两位数字才有各位数字和。</p>
<p>已知a<sub>2</sub> = 512以及a<sub>10</sub> = 614656。</p>
<p>求a<sub>30</sub>。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 12</title>
    <url>/12/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-12"><a href="#Problem-12" class="headerlink" title="Problem 12"></a><a href="https://projecteuler.net/problem=12">Problem 12</a></h1><hr>
<h2 id="Highly-Divisible-Triangular-Number"><a href="#Highly-Divisible-Triangular-Number" class="headerlink" title="Highly Divisible Triangular Number"></a><strong>Highly Divisible Triangular Number</strong></h2><p>The sequence of triangle numbers is generated by adding the natural numbers. So the $7$<sup>th</sup> triangle number would be $1 + 2 + 3 + 4 + 5 + 6 + 7 = 28$. The first ten terms would be:</p>
<p>$$1, 3, 6, 10, 15, 21, 28, 36, 45, 55, \ldots $$</p>
<p>Let us list the factors of the first seven triangle numbers:</p>
<p>$$\begin{aligned}<br>\bf{1:}\ &amp; 1\\<br>\bf{3:}\ &amp; 1,3\\<br>\bf{6:}\ &amp; 1,2,3,6 \\<br>\bf{10:}\ &amp; 1,2,5,10 \\<br>\bf{15:}\ &amp; 1,3,5,15 \\<br>\bf{21:}\ &amp; 1,3,7,21 \\<br>\bf{28:}\ &amp; 1,2,4,7,14,28 \\<br>\end{aligned}$$</p>
<p>We can see that $28$ is the first triangle number to have over five divisors.</p>
<p>What is the value of the first triangle number to have over five hundred divisors?</p>
<hr>
<h2 id="有很多约数的三角形数"><a href="#有很多约数的三角形数" class="headerlink" title="有很多约数的三角形数"></a><strong>有很多约数的三角形数</strong></h2><p>三角形数是通过累加自然数所得到的数。例如，第$7$个三角形数是$1 + 2 + 3 + 4 + 5 + 6 + 7 = 28$。前十个三角形数分别是：</p>
<p>$$1, 3, 6, 10, 15, 21, 28, 36, 45, 55, \ldots $$</p>
<p>列举出前七个三角形数的所有约数：</p>
<p>$$\begin{aligned}<br>\bf{1:}\ &amp; 1\\<br>\bf{3:}\ &amp; 1,3\\<br>\bf{6:}\ &amp; 1,2,3,6 \\<br>\bf{10:}\ &amp; 1,2,5,10 \\<br>\bf{15:}\ &amp; 1,3,5,15 \\<br>\bf{21:}\ &amp; 1,3,7,21 \\<br>\bf{28:}\ &amp; 1,2,4,7,14,28 \\<br>\end{aligned}$$</p>
<p>可以看出，$28$是第一个约数数量超过五的三角形数。</p>
<p>第一个约数数量超过五百的三角形数是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 120</title>
    <url>/120/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-120"><a href="#Problem-120" class="headerlink" title="Problem 120"></a><a href="https://projecteuler.net/problem=120">Problem 120</a></h1><hr>
<p><strong>Square remainders</strong></p>
<p>Let r be the remainder when (a?1)<sup>n</sup> + (a+1)<sup>n</sup> is divided by a<sup>2</sup>.</p>
<p>For example, if a = 7 and n = 3, then r = 42: 6<sup>3</sup> + 8<sup>3</sup> = 728 ≡ 42 mod 49. And as n varies, so too will r, but for a = 7 it turns out that r<sub>max</sub> = 42.</p>
<p>For 3 ≤ a ≤ 1000, find ∑r<sub>max</sub>.</p>
<hr>
<p><strong>平方余数</strong></p>
<p>记r是(a?1)<sup>n</sup> + (a+1)<sup>n</sup>被a<sup>2</sup>除所得的余数。</p>
<p>例如，如果a = 7而n = 3，则r = 42：6<sup>3</sup> + 8<sup>3</sup> = 728 ≡ 42 mod 49。随着n的变化，r也会随之变化，但是对a = 7，可以得出r<sub>max</sub> = 42。</p>
<p>对于3 ≤ a ≤ 1000，求∑r<sub>max</sub>。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 121</title>
    <url>/121/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-121"><a href="#Problem-121" class="headerlink" title="Problem 121"></a><a href="https://projecteuler.net/problem=121">Problem 121</a></h1><hr>
<p><strong>Disc game prize fund</strong></p>
<p>A bag contains one red disc and one blue disc. In a game of chance a player takes a disc at random and its colour is noted. After each turn the disc is returned to the bag, an extra red disc is added, and another disc is taken at random.</p>
<p>The player pays ￡1 to play and wins if they have taken more blue discs than red discs at the end of the game.</p>
<p>If the game is played for four turns, the probability of a player winning is exactly 11/120, and so the maximum prize fund the banker should allocate for winning in this game would be ￡10 before they would expect to incur a loss. Note that any payout will be a whole number of pounds and also includes the original ￡1 paid to play the game, so in the example given the player actually wins ￡9.</p>
<p>Find the maximum prize fund that should be allocated to a single game in which fifteen turns are played.</p>
<hr>
<p><strong>碟子游戏奖金</strong></p>
<p>一开始，包里装有一个红色碟子和一个蓝色碟子。在一场概率游戏中，每一轮玩家从包中取出一个碟子，记录下其颜色，随后将碟子放回包中，并在包中加入一个红色碟子，再进行下一轮。</p>
<p>玩家需要付￡1来玩这个游戏，如果他们在游戏结束时拿出的蓝色碟子数比红色碟子数更多，则获得胜利。</p>
<p>如果游戏进行4轮，那么玩家获胜的概率是11/120，因此游戏所设定的最高奖金为￡10，否则可能会造成亏损。注意奖金必须是整数，而且包含了玩家付出用于玩游戏的￡1，也就是说玩家实际上赢得的数额是￡9。</p>
<p>如果游戏进行15轮，求游戏所设定的最高奖金。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 122</title>
    <url>/122/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-122"><a href="#Problem-122" class="headerlink" title="Problem 122"></a><a href="https://projecteuler.net/problem=122">Problem 122</a></h1><hr>
<p><strong>Efficient exponentiation</strong></p>
<p>The most naive way of computing n<sup>15</sup> requires fourteen multiplications:</p>
<p>n × n × … × n = n<sup>15</sup></p>
<p>But using a “binary” method you can compute it in six multiplications:</p>
<p>n × n = n<sup>2</sup><br>n<sup>2</sup> × n<sup>2</sup> = n<sup>4</sup><br>n<sup>4</sup> × n<sup>4</sup> = n<sup>8</sup><br>n<sup>8</sup> × n<sup>4</sup> = n<sup>12</sup><br>n<sup>12</sup> × n<sup>2</sup> = n<sup>14</sup><br>n<sup>14</sup> × n = n<sup>15</sup></p>
<p>However it is yet possible to compute it in only five multiplications:</p>
<p>n × n = n<sup>2</sup><br>n<sup>2</sup> × n = n<sup>3</sup><br>n<sup>3</sup> × n<sup>3</sup> = n<sup>6</sup><br>n<sup>6</sup> × n<sup>6</sup> = n<sup>12</sup><br>n<sup>12</sup> × n<sup>3</sup> = n<sup>15</sup></p>
<p>We shall define m(k) to be the minimum number of multiplications to compute n<sup>k</sup>; for example m(15) = 5.</p>
<p>For 1 ≤ k ≤ 200, find ∑m(k).</p>
<hr>
<p><strong>高效指数计算</strong></p>
<p>计算n<sup>15</sup>最朴素的方式需要14次乘法：</p>
<p>n × n × … × n = n<sup>15</sup></p>
<p>但使用一个“二进制”的算法，你可以只用6次乘法：</p>
<p>n × n = n<sup>2</sup><br>n<sup>2</sup> × n<sup>2</sup> = n<sup>4</sup><br>n<sup>4</sup> × n<sup>4</sup> = n<sup>8</sup><br>n<sup>8</sup> × n<sup>4</sup> = n<sup>12</sup><br>n<sup>12</sup> × n<sup>2</sup> = n<sup>14</sup><br>n<sup>14</sup> × n = n<sup>15</sup></p>
<p>然而，实际上仅用5次乘法也是可以的：</p>
<p>n × n = n<sup>2</sup><br>n<sup>2</sup> × n = n<sup>3</sup><br>n<sup>3</sup> × n<sup>3</sup> = n<sup>6</sup><br>n<sup>6</sup> × n<sup>6</sup> = n<sup>12</sup><br>n<sup>12</sup> × n<sup>3</sup> = n<sup>15</sup></p>
<p>记m(k)是计算n<sup>k</sup>所需要的最少次数，例如m(15) = 5。</p>
<p>对于1 ≤ k ≤ 200，求∑m(k)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 124</title>
    <url>/124/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-124"><a href="#Problem-124" class="headerlink" title="Problem 124"></a><a href="https://projecteuler.net/problem=124">Problem 124</a></h1><hr>
<p><strong>Ordered radicals</strong></p>
<p>The radical of n, rad(n), is the product of the distinct prime factors of n. For example, 504 = 2<sup>3</sup> × 3<sup>2</sup> × 7, so rad(504) = 2 × 3 × 7 = 42.</p>
<p>If we calculate rad(n) for 1 ≤ n ≤ 10, then sort them on rad(n), and sorting on n if the radical values are equal, we get:</p>
<table>
<thead>
<tr>
<th align="center">&nbsp;</th>
<th align="center"><strong>Unsorted</strong></th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center"><strong>Sorted</strong></th>
<th align="center">&nbsp;</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><strong>n</strong></td>
<td align="center"><strong>rad(n)</strong></td>
<td align="center">&nbsp;</td>
<td align="center"><strong>n</strong></td>
<td align="center"><strong>rad(n)</strong></td>
<td align="center"><strong>k</strong></td>
</tr>
<tr>
<td align="center">1</td>
<td align="center">1</td>
<td align="center">&nbsp;</td>
<td align="center">1</td>
<td align="center">1</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">2</td>
<td align="center">2</td>
<td align="center">&nbsp;</td>
<td align="center">2</td>
<td align="center">2</td>
<td align="center">2</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">3</td>
<td align="center">&nbsp;</td>
<td align="center">4</td>
<td align="center">2</td>
<td align="center">3</td>
</tr>
<tr>
<td align="center">4</td>
<td align="center">2</td>
<td align="center">&nbsp;</td>
<td align="center">8</td>
<td align="center">2</td>
<td align="center">4</td>
</tr>
<tr>
<td align="center">5</td>
<td align="center">5</td>
<td align="center">&nbsp;</td>
<td align="center">3</td>
<td align="center">3</td>
<td align="center">5</td>
</tr>
<tr>
<td align="center">6</td>
<td align="center">6</td>
<td align="center">&nbsp;</td>
<td align="center">9</td>
<td align="center">3</td>
<td align="center">6</td>
</tr>
<tr>
<td align="center">7</td>
<td align="center">7</td>
<td align="center">&nbsp;</td>
<td align="center">5</td>
<td align="center">5</td>
<td align="center">7</td>
</tr>
<tr>
<td align="center">8</td>
<td align="center">2</td>
<td align="center">&nbsp;</td>
<td align="center">6</td>
<td align="center">6</td>
<td align="center">8</td>
</tr>
<tr>
<td align="center">9</td>
<td align="center">3</td>
<td align="center">&nbsp;</td>
<td align="center">7</td>
<td align="center">7</td>
<td align="center">9</td>
</tr>
<tr>
<td align="center">10</td>
<td align="center">10</td>
<td align="center">&nbsp;</td>
<td align="center">10</td>
<td align="center">10</td>
<td align="center">10</td>
</tr>
</tbody></table>
<p>Let E(k) be the kth element in the sorted n column; for example, E(4) = 8 and E(6) = 9.</p>
<p>If rad(n) is sorted for 1 ≤ n ≤ 100000, find E(10000).</p>
<hr>
<p><strong>基排序</strong></p>
<p>数n的基rad(n)，是指n的不同质因数之积。例如，504 = 2<sup>3</sup> × 3<sup>2</sup> × 7，所以rad(504) = 2 × 3 × 7 = 42。</p>
<p>如果我们计算1 ≤ n ≤ 10的rad(n)，并先按照rad(n)再按照n从小到大排序，我们得到：</p>
<table>
<thead>
<tr>
<th align="center">&nbsp;</th>
<th align="center"><strong>排序前</strong></th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center"><strong>排序后</strong></th>
<th align="center">&nbsp;</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><strong>n</strong></td>
<td align="center"><strong>rad(n)</strong></td>
<td align="center">&nbsp;</td>
<td align="center"><strong>n</strong></td>
<td align="center"><strong>rad(n)</strong></td>
<td align="center"><strong>k</strong></td>
</tr>
<tr>
<td align="center">1</td>
<td align="center">1</td>
<td align="center">&nbsp;</td>
<td align="center">1</td>
<td align="center">1</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">2</td>
<td align="center">2</td>
<td align="center">&nbsp;</td>
<td align="center">2</td>
<td align="center">2</td>
<td align="center">2</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">3</td>
<td align="center">&nbsp;</td>
<td align="center">4</td>
<td align="center">2</td>
<td align="center">3</td>
</tr>
<tr>
<td align="center">4</td>
<td align="center">2</td>
<td align="center">&nbsp;</td>
<td align="center">8</td>
<td align="center">2</td>
<td align="center">4</td>
</tr>
<tr>
<td align="center">5</td>
<td align="center">5</td>
<td align="center">&nbsp;</td>
<td align="center">3</td>
<td align="center">3</td>
<td align="center">5</td>
</tr>
<tr>
<td align="center">6</td>
<td align="center">6</td>
<td align="center">&nbsp;</td>
<td align="center">9</td>
<td align="center">3</td>
<td align="center">6</td>
</tr>
<tr>
<td align="center">7</td>
<td align="center">7</td>
<td align="center">&nbsp;</td>
<td align="center">5</td>
<td align="center">5</td>
<td align="center">7</td>
</tr>
<tr>
<td align="center">8</td>
<td align="center">2</td>
<td align="center">&nbsp;</td>
<td align="center">6</td>
<td align="center">6</td>
<td align="center">8</td>
</tr>
<tr>
<td align="center">9</td>
<td align="center">3</td>
<td align="center">&nbsp;</td>
<td align="center">7</td>
<td align="center">7</td>
<td align="center">9</td>
</tr>
<tr>
<td align="center">10</td>
<td align="center">10</td>
<td align="center">&nbsp;</td>
<td align="center">10</td>
<td align="center">10</td>
<td align="center">10</td>
</tr>
</tbody></table>
<p>记E(k)是前n个数排序后的第k个数，例如，E(4) = 8以及E(6) = 9。</p>
<p>对1 ≤ n ≤ 100000按照rad(n)排序后，求E(10000)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 123</title>
    <url>/123/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-123"><a href="#Problem-123" class="headerlink" title="Problem 123"></a><a href="https://projecteuler.net/problem=123">Problem 123</a></h1><hr>
<p><strong>Prime square remainders</strong></p>
<p>Let p<sub>n</sub> be the n<sup>th</sup> prime: 2, 3, 5, 7, 11, …, and let r be the remainder when (p<sub>n</sub>?1)<sup>n</sup> + (p<sub>n</sub>+1)<sup>n</sup> is divided by p<sub>n</sub><sup>2</sup>.</p>
<p>For example, when n = 3, p<sub>3</sub> = 5, and 4<sup>3</sup> + 6<sup>3</sup> = 280 ≡ 5 mod 25.</p>
<p>The least value of n for which the remainder first exceeds 10<sup>9</sup> is 7037.</p>
<p>Find the least value of n for which the remainder first exceeds 10<sup>10</sup>.</p>
<hr>
<p><strong>素数平方余数</strong></p>
<p>记p<sub>n</sub>是第n个素数：2、3、5、7、11……；记r是(p<sub>n</sub>?1)<sup>n</sup> + (p<sub>n</sub>+1)<sup>n</sup>被p<sub>n</sub><sup>2</sup>除所得的余数。</p>
<p>例如，当n = 3时，p<sub>3</sub> = 5，而4<sup>3</sup> + 6<sup>3</sup> = 280 ≡ 5 mod 25。</p>
<p>使余数首次超过10<sup>9</sup>的最小n值是7037。</p>
<p>求使余数首次超过10<sup>10</sup>的最小n值。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 125</title>
    <url>/125/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-125"><a href="#Problem-125" class="headerlink" title="Problem 125"></a><a href="https://projecteuler.net/problem=125">Problem 125</a></h1><hr>
<p><strong>Palindromic sums</strong></p>
<p>The palindromic number 595 is interesting because it can be written as the sum of consecutive squares: 6<sup>2</sup> + 7<sup>2</sup> + 8<sup>2</sup> + 9<sup>2</sup> + 10<sup>2</sup> + 11<sup>2</sup> + 12<sup>2</sup>.</p>
<p>There are exactly eleven palindromes below one-thousand that can be written as consecutive square sums, and the sum of these palindromes is 4164. Note that 1 = 0<sup>2</sup> + 1<sup>2</sup> has not been included as this problem is concerned with the squares of positive integers.</p>
<p>Find the sum of all the numbers less than 10<sup>8</sup> that are both palindromic and can be written as the sum of consecutive squares.</p>
<hr>
<p><strong>回文和</strong></p>
<p>回文数595很有趣，因为它可以写成连续平方数的和：6<sup>2</sup> + 7<sup>2</sup> + 8<sup>2</sup> + 9<sup>2</sup> + 10<sup>2</sup> + 11<sup>2</sup> + 12<sup>2</sup>。</p>
<p>恰好有十一个小于一千的回文数可以写成连续平方数的和，这些回文数的和是4164。注意1 = 0<sup>2</sup> + 1<sup>2</sup>并没有算在内，因为本题只考虑正整数的平方。</p>
<p>在小于10<sup>8</sup>的数中，找出所有可以写成连续平方数的和的回文数，并求它们的和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 126</title>
    <url>/126/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-126"><a href="#Problem-126" class="headerlink" title="Problem 126"></a><a href="https://projecteuler.net/problem=126">Problem 126</a></h1><hr>
<p><strong>Cuboid layers</strong></p>
<p>The minimum number of cubes to cover every visible face on a cuboid measuring 3&nbsp;x&nbsp;2&nbsp;x&nbsp;1 is twenty-two.</p>
<center><img src="/resources/images/0126.png"></center>

<p>If we then add a second layer to this solid it would require forty-six cubes to cover every visible face, the third layer would require seventy-eight cubes, and the fourth layer would require one-hundred and eighteen cubes to cover every visible face.</p>
<p>However, the first layer on a cuboid measuring 5&nbsp;x&nbsp;1&nbsp;x&nbsp;1 also requires twenty-two cubes; similarly the first layer on cuboids measuring 5&nbsp;x&nbsp;3&nbsp;x&nbsp;1, 7&nbsp;x&nbsp;2&nbsp;x&nbsp;1, and 11&nbsp;x&nbsp;1&nbsp;x&nbsp;1 all contain forty-six cubes.</p>
<p>We shall define C(n) to represent the number of cuboids that contain n cubes in one of its layers. So C(22) = 2, C(46) = 4, C(78) = 5, and C(118) = 8.</p>
<p>It turns out that 154 is the least value of n for which C(n) = 10.</p>
<p>Find the least value of n for which C(n) = 1000.</p>
<hr>
<p><strong>立方体层</strong></p>
<p>要完全包住一个3x2x1的长方体的表面，最少需要的立方体数目为22。</p>
<center><img src="/resources/images/0126.png"></center>

<p>如果我们要再包一层，需要46个立方体才能挡住所有表面，而第三层需要78个立方体，第4层则需要118个立方体。</p>
<p>同样地，要完全包住一个5x1x1的长方体的表面也需要22个立方体。而要包住5x3x1或是7x2x1或是11x1x1的长方体表面，第一层就需要46个立方体。</p>
<p>记C(n)是在任意一层中需要n个立方体的长方体数目。所以C(22) = 2，C(46) = 4，C(78) = 5，C(118) = 8。</p>
<p>可以验证154是第一个使得C(n) = 10的n。</p>
<p>找出使得C(n) = 1000的最小的n。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 127</title>
    <url>/127/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-127"><a href="#Problem-127" class="headerlink" title="Problem 127"></a><a href="https://projecteuler.net/problem=127">Problem 127</a></h1><hr>
<p><strong>abc-hits</strong></p>
<p>The radical of n, rad(n), is the product of distinct prime factors of n. For example, 504 = 2<sup>3</sup> × 3<sup>2</sup> × 7, so rad(504) = 2 × 3 × 7 = 42.</p>
<p>We shall define the triplet of positive integers (a, b, c) to be an abc-hit if:</p>
<ol>
<li>GCD(a, b) = GCD(a, c) = GCD(b, c) = 1</li>
<li>a &lt; b</li>
<li>a + b = c</li>
<li>rad(abc) &lt; c</li>
</ol>
<p>For example, (5, 27, 32) is an abc-hit, because:</p>
<ol>
<li>GCD(5, 27) = GCD(5, 32) = GCD(27, 32) = 1</li>
<li>5 &lt; 27</li>
<li>5 + 27 = 32</li>
<li>rad(4320) = 30 &lt; 32</li>
</ol>
<p>It turns out that abc-hits are quite rare and there are only thirty-one abc-hits for c &lt; 1000, with ∑c = 12523.</p>
<p>Find ∑c for c &lt; 120000.</p>
<hr>
<p><strong>abc匹配</strong></p>
<p>数n的基rad(n)被定义为n的不同质因数之积。例如504 = 2<sup>3</sup> × 3<sup>2</sup> × 7，所以rad(504) = 2 × 3 × 7 = 42。</p>
<p>我们定义正整数三元组(a, b, c)为abc匹配，当其满足如下条件：</p>
<ol>
<li>GCD(a, b) = GCD(a, c) = GCD(b, c) = 1</li>
<li>a &lt; b</li>
<li>a + b = c</li>
<li>rad(abc) &lt; c</li>
</ol>
<p>例如，(5, 27, 32)是一个abc匹配，因为：</p>
<ol>
<li>GCD(5, 27) = GCD(5, 32) = GCD(27, 32) = 1</li>
<li>5 &lt; 27</li>
<li>5 + 27 = 32</li>
<li>rad(4320) = 30 &lt; 32</li>
</ol>
<p>实际上，abc匹配是非常稀少的，对于c &lt; 1000，只有31组abc匹配，在这些匹配中∑c = 12523。</p>
<p>对于c &lt; 120000，求∑c。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 128</title>
    <url>/128/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-128"><a href="#Problem-128" class="headerlink" title="Problem 128"></a><a href="https://projecteuler.net/problem=128">Problem 128</a></h1><hr>
<p><strong>Hexagonal tile differences</strong></p>
<p>A hexagonal tile with number 1 is surrounded by a ring of six hexagonal tiles, starting at “12 o’clock” and numbering the tiles 2 to 7 in an anti-clockwise direction.</p>
<p>New rings are added in the same fashion, with the next rings being numbered 8 to 19, 20 to 37, 38 to 61, and so on. The diagram below shows the first three rings.</p>
<center><img src="/resources/images/0128.png"></center>

<p>By finding the difference between tile n and each of its six neighbours we shall define PD(n) to be the number of those differences which are prime.</p>
<p>For example, working clockwise around tile 8 the differences are 12, 29, 11, 6, 1, and 13. So PD(8) = 3.</p>
<p>In the same way, the differences around tile 17 are 1, 17, 16, 1, 11, and 10, hence PD(17) = 2.</p>
<p>It can be shown that the maximum value of PD(n) is 3.</p>
<p>If all of the tiles for which PD(n) = 3 are listed in ascending order to form a sequence, the 10th tile would be 271.</p>
<p>Find the 2000th tile in this sequence.</p>
<hr>
<p><strong>六边形地砖的差</strong></p>
<p>标有数1的六边形地砖被一圈六个六边形地砖包围，这些地砖从12点钟方向（正上方）开始沿逆时针顺序依次标记为2至7。</p>
<p>在这个图形的外面，继续加上新的六边形地砖，接下来的几圈分别按照同样的规则标上8至19，20至37，38至61，依此类推。下图显示了前三圈所构成的图形。</p>
<center><img src="/resources/images/0128.png"></center>

<p>考虑标有n的地砖与其周围六块地砖的差，我们定义PD(n)是这些差中素数的数目。</p>
<p>例如，按顺时针顺序，标有8的地砖与周围地砖的差是12，29，11，6，1和13。所以PD(8) = 3。</p>
<p>同样的，标有17的地砖与周围地砖的差是1，17，16，1，11和10，所以PD(17) = 2。</p>
<p>可以验证，PD(n)的最大值就是3。</p>
<p>如果所有PD(n) = 3的地砖构成从小到大排列的序列，那么第10块将是标有271的地砖。</p>
<p>找出这个序列中的第2000块地砖所标的数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 129</title>
    <url>/129/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-129"><a href="#Problem-129" class="headerlink" title="Problem 129"></a><a href="https://projecteuler.net/problem=129">Problem 129</a></h1><hr>
<h2 id="Repunit-divisibility"><a href="#Repunit-divisibility" class="headerlink" title="Repunit divisibility"></a><strong>Repunit divisibility</strong></h2><p>A number consisting entirely of ones is called a repunit. We shall define $R(k)$ to be a repunit of length $k$; for example, $R(6) = 111111$.</p>
<p>Given that $n$ is a positive integer and $\text{GCD}(n, 10) = 1$, it can be shown that there always exists a value, $k$, for which $R(k)$ is divisible by $n$, and let $A(n)$ be the least such value of $k$; for example, $A(7) = 6$ and $A(41) = 5$.</p>
<p>The least value of $n$ for which $A(n)$ first exceeds ten is $17$.</p>
<p>Find the least value of $n$ for which $A(n)$ first exceeds one-million.</p>
<hr>
<h2 id="循环单位数整除性"><a href="#循环单位数整除性" class="headerlink" title="循环单位数整除性"></a><strong>循环单位数整除性</strong></h2><p>只包含数字$1$的数被称为循环单位数。定义$R(k)$是长度为$k$的循环单位数，例如，$R(6) = 111111$。</p>
<p>如果$n$是一个整数，且$GCD(n, 10) = 1$，可以验证总存在$k$使得$R(k)$能够被$n$整除，并记$A(n)$为这些$k$中最小的一个。例如，$A(7) = 6$，$A(41) = 5$。</p>
<p>最小的、满足$A(n)$大于十的$n$为$17$。</p>
<p>求最小的、满足$A(n)$大于一百万的$n$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 13</title>
    <url>/13/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-13"><a href="#Problem-13" class="headerlink" title="Problem 13"></a><a href="https://projecteuler.net/problem=13">Problem 13</a></h1><hr>
<h2 id="Large-Sum"><a href="#Large-Sum" class="headerlink" title="Large Sum"></a><strong>Large Sum</strong></h2><p>Work out the first ten digits of the sum of the following one-hundred $50$-digit numbers.</p>
<center style="font-family:'Courier New',monospace;">
37107287533902102798797998220837590246510135740250
46376937677490009712648124896970078050417018260538
74324986199524741059474233309513058123726617309629
91942213363574161572522430563301811072406154908250
23067588207539346171171980310421047513778063246676
89261670696623633820136378418383684178734361726757
28112879812849979408065481931592621691275889832738
44274228917432520321923589422876796487670272189318
47451445736001306439091167216856844588711603153276
70386486105843025439939619828917593665686757934951
62176457141856560629502157223196586755079324193331
64906352462741904929101432445813822663347944758178
92575867718337217661963751590579239728245598838407
58203565325359399008402633568948830189458628227828
80181199384826282014278194139940567587151170094390
35398664372827112653829987240784473053190104293586
86515506006295864861532075273371959191420517255829
71693888707715466499115593487603532921714970056938
54370070576826684624621495650076471787294438377604
53282654108756828443191190634694037855217779295145
36123272525000296071075082563815656710885258350721
45876576172410976447339110607218265236877223636045
17423706905851860660448207621209813287860733969412
81142660418086830619328460811191061556940512689692
51934325451728388641918047049293215058642563049483
62467221648435076201727918039944693004732956340691
15732444386908125794514089057706229429197107928209
55037687525678773091862540744969844508330393682126
18336384825330154686196124348767681297534375946515
80386287592878490201521685554828717201219257766954
78182833757993103614740356856449095527097864797581
16726320100436897842553539920931837441497806860984
48403098129077791799088218795327364475675590848030
87086987551392711854517078544161852424320693150332
59959406895756536782107074926966537676326235447210
69793950679652694742597709739166693763042633987085
41052684708299085211399427365734116182760315001271
65378607361501080857009149939512557028198746004375
35829035317434717326932123578154982629742552737307
94953759765105305946966067683156574377167401875275
88902802571733229619176668713819931811048770190271
25267680276078003013678680992525463401061632866526
36270218540497705585629946580636237993140746255962
24074486908231174977792365466257246923322810917141
91430288197103288597806669760892938638285025333403
34413065578016127815921815005561868836468420090470
23053081172816430487623791969842487255036638784583
11487696932154902810424020138335124462181441773470
63783299490636259666498587618221225225512486764533
67720186971698544312419572409913959008952310058822
95548255300263520781532296796249481641953868218774
76085327132285723110424803456124867697064507995236
37774242535411291684276865538926205024910326572967
23701913275725675285653248258265463092207058596522
29798860272258331913126375147341994889534765745501
18495701454879288984856827726077713721403798879715
38298203783031473527721580348144513491373226651381
34829543829199918180278916522431027392251122869539
40957953066405232632538044100059654939159879593635
29746152185502371307642255121183693803580388584903
41698116222072977186158236678424689157993532961922
62467957194401269043877107275048102390895523597457
23189706772547915061505504953922979530901129967519
86188088225875314529584099251203829009407770775672
11306739708304724483816533873502340845647058077308
82959174767140363198008187129011875491310547126581
97623331044818386269515456334926366572897563400500
42846280183517070527831839425882145521227251250327
55121603546981200581762165212827652751691296897789
32238195734329339946437501907836945765883352399886
75506164965184775180738168837861091527357929701337
62177842752192623401942399639168044983993173312731
32924185707147349566916674687634660915035914677504
99518671430235219628894890102423325116913619626622
73267460800591547471830798392868535206946944540724
76841822524674417161514036427982273348055556214818
97142617910342598647204516893989422179826088076852
87783646182799346313767754307809363333018982642090
10848802521674670883215120185883543223812876952786
71329612474782464538636993009049310363619763878039
62184073572399794223406235393808339651327408011116
66627891981488087797941876876144230030984490851411
60661826293682836764744779239180335110989069790714
85786944089552990653640447425576083659976645795096
66024396409905389607120198219976047599490197230297
64913982680032973156037120041377903785566085089252
16730939319872750275468906903707539413042652315011
94809377245048795150954100921645863754710598436791
78639167021187492431995700641917969777599028300699
15368713711936614952811305876380278410754449733078
40789923115535562561142322423255033685442488917353
44889911501440648020369068063960672322193204149535
41503128880339536053299340368006977710650566631954
81234880673210146739058568557934581403627822703280
82616570773948327592232845941706525094512325230608
22918802058777319719839450180888072429661980811197
77158542502016545090413245809786882778948721859617
72107838435069186155435662884062257473692284509516
20849603980134001723930671666823555245252804609722
53503534226472524250874054075591789781264330331690
</center>

<hr>
<h2 id="大和"><a href="#大和" class="headerlink" title="大和"></a><strong>大和</strong></h2><p>求以下一百个$50$位数之和的前十位数字。</p>
<center style="font-family:'Courier New',monospace;">
37107287533902102798797998220837590246510135740250
46376937677490009712648124896970078050417018260538
74324986199524741059474233309513058123726617309629
91942213363574161572522430563301811072406154908250
23067588207539346171171980310421047513778063246676
89261670696623633820136378418383684178734361726757
28112879812849979408065481931592621691275889832738
44274228917432520321923589422876796487670272189318
47451445736001306439091167216856844588711603153276
70386486105843025439939619828917593665686757934951
62176457141856560629502157223196586755079324193331
64906352462741904929101432445813822663347944758178
92575867718337217661963751590579239728245598838407
58203565325359399008402633568948830189458628227828
80181199384826282014278194139940567587151170094390
35398664372827112653829987240784473053190104293586
86515506006295864861532075273371959191420517255829
71693888707715466499115593487603532921714970056938
54370070576826684624621495650076471787294438377604
53282654108756828443191190634694037855217779295145
36123272525000296071075082563815656710885258350721
45876576172410976447339110607218265236877223636045
17423706905851860660448207621209813287860733969412
81142660418086830619328460811191061556940512689692
51934325451728388641918047049293215058642563049483
62467221648435076201727918039944693004732956340691
15732444386908125794514089057706229429197107928209
55037687525678773091862540744969844508330393682126
18336384825330154686196124348767681297534375946515
80386287592878490201521685554828717201219257766954
78182833757993103614740356856449095527097864797581
16726320100436897842553539920931837441497806860984
48403098129077791799088218795327364475675590848030
87086987551392711854517078544161852424320693150332
59959406895756536782107074926966537676326235447210
69793950679652694742597709739166693763042633987085
41052684708299085211399427365734116182760315001271
65378607361501080857009149939512557028198746004375
35829035317434717326932123578154982629742552737307
94953759765105305946966067683156574377167401875275
88902802571733229619176668713819931811048770190271
25267680276078003013678680992525463401061632866526
36270218540497705585629946580636237993140746255962
24074486908231174977792365466257246923322810917141
91430288197103288597806669760892938638285025333403
34413065578016127815921815005561868836468420090470
23053081172816430487623791969842487255036638784583
11487696932154902810424020138335124462181441773470
63783299490636259666498587618221225225512486764533
67720186971698544312419572409913959008952310058822
95548255300263520781532296796249481641953868218774
76085327132285723110424803456124867697064507995236
37774242535411291684276865538926205024910326572967
23701913275725675285653248258265463092207058596522
29798860272258331913126375147341994889534765745501
18495701454879288984856827726077713721403798879715
38298203783031473527721580348144513491373226651381
34829543829199918180278916522431027392251122869539
40957953066405232632538044100059654939159879593635
29746152185502371307642255121183693803580388584903
41698116222072977186158236678424689157993532961922
62467957194401269043877107275048102390895523597457
23189706772547915061505504953922979530901129967519
86188088225875314529584099251203829009407770775672
11306739708304724483816533873502340845647058077308
82959174767140363198008187129011875491310547126581
97623331044818386269515456334926366572897563400500
42846280183517070527831839425882145521227251250327
55121603546981200581762165212827652751691296897789
32238195734329339946437501907836945765883352399886
75506164965184775180738168837861091527357929701337
62177842752192623401942399639168044983993173312731
32924185707147349566916674687634660915035914677504
99518671430235219628894890102423325116913619626622
73267460800591547471830798392868535206946944540724
76841822524674417161514036427982273348055556214818
97142617910342598647204516893989422179826088076852
87783646182799346313767754307809363333018982642090
10848802521674670883215120185883543223812876952786
71329612474782464538636993009049310363619763878039
62184073572399794223406235393808339651327408011116
66627891981488087797941876876144230030984490851411
60661826293682836764744779239180335110989069790714
85786944089552990653640447425576083659976645795096
66024396409905389607120198219976047599490197230297
64913982680032973156037120041377903785566085089252
16730939319872750275468906903707539413042652315011
94809377245048795150954100921645863754710598436791
78639167021187492431995700641917969777599028300699
15368713711936614952811305876380278410754449733078
40789923115535562561142322423255033685442488917353
44889911501440648020369068063960672322193204149535
41503128880339536053299340368006977710650566631954
81234880673210146739058568557934581403627822703280
82616570773948327592232845941706525094512325230608
22918802058777319719839450180888072429661980811197
77158542502016545090413245809786882778948721859617
72107838435069186155435662884062257473692284509516
20849603980134001723930671666823555245252804609722
53503534226472524250874054075591789781264330331690
</center>

<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 131</title>
    <url>/131/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-131"><a href="#Problem-131" class="headerlink" title="Problem 131"></a><a href="https://projecteuler.net/problem=131">Problem 131</a></h1><hr>
<p><strong>Prime cube partnership</strong></p>
<p>There are some prime values, p, for which there exists a positive integer, n, such that the expression n<sup>3</sup> + n<sup>2</sup>p is a perfect cube.</p>
<p>For example, when p = 19, 8<sup>3</sup> + 8<sup>2</sup>×19 = 12<sup>3</sup>.</p>
<p>What is perhaps most surprising is that for each prime with this property the value of n is unique, and there are only four such primes below one-hundred.</p>
<p>How many primes below one million have this remarkable property?</p>
<hr>
<p><strong>素数立方数组合</strong></p>
<p>对于某些素数p，存在正整数n，使得表达式n<sup>3</sup> + n<sup>2</sup>p是立方数。</p>
<p>例如，对于p = 19，8<sup>3</sup> + 8<sup>2</sup>×19 = 12<sup>3</sup>。</p>
<p>非常奇特的是，对于满足这个性质的素数，n的值都是唯一的。在小于一百的素数中，只有四个素数满足这个性质。</p>
<p>在小于一百万的素数中，有多少个素数满足这个神奇的性质？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 130</title>
    <url>/130/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-130"><a href="#Problem-130" class="headerlink" title="Problem 130"></a><a href="https://projecteuler.net/problem=130">Problem 130</a></h1><hr>
<p><strong>Composites with prime repunit property</strong></p>
<p>A number consisting entirely of ones is called a repunit. We shall define R(k) to be a repunit of length k; for example, R(6) = 111111.</p>
<p>Given that n is a positive integer and GCD(n, 10) = 1, it can be shown that there always exists a value, k, for which R(k) is divisible by n, and let A(n) be the least such value of k; for example, A(7) = 6 and A(41) = 5.</p>
<p>You are given that for all primes, p &gt; 5, that p − 1 is divisible by A(p). For example, when p = 41, A(41) = 5, and 40 is divisible by 5.</p>
<p>However, there are rare composite values for which this is also true; the first five examples being 91, 259, 451, 481, and 703.</p>
<p>Find the sum of the first twenty-five composite values of n for which<br>GCD(n, 10) = 1 and n − 1 is divisible by A(n).</p>
<hr>
<p><strong>满足素数循环单位数性质的合数</strong></p>
<p>只包含数字1的数被称为循环单位数，我们定义R(k)是长为k的循环单位数，例如，R(6) = 111111。</p>
<p>如果n是一个整数，且GCD(n, 10) = 1，可以验证总存在k使得R(k)能够被n整除，并且记A(n)是这些k中最小的一个。例如，A(7) = 6，而A(41) = 5。</p>
<p>已知对于素数p &gt; 5，p − 1能够被A(p)整除。例如，当p = 41时，A(41) = 5，而40能够被5整除。</p>
<p>然而，有很少的一部分合数也满足这条性质，前5个这样的数分别是91，259，451，481以及703。</p>
<p>找出前25个合数n满足<br>GCD(n, 10) = 1且n − 1能够被A(n)整除，并求它们的和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 134</title>
    <url>/134/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-134"><a href="#Problem-134" class="headerlink" title="Problem 134"></a><a href="https://projecteuler.net/problem=134">Problem 134</a></h1><hr>
<p><strong>Prime pair connection</strong></p>
<p>Consider the consecutive primes p<sub>1</sub> = 19 and p<sub>2</sub> = 23. It can be verified that 1219 is the smallest number such that the last digits are formed by p<sub>1</sub> whilst also being divisible by p<sub>2</sub>.</p>
<p>In fact, with the exception of p<sub>1</sub> = 3 and p<sub>2</sub> = 5, for every pair of consecutive primes, p<sub>2</sub> &gt; p<sub>1</sub>, there exist values of n for which the last digits are formed by p<sub>1</sub> and n is divisible by p<sub>2</sub>. Let S be the smallest of these values of n.</p>
<p>Find ∑ S for every pair of consecutive primes with 5 ≤ p<sub>1</sub> ≤ 1000000.</p>
<hr>
<p><strong>质数对连接</strong></p>
<p>考虑连续的质数p<sub>1</sub> = 19和p<sub>2</sub> = 23。可以验证，1219是所有以p<sub>1</sub>结尾并且能被p<sub>2</sub>整除的数中最小的一个。</p>
<p>事实上，除了p<sub>1</sub> = 3和p<sub>2</sub> = 5这一对之外，对于任意一对连续质数p<sub>2</sub> &gt; p<sub>1</sub>，都存在一系列的数n，其尾数是p<sub>1</sub>，且能够被p<sub>2</sub>整除。记S是所有的n中的最小值。</p>
<p>对于5 ≤ p<sub>1</sub> ≤ 1000000内的所有连续质数对，求∑ S。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 135</title>
    <url>/135/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-135"><a href="#Problem-135" class="headerlink" title="Problem 135"></a><a href="https://projecteuler.net/problem=135">Problem 135</a></h1><hr>
<p><strong>Same differences</strong></p>
<p>Given the positive integers, x, y, and z, are consecutive terms of an arithmetic progression, the least value of the positive integer, n, for which the equation, x<sup>2</sup> − y<sup>2</sup> − z<sup>2</sup> = n, has exactly two solutions is n = 27:</p>
<center>34<sup>2</sup> − 27<sup>2</sup> − 20<sup>2</sup> = 12<sup>2</sup> − 9<sup>2</sup> − 6<sup>2</sup> = 27</center>

<p>It turns out that n = 1155 is the least value which has exactly ten solutions.</p>
<p>How many values of n less than one million have exactly ten distinct solutions?</p>
<hr>
<p><strong>相同的差</strong></p>
<p>已知正整数x，y，z构成等差数列，使得方程x<sup>2</sup> − y<sup>2</sup> − z<sup>2</sup> = n有两个解的最小正整数为n=27：</p>
<center>34<sup>2</sup> − 27<sup>2</sup> − 20<sup>2</sup> = 12<sup>2</sup> − 9<sup>2</sup> − 6<sup>2</sup> = 27</center>

<p>使得方程有十个解的最小正整数为n = 1155。</p>
<p>在小于一百万的数中，有多少个n的取值使得方程恰好有十个不同的解？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 132</title>
    <url>/132/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-132"><a href="#Problem-132" class="headerlink" title="Problem 132"></a><a href="https://projecteuler.net/problem=132">Problem 132</a></h1><hr>
<p><strong>Large repunit factors</strong></p>
<p>A number consisting entirely of ones is called a repunit. We shall define R(k) to be a repunit of length k.</p>
<p>For example, R(10) = 1111111111 = 11×41×271×9091, and the sum of these prime factors is 9414.</p>
<p>Find the sum of the first forty prime factors of R(10<sup>9</sup>).</p>
<hr>
<p><strong>大循环单位数的因数</strong></p>
<p>只包含数字1的数被称为循环单位数，我们定义R(k)是长为k的循环单位数。</p>
<p>例如，R(10) = 1111111111 = 11×41×271×9091，这些质因数的和是9414。</p>
<p>找出R(10<sup>9</sup>)的前40个质因数的和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 133</title>
    <url>/133/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-133"><a href="#Problem-133" class="headerlink" title="Problem 133"></a><a href="https://projecteuler.net/problem=133">Problem 133</a></h1><hr>
<p><strong>Repunit nonfactors</strong></p>
<p>A number consisting entirely of ones is called a repunit. We shall define R(k) to be a repunit of length k; for example, R(6) = 111111.</p>
<p>Let us consider repunits of the form R(10<sup>n</sup>).</p>
<p>Although R(10), R(100), or R(1000) are not divisible by 17, R(10000) is divisible by 17. Yet there is no value of n for which R(10<sup>n</sup>) will divide by 19. In fact, it is remarkable that 11, 17, 41, and 73 are the only four primes below one-hundred that can <!-- ever--> be a factor of R(10<sup>n</sup>).</p>
<p>Find the sum of all the primes below one-hundred thousand that will never be a factor of R(10<sup>n</sup>).</p>
<hr>
<p><strong>循环单位数的非质因数</strong></p>
<p>只包含数字1的数被称为循环单位数，我们定义R(k)是长为k的循环单位数；例如，R(6)=111111。</p>
<p>考虑形如R(10<sup>n</sup>)的循环单位数。</p>
<p>尽管R(10)，R(100)和R(1000)都不能被17整除，R(10000)却能够被17整除。然而，不存在n使得R(10<sup>n</sup>)能被19整除。事实上，在小于100的质数中，只有11，17，41和73能够成为R(10<sup>n</sup>)的质因数。</p>
<p>找出所有小于十万且永远不会成为R(10<sup>n</sup>)的质因数的质数之和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 137</title>
    <url>/137/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-137"><a href="#Problem-137" class="headerlink" title="Problem 137"></a><a href="https://projecteuler.net/problem=137">Problem 137</a></h1><hr>
<p><strong>Fibonacci golden nuggets</strong></p>
<p>Consider the infinite polynomial series A<sub>F</sub>(x) = xF<sub>1</sub> + x<sup>2</sup>F<sub>2</sub> + x<sup>3</sup>F<sub>3</sub> + …, where F<sub>k</sub> is the kth term in the Fibonacci sequence: 1, 1, 2, 3, 5, 8, … ; that is, F<sub>k</sub> = F<sub>k−1</sub> + F<sub>k−2</sub>, F<sub>1</sub> = 1 and F<sub>2</sub> = 1.</p>
<p>For this problem we shall be interested in values of x for which A<sub>F</sub>(x) is a positive integer.</p>
<p>Surprisingly</p>
<table>
<thead>
<tr>
<th align="right">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="left">&nbsp;</th>
</tr>
</thead>
<tbody><tr>
<td align="right">A<sub>F</sub>(1/2)</td>
<td align="center">=</td>
<td align="left">(1/2).1 + (1/2)<sup>2</sup>.1 + (1/2)<sup>3</sup>.2 + (1/2)<sup>4</sup>.3 + (1/2)<sup>5</sup>.5 + …</td>
</tr>
<tr>
<td align="right">&nbsp;</td>
<td align="center">=</td>
<td align="left">1/2 + 1/4 + 2/8 + 3/16 + 5/32 + …</td>
</tr>
<tr>
<td align="right">&nbsp;</td>
<td align="center">=</td>
<td align="left">2</td>
</tr>
</tbody></table>
<p>The corresponding values of x for the first five natural numbers are shown below.</p>
<table>
<thead>
<tr>
<th align="center"><strong>x</strong></th>
<th align="center"><strong>A<sub>F</sub>(x)</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="center">√2−1</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">1/2</td>
<td align="center">2</td>
</tr>
<tr>
<td align="center">(√13−2)/3</td>
<td align="center">3</td>
</tr>
<tr>
<td align="center">(√89−5)/8</td>
<td align="center">4</td>
</tr>
<tr>
<td align="center">(√34−3)/5</td>
<td align="center">5</td>
</tr>
</tbody></table>
<p>We shall call A<sub>F</sub>(x) a golden nugget if x is rational, because they become increasingly rarer; for example, the 10th golden nugget is 74049690.</p>
<p>Find the 15th golden nugget.</p>
<hr>
<p><strong>斐波那契金块</strong></p>
<p>考虑无穷级数A<sub>F</sub>(x) = xF<sub>1</sub> + x<sup>2</sup>F<sub>2</sub> + x<sup>3</sup>F<sub>3</sub> + …, 其中F<sub>k</sub>是斐波那契数列的第k项：1, 1, 2, 3, 5, 8, …；该数列由如下方式定义：F<sub>k</sub> = F<sub>k−1</sub> + F<sub>k−2</sub>，其中F<sub>1</sub> = 1且F<sub>2</sub> = 1。</p>
<p>在这个问题中，我们感兴趣的是那些使得A<sub>F</sub>(x)为正整数的x。</p>
<p>其中一个特别的解是：</p>
<table>
<thead>
<tr>
<th align="right">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="left">&nbsp;</th>
</tr>
</thead>
<tbody><tr>
<td align="right">A<sub>F</sub>(1/2)</td>
<td align="center">=</td>
<td align="left">(1/2).1 + (1/2)<sup>2</sup>.1 + (1/2)<sup>3</sup>.2 + (1/2)<sup>4</sup>.3 + (1/2)<sup>5</sup>.5 + …</td>
</tr>
<tr>
<td align="right">&nbsp;</td>
<td align="center">=</td>
<td align="left">1/2 + 1/4 + 2/8 + 3/16 + 5/32 + …</td>
</tr>
<tr>
<td align="right">&nbsp;</td>
<td align="center">=</td>
<td align="left">2</td>
</tr>
</tbody></table>
<p>对应于前五个自然数的x如下所示。</p>
<table>
<thead>
<tr>
<th align="center"><strong>x</strong></th>
<th align="center"><strong>A<sub>F</sub>(x)</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="center">√2−1</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">1/2</td>
<td align="center">2</td>
</tr>
<tr>
<td align="center">(√13−2)/3</td>
<td align="center">3</td>
</tr>
<tr>
<td align="center">(√89−5)/8</td>
<td align="center">4</td>
</tr>
<tr>
<td align="center">(√34−3)/5</td>
<td align="center">5</td>
</tr>
</tbody></table>
<p>当x是有理数时，我们称A<sub>F</sub>(x)是一个斐波那契金块，因为这样的数将会变得越来越稀少，例如，第10个斐波那契金块将是74049690。</p>
<p>求第15个斐波那契金块。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 136</title>
    <url>/136/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-136"><a href="#Problem-136" class="headerlink" title="Problem 136"></a><a href="https://projecteuler.net/problem=136">Problem 136</a></h1><hr>
<p><strong>Singleton difference</strong></p>
<p>The positive integers, x, y, and z, are consecutive terms of an arithmetic progression. Given that n is a positive integer, the equation, x<sup>2</sup> − y<sup>2</sup> − z<sup>2</sup> = n, has exactly one solution when n = 20:</p>
<center>13<sup>2</sup> − 10<sup>2</sup> − 7<sup>2</sup> = 20</center>

<p>In fact there are twenty-five values of n below one hundred for which the equation has a unique solution.</p>
<p>How many values of n less than fifty million have exactly one solution?</p>
<hr>
<p><strong>唯一的差</strong></p>
<p>正整数x，y，z构成等差数列。取正整数n=20，此时方程x<sup>2</sup> − y<sup>2</sup> − z<sup>2</sup> = n只有一个解：</p>
<center>13<sup>2</sup> − 10<sup>2</sup> − 7<sup>2</sup> = 20</center>

<p>事实上，在小于一百的数中，有25个n的取值使得方程有唯一解。</p>
<p>在小于五千万的数中，有多少个n的取值使得方程有唯一解？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 138</title>
    <url>/138/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-138"><a href="#Problem-138" class="headerlink" title="Problem 138"></a><a href="https://projecteuler.net/problem=138">Problem 138</a></h1><hr>
<p><strong>Special isosceles triangles</strong></p>
<p>Consider the isosceles triangle with base length, b = 16, and legs, L = 17.</p>
<center><img src="/resources/images/0138.png"></center>

<p>By using the Pythagorean theorem it can be seen that the height of the triangle, h = √(17<sup>2</sup> − 8<sup>2</sup>) = 15, which is one less than the base length.</p>
<p>With b = 272 and L = 305, we get h = 273, which is one more than the base length, and this is the second smallest isosceles triangle with the property that h = b ± 1.</p>
<p>Find ∑ L for the twelve smallest isosceles triangles for which h = b ± 1 and b, L are positive integers.</p>
<hr>
<p><strong>特殊等腰三角形</strong></p>
<p>考虑底为b = 16，腰为L = 17的等腰三角形。</p>
<center><img src="/resources/images/0138.png"></center>

<p>使用毕达哥拉斯定理，我们可以求出三角形的高是h = √(17<sup>2</sup> − 8<sup>2</sup>) = 15，恰好比底长小1。</p>
<p>当b = 272而L = 305时，可以算出h = 273，恰好比底长大1，而且这是满足性质h = b ± 1的三角形中第二小的。</p>
<p>对于最小的12个满足h = b ± 1且b，L均为正整数的等腰三角形，求∑ L。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 139</title>
    <url>/139/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-139"><a href="#Problem-139" class="headerlink" title="Problem 139"></a><a href="https://projecteuler.net/problem=139">Problem 139</a></h1><hr>
<p><strong>Pythagorean tiles</strong></p>
<p>Let (a, b, c) represent the three sides of a right angle triangle with integral length sides. It is possible to place four such triangles together to form a square with length c.</p>
<p>For example, (3, 4, 5) triangles can be placed together to form a 5 by 5 square with a 1 by 1 hole in the middle and it can be seen that the 5 by 5 square can be tiled with twenty-five 1 by 1 squares.</p>
<center><img src="/resources/images/0139.png"></center>

<p>However, if (5, 12, 13) triangles were used then the hole would measure 7 by 7 and these could not be used to tile the 13 by 13 square.</p>
<p>Given that the perimeter of the right triangle is less than one-hundred million, how many Pythagorean triangles would allow such a tiling to take place?</p>
<hr>
<p><strong>毕达哥拉斯地砖</strong></p>
<p>用(a, b, c)表示边长为整数的直角三角形的三边，可以将四个这样的三角形放在一起，使其外框构成边长为c的正方形。</p>
<p>例如，边长为(3, 4, 5)的三角形可以构成一个5x5的正方形，中间留有一个1x1的洞。而这个5x5的正方形又恰好可以用25个1x1的小正方形组成。</p>
<center><img src="/resources/images/0139.png"></center>

<p>然而，如果我们用(5, 12, 13)的三角形，则中间的洞将会是7x7大小，不能用来组成13x13的大正方形。</p>
<p>考虑周长小于一亿的直角三角形，有多少个毕达哥拉斯三角形可以用中间留下的空洞大小的地砖恰好铺满外围的大正方形？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 14</title>
    <url>/14/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-14"><a href="#Problem-14" class="headerlink" title="Problem 14"></a><a href="https://projecteuler.net/problem=14">Problem 14</a></h1><hr>
<h2 id="Longest-Collatz-Sequence"><a href="#Longest-Collatz-Sequence" class="headerlink" title="Longest Collatz Sequence"></a><strong>Longest Collatz Sequence</strong></h2><p>The following iterative sequence is defined for the set of positive integers:</p>
<p>$n \rightarrow n/2$ ($n$ is even)<br /><br>$n \rightarrow 3n + 1$ ($n$ is odd)</p>
<p>Using the rule above and starting with $13$, we generate the following sequence:</p>
<p>$$13 \rightarrow 40 \rightarrow 20 \rightarrow 10 \rightarrow 5 \rightarrow 16 \rightarrow 8 \rightarrow 4 \rightarrow 2 \rightarrow 1$$</p>
<p>It can be seen that this sequence (starting at $13$ and finishing at $1$) contains $10$ terms. Although it has not been proved yet (Collatz Problem), it is thought that all starting numbers finish at $1$.</p>
<p>Which starting number, under one million, produces the longest chain?</p>
<p><strong>NOTE:</strong> Once the chain starts the terms are allowed to go above one million.</p>
<hr>
<h2 id="最长考拉兹序列"><a href="#最长考拉兹序列" class="headerlink" title="最长考拉兹序列"></a><strong>最长考拉兹序列</strong></h2><p>考虑如下定义在正整数集上的迭代规则：</p>
<p>$n \rightarrow n/2$ （若$n$为偶数）<br /><br>$n \rightarrow 3n + 1$ （若$n$为奇数）</p>
<p>从$13$开始，可以迭代生成如下的序列：</p>
<p>$$13 \rightarrow 40 \rightarrow 20 \rightarrow 10 \rightarrow 5 \rightarrow 16 \rightarrow 8 \rightarrow 4 \rightarrow 2 \rightarrow 1$$</p>
<p>可以看出这个序列（从$13$开始到$1$结束）共有$10$项。尽管还未被证明，但普遍认为，从任何数开始最终都能抵达$1$并结束（这被称为“考拉兹猜想”）。</p>
<p>在小于一百万的数中，从哪个数开始迭代生成的序列最长？</p>
<p><strong>注：</strong> 在迭代过程中允许出现超过一百万的项。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 140</title>
    <url>/140/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-140"><a href="#Problem-140" class="headerlink" title="Problem 140"></a><a href="https://projecteuler.net/problem=140">Problem 140</a></h1><hr>
<p><strong>Modified Fibonacci golden nuggets</strong></p>
<p>Consider the infinite polynomial series A<sub>G</sub>(x) = xG<sub>1</sub> + x<sup>2</sup>G<sub>2</sub> + x<sup>3</sup>G<sub>3</sub> + …, where G<sub>k</sub> is the kth term of the second order recurrence relation G<sub>k</sub> = G<sub>k?1</sub> + G<sub>k?2</sub>, G<sub>1</sub> = 1 and G<sub>2</sub> = 4; that is, 1, 4, 5, 9, 14, 23, … .</p>
<p>For this problem we shall be concerned with values of x for which A<sub>G</sub>(x) is a positive integer.</p>
<p>The corresponding values of x for the first five natural numbers are shown below.</p>
<table>
<thead>
<tr>
<th align="center"><strong>x</strong></th>
<th align="center"><strong>A<sub>G</sub>(x)</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="center">(√5?1)/4</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">2/5</td>
<td align="center">2</td>
</tr>
<tr>
<td align="center">(√22?2)/6</td>
<td align="center">3</td>
</tr>
<tr>
<td align="center">(√137?5)/14</td>
<td align="center">4</td>
</tr>
<tr>
<td align="center">1/2</td>
<td align="center">5</td>
</tr>
</tbody></table>
<p>We shall call A<sub>G</sub>(x) a golden nugget if x is rational, because they become increasingly rarer; for example, the 20th golden nugget is 211345365.</p>
<p>Find the sum of the first thirty golden nuggets.</p>
<hr>
<p><strong>修正斐波那契金块</strong></p>
<p>考虑无穷级数A<sub>G</sub>(x) = xG<sub>1</sub> + x<sup>2</sup>G<sub>2</sub> + x<sup>3</sup>G<sub>3</sub> + …，其中G<sub>k</sub>是二阶递归关系G<sub>k</sub> = G<sub>k?1</sub> + G<sub>k?2</sub>的第k项，其中G<sub>1</sub> = 1，G<sub>2</sub> = 4，该序列为1, 4, 5, 9, 14, 23, … 。</p>
<p>在这个问题中，我们感兴趣的是那些使得A<sub>G</sub>(x)为正整数的x。</p>
<p>对应于前五个自然数的x如下所示。</p>
<table>
<thead>
<tr>
<th align="center"><strong>x</strong></th>
<th align="center"><strong>A<sub>G</sub>(x)</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="center">(√5?1)/4</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">2/5</td>
<td align="center">2</td>
</tr>
<tr>
<td align="center">(√22?2)/6</td>
<td align="center">3</td>
</tr>
<tr>
<td align="center">(√137?5)/14</td>
<td align="center">4</td>
</tr>
<tr>
<td align="center">1/2</td>
<td align="center">5</td>
</tr>
</tbody></table>
<p>当x是有理数时，我们称A<sub>G</sub>(x)是一个修正斐波那契金块，因为这样的数将会变得越来越稀少，例如，第20个修正斐波那契金块将是211345365。</p>
<p>求前30个修正斐波那契金块的和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 141</title>
    <url>/141/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-141"><a href="#Problem-141" class="headerlink" title="Problem 141"></a><a href="https://projecteuler.net/problem=141">Problem 141</a></h1><hr>
<p><strong>Investigating progressive numbers, n, which are also square</strong></p>
<p>A positive integer, n, is divided by d and the quotient and remainder are q and r respectively. In addition d, q, and r are consecutive positive integer terms in a geometric sequence, but not necessarily in that order.</p>
<p>For example, 58 divided by 6 has quotient 9 and remainder 4. It can also be seen that 4, 6, 9 are consecutive terms in a geometric sequence (common ratio 3/2).<br>We will call such numbers, n, progressive.</p>
<p>Some progressive numbers, such as 9 and 10404 = 102<sup>2</sup>, happen to also be perfect squares.<br>The sum of all progressive perfect squares below one hundred thousand is 124657.</p>
<p>Find the sum of all progressive perfect squares below one trillion (10<sup>12</sup>).</p>
<hr>
<p><strong>累进平方数n的研究</strong></p>
<p>正整数n被d的商和余数分别是q和r，除此之外，d，q，r恰好是一个等比数列中的连续三个正整数项，但其对应顺序不一定一致。</p>
<p>例如，58被6除商9余4，可以发现4，6，9构成等比数列的连续三项，公比是3/2。<br>我们称这样的数n为累进数。</p>
<p>有些累进数，例如9或者10404=102<sup>2</sup>，恰好也是完全平方数。<br>所有小于十万的累进平方数的和是124657。</p>
<p>求所有小于一万亿（10<sup>12</sup>）的累进平方数之和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 142</title>
    <url>/142/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-142"><a href="#Problem-142" class="headerlink" title="Problem 142"></a><a href="https://projecteuler.net/problem=142">Problem 142</a></h1><hr>
<p><strong>Perfect Square Collection</strong></p>
<p>Find the smallest x + y + z with integers x &gt; y &gt; z &gt; 0 such that x + y, x - y, x + z, x - z, y + z, y - z are all perfect squares.</p>
<hr>
<p><strong>完全平方数收集</strong></p>
<p>找出最小的x + y + z的值，其中正整数x &gt; y &gt; z &gt; 0满足x + y, x - y, x + z, x - z, y + z, y - z 均为完全平方数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 143</title>
    <url>/143/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-143"><a href="#Problem-143" class="headerlink" title="Problem 143"></a><a href="https://projecteuler.net/problem=143">Problem 143</a></h1><hr>
<p><strong>Investigating the Torricelli point of a triangle</strong></p>
<p>Let ABC be a triangle with all interior angles being less than 120 degrees. Let X be any point inside the triangle and let XA = p, XC = q, and XB = r.</p>
<p>Fermat challenged Torricelli to find the position of X such that p + q + r was minimised.</p>
<p>Torricelli was able to prove that if equilateral triangles AOB, BNC and AMC are constructed on each side of triangle ABC, the circumscribed circles of AOB, BNC, and AMC will intersect at a single point, T, inside the triangle. Moreover he proved that T, called the Torricelli/Fermat point, minimises p + q + r. Even more remarkable, it can be shown that when the sum is minimised, AN = BM = CO = p + q + r and that AN, BM and CO also intersect at T.</p>
<center><img src="/resources/images/0143_torricelli.png"></center>

<p>If the sum is minimised and a, b, c, p, q and r are all positive integers we shall call triangle ABC a Torricelli triangle. For example, a = 399, b = 455, c = 511 is an example of a Torricelli triangle, with p + q + r = 784.</p>
<p>Find the sum of all distinct values of p + q + r ≤ 120000 for Torricelli triangles.</p>
<hr>
<p><strong>三角形托里拆利点的研究</strong></p>
<p>三角形ABC的每一个内角均小于120度，取三角形内的任意一点X满足XA = p，XC = q以及XB = r。</p>
<p>费马曾经向托里拆利提出挑战，找到点X的位置，使得p + q + r最小。</p>
<p>托里拆利证明了，如果对三角形ABC的三边分别构造等边三角形AOB，BNC和AMC，这三个三角形的外接圆将会交于三角形内一点T。T点，也被称为托里拆利点或费马点，是使得p + q + r最小的点。更神奇的是，此时AN = BM = CO = p + q + r，且AN，BM和CO相交于点T。</p>
<center><img src="/resources/images/0143_torricelli.png"></center>

<p>如果当和最小时有a，b，c，p，q，r均为正整数，我们称这个三角形ABC为托里拆利三角形。例如，a = 399，b = 455，c = 511就是托里拆利三角形的一个例子，此时p + q + r = 784。</p>
<p>对于所有满足p + q + r ≤ 120000的托里拆利三角形，求所有不同的p + q + r的值之和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 144</title>
    <url>/144/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-144"><a href="#Problem-144" class="headerlink" title="Problem 144"></a><a href="https://projecteuler.net/problem=144">Problem 144</a></h1><hr>
<p><strong>Investigating multiple reflections of a laser beam</strong></p>
<p>In laser physics, a “white cell” is a mirror system that acts as a delay line for the laser beam. The beam enters the cell, bounces around on the mirrors, and eventually works its way back out.</p>
<p>The specific white cell we will be considering is an ellipse with the equation 4x<sup>2</sup> + y<sup>2</sup> = 100</p>
<p>The section corresponding to -0.01 ≤ x ≤ +0.01 at the top is missing, allowing the light to enter and exit through the hole.</p>
<center><img src="/resources/images/0144_1.png"><img src="/resources/images/0144_2.gif"></center>


<p>The light beam in this problem starts at the point (0.0,10.1) just outside the white cell, and the beam first impacts the mirror at (1.4,-9.6).</p>
<p>Each time the laser beam hits the surface of the ellipse, it follows the usual law of reflection “angle of incidence equals angle of reflection.” That is, both the incident and reflected beams make the same angle with the normal line at the point of incidence.</p>
<p>In the figure on the left, the red line shows the first two points of contact between the laser beam and the wall of the white cell; the blue line shows the line tangent to the ellipse at the point of incidence of the first bounce.</p>
<p>The slope m of the tangent line at any point (x,y) of the given ellipse is: m = -4x/y</p>
<p>The normal line is perpendicular to this tangent line at the point of incidence.</p>
<p>The animation on the right shows the first 10 reflections of the beam.</p>
<p>How many times does the beam hit the internal surface of the white cell before exiting?</p>
<hr>
<p><strong>一束激光多次反射的研究</strong></p>
<p>在激光物理学中，“白腔”指的是一个使激光束发生延迟的镜面系统。激光进入镜面系统后，最终会不断反射并重新射出。</p>
<p>在本题中考察的白腔系统是一个椭圆，其方程为4x<sup>2</sup> + y<sup>2</sup> = 100</p>
<p>在椭圆顶端割去了-0.01 ≤ x ≤ +0.01的区域，使得激光能够进入和离开白腔。</p>
<center><img src="/resources/images/0144_1.png"><img src="/resources/images/0144_2.gif"></center>

<p>本题中，激光从白腔外的点(0.0,10.1)发出，首次接触镜面的位置是(1.4,-9.6)。</p>
<p>每当激光击中椭圆表面时，它遵循反射定律“入射角等于反射角”，也就是说，入射光线和反射光线在入射点和法线的夹角相等。</p>
<p>在左图中，红线表示的是激光前两次击中镜面的过程；蓝线表示的是激光第一次击中镜面时入射点的切线。</p>
<p>对于椭圆的任意点(x,y)，其切线的斜率m满足：m = -4x/y</p>
<p>法线垂直于入射点的切线。</p>
<p>右侧的动画展现了激光束前十次反射的路径。</p>
<p>在激光离开白腔之前，它在椭圆的内表面上击中了多少次？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 145</title>
    <url>/145/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-145"><a href="#Problem-145" class="headerlink" title="Problem 145"></a><a href="https://projecteuler.net/problem=145">Problem 145</a></h1><hr>
<p><strong>How many reversible numbers are there below one-billion?</strong></p>
<p>Some positive integers n have the property that the sum [ n + reverse(n) ] consists entirely of odd (decimal) digits. For instance, 36 + 63 = 99 and 409 + 904 = 1313. We will call such numbers <em>reversible</em>; so 36, 63, 409, and 904 are reversible. Leading zeroes are not allowed in either n or reverse(n).</p>
<p>There are 120 reversible numbers below one-thousand.</p>
<p>How many reversible numbers are there below one-billion (10<sup>9</sup>)?</p>
<hr>
<p><strong>有多少小于十亿的可逆数？</strong></p>
<p>有些正整数n满足这样一种性质，将它的数字逆序排列后和本身相加所得到的和[ n + reverse(n) ]的十进制表示只包含有奇数数字。例如，36 + 63 = 99 以及409 + 904 = 1313。我们称这样的数是<em>可逆的</em>；因此36，63，409和904都是可逆的。无论是n还是reverse(n)都不允许出现前导0。</p>
<p>在小于一千的数中，一共有120个可逆数。</p>
<p>在小于十亿（10<sup>9</sup>）的数中，一共有多少个可逆数？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 147</title>
    <url>/147/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-147"><a href="#Problem-147" class="headerlink" title="Problem 147"></a><a href="https://projecteuler.net/problem=147">Problem 147</a></h1><hr>
<p><strong>Rectangles in cross-hatched grids</strong></p>
<p>In a 3x2 cross-hatched grid, a total of 37 different rectangles could be situated within that grid as indicated in the sketch.</p>
<center><img src="/resources/images/0147.png"></center>

<p>There are 5 grids smaller than 3x2, vertical and horizontal dimensions being important, i.e. 1x1, 2x1, 3x1, 1x2 and 2x2. If each of them is cross-hatched, the following number of different rectangles could be situated within those smaller grids:</p>
<p>1x1: 1<br>2x1: 4<br>3x1: 8<br>1x2: 4<br>2x2: 18</p>
<p>Adding those to the 37 of the 3x2 grid, a total of 72 different rectangles could be situated within 3x2 and smaller grids.</p>
<p>How many different rectangles could be situated within 47x43 and smaller grids?</p>
<hr>
<p><strong>交叉对角线方格中的长方形</strong></p>
<p>在一个3x2的标记了所有交叉对角线的方格中，一共有37种不同的长方形其各边是方格内的线段，如下图所示。</p>
<center><img src="/resources/images/0147.png"></center>

<p>从长和宽两方面考虑，有五个方格比3x2要小，大小分别是1x1，2x1，3x1，1x2和2x2。 如果将它们都标记上交叉对角线，则在这些更小的方格中有如下数目的不同长方形：</p>
<p>1x1: 1<br>2x1: 4<br>3x1: 8<br>1x2: 4<br>2x2: 18</p>
<p>把这些数和37加起来，可知对于3x2或更小的交叉对角线方格，一共有72种不同的长方形。</p>
<p>对于47x43或更小的交叉对角线方格，一共有多少种不同的长方形？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 146</title>
    <url>/146/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-146"><a href="#Problem-146" class="headerlink" title="Problem 146"></a><a href="https://projecteuler.net/problem=146">Problem 146</a></h1><hr>
<p><strong>Investigating a Prime Pattern</strong></p>
<p>The smallest positive integer n for which the numbers n<sup>2</sup>+1, n<sup>2</sup>+3, n<sup>2</sup>+7, n<sup>2</sup>+9, n<sup>2</sup>+13, and n<sup>2</sup>+27 are consecutive primes is 10. The sum of all such integers n below one-million is 1242490.</p>
<p>What is the sum of all such integers n below 150 million?</p>
<hr>
<p><strong>素数模式研究</strong></p>
<p>使得n<sup>2</sup>+1，n<sup>2</sup>+3，n<sup>2</sup>+7，n<sup>2</sup>+9，n<sup>2</sup>+13以及n<sup>2</sup>+27为连续素数的最小的n是10。在小于一百万的整数中，所有满足这一条件的整数n的总和为1242490。</p>
<p>在小于一亿五千万的数中，所有满足这一条件的整数n的总和是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 148</title>
    <url>/148/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-148"><a href="#Problem-148" class="headerlink" title="Problem 148"></a><a href="https://projecteuler.net/problem=148">Problem 148</a></h1><hr>
<p><strong>Exploring Pascal’s triangle</strong></p>
<p>We can easily verify that none of the entries in the first seven rows of Pascal’s triangle are divisible by 7:</p>
<table>
<thead>
<tr>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
</tr>
</thead>
<tbody><tr>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">1</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
</tr>
<tr>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">1</td>
<td align="center">&nbsp;</td>
<td align="center">1</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
</tr>
<tr>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">1</td>
<td align="center">&nbsp;</td>
<td align="center">2</td>
<td align="center">&nbsp;</td>
<td align="center">1</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
</tr>
<tr>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">1</td>
<td align="center">&nbsp;</td>
<td align="center">3</td>
<td align="center">&nbsp;</td>
<td align="center">3</td>
<td align="center">&nbsp;</td>
<td align="center">1</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
</tr>
<tr>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">1</td>
<td align="center">&nbsp;</td>
<td align="center">4</td>
<td align="center">&nbsp;</td>
<td align="center">6</td>
<td align="center">&nbsp;</td>
<td align="center">4</td>
<td align="center">&nbsp;</td>
<td align="center">1</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
</tr>
<tr>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;1&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;5&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">10</td>
<td align="center">&nbsp;</td>
<td align="center">10</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;5&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;1&nbsp;</td>
<td align="center">&nbsp;</td>
</tr>
<tr>
<td align="center">&nbsp;1&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;6&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">15</td>
<td align="center">&nbsp;</td>
<td align="center">20</td>
<td align="center">&nbsp;</td>
<td align="center">15</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;6&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;1&nbsp;</td>
</tr>
</tbody></table>
<p>However, if we check the first one hundred rows, we will find that only 2361 of the 5050 entries are not divisible by 7.</p>
<p>Find the number of entries which are not divisible by 7 in the first one billion (10<sup>9</sup>) rows of Pascal’s triangle.</p>
<hr>
<p><strong>探索帕斯卡三角</strong></p>
<p>可以验证，帕斯卡三角的前7行是，没有一个整数能够被7整除：</p>
<table>
<thead>
<tr>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
</tr>
</thead>
<tbody><tr>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">1</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
</tr>
<tr>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">1</td>
<td align="center">&nbsp;</td>
<td align="center">1</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
</tr>
<tr>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">1</td>
<td align="center">&nbsp;</td>
<td align="center">2</td>
<td align="center">&nbsp;</td>
<td align="center">1</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
</tr>
<tr>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">1</td>
<td align="center">&nbsp;</td>
<td align="center">3</td>
<td align="center">&nbsp;</td>
<td align="center">3</td>
<td align="center">&nbsp;</td>
<td align="center">1</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
</tr>
<tr>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">1</td>
<td align="center">&nbsp;</td>
<td align="center">4</td>
<td align="center">&nbsp;</td>
<td align="center">6</td>
<td align="center">&nbsp;</td>
<td align="center">4</td>
<td align="center">&nbsp;</td>
<td align="center">1</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;</td>
</tr>
<tr>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;1&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;5&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">10</td>
<td align="center">&nbsp;</td>
<td align="center">10</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;5&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;1&nbsp;</td>
<td align="center">&nbsp;</td>
</tr>
<tr>
<td align="center">&nbsp;1&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;6&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">15</td>
<td align="center">&nbsp;</td>
<td align="center">20</td>
<td align="center">&nbsp;</td>
<td align="center">15</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;6&nbsp;</td>
<td align="center">&nbsp;</td>
<td align="center">&nbsp;1&nbsp;</td>
</tr>
</tbody></table>
<p>然而，如果我们检查前一百行就会发现，在这5050个数上，只有2361个不能被7整除。</p>
<p>找出帕斯卡三角前十亿（10<sup>9</sup>）行中不能被7整除的数的数目。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 149</title>
    <url>/149/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-149"><a href="#Problem-149" class="headerlink" title="Problem 149"></a><a href="https://projecteuler.net/problem=149">Problem 149</a></h1><hr>
<p><strong>Searching for a maximum-sum subsequence</strong></p>
<p>Looking at the table below, it is easy to verify that the maximum possible sum of adjacent numbers in any direction (horizontal, vertical, diagonal or anti-diagonal) is 16 (= 8 + 7 + 1).</p>
<table>
<thead>
<tr>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
</tr>
</thead>
<tbody><tr>
<td align="center">-2</td>
<td align="center">5</td>
<td align="center">3</td>
<td align="center">&nbsp;2&nbsp;</td>
</tr>
<tr>
<td align="center">9</td>
<td align="center">-6</td>
<td align="center">5</td>
<td align="center">&nbsp;1&nbsp;</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">2</td>
<td align="center">7</td>
<td align="center">&nbsp;3&nbsp;</td>
</tr>
<tr>
<td align="center">-1</td>
<td align="center">8</td>
<td align="center">-4</td>
<td align="center">&nbsp;8&nbsp;</td>
</tr>
</tbody></table>
<p>Now, let us repeat the search, but on a much larger scale:</p>
<p>First, generate four million pseudo-random numbers using a specific form of what is known as a “Lagged Fibonacci Generator”:</p>
<p>For 1 ≤ k ≤ 55, s<sub>k</sub> = [100003 ? 200003k + 300007k<sup>3</sup>] (modulo 1000000) ? 500000.<br>For 56 ≤ k ≤ 4000000, s<sub>k</sub> = [s<sub>k?24</sub> + s<sub>k?55</sub> + 1000000] (modulo 1000000) ? 500000.</p>
<p>Thus, s<sub>10</sub> = ?393027 and s<sub>100</sub> = 86613.</p>
<p>The terms of s are then arranged in a 2000×2000 table, using the first 2000 numbers to fill the first row (sequentially), the next 2000 numbers to fill the second row, and so on.</p>
<p>Finally, find the greatest sum of (any number of) adjacent entries in any direction (horizontal, vertical, diagonal or anti-diagonal).</p>
<hr>
<p><strong>寻找最大和子序列</strong></p>
<p>观察下面的表格，很容易发现，在所有同一横行、竖列或对角线的任意数量相邻数之和中，最大值是16 (= 8 + 7 + 1)。</p>
<table>
<thead>
<tr>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
</tr>
</thead>
<tbody><tr>
<td align="center">-2</td>
<td align="center">5</td>
<td align="center">3</td>
<td align="center">&nbsp;2&nbsp;</td>
</tr>
<tr>
<td align="center">9</td>
<td align="center">-6</td>
<td align="center">5</td>
<td align="center">&nbsp;1&nbsp;</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">2</td>
<td align="center">7</td>
<td align="center">&nbsp;3&nbsp;</td>
</tr>
<tr>
<td align="center">-1</td>
<td align="center">8</td>
<td align="center">-4</td>
<td align="center">&nbsp;8&nbsp;</td>
</tr>
</tbody></table>
<p>现在，让我们再来找一次，不过是在一个更大尺寸的表格中：</p>
<p>首先，使用现在被称为“延迟斐波那契生成器”的方法，生成四百万个伪随机数：</p>
<p>对于1 ≤ k ≤ 55，s<sub>k</sub> = [100003 ? 200003k + 300007k<sup>3</sup>] (modulo 1000000) ? 500000。<br>对于56 ≤ k ≤ 4000000, s<sub>k</sub> = [s<sub>k?24</sub> + s<sub>k?55</sub> + 1000000] (modulo 1000000) ? 500000.</p>
<p>如此一来，可以得到s<sub>10</sub> = ?393027，而s<sub>100</sub> = 86613。</p>
<p>这些s的项随后被填入一个2000×2000的表格，前2000个数字按顺序填入第一行，然后2000个数字在第二行，依此类推。</p>
<p>最后，求所有同一横行、竖列或对角线的任意数量相邻数之和的最大值。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 15</title>
    <url>/15/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-15"><a href="#Problem-15" class="headerlink" title="Problem 15"></a><a href="https://projecteuler.net/problem=15">Problem 15</a></h1><hr>
<h2 id="Lattice-Paths"><a href="#Lattice-Paths" class="headerlink" title="Lattice Paths"></a><strong>Lattice Paths</strong></h2><p>Starting in the top left corner of a $2\times2$ grid, and only being able to move to the right and down, there are exactly $6$ routes to the bottom right corner.</p>
<center>
<img src="/resources/images/0015.png" />
</center>

<p>How many such routes are there through a $20\times20$ grid?</p>
<hr>
<h2 id="网格路径"><a href="#网格路径" class="headerlink" title="网格路径"></a><strong>网格路径</strong></h2><p>从一个$2\times2$网格的左上角出发，若只允许向右或向下移动，则恰好有$6$条抵达右下角的路径。</p>
<center>
<img src="/resources/images/0015.png" />
</center>

<p>对于$20\times20$网格，这样的路径有多少条？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 150</title>
    <url>/150/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-150"><a href="#Problem-150" class="headerlink" title="Problem 150"></a><a href="https://projecteuler.net/problem=150">Problem 150</a></h1><hr>
<p><strong>Searching a triangular array for a sub-triangle having minimum-sum</strong></p>
<p>In a triangular array of positive and negative integers, we wish to find a sub-triangle such that the sum of the numbers it contains is the smallest possible.</p>
<p>In the example below, it can be easily verified that the marked triangle satisfies this condition having a sum of -42.</p>
<center><img src="/resources/images/0150.gif"></center>

<p>We wish to make such a triangular array with one thousand rows, so we generate 500500 pseudo-random numbers s<sub>k</sub> in the range ±2<sup>19</sup>, using a type of random number generator (known as a Linear Congruential Generator) as follows:</p>
<p>t := 0<br>for k = 1 up to k = 500500:<br>&nbsp;&nbsp;t := (615949*t + 797807) modulo 2<sup>20</sup><br>&nbsp;&nbsp;s<sub>k</sub> := t-2<sup>19</sup></p>
<p>Thus: s<sub>1</sub> = 273519, s<sub>2</sub> = -153582, s<sub>3</sub> = 450905 etc</p>
<p>Our triangular array is then formed using the pseudo-random numbers thus:</p>
<center>s<sub>1</sub>
s<sub>2</sub>&nbsp; s<sub>3</sub>
s<sub>4</sub>&nbsp; s<sub>5</sub>&nbsp; s<sub>6</sub>&nbsp; 
s<sub>7</sub>&nbsp; s<sub>8</sub>&nbsp; s<sub>9</sub>&nbsp; s<sub>10</sub>
...</center>

<p>Sub-triangles can start at any element of the array and extend down as far as we like (taking-in the two elements directly below it from the next row, the three elements directly below from the row after that, and so on).<br>The “sum of a sub-triangle” is defined as the sum of all the elements it contains.<br>Find the smallest possible sub-triangle sum.</p>
<hr>
<p><strong>寻找三角形数组的最小和子三角形</strong></p>
<p>我们希望在一个包含正数和负数的三角形数组中找到一个子三角形，其中元素的和尽可能小。</p>
<p>在下面这个例子中，可以验证带标记的三角形满足题述，它的元素和是-42。</p>
<center><img src="/resources/images/0150.gif"></center>

<p>我们希望搭建起一个有一千行的三角形数组，因此我们使用一种随机数生成算法（称为线性同余生成器），生成了500500个在范围±2<sup>19</sup>之间的伪随机数s<sub>k</sub>，如下所示：</p>
<p>t := 0<br>for k = 1 up to k = 500500:<br>&nbsp;&nbsp;t := (615949*t + 797807) modulo 2<sup>20</sup><br>&nbsp;&nbsp;s<sub>k</sub> := t-2<sup>19</sup></p>
<p>因此，s<sub>1</sub> = 273519，s<sub>2</sub> = −153582，s<sub>3</sub> = 450905，依此类推。</p>
<p>接下来就将这些伪随机数填入三角形数组：</p>
<center>s<sub>1</sub>
s<sub>2</sub>&nbsp; s<sub>3</sub>
s<sub>4</sub>&nbsp; s<sub>5</sub>&nbsp; s<sub>6</sub>&nbsp; 
s<sub>7</sub>&nbsp; s<sub>8</sub>&nbsp; s<sub>9</sub>&nbsp; s<sub>10</sub>
...</center>

<p>子三角形可以从数组中的任意元素开始，向下可以延伸至无限长（先取下一行的两个元素，再取接下来一行的三个元素，依此类推）。<br>“子三角形的和”被定义为其中所有元素的和。<br>求最小的子三角形的和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 151</title>
    <url>/151/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-151"><a href="#Problem-151" class="headerlink" title="Problem 151"></a><a href="https://projecteuler.net/problem=151">Problem 151</a></h1><hr>
<p><b>Paper sheets of standard sizes: an expected-value problem</b></p>
<p>A printing shop runs 16 batches (jobs) every week and each batch requires a sheet of special colour-proofing paper of size A5.</p>
<p>Every Monday morning, the foreman opens a new envelope, containing a large sheet of the special paper with size A1.</p>
<p>He proceeds to cut it in half, thus getting two sheets of size A2. Then he cuts one of them in half to get two sheets of size A3 and so on until he obtains the A5-size sheet needed for the first batch of the week.</p>
<p>All the unused sheets are placed back in the envelope.</p>
<center><img src="/resources/images/0151.png"></center>

<p>At the beginning of each subsequent batch, he takes from the envelope one sheet of paper at random. If it is of size A5, he uses it. If it is larger, he repeats the ‘cut-in-half’ procedure until he has what he needs and any remaining sheets are always placed back in the envelope.</p>
<p>Excluding the first and last batch of the week, find the expected number of times (during each week) that the foreman finds a single sheet of paper in the envelope.</p>
<p>Give your answer rounded to six decimal places using the format x.xxxxxx.</p>
<hr>
<p><b>标准大小的纸张：有关期望的问题</b></p>
<p>一家打印店每周有16份打印工作，每份打印工作需要一张A5大小的特殊彩色打样纸。</p>
<p>每周一早晨，领班会打开一个新信封，其中有一张A1大小的特殊彩色打样纸。</p>
<p>他将这张纸一裁为二，得到两张A2大小的纸。再将其中一张一裁为二，得到A3大小的纸，如此直到他裁出一张用于第一份打印工作的A5大小的彩色打样纸。</p>
<p>所有剩下的纸张将会重新放回信封里。</p>
<center><img src="/resources/images/0151.png"></center>

<p>接下来的每次打印工作前，领班会从信封里拿出随机拿出一张纸，如果恰好是A5大小的，他会直接拿去使用，否则他会重复一裁为二的过程直到他得到一张A5大小的纸，并将剩下的纸重新放回信封里。</p>
<p>除了每周的第一次和最后一次打印工作外，求在这周当中领班在拿纸时发现信封里只有一张纸的次数的期望值。</p>
<p>你的答案应当保留六位小数，即以如下的形式x.xxxxxx。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 152</title>
    <url>/152/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-152"><a href="#Problem-152" class="headerlink" title="Problem 152"></a><a href="https://projecteuler.net/problem=152">Problem 152</a></h1><hr>
<p><b>Writing 1/2 as a sum of inverse squares</b></p>
<p>There are several ways to write the number 1/2 as a sum of inverse squares using <em>distinct</em> integers.</p>
<p>For instance, the numbers {2,3,4,5,7,12,15,20,28,35} can be used:</p>
<center><img src="https://projecteuler.net/project/images/p152_sum.gif" border="0" alt=""></center>

<p>In fact, only using integers between 2 and 45 inclusive, there are exactly three ways to do it, the remaining two being: {2,3,4,6,7,9,10,20,28,35,36,45} and {2,3,4,6,7,9,12,15,28,30,35,36,45}.</p>
<p>How many ways are there to write the number 1/2 as a sum of inverse squares using distinct integers between 2 and 80 inclusive?</p>
<hr>
<p><b>将1/2写成平方数的倒数和</b></p>
<p>有许多种方式将1/2写成一系列<em>不同</em>整数的平方的倒数和。</p>
<p>例如，可以用这些数{2,3,4,5,7,12,15,20,28,35}：</p>
<center><img src="https://projecteuler.net/project/images/p152_sum.gif" border="0" alt=""></center>

<p>事实上，只用2至45之间的数的方式一共有三种，另两种分别是：{2,3,4,6,7,9,10,20,28,35,36,45}和{2,3,4,6,7,9,12,15,28,30,35,36,45}。</p>
<p>如果只用2至80之间的数，将1/2写成不同整数的平方的倒数和共有多少种方式？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 153</title>
    <url>/153/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-153"><a href="#Problem-153" class="headerlink" title="Problem 153"></a><a href="https://projecteuler.net/problem=153">Problem 153</a></h1><hr>
<p><b>Investigating Gaussian Integers</b></p>
<p>As we all know the equation x<sup>2</sup>=-1 has no solutions for real x.<br>If we however introduce the imaginary number i this equation has two solutions: x=i and x=-i.<br>If we go a step further the equation (x-3)<sup>2</sup>=-4 has two complex solutions: x=3+2i and x=3-2i.<br>x=3+2i and x=3-2i are called each others’ complex conjugate.<br>Numbers of the form a+bi are called complex numbers.<br>In general a+bi and a−bi are each other’s complex conjugate.</p>
<p>A Gaussian Integer is a complex number a+bi such that both a and b are integers.<br>The regular integers are also Gaussian integers (with b=0).<br>To distinguish them from Gaussian integers with b ≠ 0 we call such integers “rational integers.”<br>A Gaussian integer is called a divisor of a rational integer n if the result is also a Gaussian integer.<br>If for example we divide 5 by 1+2i we can simplify $\frac{5}{1+2i}$ in the following manner:<br>Multiply numerator and denominator by the complex conjugate of 1+2i: 1−2i.<br>The result is $\frac{5}{1+2i}=\frac{5}{1+2i}\frac{1-2i}{1-2i}=\frac{5(1-2i)}{1-(2i)^2}=\frac{5(1-2i)}{1-(-4)}=\frac{5(1-2i)}{5}=1-2i$.<br>So 1+2i is a divisor of 5.<br>Note that 1+i is not a divisor of 5 because $\frac{5}{1+i}=\frac{5}{2}-\frac{5}{2}i$.<br>Note also that if the Gaussian Integer (a+bi) is a divisor of a rational integer n, then its complex conjugate (a−bi) is also a divisor of n.</p>
<p>In fact, 5 has six divisors such that the real part is positive: {1, 1 + 2i, 1 − 2i, 2 + i, 2 − i, 5}.<br>The following is a table of all of the divisors for the first five positive rational integers:</p>
<table>
<thead>
<tr>
<th align="center">n</th>
<th align="center">Gaussian integer divisors with positive real part</th>
<th align="center">Sum s(n) of these divisors</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1</td>
<td align="center">1</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">2</td>
<td align="center">1, 1+i, 1-i, 2</td>
<td align="center">5</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">1, 3</td>
<td align="center">4</td>
</tr>
<tr>
<td align="center">4</td>
<td align="center">1, 1+i, 1-i, 2, 2+2i, 2-2i,4</td>
<td align="center">13</td>
</tr>
<tr>
<td align="center">5</td>
<td align="center">1, 1+2i, 1-2i, 2+i, 2-i, 5</td>
<td align="center">12</td>
</tr>
</tbody></table>
<p>For divisors with positive real parts, then, we have: $\sum_{n=1}^{5}s(n)=35$.</p>
<p>For 1 ≤ n ≤ 10<sup>5</sup>, ∑ s(n)=17924657155.</p>
<p>What is ∑ s(n) for 1 ≤ n ≤ 10<sup>8</sup>?</p>
<hr>
<p><b>高斯整数的研究</b></p>
<p>我们都知道方程x<sup>2</sup>=-1在实数范围内无解。<br>但如果我们引入虚数i，这个方程将会有两个解x=i和x=-i。<br>进一步地，方程(x-3)<sup>2</sup>=-4有两个复数解：x=3+2i和x=3-2i。<br>x=3+2i和x=3-2i互称为共轭复数。<br>形如a+bi的数被称为复数。<br>概括地说，a+bi和a−bi互称为共轭复数。</p>
<p>高斯整数是形如a+bi且a和b均为整数的复数。<br>一般意义上的整数也是高斯整数（取b=0）。<br>为了把它们和b ≠ 0的高斯整数区分开来，称它们为“有理整数”。<br>如果一个高斯整数除有理整数n的结果仍然是高斯整数，则称它为该有理整数的约数。<br>例如，我们用1+2i除5，按如下方式简化$\frac{5}{1+2i}$：<br>分子和分母同时乘以1+2i的共轭：1−2i。<br>结果是：$\frac{5}{1+2i}=\frac{5}{1+2i}\frac{1-2i}{1-2i}=\frac{5(1-2i)}{1-(2i)^2}=\frac{5(1-2i)}{1-(-4)}=\frac{5(1-2i)}{5}=1-2i$。<br>所以1+2i是5的约数。<br>注意1+i不是5的约数，因为$\frac{5}{1+i}=\frac{5}{2}-\frac{5}{2}i$。<br>同时注意如果高斯整数(a+bi)是有理整数n的约数，那么它的共轭复数(a−bi)也是n的约数。</p>
<p>事实上，5一共有六个实数部分是正数的约数：{1, 1 + 2i, 1 − 2i, 2 + i, 2 − i, 5}。<br>如下表格列出了前五个正有理整数的所有约数：</p>
<table>
<thead>
<tr>
<th align="center">n</th>
<th align="center">实数部分是正数的高斯整数约数</th>
<th align="center">约数的和s(n)</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1</td>
<td align="center">1</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">2</td>
<td align="center">1, 1+i, 1-i, 2</td>
<td align="center">5</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">1, 3</td>
<td align="center">4</td>
</tr>
<tr>
<td align="center">4</td>
<td align="center">1, 1+i, 1-i, 2, 2+2i, 2-2i,4</td>
<td align="center">13</td>
</tr>
<tr>
<td align="center">5</td>
<td align="center">1, 1+2i, 1-2i, 2+i, 2-i, 5</td>
<td align="center">12</td>
</tr>
</tbody></table>
<p>对于实数部分为正数的约数，我们有：$\sum_{n=1}^{5}s(n)=35$。</p>
<p>对于1 ≤ n ≤ 10<sup>5</sup>，∑ s(n)=17924657155。</p>
<p>对于1 ≤ n ≤ 10<sup>8</sup>，求∑ s(n)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 155</title>
    <url>/155/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-155"><a href="#Problem-155" class="headerlink" title="Problem 155"></a><a href="https://projecteuler.net/problem=155">Problem 155</a></h1><hr>
<p><b>Counting Capacitor Circuits</b></p>
<p>An electric circuit uses exclusively identical capacitors of the same value C.<br>The capacitors can be connected in series or in parallel to form sub-units, which can then be connected in series or in parallel with other capacitors or other sub-units to form larger sub-units, and so on up to a final circuit.</p>
<p>Using this simple procedure and up to n identical capacitors, we can make circuits having a range of different total capacitances. For example, using up to n=3 capacitors of 60μF each, we can obtain the following 7 distinct total capacitance values: </p>
<center><img src="/resources/images/0155_capacitors1.gif"></center>

<p>If we denote by D(n) the number of distinct total capacitance values we can obtain when using up to n equal-valued capacitors and the simple procedure described above, we have: D(1)=1, D(2)=3, D(3)=7 …</p>
<p>Find D(18).</p>
<p><em>Reminder :</em> When connecting capacitors C<sub>1</sub>, C<sub>2</sub> etc in parallel, the total capacitance is C<sub>T</sub>&nbsp;=&nbsp;C<sub>1</sub>&nbsp;+&nbsp;C<sub>2</sub>&nbsp;+…,<br>whereas when connecting them in series, the overall capacitance is given by:$\frac{1}{C_T}=\frac{1}{C_1}+\frac{1}{C_2}+…$.</p>
<hr>
<p><b>电容电路计算</b></p>
<p>考虑如下电路，其中使用的电容都是完全相同的值C。<br>电容之间互相串联构成次级单元，然后次级单元之间互相串联或和其它次级单元或电容并联构成更大的次级单元，最终组成整个电路。</p>
<p>使用n个电容并重复这个简单的过程，我们可以构建出一系列总电容不同的电路。例如，使用最多n=3个值为60μF的电容，我们可以得到7种不同的总电容：</p>
<center><img src="/resources/images/0155_capacitors1.gif"></center>

<p>我们用D(n)表示当我们使用最多n个相同的电容并重复上述简单过程后，我们能够得到的总电容的种数，我们有：D(1)=1, D(2)=3, D(3)=7 …</p>
<p>求D(18)。</p>
<p><em>提醒：</em>当电容C<sub>1</sub>，C<sub>2</sub>等等并联时，总电容为C<sub>T</sub>&nbsp;=&nbsp;C<sub>1</sub>&nbsp;+&nbsp;C<sub>2</sub>&nbsp;+…，<br>而当它们串联时，总电容为：$\frac{1}{C_T}=\frac{1}{C_1}+\frac{1}{C_2}+…$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 154</title>
    <url>/154/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-154"><a href="#Problem-154" class="headerlink" title="Problem 154"></a><a href="https://projecteuler.net/problem=154">Problem 154</a></h1><hr>
<p><b>Exploring Pascal’s pyramid</b></p>
<p>A triangular pyramid is constructed using spherical balls so that each ball rests on exactly three balls of the next lower level.</p>
<center><img src="/resources/images/0154_pyramid.png"></center>

<p>Then, we calculate the number of paths leading from the apex to each position:</p>
<p>A path starts at the apex and progresses downwards to any of the three spheres directly below the current position.</p>
<p>Consequently, the number of paths to reach a certain position is the sum of the numbers immediately above it (depending on the position, there are up to three numbers above it).</p>
<p>The result is <em>Pascal’s pyramid</em> and the numbers at each level n are the coefficients of the trinomial expansion<br>(x + y + z)<sup>n</sup>.</p>
<p>How many coefficients in the expansion of (x + y + z)<sup>200000</sup> are multiples of 10<sup>12</sup>?</p>
<hr>
<p><b>探索帕斯卡四面体</b></p>
<p>我们用球构建一个三角形四面体，每一个球的下一层都由恰好三个球支撑。</p>
<center><img src="/resources/images/0154_pyramid.png"></center>

<p>然后，我们计算从顶端到每一个位置的路径数：</p>
<p>每一条路径从顶端出发，然后每次都走向下一层支撑当前位置的球的三个球之一。</p>
<p>最终，到达每个位置的路径数是它上方的球的路径数之和（根据位置的不同，每个位置的上方最多可能有三个球）。</p>
<p>最终的结果被称为<em>帕斯卡四面体</em>，这个四面体第n层的结果将是三项式(x + y + z)<sup>n</sup>的系数。</p>
<p>在三项式(x + y + z)<sup>200000</sup>的展开式中，有多少个系数是10<sup>12</sup>的倍数？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 156</title>
    <url>/156/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-156"><a href="#Problem-156" class="headerlink" title="Problem 156"></a><a href="https://projecteuler.net/problem=156">Problem 156</a></h1><hr>
<p><b>Counting Digits</b></p>
<p>Starting from zero the natural numbers are written down in base 10 like this:<br>0 1 2 3 4 5 6 7 8 9 10 11 12….</p>
<p>Consider the digit d=1. After we write down each number n, we will update the number of ones that have occurred and call this number f(n,1). The first values for f(n,1), then, are as follows:</p>
<table>
<thead>
<tr>
<th align="center">n</th>
<th align="center">f(n,1)</th>
</tr>
</thead>
<tbody><tr>
<td align="center">0</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">1</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">2</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">4</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">5</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">6</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">7</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">8</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">9</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">10</td>
<td align="center">2</td>
</tr>
<tr>
<td align="center">11</td>
<td align="center">4</td>
</tr>
<tr>
<td align="center">12</td>
<td align="center">5</td>
</tr>
</tbody></table>
<p>Note that f(n,1) never equals 3.<br>So the first two solutions of the equation f(n,1)=n are n=0 and n=1. The next solution is n=199981.</p>
<p>In the same manner the function f(n,d) gives the total number of digits d that have been written down after the number n has been written.<br>In fact, for every digit d ≠ 0, 0 is the first solution of the equation f(n,d)=n.</p>
<p>Let s(d) be the sum of all the solutions for which f(n,d)=n.<br>You are given that s(1)=22786974071.</p>
<p>Find  ∑ s(d) for 1 ≤ d ≤ 9.</p>
<p>Note: if, for some n, f(n,d)=n for more than one value of d this value of n is counted again for every value of d for which f(n,d)=n.</p>
<hr>
<p><b>数字计数</b></p>
<p>从零开始的自然数在十进制中如下表示：<br>0 1 2 3 4 5 6 7 8 9 10 11 12….</p>
<p>考虑数字d=1。当我们写下数n之后，我们计算一下到目前为止数字1出现的次数，并记为f(n,1)。f(n,1)的前面一部分值如下所示：</p>
<table>
<thead>
<tr>
<th align="center">n</th>
<th align="center">f(n,1)</th>
</tr>
</thead>
<tbody><tr>
<td align="center">0</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">1</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">2</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">4</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">5</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">6</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">7</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">8</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">9</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">10</td>
<td align="center">2</td>
</tr>
<tr>
<td align="center">11</td>
<td align="center">4</td>
</tr>
<tr>
<td align="center">12</td>
<td align="center">5</td>
</tr>
</tbody></table>
<p>注意到f(n,1)从不等于3。<br>等式f(n,1)=n的前两个解是n=0和n=1，下一个解是n=199981。</p>
<p>同样地我们记f(n,d)表示在写下n之后d出现的次数。<br>事实上，对于任意一个数字d ≠ 0，0都是方程f(n,d)=n的第一个解。</p>
<p>记s(d)是所有f(n,d)=n的解的和。<br>已知s(1)=22786974071。</p>
<p>对于1 ≤ d ≤ 9，求∑ s(d)。</p>
<p>注意：如果对于某些n，对于多于一个的d均满足f(n,d)=n，这个数n对于每个d都要计算一遍。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 158</title>
    <url>/158/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-158"><a href="#Problem-158" class="headerlink" title="Problem 158"></a><a href="https://projecteuler.net/problem=158">Problem 158</a></h1><hr>
<p><b>Exploring strings for which only one character comes lexicographically after its neighbour to the left</b></p>
<p>Taking three different letters from the 26 letters of the alphabet, character strings of length three can be formed.<br>Examples are ‘abc’, ‘hat’ and ‘zyx’.<br>When we study these three examples we see that for ‘abc’ two characters come lexicographically after its neighbour to the left.<br>For ‘hat’ there is exactly one character that comes lexicographically after its neighbour to the left. For ‘zyx’ there are zero characters that come lexicographically after its neighbour to the left.<br>In all there are 10400 strings of length 3 for which exactly one character comes lexicographically after its neighbour to the left.</p>
<p>We now consider strings of n ≤ 26 different characters from the alphabet.<br>For every n, p(n) is the number of strings of length n for which exactly one character comes lexicographically after its neighbour to the left. </p>
<p>What is the maximum value of p(n)?</p>
<hr>
<p><b>按字典序升序排列的字符串研究</b></p>
<p>从字母表的26个字母中取出三个不同的字母，可以组成一个长度为3的字符串。<br>这样的例子包括’abc’，’hat’和’zyx’。<br>可以发现，对于字符串’abc’，有两个字符与其左侧字符是按照字典序升序排列的。<br>对于字符串’hat’，只有一个字符与其左侧字符是按照字典序升序排列的，而对于字符串’zyx’则不存在这样的字符。<br>总共有10400个长度为3的字符串，其中恰好有一个字符与其左侧字符是按照字典序升序排列的。</p>
<p>现在考虑由字母表中的n ≤ 26个不同字符组成的字符串。<br>对于任意n，我们用p(n)表示长度为n且恰好有一个字符与其左侧字符是按照字典序升序排列的字符串数目。 </p>
<p>p(n)的最大值是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 157</title>
    <url>/157/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-157"><a href="#Problem-157" class="headerlink" title="Problem 157"></a><a href="https://projecteuler.net/problem=157">Problem 157</a></h1><hr>
<p><b>Solving the diophantine equation <sup>1</sup>/<sub>a</sub>+<sup>1</sup>/<sub>b</sub>= <sup>p</sup>/<sub>10<sup>n</sup></sub> </b></p>
<p>Consider the diophantine equation <sup>1</sup>/<sub>a</sub>+<sup>1</sup>/<sub>b</sub>= <sup>p</sup>/<sub>10<sup>n</sup></sub> with a, b, p, n positive integers and a ≤ b.<br>For n=1 this equation has 20 solutions that are listed below:</p>
<table>
<thead>
<tr>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><sup>1</sup>/<sub>1</sub>+<sup>1</sup>/<sub>1</sub>=<sup>20</sup>/<sub>10</sub></td>
<td align="center"><sup>1</sup>/<sub>1</sub>+<sup>1</sup>/<sub>2</sub>=<sup>15</sup>/<sub>10</sub></td>
<td align="center"><sup>1</sup>/<sub>1</sub>+<sup>1</sup>/<sub>5</sub>=<sup>12</sup>/<sub>10</sub></td>
<td align="center"><sup>1</sup>/<sub>1</sub>+<sup>1</sup>/<sub>10</sub>=<sup>11</sup>/<sub>10</sub></td>
<td align="center"><sup>1</sup>/<sub>2</sub>+<sup>1</sup>/<sub>2</sub>=<sup>10</sup>/<sub>10</sub></td>
</tr>
<tr>
<td align="center"><sup>1</sup>/<sub>2</sub>+<sup>1</sup>/<sub>5</sub>=<sup>7</sup>/<sub>10</sub></td>
<td align="center"><sup>1</sup>/<sub>2</sub>+<sup>1</sup>/<sub>10</sub>=<sup>6</sup>/<sub>10</sub></td>
<td align="center"><sup>1</sup>/<sub>3</sub>+<sup>1</sup>/<sub>6</sub>=<sup>5</sup>/<sub>10</sub></td>
<td align="center"><sup>1</sup>/<sub>3</sub>+<sup>1</sup>/<sub>15</sub>=<sup>4</sup>/<sub>10</sub></td>
<td align="center"><sup>1</sup>/<sub>4</sub>+<sup>1</sup>/<sub>4</sub>=<sup>5</sup>/<sub>10</sub></td>
</tr>
<tr>
<td align="center"><sup>1</sup>/<sub>4</sub>+<sup>1</sup>/<sub>20</sub>=<sup>3</sup>/<sub>10</sub></td>
<td align="center"><sup>1</sup>/<sub>5</sub>+<sup>1</sup>/<sub>5</sub>=<sup>4</sup>/<sub>10</sub></td>
<td align="center"><sup>1</sup>/<sub>5</sub>+<sup>1</sup>/<sub>10</sub>=<sup>3</sup>/<sub>10</sub></td>
<td align="center"><sup>1</sup>/<sub>6</sub>+<sup>1</sup>/<sub>30</sub>=<sup>2</sup>/<sub>10</sub></td>
<td align="center"><sup>1</sup>/<sub>10</sub>+<sup>1</sup>/<sub>10</sub>=<sup>2</sup>/<sub>10</sub></td>
</tr>
<tr>
<td align="center"><sup>1</sup>/<sub>11</sub>+<sup>1</sup>/<sub>110</sub>=<sup>1</sup>/<sub>10</sub></td>
<td align="center"><sup>1</sup>/<sub>12</sub>+<sup>1</sup>/<sub>60</sub>=<sup>1</sup>/<sub>10</sub></td>
<td align="center"><sup>1</sup>/<sub>14</sub>+<sup>1</sup>/<sub>35</sub>=<sup>1</sup>/<sub>10</sub></td>
<td align="center"><sup>1</sup>/<sub>15</sub>+<sup>1</sup>/<sub>30</sub>=<sup>1</sup>/<sub>10</sub></td>
<td align="center"><sup>1</sup>/<sub>20</sub>+<sup>1</sup>/<sub>20</sub>=<sup>1</sup>/<sub>10</sub></td>
</tr>
</tbody></table>
<p>How many solutions has this equation for 1 ≤ n ≤ 9?</p>
<hr>
<p><b>解不定方程<sup>1</sup>/<sub>a</sub>+<sup>1</sup>/<sub>b</sub>= <sup>p</sup>/<sub>10<sup>n</sup></sub> </b></p>
<p>考虑不定方程<sup>1</sup>/<sub>a</sub>+<sup>1</sup>/<sub>b</sub>= <sup>p</sup>/<sub>10<sup>n</sup></sub>，其中a, b, p, n均为正整数，且a ≤ b。<br>对于n=1，这个方程有20个解，如下所示：</p>
<table>
<thead>
<tr>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><sup>1</sup>/<sub>1</sub>+<sup>1</sup>/<sub>1</sub>=<sup>20</sup>/<sub>10</sub></td>
<td align="center"><sup>1</sup>/<sub>1</sub>+<sup>1</sup>/<sub>2</sub>=<sup>15</sup>/<sub>10</sub></td>
<td align="center"><sup>1</sup>/<sub>1</sub>+<sup>1</sup>/<sub>5</sub>=<sup>12</sup>/<sub>10</sub></td>
<td align="center"><sup>1</sup>/<sub>1</sub>+<sup>1</sup>/<sub>10</sub>=<sup>11</sup>/<sub>10</sub></td>
<td align="center"><sup>1</sup>/<sub>2</sub>+<sup>1</sup>/<sub>2</sub>=<sup>10</sup>/<sub>10</sub></td>
</tr>
<tr>
<td align="center"><sup>1</sup>/<sub>2</sub>+<sup>1</sup>/<sub>5</sub>=<sup>7</sup>/<sub>10</sub></td>
<td align="center"><sup>1</sup>/<sub>2</sub>+<sup>1</sup>/<sub>10</sub>=<sup>6</sup>/<sub>10</sub></td>
<td align="center"><sup>1</sup>/<sub>3</sub>+<sup>1</sup>/<sub>6</sub>=<sup>5</sup>/<sub>10</sub></td>
<td align="center"><sup>1</sup>/<sub>3</sub>+<sup>1</sup>/<sub>15</sub>=<sup>4</sup>/<sub>10</sub></td>
<td align="center"><sup>1</sup>/<sub>4</sub>+<sup>1</sup>/<sub>4</sub>=<sup>5</sup>/<sub>10</sub></td>
</tr>
<tr>
<td align="center"><sup>1</sup>/<sub>4</sub>+<sup>1</sup>/<sub>20</sub>=<sup>3</sup>/<sub>10</sub></td>
<td align="center"><sup>1</sup>/<sub>5</sub>+<sup>1</sup>/<sub>5</sub>=<sup>4</sup>/<sub>10</sub></td>
<td align="center"><sup>1</sup>/<sub>5</sub>+<sup>1</sup>/<sub>10</sub>=<sup>3</sup>/<sub>10</sub></td>
<td align="center"><sup>1</sup>/<sub>6</sub>+<sup>1</sup>/<sub>30</sub>=<sup>2</sup>/<sub>10</sub></td>
<td align="center"><sup>1</sup>/<sub>10</sub>+<sup>1</sup>/<sub>10</sub>=<sup>2</sup>/<sub>10</sub></td>
</tr>
<tr>
<td align="center"><sup>1</sup>/<sub>11</sub>+<sup>1</sup>/<sub>110</sub>=<sup>1</sup>/<sub>10</sub></td>
<td align="center"><sup>1</sup>/<sub>12</sub>+<sup>1</sup>/<sub>60</sub>=<sup>1</sup>/<sub>10</sub></td>
<td align="center"><sup>1</sup>/<sub>14</sub>+<sup>1</sup>/<sub>35</sub>=<sup>1</sup>/<sub>10</sub></td>
<td align="center"><sup>1</sup>/<sub>15</sub>+<sup>1</sup>/<sub>30</sub>=<sup>1</sup>/<sub>10</sub></td>
<td align="center"><sup>1</sup>/<sub>20</sub>+<sup>1</sup>/<sub>20</sub>=<sup>1</sup>/<sub>10</sub></td>
</tr>
</tbody></table>
<p>对于1 ≤ n ≤ 9，方程一共有多少个解？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 159</title>
    <url>/159/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-159"><a href="#Problem-159" class="headerlink" title="Problem 159"></a><a href="https://projecteuler.net/problem=159">Problem 159</a></h1><hr>
<p><b>Digital root sums of factorisations</b></p>
<p>A composite number can be factored many different ways. For instance, not including multiplication by one, 24 can be factored in 7 distinct ways:</p>
<p>24 = 2x2x2x3<br>24 = 2x3x4<br>24 = 2x2x6<br>24 = 4x6<br>24 = 3x8<br>24 = 2x12<br>24 = 24</p>
<p>Recall that the digital root of a number, in base 10, is found by adding together the digits of that number, and repeating that process until a number is arrived at that is less than 10. Thus the digital root of 467 is 8.</p>
<p>We shall call a Digital Root Sum (DRS) the sum of the digital roots of the individual factors of our number.<br>The chart below demonstrates all of the DRS values for 24.</p>
<table>
<thead>
<tr>
<th align="center">Factorisation</th>
<th align="center">Digital Root Sum</th>
</tr>
</thead>
<tbody><tr>
<td align="center">2x2x2x3</td>
<td align="center">9</td>
</tr>
<tr>
<td align="center">2x3x4</td>
<td align="center">9</td>
</tr>
<tr>
<td align="center">2x2x6</td>
<td align="center">10</td>
</tr>
<tr>
<td align="center">4x6</td>
<td align="center">10</td>
</tr>
<tr>
<td align="center">3x8</td>
<td align="center">11</td>
</tr>
<tr>
<td align="center">2x12</td>
<td align="center">5</td>
</tr>
<tr>
<td align="center">24</td>
<td align="center">6</td>
</tr>
</tbody></table>
<p>The maximum Digital Root Sum  of 24 is 11.<br>The function mdrs(n) gives the maximum Digital Root Sum of n. So  mdrs(24)=11.<br>Find ∑mdrs(n) for 1 &lt; n &lt; 1,000,000.</p>
<hr>
<p><b>分解约数数字根之和</b></p>
<p>每个合数都有很多种分解约数的方式。例如，如果不允许多次乘1，有7种不同的方式分解24的约数：</p>
<p>24 = 2x2x2x3<br>24 = 2x3x4<br>24 = 2x2x6<br>24 = 4x6<br>24 = 3x8<br>24 = 2x12<br>24 = 24</p>
<p>在十进制下，一个数的数字根是不断重复将其各位数字相加，直到得到的结果小于10为止。因此467的数字根是8。</p>
<p>我们记数字根和（DRS）是所有分解出的约数的数字根之和。<br>下表是24的所有约数分解的DRS值。</p>
<table>
<thead>
<tr>
<th align="center">约数分解</th>
<th align="center">数字根和</th>
</tr>
</thead>
<tbody><tr>
<td align="center">2x2x2x3</td>
<td align="center">9</td>
</tr>
<tr>
<td align="center">2x3x4</td>
<td align="center">9</td>
</tr>
<tr>
<td align="center">2x2x6</td>
<td align="center">10</td>
</tr>
<tr>
<td align="center">4x6</td>
<td align="center">10</td>
</tr>
<tr>
<td align="center">3x8</td>
<td align="center">11</td>
</tr>
<tr>
<td align="center">2x12</td>
<td align="center">5</td>
</tr>
<tr>
<td align="center">24</td>
<td align="center">6</td>
</tr>
</tbody></table>
<p>对于24的所有分解，最大的数字根和是11。<br>函数mdrs(n)表示对于n的不同分解最大的数字根和。因此mdrs(24)=11。<br>对于1 &lt; n &lt; 1,000,000，求∑mdrs(n)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 16</title>
    <url>/16/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-16"><a href="#Problem-16" class="headerlink" title="Problem 16"></a><a href="https://projecteuler.net/problem=16">Problem 16</a></h1><hr>
<h2 id="Power-Digit-Sum"><a href="#Power-Digit-Sum" class="headerlink" title="Power Digit Sum"></a><strong>Power Digit Sum</strong></h2><p>$2^{15}=32768$ and the sum of its digits is $3 + 2 + 7 + 6 + 8 = 26$.</p>
<p>What is the sum of the digits of the number $2^{1000}$?</p>
<hr>
<h2 id="幂的数字和"><a href="#幂的数字和" class="headerlink" title="幂的数字和"></a><strong>幂的数字和</strong></h2><p>$2^{15}=32768$，而$32768$的各位数字之和是 $3 + 2 + 7 + 6 + 8 = 26$。</p>
<p>$2^{1000}$的各位数字之和是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 161</title>
    <url>/161/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-161"><a href="#Problem-161" class="headerlink" title="Problem 161"></a><a href="https://projecteuler.net/problem=161">Problem 161</a></h1><hr>
<p><b>Triominoes</b></p>
<p>A triomino is a shape consisting of three squares joined via the edges. There are two basic forms:</p>
<center><img src="/resources/images/0161_trio1.gif"></center>

<p>If all possible orientations are taken into account there are six:</p>
<center><img src="/resources/images/0161_trio3.gif"></center>

<p>Any n by m grid for which nxm is divisible by 3 can be tiled with triominoes.<br>If we consider tilings that can be obtained by reflection or rotation from another tiling as different there are 41 ways a 2 by 9 grid can be  tiled with triominoes:</p>
<center><img src="/resources/images/0161_k9.gif"></center>

<p>In how many ways can a 9 by 12 grid be tiled in this way by triominoes?</p>
<hr>
<p><b>三联骨牌</b></p>
<p>三联骨牌是由三个正方形方块拼接而成的骨牌，它一共有两种基本形状：</p>
<center><img src="/resources/images/0161_trio1.gif"></center>

<p>如果计入旋转，则一共有六种可能的形状：</p>
<center><img src="/resources/images/0161_trio3.gif"></center>

<p>任何n乘m的方阵，只要nxm能够被3整除，就能用三联骨牌拼出来。<br>如果我们认为翻转或旋转是不同的拼法，那一个2乘9的方阵有一共有41种拼法：</p>
<center><img src="/resources/images/0161_k9.gif"></center>

<p>一个9乘12的方阵有多少种拼法？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 160</title>
    <url>/160/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-160"><a href="#Problem-160" class="headerlink" title="Problem 160"></a><a href="https://projecteuler.net/problem=160">Problem 160</a></h1><hr>
<p><b>Factorial trailing digits</b></p>
<p>For any N, let f(N) be the last five digits before the trailing zeroes in N!.<br>For example,</p>
<p>9! = 362880 so f(9)=36288<br>10! = 3628800 so f(10)=36288<br>20! = 2432902008176640000 so f(20)=17664</p>
<p>Find f(1,000,000,000,000)</p>
<hr>
<p><b>阶乘的尾数</b></p>
<p>对于任意N，记f(N)为N!除去末尾零后的最后五位数字。<br>例如，</p>
<p>9! = 362880，所以f(9)=36288<br>10! = 3628800，所以f(10)=36288<br>20! = 2432902008176640000，所以f(20)=17664</p>
<p>求f(1,000,000,000,000)</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 162</title>
    <url>/162/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-162"><a href="#Problem-162" class="headerlink" title="Problem 162"></a><a href="https://projecteuler.net/problem=162">Problem 162</a></h1><hr>
<p><b>Hexadecimal numbers</b></p>
<p>In  the hexadecimal number system numbers are represented using 16 different digits:</p>
<center>0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F</center>

<p>The hexadecimal number AF when written in the decimal number system equals 10x16+15=175.</p>
<p>In the 3-digit hexadecimal numbers 10A, 1A0, A10, and A01 the digits 0,1 and A are all present.<br>Like numbers written in base ten we write hexadecimal numbers without leading zeroes.</p>
<p>How many hexadecimal numbers containing at most sixteen hexadecimal digits exist with all of the digits 0,1, and A present at least once?<br>Give your answer as a hexadecimal number.</p>
<p>(A,B,C,D,E and F in upper case, without any leading or trailing code that marks the number as hexadecimal and without leading zeroes , e.g. 1A3F and not: 1a3f and not 0x1a3f and not $1A3F and not #1A3F and not 0000001A3F)</p>
<hr>
<p><b>十六进制数</b></p>
<p>十六进制数系统使用16个不同的数字：</p>
<center>0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F</center>

<p>十六进制数AF在十进制下等于10x16+15=175。</p>
<p>三位十六进制数10A，1A0，A10和A01都包含数字0，1和A。<br>和十进制下一样，在十六进制中没有前导零。</p>
<p>有多少至多十六位的十六进制数同时包含0，1和A？<br>用十六进制数表示你的答案。</p>
<p>（A,B,C,D,E和F均为大写字母，没有前导零或末尾标识符来表明该数字为十六进制，例如，1A3F不能写成:1a3f或0x1a3f或$1A3F或#1A3F或0000001A3F）</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 163</title>
    <url>/163/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-163"><a href="#Problem-163" class="headerlink" title="Problem 163"></a><a href="https://projecteuler.net/problem=163">Problem 163</a></h1><hr>
<p><b>Cross-hatched triangles</b></p>
<p>Consider an equilateral triangle in which straight lines are drawn from each vertex to the middle of the opposite side, such as in the size 1 triangle in the sketch below.</p>
<center><img src="/resources/images/0163.gif"></center>

<p>Sixteen triangles of either different shape or size or orientation or location can now be observed in that triangle. Using size 1 triangles as building blocks, larger triangles can be formed, such as the size 2 triangle in the above sketch. One-hundred and four triangles of either different shape or size or orientation or location can now be observed in that size 2 triangle.</p>
<p>It can be observed that the size 2 triangle contains 4 size 1 triangle building blocks. A size 3 triangle would contain 9 size 1 triangle building blocks and a size n triangle would thus contain n<sup>2</sup> size 1 triangle building blocks.</p>
<p>If we denote T(n) as the number of triangles present in a triangle of size n, then</p>
<p>T(1) = 16<br>T(2) = 104</p>
<p>Find T(36).</p>
<hr>
<p><b>纵横交错的三角形</b></p>
<p>考虑一个等边三角形，从三角形的每个顶点向对边的中点引一条线段，构成如下图所示的1级三角形。</p>
<center><img src="/resources/images/0163.gif"></center>

<p>我们可以从这个三角形中数出16个不同形状、不同大小、不同方向、不同位置的三角形。使用1级三角形作为材料，我们可以构成更大的三角形，比如右边的2级三角形。在2级三角形中可以输出一百零四个不同形状、不同大小、不同方向、不同位置的三角形。</p>
<p>可以看出一个2级三角形包含有4个1级三角形。一个3级三角形包含有9个1级三角形，而一个n级三角形包含有n<sup>2</sup>个1级三角形。</p>
<p>如果我们用T(n)表示n级三角形中能够数出的三角形个数，那么</p>
<p>T(1) = 16<br>T(2) = 104</p>
<p>求T(36)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 165</title>
    <url>/165/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-165"><a href="#Problem-165" class="headerlink" title="Problem 165"></a><a href="https://projecteuler.net/problem=165">Problem 165</a></h1><hr>
<p><b>Intersections</b></p>
<p>A segment is uniquely defined by its two endpoints. By considering two line segments in plane geometry there are three possibilities:<br>the segments have zero points, one point, or infinitely many points in common.</p>
<p>Moreover when two segments have exactly one point in common it might be the case that that common point is an endpoint of either one of the segments or of both. If a common point of two segments is not an endpoint of either of the segments it is an interior point of both segments.<br>We will call a common point T of two segments L<sub>1</sub> and L<sub>2</sub> a true intersection point of L<sub>1</sub> and L<sub>2</sub>  if T is the only common point of L<sub>1</sub> and L<sub>2</sub>  and T is an interior point of both segments.</p>
<p>Consider the three segments L<sub>1</sub>, L<sub>2</sub>, and L<sub>3</sub>:</p>
<p>L<sub>1</sub>: (27, 44) to (12, 32)<br>L<sub>2</sub>: (46, 53) to (17, 62)<br>L<sub>3</sub>: (46, 70) to (22, 40)</p>
<p>It can be verified that line segments L<sub>2</sub> and L<sub>3</sub> have a true intersection point. We note that as the one of the end points of L<sub>3</sub>: (22,40) lies on L<sub>1</sub> this is not considered to be a true point of intersection. L<sub>1</sub> and L<sub>2</sub> have no common point. So among the three line segments, we find one true intersection point.</p>
<p>Now let us do the same for 5000 line segments. To this end, we generate 20000 numbers using the so-called “Blum Blum Shub” pseudo-random number generator.</p>
<p>s<sub>0</sub> = 290797<br>s<sub>n+1</sub> = s<sub>n</sub>×s<sub>n</sub> (modulo 50515093)<br>t<sub>n</sub> = s<sub>n</sub> (modulo 500)</p>
<p>To create each line segment, we use four consecutive numbers t<sub>n</sub>. That is, the first line segment is given by:</p>
<p>(t<sub>1</sub>, t<sub>2</sub>) to (t<sub>3</sub>, t<sub>4</sub>)</p>
<p>The first four numbers computed according to the above generator should be: 27, 144, 12 and 232. The first segment would thus be (27,144) to (12,232).</p>
<p>How many distinct true intersection points are found among the 5000 line segments?</p>
<hr>
<p><b>交点</b></p>
<p>一条线段由其两个端点唯一决定。考虑平面几何中的两条线段，一共有如下三种可能性：<br>两条线段没有、有一个或者有无数个交点。</p>
<p>进一步地，当两条线段恰好有一个交点时，可能这个交点是其中一条或两条的端点。如果这个交点不是任一条线段的端点，那它一定是这两条线段的内点。<br>当两条线段L<sub>1</sub>和L<sub>2</sub>的交点T是这两条线段唯一的交点且是这两条线段的内点时，我们称T为这两条线段的真交点。</p>
<p>考虑以下三条线段L<sub>1</sub>，L<sub>2</sub>和L<sub>3</sub>：</p>
<p>L<sub>1</sub>: (27, 44) to (12, 32)<br>L<sub>2</sub>: (46, 53) to (17, 62)<br>L<sub>3</sub>: (46, 70) to (22, 40)</p>
<p>可以验证，线段L<sub>2</sub>和L<sub>3</sub>有一个真交点。注意到L<sub>3</sub>的一个端点(22,40)恰好在L<sub>1</sub>上，因此这不是一个真交点。L<sub>1</sub>和L<sub>2</sub>则没有交点。因此在这三条线段中，一共有一个真交点。</p>
<p>现在我们来对5000条线段求真交点数。首先，我们用“布鲁姆-布鲁姆-舒布”伪随机数生成算法生成20000个数。</p>
<p>s<sub>0</sub> = 290797<br>s<sub>n+1</sub> = s<sub>n</sub>×s<sub>n</sub> (modulo 50515093)<br>t<sub>n</sub> = s<sub>n</sub> (modulo 500)</p>
<p>为了生成每一条线段，我们使用t<sub>n</sub>的连续四项，也就是说，第一条线段是：</p>
<p>(t<sub>1</sub>, t<sub>2</sub>)至(t<sub>3</sub>, t<sub>4</sub>)</p>
<p>由上述算法生成的前四个数是：27，144，12和232，因此第一条线段是(27,144)至(12,232)。</p>
<p>在这5000条线段中，有多少个真交点？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 164</title>
    <url>/164/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-164"><a href="#Problem-164" class="headerlink" title="Problem 164"></a><a href="https://projecteuler.net/problem=164">Problem 164</a></h1><hr>
<p><b>Numbers for which no three consecutive digits have a sum greater than a given value</b></p>
<p>How many 20 digit numbers n (without any leading zero) exist such that no three consecutive digits of n have a sum greater than 9?</p>
<hr>
<p><b>没有连续三位数字的和超过给定值的数</b></p>
<p>有多少个20位数字n（不包括前导0）满足，不存在连续三位数字的和超过9？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 166</title>
    <url>/166/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-166"><a href="#Problem-166" class="headerlink" title="Problem 166"></a><a href="https://projecteuler.net/problem=166">Problem 166</a></h1><hr>
<h2 id="Criss-Cross"><a href="#Criss-Cross" class="headerlink" title="Criss Cross"></a><strong>Criss Cross</strong></h2><p>A $4\times 4$ grid is filled with digits $d$, $0 \le d \le 9$.</p>
<p>It can be seen that in the grid</p>
<p>$$\begin{matrix}<br>6 &amp; 3 &amp; 3 &amp; 0 \\<br>5 &amp; 0 &amp; 4 &amp; 3 \\<br>0 &amp; 7 &amp; 1 &amp; 4 \\<br>1 &amp; 2 &amp; 4 &amp; 5 \\<br>\end{matrix}$$</p>
<p>the sum of each row and each column has the value $12$. Moreover the sum of each diagonal is also $12$.</p>
<p>In how many ways can you fill a $4\times 4$ grid with the digits $d$, $0 \le d \le 9$ so that each row, each column, and both diagonals have the same sum?</p>
<hr>
<h2 id="纵横交错"><a href="#纵横交错" class="headerlink" title="纵横交错"></a><strong>纵横交错</strong></h2><p>一个$4\times 4$方阵填满了$0\le  d\le  9$的数字。</p>
<p>可以看出，在如下方阵中</p>
<p>$$\begin{matrix}<br>6 &amp; 3 &amp; 3 &amp; 0 \\<br>5 &amp; 0 &amp; 4 &amp; 3 \\<br>0 &amp; 7 &amp; 1 &amp; 4 \\<br>1 &amp; 2 &amp; 4 &amp; 5 \\<br>\end{matrix}$$</p>
<p>每一行和每一列的和都是$12$，而且对角线上的数字和也都是$12$。</p>
<p>在$4\times 4$方阵中填入$0 \le d \le 9$的数字，要使得每一行、每一列和对角线上的和都是相同的数，有多少种填法？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 167</title>
    <url>/167/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-167"><a href="#Problem-167" class="headerlink" title="Problem 167"></a><a href="https://projecteuler.net/problem=167">Problem 167</a></h1><hr>
<p><b>Investigating Ulam sequences</b></p>
<p>For two positive integers a and b, the Ulam sequence U(a,b) is defined by U(a,b)<sub>1</sub> = a, U(a,b)<sub>2</sub> = b and for k &gt; 2,<br>U(a,b)<sub>k</sub> is the smallest integer greater than U(a,b)<sub>(k-1)</sub> which can be written in exactly one way as the sum of two distinct previous members of U(a,b).</p>
<p>For example, the sequence U(1,2) begins with<br>1, 2, 3 = 1 + 2, 4 = 1 + 3, 6 = 2 + 4, 8 = 2 + 6, 11 = 3 + 8;<br>5 does not belong to it because 5 = 1 + 4 = 2 + 3 has two representations as the sum of two previous members, likewise 7 = 1 + 6 = 3 + 4.</p>
<p>Find ∑U(2,2n+1)<sub>k</sub> for 2 ≤ n ≤10, where k = 10<sup>11</sup>.</p>
<hr>
<p><b>乌拉姆序列研究</b></p>
<p>任取两个正整数a和b，乌拉姆序列U(a,b)按如下方式定义：U(a,b)<sub>1</sub> = a，U(a,b)<sub>2</sub> = b，对于k &gt; 2，U(a,b)<sub>k</sub>是比U(a,b)<sub>(k-1)</sub>更大，且存在用U(a,b)之前的这些项中的不同两项之和唯一表示的最小整数。</p>
<p>例如，序列U(1,2)的开头部分如下所示<br>1, 2, 3 = 1 + 2, 4 = 1 + 3, 6 = 2 + 4, 8 = 2 + 6, 11 = 3 + 8;<br>5不在这个序列是，因为5 = 1 + 4 = 2 + 3，有两种表示方法，同样地7也是如此因为7 = 1 + 6 = 3 + 4。</p>
<p>对于2 ≤ n ≤10，求∑U(2,2n+1)<sub>k</sub>，其中k = 10<sup>11</sup>.</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 168</title>
    <url>/168/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-168"><a href="#Problem-168" class="headerlink" title="Problem 168"></a><a href="https://projecteuler.net/problem=168">Problem 168</a></h1><hr>
<p><b>Number Rotations</b></p>
<p>Consider the number 142857. We can right-rotate this number by moving the last digit (7) to the front of it, giving us 714285.<br>It can be verified that 714285=5×142857.<br>This demonstrates an unusual property of 142857: it is a divisor of its right-rotation.</p>
<p>Find the last 5 digits of the sum of all integers n, 10 &lt; n &lt; 10<sup>100</sup>, that have this property.</p>
<hr>
<p><b>数字轮换</b></p>
<p>考虑数142857，我们可以将它的数字右移一位并把最后一个数字7放到最前面，得到714285。<br>可以验证714285=5×142857。<br>这表明了142857的一个特殊性质：它右移一位并把末位数字移至最前得到的数是它的倍数。</p>
<p>找出所有10 &lt; n &lt; 10<sup>100</sup>范围内满足这一性质的整数n，求它们的和的最后五位数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 17</title>
    <url>/17/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-17"><a href="#Problem-17" class="headerlink" title="Problem 17"></a><a href="https://projecteuler.net/problem=17">Problem 17</a></h1><hr>
<h2 id="Number-Letter-Counts"><a href="#Number-Letter-Counts" class="headerlink" title="Number Letter Counts"></a><strong>Number Letter Counts</strong></h2><p>If the numbers $1$ to $5$ are written out in words: one, two, three, four, five, then there are $3 + 3 + 5 + 4 + 4 = 19$ letters used in total.</p>
<p>If all the numbers from $1$ to $1000$ (one thousand) inclusive were written out in words, how many letters would be used? </p>
<p><strong>NOTE:</strong> Do not count spaces or hyphens. For example, $342$ (three hundred and forty-two) contains $23$ letters and $115$ (one hundred and fifteen) contains $20$ letters. The use of “and” when writing out numbers is in compliance with British usage.</p>
<hr>
<h2 id="整数英文表达的字母计数"><a href="#整数英文表达的字母计数" class="headerlink" title="整数英文表达的字母计数"></a><strong>整数英文表达的字母计数</strong></h2><p>把$1$到$5$写成英文单词分别是：one、two、three、four、five。这些单词一共用了$3 + 3 + 5 + 4 + 4 = 19$个字母。</p>
<p>如果把$1$到$1000$都写成英文单词，一共要用多少个字母？</p>
<p><strong>注意：</strong> 不计入空格和连字符：例如，$342$（three hundred and forty-two）包含$23$个字母，而$115$（one hundred and fifteen）包含$20$个字母。单词“and”的使用方式遵循英式英语的规则。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 169</title>
    <url>/169/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-169"><a href="#Problem-169" class="headerlink" title="Problem 169"></a><a href="https://projecteuler.net/problem=169">Problem 169</a></h1><hr>
<p><b>Exploring the number of different ways a number can be expressed as a sum of powers of 2</b></p>
<p>Define f(0)=1 and f(n) to be the number of different ways n can be expressed as a sum of integer powers of 2 using each power no more than twice.</p>
<p>For example, f(10)=5 since there are five different ways to express 10:</p>
<p>1 + 1 + 8<br>1 + 1 + 4 + 41 + 1 + 2 + 2 + 4<br>2 + 4 + 4<br>2 + 8</p>
<p>What is f(10<sup>25</sup>)?</p>
<hr>
<p><b>探索将数表达为2的幂之和的方式数目</b></p>
<p>记f(0)=1，f(n)是将n表达为2的幂之和，且不同的幂至多使用两次的方式数目。</p>
<p>例如，f(10)=5，即有五种不同的方式表示10：</p>
<p>1 + 1 + 8<br>1 + 1 + 4 + 41 + 1 + 2 + 2 + 4<br>2 + 4 + 4<br>2 + 8</p>
<p>求f(10<sup>25</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 170</title>
    <url>/170/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-170"><a href="#Problem-170" class="headerlink" title="Problem 170"></a><a href="https://projecteuler.net/problem=170">Problem 170</a></h1><hr>
<p><b>Find the largest 0 to 9 pandigital that can be formed by concatenating products</b></p>
<p>Take the number 6 and multiply it by each of 1273 and 9854:</p>
<p>6 × 1273 =  7638<br>6 × 9854 = 59124</p>
<p>By concatenating these products we get the 1 to 9 pandigital 763859124. We will call 763859124 the “concatenated product of 6 and (1273,9854)”. Notice too, that the concatenation of the input numbers, 612739854, is also 1 to 9 pandigital.</p>
<p>The same can be done for 0 to 9 pandigital numbers.</p>
<p>What is the largest 0 to 9 pandigital 10-digit concatenated product of an integer with two or more other integers, such that the concatenation of the input numbers is also a 0 to 9 pandigital 10-digit number?</p>
<hr>
<p><b>求用乘积拼接而成的最大0至9全数字数</b></p>
<p>将6分别乘以1273和9854：</p>
<p>6 × 1273 =  7638<br>6 × 9854 = 59124</p>
<p>连接这两个乘积我们得到1至9全数字数763859124.我们称763859124为“6和(1273,9854)乘积的连接”。注意到，被乘的这些数的连接612739854，同样也是1至9全数字数。</p>
<p>对于0至9全数字数也存在同样的可能。</p>
<p>在所有由一个整数和另外至少两个整数的乘积连接而成且被乘的整数连接起来也是0至9全数字数的0至9全数字数中，求其中最大的一个。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 173</title>
    <url>/173/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-173"><a href="#Problem-173" class="headerlink" title="Problem 173"></a><a href="https://projecteuler.net/problem=173">Problem 173</a></h1><hr>
<p><b>Using up to one million tiles how many different “hollow” square laminae can be formed?</b></p>
<p>We shall define a square lamina to be a square outline with a square “hole” so that the shape possesses vertical and horizontal symmetry. For example, using exactly thirty-two square tiles we can form two different square laminae:</p>
<center><img src="/resources/images/0173_square_laminas.gif"></center>

<p>With one-hundred tiles, and not necessarily using all of the tiles at one time, it is possible to form forty-one different square laminae.</p>
<p>Using up to one million tiles how many different square laminae can be formed?</p>
<hr>
<p><b>使用最多一百万块地砖能拼出多少种不同的“空心”方形基板？</b></p>
<p>我们定义一个方形基板为一个拥有方形外框，中间有一个方形的“洞”且在水平和竖直方向上均对称的图形。例如，使用恰好32块方形地砖，我们可以拼成两种不同的方形基板：</p>
<center><img src="/resources/images/0173_square_laminas.gif"></center>

<p>使用最多一百块地砖，我们能够拼出41种不同的方形基板。</p>
<p>使用最多一百万块地砖，能够拼出多少种不同的方形基板？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 171</title>
    <url>/171/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-171"><a href="#Problem-171" class="headerlink" title="Problem 171"></a><a href="https://projecteuler.net/problem=171">Problem 171</a></h1><hr>
<p><b>Finding numbers for which the sum of the squares of the digits is a square</b></p>
<p>For a positive integer n, let f(n) be the sum of the squares of the digits (in base 10) of n, e.g.</p>
<p>f(3) = 3<sup>2</sup> = 9,<br>f(25) = 2<sup>2</sup> + 5<sup>2</sup> = 4 + 25 = 29,<br>f(442) = 4<sup>2</sup> + 4<sup>2</sup> + 2<sup>2</sup> = 16 + 16 + 4 = 36</p>
<p>Find the last nine digits of the sum of all n, 0 &lt; n &lt; 10<sup>20</sup>, such that f(n) is a perfect square.</p>
<hr>
<p><b>寻找数字平方和为平方数的数</b></p>
<p>对于正整数n，记f(n)为n（十进制表示下）的各位数的平方和，例如</p>
<p>f(3) = 3<sup>2</sup> = 9,<br>f(25) = 2<sup>2</sup> + 5<sup>2</sup> = 4 + 25 = 29,<br>f(442) = 4<sup>2</sup> + 4<sup>2</sup> + 2<sup>2</sup> = 16 + 16 + 4 = 36</p>
<p>找出所有满足0 &lt; n &lt; 10<sup>20</sup>，且各位数字平方和为平方数的数n，求出它们的和的最后九位数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 175</title>
    <url>/175/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-175"><a href="#Problem-175" class="headerlink" title="Problem 175"></a><a href="https://projecteuler.net/problem=175">Problem 175</a></h1><hr>
<h2 id="Fractions-involving-the-number-of-different-ways-a-number-can-be-expressed-as-a-sum-of-powers-of-2"><a href="#Fractions-involving-the-number-of-different-ways-a-number-can-be-expressed-as-a-sum-of-powers-of-2" class="headerlink" title="Fractions involving the number of different ways a number can be expressed as a sum of powers of 2"></a><strong>Fractions involving the number of different ways a number can be expressed as a sum of powers of 2</strong></h2><p>Define $f(0)=1$ and $f(n)$ to be the number of ways to write $n$ as a sum of powers of $2$ where no power occurs more than twice. </p>
<p>For example, $f(10)=5$ since there are five different ways to express $10$:<br>$10 = 8+2 = 8+1+1 = 4+4+2 = 4+2+2+1+1 = 4+4+1+1$</p>
<p>It can be shown that for every fraction $p/q (p&gt;0, q&gt;0)$ there exists at least one integer $n$ such that $f(n)/f(n-1)=p/q$.</p>
<p>For instance, the smallest $n$ for which $f(n)/f(n-1)=13/17$ is $241$.</p>
<p>The binary expansion of $241$ is $11110001$.</p>
<p>Reading this binary number from the most significant bit to the least significant bit there are $4$ one’s, $3$ zeroes and $1$ one. We shall call the string $4,3,1$ the <i>Shortened Binary Expansion</i> of $241$.</p>
<p>Find the Shortened Binary Expansion of the smallest $n$ for which<br>$f(n)/f(n-1)=123456789/987654321$.</p>
<p>Give your answer as comma separated integers, without any whitespaces.</p>
<hr>
<h2 id="与幂和表示有关的分数"><a href="#与幂和表示有关的分数" class="headerlink" title="与幂和表示有关的分数"></a><strong>与幂和表示有关的分数</strong></h2><p>记$f(0)=1$，$f(n)$为将$n$写成$2$的幂次的和且任意幂次出现不超过两次的方式数。</p>
<p>例如，$f(10)=5$，因为$10$恰好有$5$种不同的表示方式：<br>$10 = 8+2 = 8+1+1 = 4+4+2 = 4+2+2+1+1 = 4+4+1+1$</p>
<p>对于任意分数$p/q$（其中整数$p&gt;0$，整数$q&gt;0$），我们都能找到至少一个整数$n$，使得$f(n)/f(n-1)=p/q$。</p>
<p>例如，使得$f(n)/f(n-1)=13/17$的最小的$n$是$241$。</p>
<p>$241$的二进制表示为$11110001$。</p>
<p>从左往右读这个二进制串我们得到$4$个$1$，$3$个$0$，再$1$个$1$。因此，我们称数字串$4,3,1$是$241$的<i class=zh>简式二进制表示</i>。</p>
<p>找出满足下式的最小的$n$的简式二进制表示：<br>$f(n)/f(n-1)=123456789/987654321$.</p>
<p>你的答案应当用半角逗号“,”隔开各个整数，且没有任何空格。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 174</title>
    <url>/174/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-174"><a href="#Problem-174" class="headerlink" title="Problem 174"></a><a href="https://projecteuler.net/problem=174">Problem 174</a></h1><hr>
<p><b>Counting the number of “hollow” square laminae that can form one, two, three, … distinct arrangements</b></p>
<p>We shall define a square lamina to be a square outline with a square “hole” so that the shape possesses vertical and horizontal symmetry.</p>
<p>Given eight tiles it is possible to form a lamina in only one way: 3x3 square with a 1x1 hole in the middle. However, using thirty-two tiles it is possible to form two distinct laminae.</p>
<center><img src="/resources/images/0173_square_laminas.gif"></center>

<p>If t represents the number of tiles used, we shall say that t = 8 is type L(1) and t = 32 is type L(2).</p>
<p>Let N(n) be the number of t ≤ 1000000 such that t is type L(n); for example, N(15) = 832.</p>
<p>What is ∑ N(n) for 1 ≤ n ≤ 10?</p>
<hr>
<p><b>能组成一种、两种、三种……不同方形基板的地砖数计数</b></p>
<p>我们定义一个方形基板为一个拥有方形外框，中间有一个方形的“洞”且在水平和竖直方向上均对称的图形。</p>
<p>用八块地砖我们只能拼出一种方形基板：一个3x3的方格，正中间有一个1x1的洞。然而，用32块地砖，我们能够拼出两种不同的方形基板。</p>
<center><img src="/resources/images/0173_square_laminas.gif"></center>

<p>如果用t代表使用的地砖数，我们称t = 8是L(1)型的，而t = 32是L(2)型的。</p>
<p>记N(n)为满足t ≤ 1000000且为L(n)型的t的个数；例如，N(15) = 832。</p>
<p>对于1 ≤ n ≤ 10，求∑ N(n)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 172</title>
    <url>/172/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-172"><a href="#Problem-172" class="headerlink" title="Problem 172"></a><a href="https://projecteuler.net/problem=172">Problem 172</a></h1><hr>
<p><b>Investigating numbers with few repeated digits</b></p>
<p>How many 18-digit numbers n (without leading zeros) are there such that no digit occurs more than three times in n?</p>
<hr>
<p><b>关于有少量重复数字的数的研究</b></p>
<p>有多少个18位数n（不考虑前导零）满足在n中没有一个数字出现超过三次？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 177</title>
    <url>/177/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-177"><a href="#Problem-177" class="headerlink" title="Problem 177"></a><a href="https://projecteuler.net/problem=177">Problem 177</a></h1><hr>
<p><strong>Integer angled Quadrilaterals</strong></p>
<p>Let ABCD be a convex quadrilateral, with diagonals AC and BD. At each vertex the diagonal makes an angle with each of the two sides, creating eight corner angles.</p>
<center><img src="/resources/images/0177_quad.gif"></center>

<p>For example, at vertex A, the two angles are CAD, CAB.</p>
<p>We call such a quadrilateral for which all eight corner angles have integer values when measured in degrees an “integer angled quadrilateral”. An example of an integer angled quadrilateral is a square, where all eight corner angles are 45°. Another example is given by DAC = 20°, BAC = 60°, ABD = 50°, CBD = 30°, BCA = 40°, DCA = 30°, CDB = 80°, ADB = 50°.</p>
<p>What is the total number of non-similar integer angled quadrilaterals?</p>
<p>Note: In your calculations you may assume that a calculated angle is integral if it is within a tolerance of 10<sup>-9</sup> of an integer value.</p>
<hr>
<p><strong>整数角度四边形</strong></p>
<p>ABCD是一个凸四边形，对角线为AC和BD。在四边形的每个顶点，对角线和相邻的两条边各构成一个角，总共构成八个这样的角。</p>
<center><img src="/resources/images/0177_quad.gif"></center>

<p>例如，在顶点A的两个角分别为角CAD和角CAB。</p>
<p>当一个四边形的所有八个角均为整数角度时，我们称其为“整数角度四边形”。一个整数角度四边形的例子是正方形，它的八个角都是45°。另一个例子是DAC = 20°, BAC = 60°, ABD = 50°, CBD = 30°, BCA = 40°, DCA = 30°, CDB = 80°, ADB = 50°。</p>
<p>不考虑相似，整数角度四边形的总数是多少？</p>
<p>注意：在你的计算中，你可以假定一个角的的角度为整数，如果它与一个整数值的误差在10<sup>-9</sup>以内。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 176</title>
    <url>/176/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-176"><a href="#Problem-176" class="headerlink" title="Problem 176"></a><a href="https://projecteuler.net/problem=176">Problem 176</a></h1><hr>
<p><strong>Right-angled triangles that share a cathetus</strong></p>
<p>The four right-angled triangles with sides (9,12,15), (12,16,20), (5,12,13) and (12,35,37) all have one of the shorter sides (catheti) equal to 12. It can be shown that no other integer sided right-angled triangle exists with one of the catheti equal to 12.</p>
<p>Find the smallest integer that can be the length of a cathetus of exactly 47547 different integer sided right-angled triangles.</p>
<hr>
<p><strong>拥有等长直角边的直角三角形</strong></p>
<p>如下四个直角三角形，三边长分别为(9,12,15)，(12,16,20)，(5,12,13)和(12,35,37)，均有一条直角边长为12。可以证明不存在其它整数边长直角三角形拥有一条长为12的直角边。</p>
<p>找出使得恰好有47547个不同的整数边长直角三角形拥有该长度直角边的最小整数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 178</title>
    <url>/178/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-178"><a href="#Problem-178" class="headerlink" title="Problem 178"></a><a href="https://projecteuler.net/problem=178">Problem 178</a></h1><hr>
<p><strong>Step Numbers</strong></p>
<p>Consider the number 45656.<br>It can be seen that each pair of consecutive digits of 45656 has a difference of one.<br>A number for which every pair of consecutive digits has a difference of one is called a step number.<br>A pandigital number  contains every decimal digit from 0 to 9 at least once.</p>
<p>How many pandigital step numbers less than 10<sup>40</sup> are there?</p>
<hr>
<p><strong>台阶数</strong></p>
<p>考虑整数45656。<br>可以看出45656的每一对相邻数字之间都差1。<br>这种任意一对相邻数字之间都差1的数称为台阶数。<br>一个全数字数包含有0到9这10个数字至少各一次。</p>
<p>在小于10<sup>40</sup>的数中，有多少个全数字台阶数？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 18</title>
    <url>/18/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-18"><a href="#Problem-18" class="headerlink" title="Problem 18"></a><a href="https://projecteuler.net/problem=18">Problem 18</a></h1><hr>
<h2 id="Maximum-Path-Sum-I"><a href="#Maximum-Path-Sum-I" class="headerlink" title="Maximum Path Sum I"></a><strong>Maximum Path Sum I</strong></h2><p>By starting at the top of the triangle below and moving to adjacent numbers on the row below, the maximum total from top to bottom is $23$.</p>
<center style="font-family:'Courier New',monospace;"><span style="color:#ff0000;"><b>3</b></span><br />
<span style="color:#ff0000;"><b>7</b></span> 4<br />
2 <span style="color:#ff0000;"><b>4</b></span> 6<br />
8 5 <span style="color:#ff0000;"><b>9</b></span> 3<br />
</center>

<p>That is, $3 + 7 + 4 + 9 = 23$.</p>
<p>Find the maximum total from top to bottom of the triangle below:</p>
<center style="font-family:'Courier New',monospace;">
75<br />
95 64<br />
17 47 82<br />
18 35 87 10<br />
20 04 82 47 65<br />
19 01 23 75 03 34<br />
88 02 77 73 07 63 67<br />
99 65 04 28 06 16 70 92<br />
41 41 26 56 83 40 80 70 33<br />
41 48 72 33 47 32 37 16 94 29<br />
53 71 44 65 25 43 91 52 97 51 14<br />
70 11 33 28 77 73 17 78 39 68 17 57<br />
91 71 52 38 17 14 91 43 58 50 27 29 48<br />
63 66 04 68 89 53 67 30 73 16 69 87 40 31<br />
04 62 98 27 23 09 70 98 73 93 38 53 60 04 23<br />
</center>

<p><strong>NOTE:</strong> As there are only $16384$ routes, it is possible to solve this problem by trying every route. However, <a href="/67">Problem 67</a>, is the same challenge with a triangle containing one-hundred rows; it cannot be solved by brute force, and requires a clever method! ;o)</p>
<hr>
<h2 id="最大路径和（一）"><a href="#最大路径和（一）" class="headerlink" title="最大路径和（一）"></a><strong>最大路径和（一）</strong></h2><p>从如下数字三角形的顶端出发，不断移动到下一行与其相邻的数直至到达底部，所能得到的最大路径和是$23$。</p>
<center style="font-family:'Courier New',monospace;"><span style="color:#ff0000;"><b>3</b></span><br />
<span style="color:#ff0000;"><b>7</b></span> 4<br />
2 <span style="color:#ff0000;"><b>4</b></span> 6<br />
8 5 <span style="color:#ff0000;"><b>9</b></span> 3<br />
</center>

<p>如上图，最大路径和为$3 + 7 + 4 + 9 = 23$。</p>
<p>从如下数字三角形的顶端出发到达底部，求所能得到的最大路径和。</p>
<center style="font-family:'Courier New',monospace;">
75<br />
95 64<br />
17 47 82<br />
18 35 87 10<br />
20 04 82 47 65<br />
19 01 23 75 03 34<br />
88 02 77 73 07 63 67<br />
99 65 04 28 06 16 70 92<br />
41 41 26 56 83 40 80 70 33<br />
41 48 72 33 47 32 37 16 94 29<br />
53 71 44 65 25 43 91 52 97 51 14<br />
70 11 33 28 77 73 17 78 39 68 17 57<br />
91 71 52 38 17 14 91 43 58 50 27 29 48<br />
63 66 04 68 89 53 67 30 73 16 69 87 40 31<br />
04 62 98 27 23 09 70 98 73 93 38 53 60 04 23<br />
</center>

<p><strong>注意：</strong> 在这个问题中，由于只有$16384$条路径，通过穷举所有的路径来解决问题是可行的。然而，对于<a href="/67">第67题</a>，虽然是一道相同类型的题目，但是其中的数字三角形将拥有一百行，就不再能够通过暴力枚举的方法来解决，而需要一个更加聪明的办法！;o)</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 179</title>
    <url>/179/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-179"><a href="#Problem-179" class="headerlink" title="Problem 179"></a><a href="https://projecteuler.net/problem=179">Problem 179</a></h1><hr>
<p><strong>Consecutive positive divisors</strong></p>
<p>Find the number of integers 1 &lt; n &lt; 10<sup>7</sup>, for which n and n + 1 have the same number of positive divisors. For example, 14 has the positive divisors 1, 2, 7, 14 while 15 has 1, 3, 5, 15.</p>
<hr>
<p><strong>连续拥有同样数目正约数的数</strong></p>
<p>求满足1 &lt; n &lt; 10<sup>7</sup>且n和n + 1拥有同样数目正约数的整数n的数目。例如，14有4个正约数1, 2, 7, 14，而15也有4个正约数1, 3, 5, 15。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 180</title>
    <url>/180/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-180"><a href="#Problem-180" class="headerlink" title="Problem 180"></a><a href="https://projecteuler.net/problem=180">Problem 180</a></h1><hr>
<h2 id="Rational-zeros-of-a-function-of-three-variables"><a href="#Rational-zeros-of-a-function-of-three-variables" class="headerlink" title="Rational zeros of a function of three variables"></a><strong>Rational zeros of a function of three variables</strong></h2><p>For any integer $n$, consider the three functions</p>
<p>$$f_{1,n}(x,y,z)=x^{n+1}+y^{n+1}-z^{n+1}$$<br>$$f_{2,n}(x,y,z)=(xy+yz+zx)(x^{n-1}+y^{n-1}-z^{n-1})$$<br>$$f_{3,n}(x,y,z)=xyz(x^{n-2}+y^{n-2}-z^{n-2})$$</p>
<p>and their combination</p>
<p>$$f_n(x,y,z)=f_{1,n}(x,y,z)+f_{2,n}(x,y,z)-f_{3,n}(x,y,z)$$</p>
<p>We call $(x,y,z)$ a golden triple of order $k$ if $x$, $y$, and $z$ are all rational numbers of the form $a / b$ with $0 &lt;a &lt; b \le k$ and there is (at least) one integer $n$, so that $f_n(x,y,z) = 0$.</p>
<p>Let $s(x,y,z) = x + y + z$.<br>Let $t = u / v$ be the sum of all distinct $s(x,y,z)$ for all golden triples $(x,y,z)$ of order $35$.<br>All the $s(x,y,z)$ and $t$ must be in reduced form.</p>
<p>Find $u + v$.</p>
<hr>
<h2 id="有三个自变量的函数的有理零点"><a href="#有三个自变量的函数的有理零点" class="headerlink" title="有三个自变量的函数的有理零点"></a><strong>有三个自变量的函数的有理零点</strong></h2><p>对于任意整数$n$，考虑这三个函数</p>
<p>$$f_{1,n}(x,y,z)=x^{n+1}+y^{n+1}-z^{n+1}$$<br>$$f_{2,n}(x,y,z)=(xy+yz+zx)(x^{n-1}+y^{n-1}-z^{n-1})$$<br>$$f_{3,n}(x,y,z)=xyz(x^{n-2}+y^{n-2}-z^{n-2})$$</p>
<p>以及它们的组合</p>
<p>$$f_n(x,y,z)=f_{1,n}(x,y,z)+f_{2,n}(x,y,z)-f_{3,n}(x,y,z)$$</p>
<p>考虑三元组$(x,y,z)$，若$x$、$y$和$z$都可以表示为满足$0 &lt;a &lt; b \le k$的有理数$a/b$，且（至少）存在一个整数$n$使得$f_n(x,y,z)=0$，则称其为$k$阶黄金三元组。</p>
<p>记$s(x,y,z) = x + y + z$。<br>考虑所有$35$阶黄金三元组$(x,y,z)$所对应的$s(x,y,z)$，记其中所有不同的取值之和为$t = u / v$。<br>所有的$s(x,y,z)$以及$t$都表示为最简分数。</p>
<p>求$u + v$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 182</title>
    <url>/182/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-182"><a href="#Problem-182" class="headerlink" title="Problem 182"></a><a href="https://projecteuler.net/problem=182">Problem 182</a></h1><hr>
<p><strong>RSA encryption</strong></p>
<p>The RSA encryption is based on the following procedure:</p>
<p>Generate two distinct primes p and q.Compute n=pq and φ=(p-1)(q-1).<br>Find an integer e, 1&lt;e&lt;φ, such that gcd(e,φ)=1.</p>
<p>A message in this system is a number in the interval [0,n-1].<br>A text to be encrypted is then somehow converted to messages (numbers in the interval [0,n-1]).<br>To encrypt the text,  for each message, m, c=m<sup>e</sup> mod n is calculated.</p>
<p>To decrypt the text, the following procedure is needed: calculate d such that ed=1 mod φ, then for each encrypted message, c, calculate m=c<sup>d</sup> mod n.</p>
<p>There exist values of e and m  such that m<sup>e</sup> mod n=m.<br>We call messages m for which m<sup>e</sup> mod n=m unconcealed messages.</p>
<p>An issue when choosing e is that there should not be too many unconcealed messages.<br>For instance, let p=19 and q=37.<br>Then n=19*37=703 and φ=18*36=648.<br>If we choose e=181, then, although gcd(181,648)=1 it turns out that all possible messages<br> m (0≤m≤n-1) are unconcealed when calculating m<sup>e</sup> mod n.<br>For any valid choice of e there exist some unconcealed messages.<br>It’s important that the number of unconcealed messages is at a minimum.</p>
<p>Choose p=1009 and q=3643.<br>Find the sum of all values of e, 1&lt;e&lt;φ(1009,3643) and gcd(e,φ)=1, so that the number of unconcealed messages for this value of e is at a minimum.</p>
<hr>
<p><strong>RSA加密</strong></p>
<p>RSA加密基于以下流程：</p>
<p>生成两个不同的素数p和q。计算n=pq以及φ=(p-1)(q-1)。<br>找到整数e，满足1&lt;e&lt;φ，且gcd(e,φ)=1。</p>
<p>RSA系统能加密的信息是区间[0,n-1]中的整数。<br>因此，需要加密的文本首先需要转换成可加密的信息（即区间[0,n-1]内的某个整数）。<br>加密文本时，如果文本转换成的信息是m，则加密为c=m<sup>e</sup> mod n。</p>
<p>解密文本时，需要以下流程：计算d满足ed=1 mod φ，如果加密的信息是c，则解密为m=c<sup>d</sup> mod n。</p>
<p>存在某些e和m使得m<sup>e</sup> mod n=m。<br>我们称满足m<sup>e</sup> mod n=m的这些m为未加密信息。</p>
<p>在选择e时，很重要的一点就是不应该有太多未加密信息。<br>例如，令p=19，q=37。<br>然后n=19*37=703，φ=18*36=648。<br>如果我们选择e=181，那么尽管gcd(181,648)=1，但是所有可能的信息<br> m (0≤m≤n-1)都是未加密信息，只要我们计算一下m<sup>e</sup> mod n就能发现。<br>对于任意的e，总是存在一些未加密信息。<br>使得未加密信息的数目为最小值是很重要的。</p>
<p>现在我们选择p=1009，q=3643。<br>找出所有e，满足1&lt;e&lt;φ(1009,3643)且gcd(e,φ)=1，并且此时未加密信息的数目为最小值。求出所有这些e的和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 181</title>
    <url>/181/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-181"><a href="#Problem-181" class="headerlink" title="Problem 181"></a><a href="https://projecteuler.net/problem=181">Problem 181</a></h1><hr>
<p><strong>Investigating in how many ways objects of two different colours can be grouped</strong></p>
<p>Having three black objects B and one white object W they can be grouped in 7 ways like this:</p>
<table>
<thead>
<tr>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
</tr>
</thead>
<tbody><tr>
<td>(BBBW)</td>
<td>(B,BBW)</td>
<td>(B,B,BW)</td>
<td>(B,B,B,W)</td>
<td>(B,BB,W)</td>
<td>(BBB,W)</td>
<td>(BB,BW)</td>
</tr>
</tbody></table>
<p>In how many ways can sixty black objects B and forty white objects W be  thus grouped?</p>
<hr>
<p><strong>有关两种不同颜色的物体如何分组的研究</strong></p>
<p>三个黑色物体B和一个白色物体W进行分组，有以下7种方式：</p>
<table>
<thead>
<tr>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
</tr>
</thead>
<tbody><tr>
<td>(BBBW)</td>
<td>(B,BBW)</td>
<td>(B,B,BW)</td>
<td>(B,B,B,W)</td>
<td>(B,BB,W)</td>
<td>(BBB,W)</td>
<td>(BB,BW)</td>
</tr>
</tbody></table>
<p>六十个黑色物体B和四十个白色物体W进行分组有多少种方式？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 183</title>
    <url>/183/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-183"><a href="#Problem-183" class="headerlink" title="Problem 183"></a><a href="https://projecteuler.net/problem=183">Problem 183</a></h1><hr>
<p><strong>Maximum product of parts</strong></p>
<p>Let N be a positive integer and let N be split into k equal parts, r = N/k, so that N = r + r + … + r.<br>Let P be the product of these parts, P = r × r × … × r = r<sup>k</sup>.</p>
<p>For example, if 11 is split into five equal parts, 11 = 2.2 + 2.2 + 2.2 + 2.2 + 2.2, then P = 2.2<sup>5</sup> = 51.53632.</p>
<p>Let M(N) = P<sub>max</sub> for a given value of N.</p>
<p>It turns out that the maximum for N = 11 is found by splitting eleven into four equal parts which leads to P<sub>max</sub> = (11/4)<sup>4</sup>; that is, M(11) = 14641/256 = 57.19140625, which is a terminating decimal.</p>
<p>However, for N = 8 the maximum is achieved by splitting it into three equal parts, so M(8) = 512/27, which is a non-terminating decimal.</p>
<p>Let D(N) = N if M(N) is a non-terminating decimal and D(N) = -N if M(N) is a terminating decimal.</p>
<p>For example, ΣD(N) for 5 ≤ N ≤ 100 is 2438.</p>
<p>Find ΣD(N) for 5 ≤ N ≤ 10000.</p>
<hr>
<p><strong>最大拆分乘积</strong></p>
<p>N是一个正整数，将N拆分成k个相等的部分，记r = N/k，也即N = r + r + … + r。<br>记P是这些拆分的乘积，也即P = r × r × … × r = r<sup>k</sup>。</p>
<p>例如，将11拆分成5个相等的部分，11 = 2.2 + 2.2 + 2.2 + 2.2 + 2.2，那么P = 2.2<sup>5</sup> = 51.53632。</p>
<p>对于给定的N，记M(N) = P<sub>max</sub>。</p>
<p>计算可得，N = 11时，这个最大值是在将其拆分成四等份时得到的，此时P<sub>max</sub> = (11/4)<sup>4</sup>，也就是说M(11) = 14641/256 = 57.19140625，这是一个有限小数。</p>
<p>然而，对于N = 8，这个最大值是在将其拆分成三等份时得到的，此时M(8) = 512/27，不是有限小数。</p>
<p>若M(N)不是有限小数，记D(N) = N，反之记D(N) = -N。</p>
<p>例如，对于5 ≤ N ≤ 100，ΣD(N) 为2438。</p>
<p>对于5 ≤ N ≤ 10000，求ΣD(N)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 185</title>
    <url>/185/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-185"><a href="#Problem-185" class="headerlink" title="Problem 185"></a><a href="https://projecteuler.net/problem=185">Problem 185</a></h1><hr>
<p><strong>Number Mind</strong></p>
<p>The game Number Mind is a variant of the well known game Master Mind.</p>
<p>Instead of coloured pegs, you have to guess a secret sequence of digits. After each guess you’re only told in how many places you’ve guessed the correct digit. So, if the sequence was 1234 and you guessed 2036, you’d be told that you have one correct digit; however, you would NOT be told that you also have another digit in the wrong place.</p>
<p>For instance, given the following guesses for a 5-digit secret sequence,</p>
<p>90342 ;2 correct<br>70794 ;0 correct<br>39458 ;2 correct<br>34109 ;1 correct<br>51545 ;2 correct<br>12531 ;1 correct</p>
<p>The correct sequence 39542 is unique.</p>
<p>Based on the following guesses,</p>
<p>5616185650518293 ;2 correct<br>3847439647293047 ;1 correct<br>5855462940810587 ;3 correct<br>9742855507068353 ;3 correct<br>4296849643607543 ;3 correct<br>3174248439465858 ;1 correct<br>4513559094146117 ;2 correct<br>7890971548908067 ;3 correct<br>8157356344118483 ;1 correct<br>2615250744386899 ;2 correct<br>8690095851526254 ;3 correct<br>6375711915077050 ;1 correct<br>6913859173121360 ;1 correct<br>6442889055042768 ;2 correct<br>2321386104303845 ;0 correct<br>2326509471271448 ;2 correct<br>5251583379644322 ;2 correct<br>1748270476758276 ;3 correct<br>4895722652190306 ;1 correct<br>3041631117224635 ;3 correct<br>1841236454324589 ;3 correct<br>2659862637316867 ;2 correct</p>
<p>Find the unique 16-digit secret sequence.</p>
<hr>
<p><strong>数字头脑</strong></p>
<p>“数字头脑”游戏是著名的游戏“大师头脑”的一个变种。</p>
<p>在“数字头脑”中，你需要猜测一个数字序列，而不是“大师头脑”中的彩色方块。每次猜测之后，你会被告知你猜对了多少个位置上的数字。因此，如果正确的序列是1234，而你猜的是2036，那么你会被告知你猜对了一个位置上的数字。然而，你并<strong>不会</strong>知道你是否猜对了数字但不在其正确位置上。</p>
<p>例如，根据你对一个五位的数字序列作的如下猜测：</p>
<p>90342；2个数字正确<br>70794；0个数字正确<br>39458；2个数字正确<br>34109；1个数字正确<br>51545；2个数字正确<br>12531；1个数字正确</p>
<p>唯一正确的序列是39542。</p>
<p>根据下面的猜测，</p>
<p>5616185650518293；2个数字正确<br>3847439647293047；1个数字正确<br>5855462940810587；3个数字正确<br>9742855507068353；3个数字正确<br>4296849643607543；3个数字正确<br>3174248439465858；1个数字正确<br>4513559094146117；2个数字正确<br>7890971548908067；3个数字正确<br>8157356344118483；1个数字正确<br>2615250744386899；2个数字正确<br>8690095851526254；3个数字正确<br>6375711915077050；1个数字正确<br>6913859173121360；1个数字正确<br>6442889055042768；2个数字正确<br>2321386104303845；0个数字正确<br>2326509471271448；2个数字正确<br>5251583379644322；2个数字正确<br>1748270476758276；3个数字正确<br>4895722652190306；1个数字正确<br>3041631117224635；3个数字正确<br>1841236454324589；3个数字正确<br>2659862637316867；2个数字正确</p>
<p>求出唯一正确的16位序列。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 184</title>
    <url>/184/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-184"><a href="#Problem-184" class="headerlink" title="Problem 184"></a><a href="https://projecteuler.net/problem=184">Problem 184</a></h1><hr>
<p><strong>Triangles containing the origin</strong></p>
<p>Consider the set I<sub>r</sub> of points (x,y) with integer co-ordinates in the interior of the circle with radius r, centered at the origin, i.e. x<sup>2</sup> + y<sup>2</sup> &lt; r<sup>2</sup>.</p>
<p>For a radius of 2, I<sub>2</sub> contains the nine points (0,0), (1,0), (1,1), (0,1), (-1,1), (-1,0), (-1,-1), (0,-1) and (1,-1). There are eight triangles having all three vertices in I<sub>2</sub> which contain the origin in the interior. Two of them are shown below, the others are obtained from these by rotation.</p>
<center><img src="/resources/images/0184.gif"></center>

<p>For a radius of 3, there are 360 triangles containing the origin in the interior and having all vertices in I<sub>3</sub> and for I<sub>5</sub> the number is 10600.</p>
<p>How many triangles are there containing the origin in the interior and having all three vertices in I<sub>105</sub>?</p>
<hr>
<p><strong>包含原点的三角形</strong></p>
<p>集合I<sub>r</sub>包含了以原点为圆心，半径为r的圆内的所有格点(x,y)，也即满足x<sup>2</sup> + y<sup>2</sup> &lt; r<sup>2</sup>的点。</p>
<p>若半径为2，I<sub>2</sub>中包含了9个点(0,0), (1,0), (1,1), (0,1), (-1,1), (-1,0), (-1,-1), (0,-1)和(1,-1)。有八个三角形，其顶点都在I<sub>2</sub>中，且原点在三角形内部。下图所示是其中的两个，另外那些可以通过旋转这两个三角形得到。</p>
<center><img src="/resources/images/0184.gif"></center>

<p>若半径为3，有360个三角形包含原点在其内部且顶点在I<sub>3</sub>中；对于I<sub>5</sub>这个数字是10600。</p>
<p>有多少个三角形包含原点在其内部且顶点在I<sub>105</sub>中？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 186</title>
    <url>/186/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-186"><a href="#Problem-186" class="headerlink" title="Problem 186"></a><a href="https://projecteuler.net/problem=186">Problem 186</a></h1><hr>
<p><strong>Connectedness of a network</strong></p>
<p>Here are the records from a busy telephone system with one million users:</p>
<table>
<thead>
<tr>
<th align="center">Rec Nr</th>
<th align="center">Caller</th>
<th align="center">Called</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1</td>
<td align="center">200007</td>
<td align="center">100053</td>
</tr>
<tr>
<td align="center">2</td>
<td align="center">600183</td>
<td align="center">500439</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">600863</td>
<td align="center">701497</td>
</tr>
<tr>
<td align="center">…</td>
<td align="center">…</td>
<td align="center">…</td>
</tr>
</tbody></table>
<p>The telephone number of the caller and the called number in record n are Caller(n) = S<sub>2n-1</sub> and Called(n) = S<sub>2n</sub> where S<sub>1,2,3,…</sub> come from the “Lagged Fibonacci Generator”:</p>
<p>For 1 ≤ k ≤ 55, S<sub>k</sub> = [100003 - 200003k + 300007k<sup>3</sup>] (modulo 1000000)<br>For 56 ≤ k, S<sub>k</sub> = [S<sub>k-24</sub> + S<sub>k-55</sub>] (modulo 1000000)</p>
<p>If Caller(n) = Called(n) then the user is assumed to have misdialled and the call fails; otherwise the call is successful.</p>
<p>From the start of the records, we say that any pair of users X and Y are friends if X calls Y or vice-versa. Similarly, X is a friend of a friend of Z if X is a friend of Y and Y is a friend of Z; and so on for longer chains.</p>
<p>The Prime Minister’s phone number is 524287. After how many successful calls, not counting misdials, will 99% of the users (including the PM) be a friend, or a friend of a friend etc., of the Prime Minister?</p>
<hr>
<p><strong>网络连通性</strong></p>
<p>以下是一个有着一百万用户的忙碌电话系统的部分记录：</p>
<table>
<thead>
<tr>
<th align="center">编号</th>
<th align="center">呼叫</th>
<th align="center">接听</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1</td>
<td align="center">200007</td>
<td align="center">100053</td>
</tr>
<tr>
<td align="center">2</td>
<td align="center">600183</td>
<td align="center">500439</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">600863</td>
<td align="center">701497</td>
</tr>
<tr>
<td align="center">…</td>
<td align="center">…</td>
<td align="center">…</td>
</tr>
</tbody></table>
<p>编号为n的记录中，呼叫者的电话号码是Caller(n) = S<sub>2n-1</sub>，接听者的电话号码是Called(n) =  S<sub>2n</sub>，其中S<sub>1,2,3,…</sub>来自于所谓“延迟斐波那契随机数生成器”：</p>
<p>对于1 ≤ k ≤ 55，S<sub>k</sub> = [100003 - 200003k + 300007k<sup>3</sup>] (modulo 1000000)<br>对于56 ≤ k，S<sub>k</sub> = [S<sub>k-24</sub> + S<sub>k-55</sub>] (modulo 1000000)</p>
<p>如果Caller(n) = Called(n)，那么我们认为呼叫者拨错了号码，呼叫失败；否则我们认为呼叫成功。</p>
<p>根据这份记录，如果X曾经呼叫过Y或者Y呼叫过X，则我们认为这两个电话用户X和Y是朋友。同样的，如果X是Y的朋友，Y是Z的朋友，那么我们说X是Z的朋友的朋友；我们可以同理组成更长的“朋友”链。</p>
<p>首相的电话号码是524287。在多少次呼叫成功（不计呼叫失败）之后，99%的用户（包括首相）将会成为首相的朋友，或是朋友的朋友，或是朋友的朋友的朋友……？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 187</title>
    <url>/187/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-187"><a href="#Problem-187" class="headerlink" title="Problem 187"></a><a href="https://projecteuler.net/problem=187">Problem 187</a></h1><hr>
<p><strong>Semiprimes</strong></p>
<p>A composite is a number containing at least two prime factors. For example, 15 = 3 × 5; 9 = 3 × 3; 12 = 2 × 2 × 3.</p>
<p>There are ten composites below thirty containing precisely two, not necessarily distinct, prime factors: 4, 6, 9, 10, 14, 15, 21, 22, 25, 26.</p>
<p>How many composite integers, n &lt; 10<sup>8</sup>, have precisely two, not necessarily distinct, prime factors?</p>
<hr>
<p><strong>半素数</strong></p>
<p>合数是指包含至少两个质因数的整数。例如，15 = 3 × 5；9 = 3 × 3；12 = 2 × 2 × 3。</p>
<p>在小于30的合数中，有十个合数包含恰好两个不一定不同的质因数：4, 6, 9, 10, 14, 15, 21, 22, 25, 26。</p>
<p>有多少个合数n &lt; 10<sup>8</sup>包含恰好两个不一定不同的质因数？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 189</title>
    <url>/189/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-189"><a href="#Problem-189" class="headerlink" title="Problem 189"></a><a href="https://projecteuler.net/problem=189">Problem 189</a></h1><hr>
<p><strong>Tri-colouring a triangular grid</strong></p>
<p>Consider the following configuration of 64 triangles:</p>
<center><img src="/resources/images/0189_grid.gif"></center>

<p>We wish to colour the interior of each triangle with one of three colours: red, green or blue, so that no two neighbouring triangles have the same colour. Such a colouring shall be called valid. Here, two triangles are said to be neighbouring if they share an edge.<br>Note: if they only share a vertex, then they are not neighbours. </p>
<p>For example, here is a valid colouring of the above grid:</p>
<center><img src="/resources/images/0189_colours.gif"></center>

<p>A colouring C’ which is obtained from a colouring C by rotation or reflection is considered distinct from C unless the two are identical.</p>
<p>How many distinct valid colourings are there for the above configuration?</p>
<hr>
<p><strong>三角形阵的三染色</strong></p>
<p>考虑按如下方式摆放的64个三角形：</p>
<center><img src="/resources/images/0189_grid.gif"></center>

<p>我们想要给每个三角形的内部染上红、绿、蓝这三种颜色之一，而且任意两个相邻的三角形所染颜色不同，这样的染色方案我们视为有效。在这里，两个相邻的三角形是指它们共用一条边。<br>注意：共用一个顶点的三角形并不视为相邻三角形。 </p>
<p>例如，下图是一个上述三角形阵的有效染色方案：</p>
<center><img src="/resources/images/0189_colours.gif"></center>

<p>我们认为可以由染色方案C旋转而成的染色方案C’与C是不同的，除非C旋转后得到的染色方案与其完全一致。</p>
<p>对于上述三角形阵，有多少种不同的有效染色方案？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 188</title>
    <url>/188/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-188"><a href="#Problem-188" class="headerlink" title="Problem 188"></a><a href="https://projecteuler.net/problem=188">Problem 188</a></h1><hr>
<p><strong>The hyperexponentiation of a number</strong></p>
<p>The <span style="font-style: italic">hyperexponentiation</span> or <span style="font-style: italic">tetration</span> of a number a by a positive integer b, denoted by a↑↑b or <sup>b</sup>a, is recursively defined by:</p>
<p>a↑↑1 = a,<br>a↑↑(k+1) = a<sup>(a↑↑k)</sup>.</p>
<p>Thus we have e.g. 3↑↑2 = 3<sup>3</sup> = 27, hence 3↑↑3 = 3<sup>27</sup> = 7625597484987 and 3↑↑4 is roughly 10<sup>3.6383346400240996*10^12</sup>.</p>
<p>Find the last 8 digits of 1777↑↑1855.</p>
<hr>
<p><strong>数的超幂</strong></p>
<p>数a的正整数b次<span style="font-style: italic">超幂</span>或<span style="font-style: italic">迭代幂次</span>，记作a↑↑b或<sup>b</sup>a，按照如下方式递归定义：</p>
<p>a↑↑1 = a,<br>a↑↑(k+1) = a<sup>(a↑↑k)</sup>.</p>
<p>举例来说，3↑↑2 = 3<sup>3</sup> = 27，因此3↑↑3 = 3<sup>27</sup> = 7625597484987，而3↑↑4约为10<sup>3.6383346400240996*10^12</sup>。</p>
<p>求1777↑↑1855的最后8位数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 19</title>
    <url>/19/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-19"><a href="#Problem-19" class="headerlink" title="Problem 19"></a><a href="https://projecteuler.net/problem=19">Problem 19</a></h1><hr>
<h2 id="Counting-Sundays"><a href="#Counting-Sundays" class="headerlink" title="Counting Sundays"></a><strong>Counting Sundays</strong></h2><p>You are given the following information, but you may prefer to do some research for yourself.</p>
<ul>
<li>$1$ Jan $1900$ was a Monday.</li>
<li>Thirty days has September,<br>April, June and November.<br>All the rest have thirty-one,<br>Saving February alone,<br>Which has twenty-eight, rain or shine.<br>And on leap years, twenty-nine.</li>
<li>A leap year occurs on any year evenly divisible by $4$, but not on a century unless it is divisible by $400$.</li>
</ul>
<p>How many Sundays fell on the first of the month during the twentieth century ($1$ Jan $1901$ to $31$ Dec $2000$)?</p>
<hr>
<h2 id="周日计数"><a href="#周日计数" class="headerlink" title="周日计数"></a><strong>周日计数</strong></h2><p>下列信息是已知的，当然你也不妨自己再验证一下：</p>
<ul>
<li>$1900$年$1$月$1$日是周一。</li>
<li>三十天在九月中，<br>四六十一也相同。<br>剩下都是三十一，<br>除去二月不统一。<br>二十八天平常年，<br>多加一天在闰年。</li>
<li>闰年指的是能够被$4$整除却不能被$100$整除，或者能够被$400$整除的年份。</li>
</ul>
<p>在二十世纪（$1901$年$1$月$1$日到$2000$年$12$月$31$日）中，有多少个月的$1$号是周日？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 190</title>
    <url>/190/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-190"><a href="#Problem-190" class="headerlink" title="Problem 190"></a><a href="https://projecteuler.net/problem=190">Problem 190</a></h1><hr>
<p><strong>Maximising a weighted product</strong></p>
<p>Let S<sub>m</sub> = (x<sub>1</sub>, x<sub>2</sub>, … , x<sub>m</sub>) be the m-tuple of positive real numbers with x<sub>1</sub> + x<sub>2</sub> + … + x<sub>m</sub> = m for which P<sub>m</sub> = x<sub>1</sub> * x<sub>2</sub><sup>2</sup> * … * x<sub>m</sub><sup>m</sup> is maximised.</p>
<p>For example, it can be verified that [P<sub>10</sub>] = 4112 ([ ] is the integer part function).</p>
<p>Find Σ[P<sub>m</sub>] for 2 ≤ m ≤ 15.</p>
<hr>
<p><strong>加权乘积最大化</strong></p>
<p>记S<sub>m</sub> = (x<sub>1</sub>, x<sub>2</sub>, … , x<sub>m</sub>)是m元正实数组，其中x<sub>1</sub> + x<sub>2</sub> + … + x<sub>m</sub> = m，且P<sub>m</sub> = x<sub>1</sub> * x<sub>2</sub><sup>2</sup> * … * x<sub>m</sub><sup>m</sup>取得其最大值。</p>
<p>例如，可以验证，[P<sub>10</sub>] = 4112（[ ]是截尾函数）。</p>
<p>对于2 ≤ m ≤ 15，求Σ[P<sub>m</sub>]。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 191</title>
    <url>/191/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-191"><a href="#Problem-191" class="headerlink" title="Problem 191"></a><a href="https://projecteuler.net/problem=191">Problem 191</a></h1><hr>
<p><strong>Prize Strings</strong></p>
<p>A particular school offers cash rewards to children with good attendance and punctuality. If they are absent for three consecutive days or late on more than one occasion then they forfeit their prize.</p>
<p>During an n-day period a trinary string is formed for each child consisting of L’s (late), O’s (on time), and A’s (absent).</p>
<p>Although there are eighty-one trinary strings for a 4-day period that can be formed, exactly forty-three strings would lead to a prize:</p>
<p><span style="font-family:'Courier New',monospace;">OOOO OOOA OOOL OOAO OOAA OOAL OOLO OOLA OAOO OAOA<br>OAOL OAAO OAAL OALO OALA OLOO OLOA OLAO OLAA AOOO<br>AOOA AOOL AOAO AOAA AOAL AOLO AOLA AAOO AAOA AAOL<br>AALO AALA ALOO ALOA ALAO ALAA LOOO LOOA LOAO LOAA<br>LAOO LAOA LAAO</span></p>
<p>How many “prize” strings exist over a 30-day period?</p>
<hr>
<p><strong>出勤奖励</strong></p>
<p>某所学校给有出勤和守时表现良好的孩子发放现金奖励。如果孩子连续三天缺席，或是有多于一次迟到，则拿不到这份奖励。</p>
<p>根据n天的实际出勤情况，我们可以生成L（迟到）、O（准时）和A（缺席）这三个字母组成的字符串。</p>
<p>根据4天的出勤情况，能够生成的字符串一共有81种可能，其中恰好有43个串可以获得奖励：</p>
<p><span style="font-family:'Courier New',monospace;">OOOO OOOA OOOL OOAO OOAA OOAL OOLO OOLA OAOO OAOA<br>OAOL OAAO OAAL OALO OALA OLOO OLOA OLAO OLAA AOOO<br>AOOA AOOL AOAO AOAA AOAL AOLO AOLA AAOO AAOA AAOL<br>AALO AALA ALOO ALOA ALAO ALAA LOOO LOOA LOAO LOAA<br>LAOO LAOA LAAO</span></p>
<p>根据30天的出勤情况生成的字符串中，有多少个是可以获得奖励的串？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 192</title>
    <url>/192/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-192"><a href="#Problem-192" class="headerlink" title="Problem 192"></a><a href="https://projecteuler.net/problem=192">Problem 192</a></h1><hr>
<p><strong>Best Approximations</strong></p>
<p>Let x be a real number.<br>A best approximation to x for the denominator bound d is a rational number r/s in reduced form, with s ≤ d, such that any rational number which is closer to x than r/s has a denominator larger than d:</p>
<center>|p/q-x| &lt; |r/s-x| ⇒ q &gt; d</center>

<p>For example, the best approximation to √13 for the denominator bound 20 is 18/5 and the best approximation to √13 for the denominator bound 30 is 101/28.</p>
<p>Find the sum of all denominators of the best approximations to √n for the denominator bound 10<sup>12</sup>, where n is not a perfect square and 1 &lt; n ≤ 100000.</p>
<hr>
<p><strong>最佳逼近</strong></p>
<p>x是一个实数。<br>对于x，分母上限为d的最佳逼近，是一个最简分数形式的有理数r/s，其中s ≤ d，使得所有比r/s更接近x的有理数其最简分数形式的分母都大于d：</p>
<center>|p/q-x| &lt; |r/s-x| ⇒ q &gt; d</center>

<p>例如，对于√13，分母上限为20的最佳逼近是18/5，而分母上限为30的最佳逼近是101/28。</p>
<p>对于所有满足1 &lt; n ≤ 100000的非平方数n，找出其分母上限为10<sup>12</sup>的最佳逼近，并求出所有这些有理数的分母之和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 193</title>
    <url>/193/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-193"><a href="#Problem-193" class="headerlink" title="Problem 193"></a><a href="https://projecteuler.net/problem=193">Problem 193</a></h1><hr>
<p><strong>Squarefree Numbers</strong></p>
<p>A positive integer n is called squarefree, if no square of a prime divides n, thus 1, 2, 3, 5, 6, 7, 10, 11 are squarefree, but not 4, 8, 9, 12.</p>
<p>How many squarefree numbers are there below 2<sup>50</sup>?</p>
<hr>
<p><strong>无平方因子数</strong></p>
<p>若正整数n不能被任意素数的平方整除，则n被称为无平方因子数，因此1, 2, 3, 5, 6, 7, 10, 11是无平方因子的，而4, 8, 9, 12不是。</p>
<p>在小于2<sup>50</sup>的数中，有多少个无平方因子数？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 194</title>
    <url>/194/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-194"><a href="#Problem-194" class="headerlink" title="Problem 194"></a><a href="https://projecteuler.net/problem=194">Problem 194</a></h1><hr>
<p><strong>Coloured Configurations</strong></p>
<p>Consider graphs built with the units A: <img src="/resources/images/0194_GraphA.png"> and B: <img src="/resources/images/0194_GraphB.png">, where the units are glued along the vertical edges as in the graph <img src="/resources/images/0194_Fig.png">.</p>
<p>A configuration of type (a,b,c) is a graph thus built of a units A and b units B, where the graph’s vertices are coloured using up to c colours, so that no two adjacent vertices have the same colour.<br>The compound graph above is an example of a configuration of type (2,2,6), in fact of type (2,2,c) for all c ≥ 4.</p>
<p>Let N(a,b,c) be the number of configurations of type (a,b,c).<br>For example, N(1,0,3) = 24, N(0,2,4) = 92928 and N(2,2,3) = 20736.</p>
<p>Find the last 8 digits of N(25,75,1984).</p>
<hr>
<p><strong>染色摆放方案</strong></p>
<p>考虑由A单元：<img src="/resources/images/0194_GraphA.png">和B单元<img src="/resources/images/0194_GraphB.png">组成的图形，相邻单元相互重叠在一起如下图所示<img src="/resources/images/0194_Fig.png">。</p>
<p>一个(a,b,c)类型的染色摆放方案，是一个由a个A单元和b个B单元摆放组成，并用至多c种颜色给每个顶点染色并保证相邻顶点所染颜色不同的图形.<br>上面这个复合图形就是(2,2,6)类型染色摆放方案的一个例子，事实上它也属于任意(2,2,c)类型，只要c ≥ 4即可。</p>
<p>记N(a,b,c)是(a,b,c)类型的染色摆放方案总数。<br>例如，N(1,0,3) = 24，N(0,2,4) = 92928，以及N(2,2,3) = 20736。</p>
<p>求N(25,75,1984)的最后8位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 195</title>
    <url>/195/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-195"><a href="#Problem-195" class="headerlink" title="Problem 195"></a><a href="https://projecteuler.net/problem=195">Problem 195</a></h1><hr>
<p><strong>Inscribed circles of triangles with one angle of 60 degrees</strong></p>
<p>Let’s call an integer sided triangle with exactly one angle of 60 degrees a 60-degree triangle.<br>Let r be the radius of the inscribed circle of such a 60-degree triangle.</p>
<p>There are 1234 60-degree triangles for which r ≤ 100.<br>Let T(n) be the number of 60-degree triangles for which r ≤ n, so<br>T(100) = 1234,&nbsp; T(1000) = 22767, and&nbsp; T(10000) = 359912.</p>
<p>Find T(1053779).</p>
<hr>
<p><strong>有一角为60度的三角形的内切圆</strong></p>
<p>我们称恰好有一个角为60度的整数边长三角形为60度三角形。<br>记r是这个60度三角形的内切圆的半径。</p>
<p>当r ≤ 100时，一共有1234个60度三角形。<br>记T(n)是r ≤ n时所有的60度三角形数目，因此<br>T(100) = 1234，&nbsp; T(1000) = 22767，以及&nbsp; T(10000) = 359912.</p>
<p>求T(1053779)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 196</title>
    <url>/196/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-196"><a href="#Problem-196" class="headerlink" title="Problem 196"></a><a href="https://projecteuler.net/problem=196">Problem 196</a></h1><hr>
<p><strong>Prime triplets</strong></p>
<p>Build a triangle from all positive integers in the following way:</p>
<table>
<thead>
<tr>
<th align="right">&nbsp;</th>
<th align="right">&nbsp;</th>
<th align="right">&nbsp;</th>
<th align="right">&nbsp;</th>
<th align="right">&nbsp;</th>
<th align="right">&nbsp;</th>
<th align="right">&nbsp;</th>
<th align="right">&nbsp;</th>
<th align="right">&nbsp;</th>
<th align="right">&nbsp;</th>
<th align="right">&nbsp;</th>
</tr>
</thead>
<tbody><tr>
<td align="right">1</td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
</tr>
<tr>
<td align="right"><span style="color:red;">2</span></td>
<td align="right"><span style="color:red;">3</span></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
</tr>
<tr>
<td align="right">4</td>
<td align="right"><span style="color:red;">5</span></td>
<td align="right">6</td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
</tr>
<tr>
<td align="right"><span style="color:red;">7</span></td>
<td align="right">8</td>
<td align="right">9</td>
<td align="right">10</td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
</tr>
<tr>
<td align="right"><span style="color:red;">11</span></td>
<td align="right">12</td>
<td align="right"><span style="color:red;">13</span></td>
<td align="right">14</td>
<td align="right">15</td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
</tr>
<tr>
<td align="right">16</td>
<td align="right"><span style="color:red;">17</span></td>
<td align="right">18</td>
<td align="right"><span style="color:red;">19</span></td>
<td align="right">20</td>
<td align="right">21</td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
</tr>
<tr>
<td align="right">22</td>
<td align="right"><span style="color:red;">23</span></td>
<td align="right">24</td>
<td align="right">25</td>
<td align="right">26</td>
<td align="right">27</td>
<td align="right">28</td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
</tr>
<tr>
<td align="right"><span style="color:red;">29</span></td>
<td align="right">30</td>
<td align="right"><span style="color:red;">31</span></td>
<td align="right">32</td>
<td align="right">33</td>
<td align="right">34</td>
<td align="right">35</td>
<td align="right">36</td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
</tr>
<tr>
<td align="right"><span style="color:red;">37</span></td>
<td align="right">38</td>
<td align="right">39</td>
<td align="right">40</td>
<td align="right"><span style="color:red;">41</span></td>
<td align="right">42</td>
<td align="right"><span style="color:red;">43</span></td>
<td align="right">44</td>
<td align="right">45</td>
<td align="right"></td>
<td align="right"></td>
</tr>
<tr>
<td align="right">46</td>
<td align="right"><span style="color:red;">47</span></td>
<td align="right">48</td>
<td align="right">49</td>
<td align="right">50</td>
<td align="right">51</td>
<td align="right">52</td>
<td align="right"><span style="color:red;">53</span></td>
<td align="right">54</td>
<td align="right">55</td>
<td align="right"></td>
</tr>
<tr>
<td align="right">56</td>
<td align="right">57</td>
<td align="right">58</td>
<td align="right"><span style="color:red;">59</span></td>
<td align="right">60</td>
<td align="right"><span style="color:red;">61</span></td>
<td align="right">62</td>
<td align="right">63</td>
<td align="right">64</td>
<td align="right">65</td>
<td align="right">66</td>
</tr>
<tr>
<td align="right">..</td>
<td align="right">..</td>
<td align="right">..</td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
</tr>
</tbody></table>
<p>Each positive integer has up to eight neighbours in the triangle.</p>
<p>A set of three primes is called a <em>prime triplet</em> if one of the three primes has the other two as neighbours in the triangle.</p>
<p>For example, in the second row, the prime numbers 2 and 3 are elements of some prime triplet.</p>
<p>If row 8 is considered, it contains two primes which are elements of some prime triplet, i.e. 29 and 31.<br>If row 9 is considered, it contains only one prime which is an element of some prime triplet: 37.</p>
<p>Define S(n) as the sum of the primes in row n which are elements of any prime triplet.<br>Then S(8)=60 and S(9)=37.</p>
<p>You are given that S(10000)=950007619.</p>
<p>Find &nbsp;S(5678027) + S(7208785).</p>
<hr>
<p><strong>素数三元组</strong></p>
<p>将所有正整数按如下方式排列成三角形的样式：</p>
<table>
<thead>
<tr>
<th align="right">&nbsp;</th>
<th align="right">&nbsp;</th>
<th align="right">&nbsp;</th>
<th align="right">&nbsp;</th>
<th align="right">&nbsp;</th>
<th align="right">&nbsp;</th>
<th align="right">&nbsp;</th>
<th align="right">&nbsp;</th>
<th align="right">&nbsp;</th>
<th align="right">&nbsp;</th>
<th align="right">&nbsp;</th>
</tr>
</thead>
<tbody><tr>
<td align="right">1</td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
</tr>
<tr>
<td align="right"><span style="color:red;">2</span></td>
<td align="right"><span style="color:red;">3</span></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
</tr>
<tr>
<td align="right">4</td>
<td align="right"><span style="color:red;">5</span></td>
<td align="right">6</td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
</tr>
<tr>
<td align="right"><span style="color:red;">7</span></td>
<td align="right">8</td>
<td align="right">9</td>
<td align="right">10</td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
</tr>
<tr>
<td align="right"><span style="color:red;">11</span></td>
<td align="right">12</td>
<td align="right"><span style="color:red;">13</span></td>
<td align="right">14</td>
<td align="right">15</td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
</tr>
<tr>
<td align="right">16</td>
<td align="right"><span style="color:red;">17</span></td>
<td align="right">18</td>
<td align="right"><span style="color:red;">19</span></td>
<td align="right">20</td>
<td align="right">21</td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
</tr>
<tr>
<td align="right">22</td>
<td align="right"><span style="color:red;">23</span></td>
<td align="right">24</td>
<td align="right">25</td>
<td align="right">26</td>
<td align="right">27</td>
<td align="right">28</td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
</tr>
<tr>
<td align="right"><span style="color:red;">29</span></td>
<td align="right">30</td>
<td align="right"><span style="color:red;">31</span></td>
<td align="right">32</td>
<td align="right">33</td>
<td align="right">34</td>
<td align="right">35</td>
<td align="right">36</td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
</tr>
<tr>
<td align="right"><span style="color:red;">37</span></td>
<td align="right">38</td>
<td align="right">39</td>
<td align="right">40</td>
<td align="right"><span style="color:red;">41</span></td>
<td align="right">42</td>
<td align="right"><span style="color:red;">43</span></td>
<td align="right">44</td>
<td align="right">45</td>
<td align="right"></td>
<td align="right"></td>
</tr>
<tr>
<td align="right">46</td>
<td align="right"><span style="color:red;">47</span></td>
<td align="right">48</td>
<td align="right">49</td>
<td align="right">50</td>
<td align="right">51</td>
<td align="right">52</td>
<td align="right"><span style="color:red;">53</span></td>
<td align="right">54</td>
<td align="right">55</td>
<td align="right"></td>
</tr>
<tr>
<td align="right">56</td>
<td align="right">57</td>
<td align="right">58</td>
<td align="right"><span style="color:red;">59</span></td>
<td align="right">60</td>
<td align="right"><span style="color:red;">61</span></td>
<td align="right">62</td>
<td align="right">63</td>
<td align="right">64</td>
<td align="right">65</td>
<td align="right">66</td>
</tr>
<tr>
<td align="right">..</td>
<td align="right">..</td>
<td align="right">..</td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
<td align="right"></td>
</tr>
</tbody></table>
<p>每个正整数在三角形中有最多八个邻居。</p>
<p>如果三个素数中，有两个均为另一个的邻居，那么这一组三个素数被称为一个<em>素数三元组</em>。</p>
<p>例如，在第二行，素数2和3都是一些素数三元组的元素。</p>
<p>如果我们看第8行，将有两个素数属于某些素数三元组，这两个素数是29和31。<br>如果我们看第9行，只有一个素数属于某些素数三元组，这个素数是37。</p>
<p>记S(n)是第n行中属于某些素数三元组的素数之和。<br>因此S(8)=60，而S(9)=37。</p>
<p>已知S(10000)=950007619。</p>
<p>求S(5678027) + S(7208785)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 197</title>
    <url>/197/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-197"><a href="#Problem-197" class="headerlink" title="Problem 197"></a><a href="https://projecteuler.net/problem=197">Problem 197</a></h1><hr>
<p><strong>Investigating the behaviour of a recursively defined sequence</strong></p>
<p>Given is the function f(x) = ⌊2<sup>30.403243784-x<sup>2</sup></sup>⌋ × 10<sup>-9</sup> ( ⌊ ⌋ is the floor-function),<br>the sequence u<sub>n</sub> is defined by u<sub>0</sub> = -1 and u<sub>n+1</sub> = f(u<sub>n</sub>).</p>
<p>Find u<sub>n</sub> + u<sub>n+1</sub> for n = 10<sup>12</sup>.<br>Give your answer with 9 digits after the decimal point.</p>
<hr>
<p><strong>关于一个递归定义序列的研究</strong></p>
<p>已知函数f(x) = ⌊2<sup>30.403243784-x<sup>2</sup></sup>⌋ × 10<sup>-9</sup> （其中⌊ ⌋是下取整函数），<br>序列u<sub>n</sub>定义为u<sub>0</sub> = -1且u<sub>n+1</sub> = f(u<sub>n</sub>)。</p>
<p>求u<sub>n</sub> + u<sub>n+1</sub>，其中n = 10<sup>12</sup>。<br>你的答案需要保留小数点后9位数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 198</title>
    <url>/198/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-198"><a href="#Problem-198" class="headerlink" title="Problem 198"></a><a href="https://projecteuler.net/problem=198">Problem 198</a></h1><hr>
<p><strong>Ambiguous Numbers</strong></p>
<p>A best approximation to a real number x for the denominator bound d is a rational number r/s (in reduced form) with s ≤ d, so that any rational number p/q which is closer to x than r/s has q &gt; d.</p>
<p>Usually the best approximation to a real number is uniquely determined for all denominator bounds. However, there are some exceptions, e.g. 9/40 has the two best approximations 1/4 and 1/5 for the denominator bound 6. We shall call a real number x <em>ambiguous</em>, if there is at least one denominator bound for which x possesses two best approximations. Clearly, an ambiguous number is necessarily rational.</p>
<p>How many ambiguous numbers x = p/q, 0 &lt; x &lt; 1/100, are there whose denominator q does not exceed 10<sup>8</sup>?</p>
<hr>
<p><strong>两可数</strong></p>
<p>对于实数x，分母上限为d的最佳逼近，是一个最简分数形式的有理数r/s，其中s ≤ d，使得所有比r/s更接近x的有理数p/q其最简分数形式满足q&gt; d。</p>
<p>通常这样对某个实数带分母上限的最佳逼近是唯一的。然而，也有一些例外，比如对于9/40，分母上限为6的最佳逼近有两个，分别是1/4和1/5。如果对于实数x存在某个分母上限使得它有两个最佳逼近，我们就称x为<em>两可的</em>。显然，一个两可数必须是有理数。</p>
<p>有多少个两可数x = p/q，满足0 &lt; x &lt; 1/100，而且其分母q不超过10<sup>8</sup>？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 199</title>
    <url>/199/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-199"><a href="#Problem-199" class="headerlink" title="Problem 199"></a><a href="https://projecteuler.net/problem=199">Problem 199</a></h1><hr>
<p><strong>Iterative Circle Packing</strong></p>
<p>Three circles of equal radius are placed inside a larger circle such that each pair of circles is tangent to one another and the inner circles do not overlap. There are four uncovered “gaps” which are to be filled iteratively with more tangent circles.</p>
<center><img src="/resources/images/0199_circles_in_circles.gif"></center>

<p>At each iteration, a maximally sized circle is placed in each gap, which creates more gaps for the next iteration. After 3 iterations (pictured), there are 108 gaps and the fraction of the area which is not covered by circles is 0.06790342, rounded to eight decimal places.</p>
<p>What fraction of the area is not covered by circles after 10 iterations?<br>Give your answer rounded to eight decimal places using the format x.xxxxxxxx .</p>
<hr>
<p><strong>迭代放圆</strong></p>
<p>在一个大圆内放入三个等大的圆，这三个圆以及大圆两两相切，而且相互不重叠。这样一来，大圆内就有四块未覆盖的“空隙”，我们将迭代地在里面放入更多相切的圆以填补它们。</p>
<center><img src="/resources/images/0199_circles_in_circles.gif"></center>

<p>每一轮迭代，我们都在每个空隙中放入尽可能大的圆，如此一来下一轮迭代时将会有更多的空隙。经过三轮迭代（如上图），大圆中一共有108个空隙，大圆内未被其它圆覆盖的面积占大圆面积的比例为0.06790342，四舍五入到八位小数。</p>
<p>经过10轮迭代后，未被覆盖的面积占大圆面积的比例是多少？<br>你的答案应当四舍五入到八位小数，也即x.xxxxxxxx的格式。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 2</title>
    <url>/2/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-2"><a href="#Problem-2" class="headerlink" title="Problem 2"></a><a href="https://projecteuler.net/problem=2">Problem 2</a></h1><hr>
<h2 id="Even-Fibonacci-Numbers"><a href="#Even-Fibonacci-Numbers" class="headerlink" title="Even Fibonacci Numbers"></a><strong>Even Fibonacci Numbers</strong></h2><p>Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with $1$ and $2$, the first $10$ terms will be:</p>
<p>$$1, 2, 3, 5, 8, 13, 21, 34, 55, 89, \ldots$$</p>
<p>By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.</p>
<hr>
<h2 id="偶斐波那契数"><a href="#偶斐波那契数" class="headerlink" title="偶斐波那契数"></a><strong>偶斐波那契数</strong></h2><p>斐波那契数列中的每一项都是前两项的和。由$1$和$2$开始生成的斐波那契数列的前$10$项为：</p>
<p>$$1, 2, 3, 5, 8, 13, 21, 34, 55, 89, \ldots$$</p>
<p>考虑该斐波那契数列中不超过四百万的项，求其中为偶数的项之和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 20</title>
    <url>/20/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-20"><a href="#Problem-20" class="headerlink" title="Problem 20"></a><a href="https://projecteuler.net/problem=20">Problem 20</a></h1><hr>
<h2 id="Factorial-Digit-Sum"><a href="#Factorial-Digit-Sum" class="headerlink" title="Factorial Digit Sum"></a><strong>Factorial Digit Sum</strong></h2><p>$n!$ means $n \times (n − 1) \times … \times 3 \times 2 \times 1$.</p>
<p>For example, $10! = 10 \times 9 \times … \times 3 \times 2 \times 1 = 3628800$, and the sum of the digits in the number $10!$ is $3 + 6 + 2 + 8 + 8 + 0 + 0 = 27$.</p>
<p>Find the sum of the digits in the number $100!$.</p>
<hr>
<h2 id="阶乘数字和"><a href="#阶乘数字和" class="headerlink" title="阶乘数字和"></a><strong>阶乘数字和</strong></h2><p>$n!$ 的意思是 $n \times (n − 1) \times … \times 3 \times 2 \times 1$。</p>
<p>例如，$10! = 10 \times 9 \times … \times 3 \times 2 \times 1 = 3628800$，所以$10!$的各位数字和是$3 + 6 + 2 + 8 + 8 + 0 + 0 = 27$。</p>
<p>求$100!$的各位数字和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 200</title>
    <url>/200/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-200"><a href="#Problem-200" class="headerlink" title="Problem 200"></a><a href="https://projecteuler.net/problem=200">Problem 200</a></h1><hr>
<p><strong>Find the 200th prime-proof sqube containing the contiguous sub-string “200”</strong></p>
<p>We shall define a sqube to be a number of the form, p<sup>2</sup>q<sup>3</sup>, where p and q are distinct primes.<br>For example, 200 = 5<sup>2</sup>2<sup>3</sup> or 120072949 = 23<sup>2</sup>61<sup>3</sup>.</p>
<p>The first five squbes are 72, 108, 200, 392, and 500.</p>
<p>Interestingly, 200 is also the first number for which you cannot change any single digit to make a prime; we shall call such numbers, prime-proof. The next prime-proof sqube which contains the contiguous sub-string “200” is 1992008.</p>
<p>Find the 200th prime-proof sqube containing the contiguous sub-string “200”.</p>
<hr>
<p><strong>找出第200个拥有连续子串“200”且不可变质数的平立方数</strong></p>
<p>我们定义平立方数为可以写成p<sup>2</sup>q<sup>3</sup>形式的数，其中p和q为不同质数。<br>例如，200 = 5<sup>2</sup>2<sup>3</sup>，以及120072949 = 23<sup>2</sup>61<sup>3</sup>。</p>
<p>前五个平立方数分别是72, 108, 200, 392和500。</p>
<p>有趣的是，200同样是第一个你无法只改变其一位数字就成为质数的数， 我们称这样的数为不可变质数的。下一个拥有连续子串“200”且不可变质数的平立方数是1992008。</p>
<p>找出第200个拥有连续子串“200”且不可变质数的平立方数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 201</title>
    <url>/201/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-201"><a href="#Problem-201" class="headerlink" title="Problem 201"></a><a href="https://projecteuler.net/problem=201">Problem 201</a></h1><hr>
<p><strong>Subsets with a unique sum</strong></p>
<p>For any set A of numbers, let sum(A) be the sum of the elements of A.<br>Consider the set B = {1,3,6,8,10,11}.<br>There are 20 subsets of B containing three elements, and their sums are:</p>
<blockquote>
<p>sum({1,3,6}) = 10,<br>sum({1,3,8}) = 12,<br>sum({1,3,10}) = 14,<br>sum({1,3,11}) = 15,<br>sum({1,6,8}) = 15,<br>sum({1,6,10}) = 17,<br>sum({1,6,11}) = 18,<br>sum({1,8,10}) = 19,<br>sum({1,8,11}) = 20,<br>sum({1,10,11}) = 22,<br>sum({3,6,8}) = 17,<br>sum({3,6,10}) = 19,<br>sum({3,6,11}) = 20,<br>sum({3,8,10}) = 21,<br>sum({3,8,11}) = 22,<br>sum({3,10,11}) = 24,<br>sum({6,8,10}) = 24,<br>sum({6,8,11}) = 25,<br>sum({6,10,11}) = 27,<br>sum({8,10,11}) = 29.</p>
</blockquote>
<p>Some of these sums occur more than once, others are unique.<br>For a set A, let U(A,k) be the set of unique sums of k-element subsets of A, in our example we find U(B,3) = {10,12,14,18,21,25,27,29} and sum(U(B,3)) = 156.</p>
<p>Now consider the 100-element set S = {1<sup>2</sup>, 2<sup>2</sup>, … , 100<sup>2</sup>}.<br>S has 100891344545564193334812497256 50-element subsets.</p>
<p>Determine the sum of all integers which are the sum of exactly one of the 50-element subsets of S, i.e. find sum(U(S,50)).</p>
<hr>
<p><strong>拥有唯一出现的元素和的子集</strong></p>
<p>对于任意数集A，记A中所有元素的和为sum(A)。<br>考虑集合B = {1,3,6,8,10,11}。<br>B有20个子集包含恰好三个元素，而这些子集的元素和分别是：</p>
<blockquote>
<p>sum({1,3,6}) = 10,<br>sum({1,3,8}) = 12,<br>sum({1,3,10}) = 14,<br>sum({1,3,11}) = 15,<br>sum({1,6,8}) = 15,<br>sum({1,6,10}) = 17,<br>sum({1,6,11}) = 18,<br>sum({1,8,10}) = 19,<br>sum({1,8,11}) = 20,<br>sum({1,10,11}) = 22,<br>sum({3,6,8}) = 17,<br>sum({3,6,10}) = 19,<br>sum({3,6,11}) = 20,<br>sum({3,8,10}) = 21,<br>sum({3,8,11}) = 22,<br>sum({3,10,11}) = 24,<br>sum({6,8,10}) = 24,<br>sum({6,8,11}) = 25,<br>sum({6,10,11}) = 27,<br>sum({8,10,11}) = 29.</p>
</blockquote>
<p>这其中的有些元素和出现了不止一次，其它元素和则是唯一出现的。<br>对于任意集合A，先求A所有恰好包含k个元素的子集的元素和，其中唯一出现的元素和构成集合U(A,k)。在我们的例子中，我们发现U(B,3) = {10,12,14,18,21,25,27,29}，因而sum(U(B,3)) = 156。</p>
<p>现在考虑有100个元素的集合S = {1<sup>2</sup>, 2<sup>2</sup>, … , 100<sup>2</sup>}。<br>S有100891344545564193334812497256个子集恰好包含50个元素。</p>
<p>在这些子集的元素和中，找出那些唯一出现的元素和并求和，也即求sum(U(S,50))。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 203</title>
    <url>/203/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-203"><a href="#Problem-203" class="headerlink" title="Problem 203"></a><a href="https://projecteuler.net/problem=203">Problem 203</a></h1><hr>
<p><strong>Squarefree Binomial Coefficients</strong></p>
<p>The binomial coefficients <sup>n</sup>C<sub>k</sub> can be arranged in triangular form, Pascal’s triangle, like this:</p>
<center>
1<br>
1 1<br>
1 2 1<br>
1 3 3 1<br>
1 4 6 4 1<br>
1 5 10 10 5 1<br>
1 6 15 20 15 6 1<br>
1 7 21 35 35 21 7 1<br>
.........
</center>

<p>It can be seen that the first eight rows of Pascal’s triangle contain twelve distinct numbers: 1,&nbsp;2,&nbsp;3,&nbsp;4,&nbsp;5,&nbsp;6,&nbsp;7,&nbsp;10,&nbsp;15,&nbsp;20,&nbsp;21&nbsp;and&nbsp;35.</p>
<p>A positive integer n is called squarefree if no square of a prime divides n.<br>Of the twelve distinct numbers in the first eight rows of Pascal’s triangle, all except 4 and 20 are squarefree.<br>The sum of the distinct squarefree numbers in the first eight rows is 105.</p>
<p>Find the sum of the distinct squarefree numbers in the first 51 rows of Pascal’s triangle.</p>
<hr>
<p><strong>无平方因子二项式系数</strong></p>
<p>二项式系数<sup>n</sup>C<sub>k</sub>可以如下排成一个三角形，称为帕斯卡三角形：</p>
<center>
1<br>
1 1<br>
1 2 1<br>
1 3 3 1<br>
1 4 6 4 1<br>
1 5 10 10 5 1<br>
1 6 15 20 15 6 1<br>
1 7 21 35 35 21 7 1<br>
.........
</center>

<p>可以看出帕斯卡三角形的前八行包含了十二个不同的数：1,&nbsp;2,&nbsp;3,&nbsp;4,&nbsp;5,&nbsp;6,&nbsp;7,&nbsp;10,&nbsp;15,&nbsp;20,&nbsp;21&nbsp;and&nbsp;35。</p>
<p>如果正整数不被任何素数的平方整除，n就被称为无平方因子数。<br>在帕斯卡三角形前八行的十二个不同的数中，除了4和20之外都是无平方因子数。<br>这些不同的无平方因子数之和为105。</p>
<p>求帕斯卡三角形前51行所有不同的无平方因子数之和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 202</title>
    <url>/202/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-202"><a href="#Problem-202" class="headerlink" title="Problem 202"></a><a href="https://projecteuler.net/problem=202">Problem 202</a></h1><hr>
<p><strong>Laserbeam</strong></p>
<p>Three mirrors are arranged in the shape of an equilateral triangle, with their reflective surfaces pointing inwards. There is an infinitesimal gap at each vertex of the triangle through which a laser beam may pass.</p>
<p>Label the vertices A, B and C. There are 2 ways in which a laser beam may enter vertex C, bounce off 11 surfaces, then exit through the same vertex: one way is shown below; the other is the reverse of that.</p>
<center><img src="/resources/images/0202_laserbeam.gif"></center>

<p>There are 80840 ways in which a laser beam may enter vertex C, bounce off 1000001 surfaces, then exit through the same vertex.</p>
<p>In how many ways can a laser beam enter at vertex C, bounce off 12017639147 surfaces, then exit through the same vertex?</p>
<hr>
<p><strong>激光束</strong></p>
<p>三面镜子摆成了正三角形的形状，其反射面朝内放置。在三角形的顶点处有一个无穷小的间隙可容一束激光束通过。</p>
<p>记三个顶点分别为A、B和C。从顶点C射入的激光束，经过11次反射后再从同一个顶点射出，这样的路径一共有两条：其中一条如下所示，另一条即是将其反向。</p>
<center><img src="/resources/images/0202_laserbeam.gif"></center>

<p>从顶点C射入的激光束，经过1000001次反射后再从同一个顶点射出，这样的路径一共有80840条。</p>
<p>从顶点C射入的激光束，经过12017639147次反射后再从同一个顶点射出，这样的路径一共有多少条？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 204</title>
    <url>/204/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-204"><a href="#Problem-204" class="headerlink" title="Problem 204"></a><a href="https://projecteuler.net/problem=204">Problem 204</a></h1><hr>
<p><strong>Generalised Hamming Numbers</strong></p>
<p>A Hamming number is a positive number which has no prime factor larger than 5.<br>So the first few Hamming numbers are 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 15.<br>There are 1105 Hamming numbers not exceeding 10<sup>8</sup>.</p>
<p>We will call a positive number a generalised Hamming number of type n, if it has no prime factor larger than n.<br>Hence the Hamming numbers are the generalised Hamming numbers of type 5.</p>
<p>How many generalised Hamming numbers of type 100 are there which don’t exceed 10<sup>9</sup>?</p>
<hr>
<p><strong>广义汉明数</strong></p>
<p>若一个正整数的所有质因数均不超过5，则被称为汉明数。<br>前几个汉明数分别是1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 15。<br>在不超过10<sup>8</sup>的正整数中，一共有1105个汉明数。</p>
<p>若一个正整数的所有质因数均不超过n，则被称为n型广义汉明数。<br>因此本来的汉明数就是5型广义汉明数。</p>
<p>在不超过10<sup>9</sup>的正整数中，一共有多少个100型广义汉明数？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 206</title>
    <url>/206/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-206"><a href="#Problem-206" class="headerlink" title="Problem 206"></a><a href="https://projecteuler.net/problem=206">Problem 206</a></h1><hr>
<p><strong>Concealed Square</strong></p>
<p>Find the unique positive integer whose square has the form 1_2_3_4_5_6_7_8_9_0,<br>where each “_” is a single digit.</p>
<hr>
<p><strong>被遮挡的平方数</strong></p>
<p>找出唯一一个其平方形如1_2_3_4_5_6_7_8_9_0的正整数，<br>其中每个“_”表示一位数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 205</title>
    <url>/205/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-205"><a href="#Problem-205" class="headerlink" title="Problem 205"></a><a href="https://projecteuler.net/problem=205">Problem 205</a></h1><hr>
<p><strong>Dice Game</strong></p>
<p>Peter has nine four-sided (pyramidal) dice, each with faces numbered 1, 2, 3, 4.<br>Colin has six six-sided (cubic) dice, each with faces numbered 1, 2, 3, 4, 5, 6.</p>
<p>Peter and Colin roll their dice and compare totals: the highest total wins. The result is a draw if the totals are equal.</p>
<p>What is the probability that Pyramidal Pete beats Cubic Colin? Give your answer rounded to seven decimal places in the form 0.abcdefg</p>
<hr>
<p><strong>骰子游戏</strong></p>
<p>彼得有九个四面的（金字塔型）骰子，每个面上分别标有1，2，3，4。<br>科林有六个六面的（立方体型）骰子，每个面上分别标有1，2，3，4，5，6。</p>
<p>彼得和科林分别掷出他们的所有骰子，并比较点数和：点数和更大者获胜。如果点数和相同，双方打成平手。</p>
<p>金字塔彼得击败立方体科林的概率是多少？你的答案应当四舍五入至七位小数，即格式为0.abcdefg。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 207</title>
    <url>/207/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-207"><a href="#Problem-207" class="headerlink" title="Problem 207"></a><a href="https://projecteuler.net/problem=207">Problem 207</a></h1><hr>
<p><strong>Integer partition equations</strong></p>
<p>For some positive integers k, there exists an integer partition of the form&nbsp;&nbsp; 4<sup>t</sup> = 2<sup>t</sup> + k,<br>where 4<sup>t</sup>, 2<sup>t</sup>, and k are all positive integers and t is a real number.</p>
<p>The first two such partitions are 4<sup>1</sup> = 2<sup>1</sup> + 2 and 4<sup>1.5849625…</sup> = 2<sup>1.5849625…</sup> + 6.</p>
<p>Partitions where t is also an integer are called <i>perfect</i>.<br>For any m ≥ 1 let P(m) be the proportion of such partitions that are perfect with k ≤ m.<br>Thus P(6) = 1/2.</p>
<p>In the following table are listed some values of P(m)</p>
<blockquote>
<p>P(5) = 1/1<br>P(10) = 1/2<br>P(15) = 2/3<br>P(20) = 1/2<br>P(25) = 1/2<br>P(30) = 2/5<br>…<br>P(180) = 1/4<br>P(185) = 3/13</p>
</blockquote>
<p>Find the smallest m for which P(m) &lt; 1/12345</p>
<hr>
<p><strong>整数分拆等式</strong></p>
<p>对于某些正整数k，存在形如4<sup>t</sup> = 2<sup>t</sup> + k的整数分拆，<br>其中4<sup>t</sup>，2<sup>t</sup>和k均为正整数，而t为实数。</p>
<p>前两个这样的分拆分别是4<sup>1</sup> = 2<sup>1</sup> + 2和4<sup>1.5849625…</sup> = 2<sup>1.5849625…</sup> + 6。</p>
<p>如果t也是整数，这样的分拆称为<i>完美的</i>。<br>对于任意m ≥ 1，记P(m)是所有k ≤ m的分拆中完美分拆的比例。<br>因此P(6) = 1/2。</p>
<p>下面的表格列出了P(m)的部分取值：</p>
<blockquote>
<p>P(5) = 1/1<br>P(10) = 1/2<br>P(15) = 2/3<br>P(20) = 1/2<br>P(25) = 1/2<br>P(30) = 2/5<br>…<br>P(180) = 1/4<br>P(185) = 3/13</p>
</blockquote>
<p>求出使得P(m) &lt; 1/12345的最小m值。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 209</title>
    <url>/209/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-209"><a href="#Problem-209" class="headerlink" title="Problem 209"></a><a href="https://projecteuler.net/problem=209">Problem 209</a></h1><hr>
<p><strong>Circular Logic</strong></p>
<p>A k-input <i>binary truth table</i> is a map from k input bits(binary digits, 0 [false] or 1 [true]) to 1 output bit. For example, the 2-input binary truth tables for the logical AND and XOR functions are:<br></p>
<table>
<thead>
<tr>
<th align="center">x</th>
<th align="center">y</th>
<th align="center">x AND y</th>
<th align="center"></th>
<th align="center">x</th>
<th align="center">y</th>
<th align="center">x XOR y</th>
</tr>
</thead>
<tbody><tr>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center"></td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">0</td>
<td align="center">1</td>
<td align="center">0</td>
<td align="center"></td>
<td align="center">0</td>
<td align="center">1</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">1</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center"></td>
<td align="center">1</td>
<td align="center">0</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">1</td>
<td align="center">1</td>
<td align="center">1</td>
<td align="center"></td>
<td align="center">1</td>
<td align="center">1</td>
<td align="center">0</td>
</tr>
</tbody></table>
<p>How many 6-input binary truth tables, τ, satisfy the formula</p>
<center>τ(a, b, c, d, e, f) AND τ(b, c, d, e, f, a XOR (b AND c)) = 0</center>

<p>for all 6-bit inputs (a, b, c, d, e, f)?</p>
<hr>
<p><strong>圆环之理</strong></p>
<p>k元<i>真值表</i>是从k比特位（即二进制位的简称，其中0代表假，1代表真）输入到1比特位输出的映射。例如，逻辑运算符AND（和）和XOR（异或）的2元真值表如下所示：</p>
<table>
<thead>
<tr>
<th align="center">x</th>
<th align="center">y</th>
<th align="center">x AND y</th>
<th align="center"></th>
<th align="center">x</th>
<th align="center">y</th>
<th align="center">x XOR y</th>
</tr>
</thead>
<tbody><tr>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center"></td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">0</td>
<td align="center">1</td>
<td align="center">0</td>
<td align="center"></td>
<td align="center">0</td>
<td align="center">1</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">1</td>
<td align="center">0</td>
<td align="center">0</td>
<td align="center"></td>
<td align="center">1</td>
<td align="center">0</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">1</td>
<td align="center">1</td>
<td align="center">1</td>
<td align="center"></td>
<td align="center">1</td>
<td align="center">1</td>
<td align="center">0</td>
</tr>
</tbody></table>
<p>有多少个6元真值表τ，对于所有的6比特位输入(a, b, c, d, e, f)始终满足下述等式？</p>
<center>τ(a, b, c, d, e, f) AND τ(b, c, d, e, f, a XOR (b AND c)) = 0</center>

<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 208</title>
    <url>/208/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-208"><a href="#Problem-208" class="headerlink" title="Problem 208"></a><a href="https://projecteuler.net/problem=208">Problem 208</a></h1><hr>
<p><strong>Robot Walks</strong></p>
<p>A robot moves in a series of one-fifth circular arcs (72°), with a free choice of a clockwise or an anticlockwise arc for each step, but no turning on the spot.</p>
<p>One of 70932 possible closed paths of 25 arcs starting northward is</p>
<center><img src="/resources/images/0208_robotwalk.gif" alt=""></center>

<p>Given that the robot starts facing North, how many journeys of 70 arcs in length can it take that return it, after the final arc, to its starting position?<br>(Any arc may be traversed multiple times.) </p>
<hr>
<p><strong>机器人走路</strong></p>
<p>一个机器人每步走五分之一个圆弧（72°），它每步都可以选择顺时针走或是逆时针走，但在走的途中不能改变方向。</p>
<p>机器人从面向正北方开始，连续走25步所构成的闭合路径共有70932条，以下是其中一条：</p>
<center><img src="/resources/images/0208_robotwalk.gif" alt=""></center>

<p>假定机器人仍然从面向正北方开始，连续走70步之后，能够回到出发位置的路径有多少条？<br>（所有圆弧都可以经过多次。）</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 21</title>
    <url>/21/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-21"><a href="#Problem-21" class="headerlink" title="Problem 21"></a><a href="https://projecteuler.net/problem=21">Problem 21</a></h1><hr>
<h2 id="Amicable-Numbers"><a href="#Amicable-Numbers" class="headerlink" title="Amicable Numbers"></a><strong>Amicable Numbers</strong></h2><p>Let $d(n)$ be defined as the sum of proper divisors of $n$ (numbers less than $n$ which divide evenly into $n$).<br /><br>If $d(a) = b$ and $d(b) = a$, where $a \neq b$, then $a$ and $b$ are an amicable pair and each of $a$ and $b$ are called amicable numbers.</p>
<p>For example, the proper divisors of $220$ are $1$, $2$, $4$, $5$, $10$, $11$, $20$, $22$, $44$, $55$ and $110$; therefore $d(220) = 284$. The proper divisors of $284$ are $1$, $2$, $4$, $71$ and $142$; so $d(284) = 220$.</p>
<p>Evaluate the sum of all the amicable numbers under $10000$.</p>
<hr>
<h2 id="亲和数"><a href="#亲和数" class="headerlink" title="亲和数"></a><strong>亲和数</strong></h2><p>记$d(n)$为$n$的所有真约数（小于$n$且整除$n$的正整数）之和。<br /><br>如果$d(a) = b$，$d(b) = a$，而且$a\neq b$，那么$a$和$b$构成一个亲和数对，$a$和$b$都被称为亲和数。</p>
<p>例如，$220$的真因数包括$1$、$2$、$4$、$5$、$10$、$11$、$20$、$22$、$44$、$55$和$110$，因此$d(220) = 284$；而$284$的真因数包括$1$、$2$、$4$、$71$和$142$，因此$d(284) = 220$。</p>
<p>求所有小于$10000$的亲和数之和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 210</title>
    <url>/210/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-210"><a href="#Problem-210" class="headerlink" title="Problem 210"></a><a href="https://projecteuler.net/problem=210">Problem 210</a></h1><hr>
<p><strong>Obtuse Angled Triangles</strong></p>
<p>Consider the set S(r) of points (x,y) with integer coordinates satisfying |x| + |y| ≤ r.<br>Let O be the point (0,0) and C the point (r/4,r/4).<br>Let N(r) be the number of points B in S(r), so that the triangle OBC has an obtuse angle, i.e. the largest angle α satisfies 90°&lt;α&lt;180°.<br>So, for example, N(4)=24 and N(8)=100.</p>
<p>What is N(1,000,000,000)?</p>
<hr>
<p><strong>钝角三角形</strong></p>
<p>点集S(r)包含了所有坐标为整数且|x| + |y| ≤ r的点(x,y)。<br>记O为原点(0,0)，C为点(r/4,r/4)。<br>在S(r)中取一点B，使得三角形OBC有一个钝角，也即这个三角形的最大角α满足90°&lt;α&lt;180°，记所有这样的点B的数目为N(r)。<br>例如，N(4)=24以及N(8)=100。</p>
<p>求问N(1,000,000,000)是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 211</title>
    <url>/211/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-211"><a href="#Problem-211" class="headerlink" title="Problem 211"></a><a href="https://projecteuler.net/problem=211">Problem 211</a></h1><hr>
<p><strong>Divisor Square Sum</strong></p>
<p>For a positive integer n, let σ<sub>2</sub>(n) be the sum of the squares of its divisors. For example,</p>
<center>σ<sub>2</sub>(10) = 1 + 4 + 25 + 100 = 130.</center>

<p>Find the sum of all n, 0 &lt; n &lt; 64,000,000 such that σ<sub>2</sub>(n) is a perfect square.</p>
<hr>
<p><strong>约数平方和</strong></p>
<p>对于正整数n，记σ<sub>2</sub>(n)为其所有约数的平方和。例如，</p>
<center>σ<sub>2</sub>(10) = 1 + 4 + 25 + 100 = 130.</center>

<p>在0 &lt; n &lt; 64,000,000中，有些n满足σ<sub>2</sub>(n)为完全平方数，求所有这些n的和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 212</title>
    <url>/212/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-212"><a href="#Problem-212" class="headerlink" title="Problem 212"></a><a href="https://projecteuler.net/problem=212">Problem 212</a></h1><hr>
<p><strong>Combined Volume of Cuboids</strong></p>
<p>An <i>axis-aligned cuboid</i>, specified by parameters { (x<sub>0</sub>,y<sub>0</sub>,z<sub>0</sub>), (dx,dy,dz) }, consists of all points (X,Y,Z) such that x<sub>0</sub> ≤ X ≤ x<sub>0</sub>+dx, y<sub>0</sub> ≤ Y ≤ y<sub>0</sub>+dy and z<sub>0</sub> ≤ Z ≤ z<sub>0</sub>+dz.  The volume of the cuboid is the product, dx × dy × dz.  The <i>combined volume</i> of a collection of cuboids is the volume of their union and will be less than the sum of the individual volumes if any cuboids overlap.</p>
<p>Let C<sub>1</sub>,…,C<sub>50000</sub> be a collection of 50000 axis-aligned cuboids such that C<sub>n</sub> has parameters</p>
<p>x<sub>0</sub> = S<sub>6n-5</sub> modulo 10000<br>y<sub>0</sub> = S<sub>6n-4</sub> modulo 10000<br>z<sub>0</sub> = S<sub>6n-3</sub> modulo 10000<br>dx = 1 + (S<sub>6n-2</sub> modulo 399)<br>dy = 1 + (S<sub>6n-1</sub> modulo 399)<br>dz = 1 + (S<sub>6n</sub> modulo 399)</p>
<p>where S<sub>1</sub>,…,S<sub>300000</sub> come from the “Lagged Fibonacci Generator”:</p>
<p>For 1 ≤ k ≤ 55, S<sub>k</sub> = [100003 - 200003k + 300007k<sup>3</sup>] &nbsp; (modulo 1000000)<br>For 56 ≤ k, S<sub>k</sub> = [S<sub>k-24</sub> + S<sub>k-55</sub>] &nbsp; (modulo 1000000)</p>
<p>Thus, C<sub>1</sub> has parameters {(7,53,183),(94,369,56)}, C<sub>2</sub> has parameters {(2383,3563,5079),(42,212,344)}, and so on.</p>
<p>The combined volume of the first 100 cuboids, C<sub>1</sub>,…,C<sub>100</sub>, is 723581599.</p>
<p>What is the combined volume of all 50000 cuboids, C<sub>1</sub>,…,C<sub>50000</sub> ?</p>
<hr>
<p><strong>立方体组合体积</strong></p>
<p>一个<i>与轴平行的立方体</i>可以用参数{ (x<sub>0</sub>,y<sub>0</sub>,z<sub>0</sub>), (dx,dy,dz) }表示，包含所有满足x<sub>0</sub> ≤ X ≤ x<sub>0</sub>+dx、y<sub>0</sub> ≤ Y ≤ y<sub>0</sub>+dy和z<sub>0</sub> ≤ Z ≤ z<sub>0</sub>+dz的点(X,Y,Z)。该立方体的体积为乘积dx × dy × dz。一系列立方体的<i>组合体积</i>是它们的并的体积；如果其中有立方体相交，这些立方体的组合体积将会比各自体积之和要来得小。</p>
<p>记C<sub>1</sub>、……、C<sub>50000</sub>是一系列共50000个与轴平行的立方体，其中C<sub>n</sub>的参数为</p>
<p>x<sub>0</sub> = S<sub>6n-5</sub> modulo 10000<br>y<sub>0</sub> = S<sub>6n-4</sub> modulo 10000<br>z<sub>0</sub> = S<sub>6n-3</sub> modulo 10000<br>dx = 1 + (S<sub>6n-2</sub> modulo 399)<br>dy = 1 + (S<sub>6n-1</sub> modulo 399)<br>dz = 1 + (S<sub>6n</sub> modulo 399)</p>
<p>这里的S<sub>1</sub>、……、S<sub>300000</sub>来自如下的“延迟斐波那契生成器”：</p>
<p>对于1 ≤ k ≤ 55，S<sub>k</sub> = [100003 - 200003k + 300007k<sup>3</sup>] &nbsp; (modulo 1000000)<br>对于56 ≤ k，S<sub>k</sub> = [S<sub>k-24</sub> + S<sub>k-55</sub>] &nbsp; (modulo 1000000)</p>
<p>因此，C<sub>1</sub>的参数为{(7,53,183),(94,369,56)}，C<sub>2</sub>的参数为{(2383,3563,5079),(42,212,344)}，依此类推。</p>
<p>前100个立方体C<sub>1</sub>、……、C<sub>100</sub>的组合体积是723581599。</p>
<p>全部50000个立方体C<sub>1</sub>、……、C<sub>50000</sub>的组合体积是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 213</title>
    <url>/213/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-213"><a href="#Problem-213" class="headerlink" title="Problem 213"></a><a href="https://projecteuler.net/problem=213">Problem 213</a></h1><hr>
<p><strong>Flea Circus</strong></p>
<p>A 30×30 grid of squares contains 900 fleas, initially one flea per square.<br>When a bell is rung, each flea jumps to an adjacent square at random (usually 4 possibilities, except for fleas on the edge of the grid or at the corners).</p>
<p>What is the expected number of unoccupied squares after 50 rings of the bell? Give your answer rounded to six decimal places.</p>
<hr>
<p><strong>跳蚤马戏团</strong></p>
<p>在30×30的方形网格上共有900只跳蚤，初始状态下每个方格上有一只跳蚤。<br>每响起一次钟声，每只跳蚤随机跳向一个相邻的方格（一般有4种选择，除非跳蚤是在网格的边上或角上）。</p>
<p>在响起50次钟声后，没有跳蚤的方格的期望数目是多少？将你的答案四舍五入到六位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 214</title>
    <url>/214/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-214"><a href="#Problem-214" class="headerlink" title="Problem 214"></a><a href="https://projecteuler.net/problem=214">Problem 214</a></h1><hr>
<p><strong>Totient Chains</strong></p>
<p>Let φ be Euler’s totient function, i.e. for a natural number n, φ(n) is the number of k, 1 ≤ k ≤ n, for which gcd(k,n) = 1.</p>
<p>By iterating φ, each positive integer generates a decreasing chain of numbers ending in 1.<br>E.g. if we start with 5 the sequence 5,4,2,1 is generated.<br>Here is a listing of all chains with length 4:</p>
<p>&nbsp;5,4,2,1<br>&nbsp;7,6,2,1<br>&nbsp;8,4,2,1<br>&nbsp;9,6,2,1<br>10,4,2,1<br>12,4,2,1<br>14,6,2,1<br>18,6,2,1</p>
<p>Only two of these chains start with a prime, their sum is 12.</p>
<p>What is the sum of all primes less than 40000000 which generate a chain of length 25?</p>
<hr>
<p><strong>总计函数链</strong></p>
<p>令φ表示欧拉总计函数，也就是说，对于自然数n，所有1 ≤ k ≤ n且gcd(k,n) = 1的正整数k的数目记为φ(n)。</p>
<p>通过迭代求φ，每个正整数都能生成一条不断下降最终以1结束的链。<br>例如，如果我们从5开始，生成的序列为5、4、2、1。<br>如下所列是所有长度为4的链：</p>
<p>5,4,2,1<br>7,6,2,1<br>8,4,2,1<br>9,6,2,1<br>10,4,2,1<br>12,4,2,1<br>14,6,2,1<br>18,6,2,1</p>
<p>其中只有两条链从素数开始，这两个素数的和为12。</p>
<p>在小于40000000的素数中，能生成长度为25的链的素数之和是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 215</title>
    <url>/215/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-215"><a href="#Problem-215" class="headerlink" title="Problem 215"></a><a href="https://projecteuler.net/problem=215">Problem 215</a></h1><hr>
<p><strong>Crack-free Walls</strong></p>
<p>Consider the problem of building a wall out of 2×1 and 3×1 bricks (horizontal×vertical dimensions) such that, for extra strength, the gaps between horizontally-adjacent bricks never line up in consecutive layers, i.e. never form a “running crack”.</p>
<p>For example, the following 9×3 wall is not acceptable due to the running crack shown in red:</p>
<center><img src="/resources/images/0215_crackfree.gif" alt=""></center>

<p>There are eight ways of forming a crack-free 9×3 wall, written W(9,3) = 8.</p>
<p>Calculate W(32,10).</p>
<hr>
<p><strong>没有裂纹的墙</strong></p>
<p>考虑这样一个问题：用大小为2×1和3×1的砖块（均为宽度×高度）来筑墙，而且为了保证强度，两个砖块之间的空隙的上下方均不能是砖块的空隙，也就是说不能有“延伸裂纹”。</p>
<p>例如，如下的9×3的墙就是不可行的，因为其中有用红色标出的延伸裂纹：</p>
<center><img src="/resources/images/0215_crackfree.gif" alt=""></center>

<p>筑一面没有裂纹的9×3的墙一共有八种方式，记为W(9,3) = 8。</p>
<p>试计算W(32,10)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 216</title>
    <url>/216/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-216"><a href="#Problem-216" class="headerlink" title="Problem 216"></a><a href="https://projecteuler.net/problem=216">Problem 216</a></h1><hr>
<p><strong>Investigating the primality of numbers of the form 2n<sup>2</sup>-1</strong></p>
<p>Consider numbers t(n) of the form t(n) = 2n<sup>2</sup>-1 with n &gt; 1.<br>The first such numbers are 7, 17, 31, 49, 71, 97, 127 and 161.<br>It turns out that only 49 = 7*7 and 161 = 7*23 are not prime.<br>For n ≤ 10000 there are 2202 numbers t(n) that are prime.</p>
<p>How many numbers t(n) are prime for n ≤ 50,000,000 ?</p>
<hr>
<p><strong>研究形如2n<sup>2</sup>-1的数是否为素数</strong></p>
<p>考虑形如t(n) = 2n<sup>2</sup>-1的数t(n)，其中n &gt; 1。<br>前几个这样的数分别是7、17、31、49、71、97、127和161。<br>可见只有49 = 7*7和161 = 7*23不是素数。<br>对于n ≤ 10000，一共有2202个t(n)是素数。</p>
<p>对于n ≤ 50,000,000，一共有多少个t(n)是素数？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 217</title>
    <url>/217/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-217"><a href="#Problem-217" class="headerlink" title="Problem 217"></a><a href="https://projecteuler.net/problem=217">Problem 217</a></h1><hr>
<p><strong>Balanced Numbers</strong></p>
<p>A positive integer with k (decimal) digits is called balanced if its first ⌈<sup>k</sup>/<sub>2</sub>⌉ digits sum to the same value as its last ⌈<sup>k</sup>/<sub>2</sub>⌉ digits, where ⌈x⌉, pronounced <i>ceiling</i> of x, is the smallest integer ≥ x, thus ⌈π⌉ = 4 and ⌈5⌉ = 5.</p>
<p>So, for example, all palindromes are balanced, as is 13722.</p>
<p>Let T(n) be the sum of all balanced numbers less than 10<sup>n</sup>.<br>Thus: T(1) = 45, T(2) = 540 and T(5) = 334795890. </p>
<p>Find T(47) mod 3<sup>15</sup>.</p>
<hr>
<p><strong>平衡数</strong></p>
<p>如果一个k位（十进制）正整数，其前⌈<sup>k</sup>/<sub>2</sub>⌉个数字之和等于其后⌈<sup>k</sup>/<sub>2</sub>⌉个数字之和，则称之为平衡数。这里⌈x⌉表示x的<i>上取整</i>函数，也就是≥ x的最小整数，例如⌈π⌉ = 4以及⌈5⌉ = 5。</p>
<p>举例来说，所有的回文数都是平衡数；13722也是平衡数。</p>
<p>记T(n)是所有小于10<sup>n</sup>的平衡数之和。<br>因此：T(1) = 45，T(2) = 540以及T(5) = 334795890。</p>
<p>求T(47) mod 3<sup>15</sup>。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 218</title>
    <url>/218/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-218"><a href="#Problem-218" class="headerlink" title="Problem 218"></a><a href="https://projecteuler.net/problem=218">Problem 218</a></h1><hr>
<p><strong>Perfect right-angled triangles</strong></p>
<p>Consider the right angled triangle with sides a=7, b=24 and c=25. The area of this triangle is 84, which is divisible by the perfect numbers 6 and 28.<br>Moreover it is a primitive right angled triangle as gcd(a,b)=1 and gcd(b,c)=1.<br>Also c is a perfect square.</p>
<p>We will call a right angled triangle perfect if</p>
<ul>
<li>it is a primitive right angled triangle</li>
<li>its hypotenuse is a perfect square</li>
</ul>
<p>We will call a right angled triangle super-perfect if</p>
<ul>
<li>it is a perfect right angled triangle and</li>
<li>its area is a multiple of the perfect numbers 6 and 28.</li>
</ul>
<p>How many perfect right-angled triangles with c≤10<sup>16</sup> exist that are not super-perfect?</p>
<hr>
<p><strong>完美直角三角形</strong></p>
<p>考虑边长为a=7、b=24以及c=25的直角三角形。这个三角形的面积是84，能够被完全数6和28整除。<br>此外，它还是一个原始直角三角形，因为gcd(a,b)=1且gcd(b,c)=1。<br>同时，c还是一个完全平方数。</p>
<p>我们称一个直角三角形是完美的，如果</p>
<ul>
<li>它是一个原始直角三角形</li>
<li>它的斜边是一个完全平方数</li>
</ul>
<p>我们称一个直角三角形是超级完美的，如果</p>
<ul>
<li>它是一个完美的直角三角形，而且</li>
<li>它的面积是完全数6和28的倍数</li>
</ul>
<p>在斜边c≤10<sup>16</sup>的完美直角三角形中，有多少个不是超级完美的？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 219</title>
    <url>/219/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-219"><a href="#Problem-219" class="headerlink" title="Problem 219"></a><a href="https://projecteuler.net/problem=219">Problem 219</a></h1><hr>
<p><strong>Skew-cost coding</strong></p>
<p>Let <b>A</b> and <b>B</b> be bit strings (sequences of 0’s and 1’s).<br>If <b>A</b> is equal to the <u>left</u>most length(<b>A</b>) bits of <b>B</b>, then <b>A</b> is said to be a <i>prefix</i> of <b>B</b>.<br>For example, 00110 is a prefix of <u>00110</u>1001, but not of 00111 or 100110.</p>
<p>A <i>prefix-free code of size n</i> is a collection of n distinct bit strings such that no string is a prefix of any other. For example, this is a prefix-free code of size 6:</p>
<center>0000, 0001, 001, 01, 10, 11</center>

<p>Now suppose that it costs one penny to transmit a ‘0’ bit, but four pence to transmit a ‘1’.<br>Then the total cost of the prefix-free code shown above is 35 pence, which happens to be the cheapest possible for the skewed pricing scheme in question.<br>In short, we write Cost(6) = 35.</p>
<p>What is Cost(10<sup>9</sup>) ?</p>
<hr>
<p><strong>成本倾斜编码</strong></p>
<p>记<b>A</b>和<b>B</b>均为比特串（由0和1组成的序列）。<br>如果在<b>B</b>的最<u>左</u>端取和<b>A</b>的长度相等的比特位，所构成的比特串恰好等于<b>A</b>，则称<b>A</b>为<b>B</b>的<i>前缀</i>。<br>举例来说，00110是<u>00110</u>1001的前缀，但不是00111或100110的前缀。</p>
<p><i>n阶无前缀编码</i>是指n个不同的比特串，其中任意一个都不是另一个的前缀。例如，6阶无前缀编码的其中一种是：</p>
<center>0000, 0001, 001, 01, 10, 11</center>

<p>现在假设传输比特位“0”的成本是一个便士，而传输比特位“1”的成本是4个便士。<br>那么，上述无前缀编码的总成本是35便士，恰好是这个成本倾斜编码问题最便宜的一种可能。<br>我们将其简记为Cost(6) = 35。</p>
<p>Cost(10<sup>9</sup>)是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 22</title>
    <url>/22/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-22"><a href="#Problem-22" class="headerlink" title="Problem 22"></a><a href="https://projecteuler.net/problem=22">Problem 22</a></h1><hr>
<h2 id="Names-Scores"><a href="#Names-Scores" class="headerlink" title="Names Scores"></a><strong>Names Scores</strong></h2><p>Using <a href="https://projecteuler.net/project/resources/p022_names.txt">names.txt</a>(right click and ‘Save Link/Target As…’), a 46K text file containing over five-thousand first names, begin by sorting it into alphabetical order. Then working out the alphabetical value for each name, multiply this value by its alphabetical position in the list to obtain a name score.</p>
<p>For example, when the list is sorted into alphabetical order, COLIN, which is worth $3 + 15 + 12 + 9 + 14 = 53$, is the $938$th name in the list. So, COLIN would obtain a score of $938 \times 53 = 49714$.</p>
<p>What is the total of all the name scores in the file?</p>
<hr>
<h2 id="英文名得分"><a href="#英文名得分" class="headerlink" title="英文名得分"></a><strong>英文名得分</strong></h2><p>在文本文件<a href="https://projecteuler.net/project/resources/p022_names.txt">names.txt</a>中有五千多个英文名。首先将这些英文名按照字母序排序，然后计算出每个英文名的字母价值，乘以它在按字母序排序后的位置，得到的就是这个英文名的得分。</p>
<p>例如，按照字母序排序后，位于第$938$位的名字是COLIN，它的字母价值是$3 + 15 + 12 + 9 + 14 = 53$。因此，COLIN这个英文名的得分是$938 \times 53 = 49714$。</p>
<p>上述文本文件中，所有英文名的得分之和是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 220</title>
    <url>/220/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-220"><a href="#Problem-220" class="headerlink" title="Problem 220"></a><a href="https://projecteuler.net/problem=220">Problem 220</a></h1><hr>
<p><strong>Heighway Dragon</strong></p>
<p>Let <b>D</b><sub>0</sub> be the two-letter string “Fa”. For n≥1, derive <b>D</b><sub>n</sub> from <b>D</b><sub>n-1</sub> by the string-rewriting rules:</p>
<p>“a” → “aRbFR”<br>“b” → “LFaLb”</p>
<p>Thus, <b>D</b><sub>0</sub> = “Fa”, <b>D</b><sub>1</sub> = “FaRbFR”, <b>D</b><sub>2</sub> = “FaRbFRRLFaLbFR”, and so on.</p>
<p>These strings can be interpreted as instructions to a computer graphics program, with “F” meaning “draw forward one unit”, “L” meaning “turn left 90 degrees”, “R” meaning “turn right 90 degrees”, and “a” and “b” being ignored. The initial position of the computer cursor is (0,0), pointing up towards (0,1).</p>
<p>Then <b>D</b><sub>n</sub> is an exotic drawing known as the <i>Heighway Dragon</i> of order n.  For example, <b>D</b><sub>10</sub> is shown below; counting each “F” as one step, the highlighted spot at (18,16) is the position reached after 500 steps.</p>
<center><img src="/resources/images/0220.gif" alt=""></center>

<p>What is the position of the cursor after 10<sup>12</sup> steps in <b>D</b><sub>50</sub> ?<br>Give your answer in the form x,y with no spaces.</p>
<hr>
<p><strong>海韦龙形曲线</strong></p>
<p>记<b>D</b><sub>0</sub>为包含两个字符的字符串“Fa”。对于n≥1，我们通过如下的字符串重写规则，由<b>D</b><sub>n-1</sub>推出<b>D</b><sub>n</sub>：</p>
<p>“a” → “aRbFR”<br>“b” → “LFaLb”</p>
<p>因此，<b>D</b><sub>0</sub> = “Fa”，<b>D</b><sub>1</sub> = “FaRbFR”，<b>D</b><sub>2</sub> = “FaRbFRRLFaLbFR”，依此类推。</p>
<p>这些字符串可以作为一个计算机绘图程序的指令加以解读，其中“F”表示“向前画一单位”，“L”表示“左转90度”，“R”表示“右转90度”，而“a”和“b”可以忽略。初始状态下，计算机光标的位置是(0,0)，方向指向(0,1)。</p>
<p>根据<b>D</b><sub>n</sub>绘制的奇异图象被称为n阶<i>海韦龙形曲线</i>。例如，如下所示为<b>D</b><sub>10</sub>；如果把每个“F”算作一步，高亮的点(18,16)是经过500步时所到达的位置。</p>
<center><img src="/resources/images/0220.gif" alt=""></center>

<p>根据<b>D</b><sub>50</sub>绘制图象，经过10<sup>12</sup>步之后，光标的位置在哪里？<br>将你的答案写作“x,y”的形式，中间没有空格。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 221</title>
    <url>/221/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-221"><a href="#Problem-221" class="headerlink" title="Problem 221"></a><a href="https://projecteuler.net/problem=221">Problem 221</a></h1><hr>
<p><strong>Alexandrian Integers</strong></p>
<p>We shall call a positive integer A an “Alexandrian integer”, if there exist integers p, q, r such that:</p>
<p>$$A=p·q·r \text{ and } \frac{1}{A}=\frac{1}{p}+\frac{1}{q}+\frac{1}{r}$$</p>
<p>For example, 630 is an Alexandrian integer (p&nbsp;=&nbsp;5, q&nbsp;=&nbsp;−7, r&nbsp;=&nbsp;−18). In fact, 630 is the 6<sup>th</sup> Alexandrian integer,  the first 6 Alexandrian integers being: 6, 42, 120, 156, 420 and 630.</p>
<p>Find the 150000<sup>th</sup> Alexandrian integer.</p>
<hr>
<p><strong>亚历山大整数</strong></p>
<p>我们称一个正整数A为“亚历山大整数”，如果存在整数p、q、r满足：</p>
<p>$$A=p·q·r \text{ 且 } \frac{1}{A}=\frac{1}{p}+\frac{1}{q}+\frac{1}{r}$$</p>
<p>例如，630是一个亚历山大整数（p&nbsp;=&nbsp;5，q&nbsp;=&nbsp;−7，r&nbsp;=&nbsp;−18）。事实上，630是第6个亚历山大整数，前6个亚历山大整数分别是6、42、120、156、420和630。</p>
<p>求第150000个亚历山大整数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 222</title>
    <url>/222/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-222"><a href="#Problem-222" class="headerlink" title="Problem 222"></a><a href="https://projecteuler.net/problem=222">Problem 222</a></h1><hr>
<p><strong>Sphere Packing</strong></p>
<p>What is the length of the shortest pipe, of internal radius 50mm, that can fully contain 21 balls of radii 30mm, 31mm, …, 50mm?</p>
<p>Give your answer in micrometres (10<sup>-6</sup> m) rounded to the nearest integer.</p>
<hr>
<hr>
<p><strong>球体打包</strong></p>
<p>将21个半径分别为30mm、31mm、……、50mm的球完全装入一根内径50mm的管子，所需管长最短是多少？</p>
<p>将你的答案用微米(10<sup>-6</sup> m)表示，并四舍五入到最近的整数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 223</title>
    <url>/223/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-223"><a href="#Problem-223" class="headerlink" title="Problem 223"></a><a href="https://projecteuler.net/problem=223">Problem 223</a></h1><hr>
<p><strong>Almost right-angled triangles I</strong></p>
<p>Let us call an integer sided triangle with sides a ≤ b ≤ c <i>barely acute</i> if the sides satisfy a<sup>2</sup> + b<sup>2</sup> = c<sup>2</sup> + 1.</p>
<p>How many barely acute triangles are there with perimeter ≤ 25,000,000?</p>
<hr>
<p><strong>几乎直角的三角形I</strong></p>
<p>如果一个边长为整数a ≤ b ≤ c的三角形满足a<sup>2</sup> + b<sup>2</sup> = c<sup>2</sup> + 1，我们称其为<i>略微锐角</i>的三角形。</p>
<p>有多少个周长≤ 25,000,000的略微锐角三角形？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 224</title>
    <url>/224/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-224"><a href="#Problem-224" class="headerlink" title="Problem 224"></a><a href="https://projecteuler.net/problem=224">Problem 224</a></h1><hr>
<p><strong>Almost right-angled triangles II</strong></p>
<p>Let us call an integer sided triangle with sides a ≤ b ≤ c <i>barely obtuse</i> if the sides satisfy a<sup>2</sup> + b<sup>2</sup> = c<sup>2</sup> - 1.</p>
<p>How many barely obtuse triangles are there with perimeter ≤ 75,000,000?</p>
<hr>
<p><strong>几乎执教的三角形II</strong></p>
<p>如果一个边长为整数a ≤ b ≤ c的三角形满足a<sup>2</sup> + b<sup>2</sup> = c<sup>2</sup> - 1，我们称其为<i>略微钝角</i>的三角形。</p>
<p>有多少个周长≤ 75,000,000的略微钝角三角形？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 225</title>
    <url>/225/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-225"><a href="#Problem-225" class="headerlink" title="Problem 225"></a><a href="https://projecteuler.net/problem=225">Problem 225</a></h1><hr>
<p><strong>Tribonacci non-divisors</strong></p>
<p>The sequence 1, 1, 1, 3, 5, 9, 17, 31, 57, 105, 193, 355, 653, 1201 …<br>is defined by T<sub>1</sub> = T<sub>2</sub> = T<sub>3</sub> = 1 and T<sub>n</sub> = T<sub>n-1</sub> + T<sub>n-2</sub> + T<sub>n-3</sub>.</p>
<p>It can be shown that 27 does not divide any terms of this sequence. In fact, 27 is the first odd number with this property.</p>
<p>Find the 124<sup>th</sup> odd number that does not divide any terms of the above sequence.</p>
<hr>
<p><strong>三阶斐波那契数的非约数</strong></p>
<p>序列1, 1, 1, 3, 5, 9, 17, 31, 57, 105, 193, 355, 653, 1201 …<br>的定义为T<sub>1</sub> = T<sub>2</sub> = T<sub>3</sub> = 1以及T<sub>n</sub> = T<sub>n-1</sub> + T<sub>n-2</sub> + T<sub>n-3</sub>。</p>
<p>可以说明，27不能整除这个序列中的任何一项。事实上，27是第一个拥有这一性质的奇数。</p>
<p>求第124个不能整除上述序列中任何一项的奇数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 226</title>
    <url>/226/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-226"><a href="#Problem-226" class="headerlink" title="Problem 226"></a><a href="https://projecteuler.net/problem=226">Problem 226</a></h1><hr>
<p><strong>A Scoop of Blancmange</strong></p>
<p>The <i>blancmange curve</i> is the set of points (x,y) such that 0 ≤ x ≤ 1 and $y=\sum_{n=0}^{\infty} \frac{s(2^n x)}{2^n}$,<br>where s(x) = the distance from x to the nearest integer.</p>
<p>The area under the blancmange curve is equal to <sup>1</sup>/<sub>2</sub>, shown in pink in the diagram below.</p>
<center><img src="/resources/images/0226_scoop2.gif" alt="blancmange curve"></center>

<p>Let C be the circle with centre (<sup>1</sup>/<sub>4</sub>,<sup>1</sup>/<sub>2</sub>) and radius <sup>1</sup>/<sub>4</sub>, shown in black in the diagram.</p>
<p>What area under the blancmange curve is enclosed by C?<br>Give your answer rounded to eight decimal places in the form <i>0.abcdefgh</i></p>
<hr>
<p><strong>一勺牛奶冻</strong></p>
<p><i>牛奶冻曲线</i>上的点(x,y)满足0 ≤ x ≤ 1且$y=\sum_{n=0}^{\infty} \frac{s(2^n x)}{2^n}$，<br>其中s(x)是x与最近的整数之间的距离。</p>
<p>牛奶冻曲线以下的部分，如下图粉色区域所示，其面积为<sup>1</sup>/<sub>2</sub>。</p>
<center><img src="/resources/images/0226_scoop2.gif" alt="blancmange curve"></center>

<p>C是以(<sup>1</sup>/<sub>4</sub>,<sup>1</sup>/<sub>2</sub>)为圆心，半径为<sup>1</sup>/<sub>4</sub>的圆，在下图中用黑色标出。</p>
<p>牛奶冻曲线以下的部分有多少在圆C中？<br>将你的答案四舍五入到八位小数，即格式为<i>0.abcdefgh</i></p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 227</title>
    <url>/227/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-227"><a href="#Problem-227" class="headerlink" title="Problem 227"></a><a href="https://projecteuler.net/problem=227">Problem 227</a></h1><hr>
<p><strong>The Chase</strong></p>
<p>“<i>The Chase</i>“ is a game played with two dice and an even number of players.</p>
<p>The players sit around a table; the game begins with two opposite players having one die each. On each turn, the two players with a die roll it.<br>If a player rolls a 1, he passes the die to his neighbour on the left; if he rolls a 6, he passes the die to his neighbour on the right; otherwise, he keeps the die for the next turn.<br>The game ends when one player has both dice after they have been rolled and passed; that player has then lost.</p>
<p>In a game with 100 players, what is the expected number of turns the game lasts?</p>
<p>Give your answer rounded to ten significant digits.</p>
<hr>
<p><strong>追赶游戏</strong></p>
<p>“<i>追赶游戏</i>”是一个需要偶数名玩家和两个骰子进行的游戏。</p>
<p>所有玩家在桌子边坐成一圈；游戏开始时，选择两名相对而坐的玩家，每人拿一颗骰子。在每一轮，拥有骰子的两名玩家掷出骰子。<br>如果玩家掷出点数1，他将骰子交给他左侧的那名玩家；如果他掷出点数6，他将骰子交给他右侧的那名玩家；除此之外的情况，他保留这颗骰子。<br>当每一轮结束时，如果有一名玩家拿着两颗骰子，游戏结束，这名玩家输掉游戏。</p>
<p>如果有100名玩家参与游戏，游戏进行的期望轮数是多少？</p>
<p>你的答案应当保留10位有效数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 228</title>
    <url>/228/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-228"><a href="#Problem-228" class="headerlink" title="Problem 228"></a><a href="https://projecteuler.net/problem=228">Problem 228</a></h1><hr>
<p><strong>Minkowski Sums</strong></p>
<p>Let S<sub>n</sub> be the regular n-sided polygon – or <i>shape</i> – whose vertices v<sub>k</sub> (k&thinsp;=&thinsp;1,2,…,n) have coordinates:</p>
<center>$x_k= \text{cos(}\frac{2k-1}{n} \times 180^\circ \text{)}$
$y_k= \text{sin(}\frac{2k-1}{n} \times 180^\circ \text{)}$
</center>

<p>Each S<sub>n</sub> is to be interpreted as a filled shape consisting of all points on the perimeter and in the interior.</p>
<p>The <i>Minkowski sum</i>, S+T, of two shapes S and T is the result of adding every point in S to every point in T, where point addition is performed coordinate-wise: (u,&thinsp;v) + (x,&thinsp;y) = (u+x,&thinsp;v+y).</p>
<p>For example, the sum of S<sub>3</sub> and S<sub>4</sub> is the six-sided shape shown in pink below:</p>
<center><img src="/resources/images/0228.png" alt="picture showing S_3 + S_4"></center>

<p>How many sides does S<sub>1864</sub>&thinsp;+&thinsp;S<sub>1865</sub>&thinsp;+&thinsp;…&thinsp;+&thinsp;S<sub>1909</sub> have?</p>
<hr>
<p><strong>闵可夫斯基和</strong></p>
<p>记S<sub>n</sub>为正n边形——或者叫<i>图形</i>——且其顶点v<sub>k</sub>(k&thinsp;=&thinsp;1,2,…,n)的坐标为：</p>
<center>$x_k= \text{cos(}\frac{2k-1}{n} \times 180^\circ \text{)}$
$y_k= \text{sin(}\frac{2k-1}{n} \times 180^\circ \text{)}$
</center>

<p>每个S<sub>n</sub>都是实心图形，包含有其边界上和内部的所有点。</p>
<p>两个图形S和T的<i>闵可夫斯基和</i>是将S所包含的每个点加在T内的每个点所得的结果，这里所谓两个点相加即将它们的坐标相加：(u,&thinsp;v) + (x,&thinsp;y) = (u+x,&thinsp;v+y)。</p>
<p>例如，S<sub>3</sub>和S<sub>4</sub>的闵可夫斯基和是如下粉色的六边形：</p>
<center><img src="/resources/images/0228.png" alt="picture showing S_3 + S_4"></center>

<p>闵可夫斯基和S<sub>1864</sub>&thinsp;+&thinsp;S<sub>1865</sub>&thinsp;+&thinsp;…&thinsp;+&thinsp;S<sub>1909</sub>是一个多少边形？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 23</title>
    <url>/23/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-23"><a href="#Problem-23" class="headerlink" title="Problem 23"></a><a href="https://projecteuler.net/problem=23">Problem 23</a></h1><hr>
<h2 id="Non-Abundant-Sums"><a href="#Non-Abundant-Sums" class="headerlink" title="Non-Abundant Sums"></a><strong>Non-Abundant Sums</strong></h2><p>A perfect number is a number for which the sum of its proper divisors is exactly equal to the number. For example, the sum of the proper divisors of $28$ would be $1 + 2 + 4 + 7 + 14 = 28$, which means that $28$ is a perfect number.</p>
<p>A number $n$ is called deficient if the sum of its proper divisors is less than $n$ and it is called abundant if this sum exceeds $n$.</p>
<p>As $12$ is the smallest abundant number, $1 + 2 + 3 + 4 + 6 = 16$, the smallest number that can be written as the sum of two abundant numbers is $24$. By mathematical analysis, it can be shown that all integers greater than $28123$ can be written as the sum of two abundant numbers. However, this upper limit cannot be reduced any further by analysis even though it is known that the greatest number that cannot be expressed as the sum of two abundant numbers is less than this limit.</p>
<p>Find the sum of all the positive integers which cannot be written as the sum of two abundant numbers.</p>
<hr>
<h2 id="非盈数和"><a href="#非盈数和" class="headerlink" title="非盈数和"></a><strong>非盈数和</strong></h2><p>完全数是指真约数之和等于自身的数。例如，$28$的真约数之和为$1 + 2 + 4 + 7 + 14 = 28$，因此$28$是一个完全数。</p>
<p>若一个数$n$的真约数之和小于$n$，则称之为亏数；反之，则称之为盈数。</p>
<p>由于$12$是最小的盈数（它的真约数之和为$1 + 2 + 3 + 4 + 6 = 16$），所以能够表示成两个盈数之和的最小数是$24$。通过数学分析可以得出，所有大于$28123$的数都可以被表示成两个盈数的和。但是，这仅仅是通过数学分析所能得到的最好上界，而实际上不能被表示成两个盈数之和的最大数要小于这个值。</p>
<p>求所有不能被表示成两个盈数之和的正整数之和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 229</title>
    <url>/229/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-229"><a href="#Problem-229" class="headerlink" title="Problem 229"></a><a href="https://projecteuler.net/problem=229">Problem 229</a></h1><hr>
<p><strong>Four Representations using Squares</strong></p>
<p>Consider the number 3600. It is very special, because</p>
<center>3600 = 48<sup>2</sup> + &nbsp;&nbsp;&nbsp; &nbsp;36<sup>2</sup>
3600 = 20<sup>2</sup> + 2×40<sup>2</sup>
3600 = 30<sup>2</sup> + 3×30<sup>2</sup>
3600 = 45<sup>2</sup> + 7×15<sup>2</sup>
</center>

<p>Similarly, we find that 88201 = 99<sup>2</sup> + 280<sup>2</sup> = 287<sup>2</sup> + 2×54<sup>2</sup> = 283<sup>2</sup> + 3×52<sup>2</sup> = 197<sup>2</sup> + 7×84<sup>2</sup>.</p>
<p>In 1747, Euler proved which numbers are representable as a sum of two squares.<br>We are interested in the numbers n which admit representations of all of the following four types:</p>
<center>n = a<sub>1</sub><sup>2</sup> + &nbsp;&nbsp; b<sub>1</sub><sup>2</sup>
n = a<sub>2</sub><sup>2</sup> + 2 b<sub>2</sub><sup>2</sup>
n = a<sub>3</sub><sup>2</sup> + 3 b<sub>3</sub><sup>2</sup>
n = a<sub>7</sub><sup>2</sup> + 7 b<sub>7</sub><sup>2</sup>,
</center>

<p>where the a<sub>k</sub> and b<sub>k</sub> are positive integers.</p>
<p>There are 75373 such numbers that do not exceed 10<sup>7</sup>.<br>How many such numbers are there that do not exceed 2×10<sup>9</sup>?</p>
<hr>
<p><strong>四种平方数表示</strong></p>
<p>3600是个特别的数，因为</p>
<center>3600 = 48<sup>2</sup> + &nbsp;&nbsp;&nbsp; &nbsp;36<sup>2</sup>
3600 = 20<sup>2</sup> + 2×40<sup>2</sup>
3600 = 30<sup>2</sup> + 3×30<sup>2</sup>
3600 = 45<sup>2</sup> + 7×15<sup>2</sup>
</center>

<p>相似地，我们发现88201 = 99<sup>2</sup> + 280<sup>2</sup> = 287<sup>2</sup> + 2×54<sup>2</sup> = 283<sup>2</sup> + 3×52<sup>2</sup> = 197<sup>2</sup> + 7×84<sup>2</sup>。</p>
<p>在1747年，欧拉证明了哪些数字可以表示成两个平方数之和。<br>我们感兴趣的则是那些数字n可以写成如下四种形式的平方数之和：</p>
<center>n = a<sub>1</sub><sup>2</sup> + &nbsp;&nbsp; b<sub>1</sub><sup>2</sup>
n = a<sub>2</sub><sup>2</sup> + 2 b<sub>2</sub><sup>2</sup>
n = a<sub>3</sub><sup>2</sup> + 3 b<sub>3</sub><sup>2</sup>
n = a<sub>7</sub><sup>2</sup> + 7 b<sub>7</sub><sup>2</sup>,
</center>

<p>其中a<sub>k</sub>和b<sub>k</sub>均为正整数。</p>
<p>在不超过10<sup>7</sup>的数中，满足这一性质的有75373个。<br>在不超过2×10<sup>9</sup>的数中，满足这一性质的有多少个？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 231</title>
    <url>/231/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-231"><a href="#Problem-231" class="headerlink" title="Problem 231"></a><a href="https://projecteuler.net/problem=231">Problem 231</a></h1><hr>
<p><strong>The prime factorisation of binomial coefficients</strong></p>
<p>The binomial coefficient <sup>10</sup>C<sub>3</sub> = 120.<br>120 = 2<sup>3</sup> × 3 × 5 = 2 × 2 × 2 × 3 × 5, and 2 + 2 + 2 + 3 + 5 = 14.<br>So the sum of the terms in the prime factorisation of <sup>10</sup>C<sub>3</sub> is 14.</p>
<p>Find the sum of the terms in the prime factorisation of <sup>20000000</sup>C<sub>15000000</sub>.</p>
<hr>
<p><strong>二项式系数质因数分解</strong></p>
<p>二项式系数<sup>10</sup>C<sub>3</sub> = 120。<br>120 = 2<sup>3</sup> × 3 × 5 = 2 × 2 × 2 × 3 × 5，而2 + 2 + 2 + 3 + 5 = 14。<br>因此<sup>10</sup>C<sub>3</sub>质因数分解后各项的和为14。</p>
<p>求<sup>20000000</sup>C<sub>15000000</sub>质因数分解后各项的和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 230</title>
    <url>/230/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-230"><a href="#Problem-230" class="headerlink" title="Problem 230"></a><a href="https://projecteuler.net/problem=230">Problem 230</a></h1><hr>
<p><strong>Fibonacci Words</strong></p>
<p>For any two strings of digits, A and B, we define F<sub>A,B</sub> to be the sequence (A,B,AB,BAB,ABBAB,…) in which each term is the concatenation of the previous two.</p>
<p>Further, we define D<sub>A,B</sub>(n) to be the n<sup>th</sup> digit in the first term of F<sub>A,B</sub> that contains at least n digits.</p>
<p>Example:</p>
<p>Let A=1415926535, B=8979323846. We wish to find D<sub>A,B</sub>(35), say.</p>
<p>The first few terms of F<sub>A,B</sub> are:<br>1415926535<br>8979323846<br>14159265358979323846<br>897932384614159265358979323846<br>1415926535897932384689793238461415<span style="color: #FF0000"><b>9</b></span>265358979323846</p>
<p>Then D<sub>A,B</sub>(35) is the 35<sup>th</sup> digit in the fifth term, which is 9.</p>
<p>Now we use for A the first 100 digits of π behind the decimal point:</p>
<p>14159265358979323846264338327950288419716939937510<br>58209749445923078164062862089986280348253421170679 </p>
<p>and for B the next hundred digits:</p>
<p>82148086513282306647093844609550582231725359408128<br>48111745028410270193852110555964462294895493038196 .</p>
<p>Find ∑<sub>n = 0,1,…,17</sub> &nbsp; 10<sup>n</sup>× D<sub>A,B</sub>((127+19n)×7<sup>n</sup>).</p>
<hr>
<p><strong>斐波那契字</strong></p>
<p>对于任意两个数字串A和B，我们定义F<sub>A,B</sub>为序列(A,B,AB,BAB,ABBAB,…)，其中每一项都是拼接前两项而成。</p>
<p>进一步的，取F<sub>A,B</sub>中首次包含至少n个数字的项，记其第n个数字为D<sub>A,B</sub>(n)。</p>
<p>举例如下：</p>
<p>取A=1415926535，B=8979323846。我们希望找出D<sub>A,B</sub>(35)。</p>
<p>F<sub>A,B</sub>的前几项分别是：<br>1415926535<br>8979323846<br>14159265358979323846<br>897932384614159265358979323846<br>1415926535897932384689793238461415<span style="color: #FF0000"><b>9</b></span>265358979323846</p>
<p>因此D<sub>A,B</sub>(35)是第五项的第35个数字，也就是9。</p>
<p>现在我们取A是圆周率π小数点后的100位数字：</p>
<p>14159265358979323846264338327950288419716939937510<br>58209749445923078164062862089986280348253421170679 </p>
<p>B是接下来的再100位数字：</p>
<p>82148086513282306647093844609550582231725359408128<br>48111745028410270193852110555964462294895493038196 .</p>
<p>求∑<sub>n = 0,1,…,17</sub> &nbsp; 10<sup>n</sup>× D<sub>A,B</sub>((127+19n)×7<sup>n</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 232</title>
    <url>/232/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-232"><a href="#Problem-232" class="headerlink" title="Problem 232"></a><a href="https://projecteuler.net/problem=232">Problem 232</a></h1><hr>
<p><strong>The Race</strong></p>
<p>Two players share an unbiased coin and take it in turns to play “The Race”. On Player 1’s turn, he tosses the coin once: if it comes up Heads, he scores one point; if it comes up Tails, he scores nothing. On Player 2’s turn, she chooses a positive integer T and tosses the coin T times: if it comes up all Heads, she scores 2<sup>T-1</sup> points; otherwise, she scores nothing. Player 1 goes first. The winner is the first to 100 or more points.</p>
<p>On each turn Player 2 selects the number, T, of coin tosses that maximises the probability of her winning.</p>
<p>What is the probability that Player 2 wins?</p>
<p>Give your answer rounded to eight decimal places in the form 0.<i>abcdefgh</i>.</p>
<hr>
<p><strong>赛跑游戏</strong><br>两名玩家轮流抛掷一枚标准硬币进行“赛跑游戏”。轮到玩家1时，他掷硬币1次：若硬币是正面朝上则得1分；若硬币是反面朝上则不得分。轮到玩家2时，她指定一个正整数T，并掷硬币T次：若硬币每次均正面朝上，则她得2<sup>T-1</sup>分；否则她不得分。玩家1先行。首先到达100分或更多的玩家获胜。</p>
<p>每一轮，玩家2总是选择最大化自己获胜概率的掷硬币次数T。</p>
<p>玩家2获胜的概率是多少？</p>
<p>将你的答案四舍五入到八位小数，即格式为0.<i>abcdefgh</i>。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 233</title>
    <url>/233/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-233"><a href="#Problem-233" class="headerlink" title="Problem 233"></a><a href="https://projecteuler.net/problem=233">Problem 233</a></h1><hr>
<p><strong>Lattice points on a circle</strong></p>
<p>Let f(N) be the number of points with integer coordinates that are on a circle passing through (0,0), (N,0),(0,N), and (N,N).</p>
<p>It can be shown that f(10000)&thinsp;=&thinsp;36.</p>
<p>What is the sum of all positive integers N&thinsp;≤&thinsp;10<sup>11</sup> such that f(N)&thinsp;=&thinsp;420&thinsp;?</p>
<hr>
<p><strong>圆周上的格点</strong></p>
<p>作过点(0,0)、(N,0)、(0,N)和(N,N)的圆，记圆周上坐标为整数的点的数目为f(N)。</p>
<p>可以看出f(10000)&thinsp;=&thinsp;36。</p>
<p>有些正整数N&thinsp;≤&thinsp;10<sup>11</sup>且f(N)&thinsp;=&thinsp;420，这些正整数的和是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 235</title>
    <url>/235/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-235"><a href="#Problem-235" class="headerlink" title="Problem 235"></a><a href="https://projecteuler.net/problem=235">Problem 235</a></h1><hr>
<p><strong>An Arithmetic Geometric sequence</strong></p>
<p>Given is the arithmetic-geometric sequence u(k) = (900-3k)r<sup>k-1</sup>.<br>Let s(n) = Σ<sub>k=1…n</sub>u(k).</p>
<p>Find the value of r for which s(5000) = -600,000,000,000.</p>
<p>Give your answer rounded to 12 places behind the decimal point.</p>
<hr>
<p><strong>等差比数列</strong></p>
<p>已知等差比数列u(k) = (900-3k)r<sup>k-1</sup>。<br>记s(n) = Σ<sub>k=1…n</sub>u(k)。</p>
<p>求使得s(5000) = -600,000,000,000的r值。</p>
<p>将你的答案四舍五入至小数点后12位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 234</title>
    <url>/234/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-234"><a href="#Problem-234" class="headerlink" title="Problem 234"></a><a href="https://projecteuler.net/problem=234">Problem 234</a></h1><hr>
<p><strong>Semidivisible numbers</strong></p>
<p>For an integer n ≥ 4, we define the <i>lower prime square root</i> of n, denoted by lps(n), as the largest prime ≤ √n and the <i>upper prime square root</i> of n, ups(n), as the smallest prime ≥ √n.</p>
<p>So, for example, lps(4) = 2 = ups(4), lps(1000) = 31, ups(1000) = 37.<br>Let us call an integer n ≥ 4 <i>semidivisible</i>, if one of lps(n) and ups(n) divides n, but not both.</p>
<p>The sum of the semidivisible numbers not exceeding 15 is 30, the numbers are 8, 10 and 12. 15 is not semidivisible because it is a multiple of both lps(15) = 3 and ups(15) = 5.<br>As a further example, the sum of the 92 semidivisible numbers up to 1000 is 34825.</p>
<p>What is the sum of all semidivisible numbers not exceeding 999966663333 ?</p>
<hr>
<p><strong>半可约整数</strong></p>
<p>对于任意整数n ≥ 4，我们定义n的<i>下素数平方根</i>为≤ √n的最大素数，记作lps(n)，并定义n的<i>上素数平方根</i>为≥ √n的最小素数，记作ups(n)。</p>
<p>举例来说，lps(4) = 2 = ups(4)，lps(1000) = 31，ups(1000) = 37。<br>如果lps(n)和ups(n)中有且只有一个整除n，我们称整数n ≥ 4为<i>半可约的</i>。</p>
<p>所有不超过15的半可约整数之和为30，这些整数是8、10和12。15并不是半可约整数，因为它同时是lps(15) = 3和ups(15) = 5的倍数。<br>再举一例，不超过1000的92个半可约整数之和为34825。</p>
<p>不超过999966663333的所有半可约整数之和是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 236</title>
    <url>/236/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-236"><a href="#Problem-236" class="headerlink" title="Problem 236"></a><a href="https://projecteuler.net/problem=236">Problem 236</a></h1><hr>
<p><strong>Luxury Hampers</strong></p>
<p>Suppliers ‘A’ and ‘B’ provided the following numbers of products for the luxury hamper market:</p>
<table>
<thead>
<tr>
<th align="center">Product</th>
<th align="center">‘A’</th>
<th align="center">‘B’</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Beluga Caviar</td>
<td align="center">5248</td>
<td align="center">640</td>
</tr>
<tr>
<td align="center">Christmas Cake</td>
<td align="center">1312</td>
<td align="center">1888</td>
</tr>
<tr>
<td align="center">Gammon Joint</td>
<td align="center">2624</td>
<td align="center">3776</td>
</tr>
<tr>
<td align="center">Vintage Port</td>
<td align="center">5760</td>
<td align="center">3776</td>
</tr>
<tr>
<td align="center">Champagne Truffles</td>
<td align="center">3936</td>
<td align="center">5664</td>
</tr>
</tbody></table>
<p>Although the suppliers try very hard to ship their goods in perfect condition, there is inevitably some spoilage - <i>i.e.</i> products gone bad.</p>
<p>The suppliers compare their performance using two types of statistic:</p>
<ul>
<li>The five <i>per-product spoilage rates</i> for each supplier are equal to the number of products gone bad divided by the number of products supplied, for each of the five products in turn.</li>
<li>The <i>overall spoilage rate</i> for each supplier is equal to the total number of products gone bad divided by the total number of products provided by that supplier.</li>
</ul>
<p>To their surprise, the suppliers found that each of the five per-product spoilage rates was worse (higher) for ‘B’ than for ‘A’ by the same factor (ratio of spoilage rates), m&gt;1; and yet, paradoxically, the overall spoilage rate was worse for ‘A’ than for ‘B’, also by a factor of m.</p>
<p>There are thirty-five m&gt;1 for which this surprising result could have occurred, the smallest of which is 1476/1475.</p>
<p>What’s the largest possible value of m?<br>Give your answer as a fraction reduced to its lowest terms, in the form u/v.</p>
<hr>
<p><strong>豪华礼盒</strong></p>
<p>供应商’A’和’B’为豪华礼盒市场提供以下数量的商品：</p>
<table>
<thead>
<tr>
<th align="center">商品</th>
<th align="center">‘A’</th>
<th align="center">‘B’</th>
</tr>
</thead>
<tbody><tr>
<td align="center">鲟鱼子酱</td>
<td align="center">5248</td>
<td align="center">640</td>
</tr>
<tr>
<td align="center">圣诞蛋糕</td>
<td align="center">1312</td>
<td align="center">1888</td>
</tr>
<tr>
<td align="center">猪肉火腿</td>
<td align="center">2624</td>
<td align="center">3776</td>
</tr>
<tr>
<td align="center">典藏波特</td>
<td align="center">5760</td>
<td align="center">3776</td>
</tr>
<tr>
<td align="center">香槟松露</td>
<td align="center">3936</td>
<td align="center">5664</td>
</tr>
</tbody></table>
<p>尽管供应商十分努力保持商品处于良好状态，但总会出现一些不可避免的损耗，<i>也就是说</i>，商品变质了之类的。</p>
<p>供应商用两种不同的统计量来比较他们的表现：</p>
<ul>
<li>两家供应商的<i>各商品损耗率</i>是每种商品的变质数量除以每种商品的供应量，对于五种商品各自计算。</li>
<li>两家供应商的<i>总损耗率</i>是所有商品的变质数量除以所有商品的总供应量。</li>
</ul>
<p>令他们惊讶的是，尽管就五种商品各自的损耗率而言，’B’都要比’A’表现得差（损耗率更高），且均为m&gt;1倍，然而就总损耗率而言，’A’却要比’B’表现得差，且同样为m倍。</p>
<p>一共有35个不同的m&gt;1使得上述情况有可能发生，其中最小的是1476/1475。</p>
<p>最大的m是多少？<br>你的答案应该写成最简分数，格式为u/v。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 237</title>
    <url>/237/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-237"><a href="#Problem-237" class="headerlink" title="Problem 237"></a><a href="https://projecteuler.net/problem=237">Problem 237</a></h1><hr>
<p><strong>Tours on a 4 x n playing board</strong></p>
<p>Let T(<i>n</i>) be the number of tours over a 4 × <i>n</i> playing board such that:</p>
<ul>
<li>The tour starts in the top left corner.</li>
<li>The tour consists of moves that are up, down, left, or right one square.</li>
<li>The tour visits each square exactly once.</li>
<li>The tour ends in the bottom left corner.</li>
</ul>
<p>The diagram shows one tour over a 4 × 10 board:</p>
<center><img src="/resources/images/0237.gif" alt=""></center>

<p>T(10) is 2329. What is T(10<sup>12</sup>) modulo 10<sup>8</sup>?</p>
<hr>
<p><strong>4 x n棋盘上的巡游</strong></p>
<p>记T(<i>n</i>)是在4 × <i>n</i>棋盘上按如下方式巡游的总方式数：</p>
<ul>
<li>巡游从左上角开始。</li>
<li>巡游的每一步可以向上、向下、向左或向右移动一格。</li>
<li>巡游经过每格恰好一次。</li>
<li>巡游在左下角结束。</li>
</ul>
<p>下图展示了4 × 10棋盘上其中一种巡游方式：</p>
<center><img src="/resources/images/0237.gif" alt=""></center>

<p>已知T(10)为2329。T(10<sup>12</sup>)模10<sup>8</sup>取余是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 238</title>
    <url>/238/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-238"><a href="#Problem-238" class="headerlink" title="Problem 238"></a><a href="https://projecteuler.net/problem=238">Problem 238</a></h1><hr>
<p><strong>Infinite string tour</strong></p>
<p>Create a sequence of numbers using the “Blum Blum Shub” pseudo-random number generator:</p>
<center>$s\_0=14025256$
$s\_{n+1}=s\_n^2 \text{ mod }20300713$
</center>

<p>Concatenate these numbers &thinsp;s<sub>0</sub>s<sub>1</sub>s<sub>2</sub>… to create a string w of infinite length.<br>Then, w&thinsp;=&thinsp;<span style="font-family:courier new;font-size:12pt;color:#0000ff;">14025256741014958470038053646…</span></p>
<p>For a positive integer k, if no substring of w exists with a sum of digits equal to k, p(k) is defined to be zero. If at least one substring of w exists with a sum of digits equal to k, we define p(k)&thinsp;=&thinsp;z, where z is the starting position of the earliest such substring.</p>
<p>For instance:</p>
<p>The substrings <span style="font-family:courier new;font-size:12pt;color:#0000ff;">1</span>, <span style="font-family:courier new;font-size:12pt;color:#0000ff;">14</span>, <span style="font-family:courier new;font-size:12pt;color:#0000ff;">1402</span>, …<br>with respective sums of digits equal to 1, 5, 7, …<br>start at position <b>1</b>, hence p(1)&thinsp;=&thinsp;p(5)&thinsp;=&thinsp;p(7)&thinsp;=&thinsp;…&thinsp;=&thinsp;<b>1</b>.</p>
<p>The substrings <span style="font-family:courier new;font-size:12pt;color:#0000ff;">4</span>, <span style="font-family:courier new;font-size:12pt;color:#0000ff;">402</span>, <span style="font-family:courier new;font-size:12pt;color:#0000ff;">4025</span>, …<br>with respective sums of digits equal to 4, 6, 11, …<br>start at position <b>2</b>, hence p(4)&thinsp;=&thinsp;p(6)&thinsp;=&thinsp;p(11)&thinsp;=&thinsp;…&thinsp;=&thinsp;<b>2</b>.</p>
<p>The substrings <span style="font-family:courier new;font-size:12pt;color:#0000ff;">02</span>, <span style="font-family:courier new;font-size:12pt;color:#0000ff;">0252</span>, …<br>with respective sums of digits equal to 2, 9, …<br>start at position <b>3</b>, hence p(2)&thinsp;=&thinsp;p(9)&thinsp;=&thinsp;…&thinsp;=&thinsp;<b>3</b>.</p>
<p>Note that substring <span style="font-family:courier new;font-size:12pt;color:#0000ff;">025</span> starting at position <b>3</b>, has a sum of digits equal to 7, but there was an earlier substring (starting at position <b>1</b>) with a sum of digits equal to 7, so p(7)&thinsp;=&thinsp;1, <i>not</i> 3.</p>
<p>We can verify that, for 0&thinsp;&lt;&thinsp;k&thinsp;≤&thinsp;10<sup>3</sup>, ∑&thinsp;p(k) = 4742.</p>
<p>Find ∑&thinsp;p(k), for 0&thinsp;&lt;&thinsp;k&thinsp;≤&thinsp;2·10<sup>15</sup>.</p>
<hr>
<p><strong>无穷长字符串遍历</strong></p>
<p>使用“布鲁姆-布鲁姆-舒布”伪随机数生成算法生成如下的数字序列：</p>
<center>$s\_0=14025256$
$s\_{n+1}=s\_n^2 \text{ mod }20300713$
</center>

<p>将这些数s<sub>0</sub>s<sub>1</sub>s<sub>2</sub>…连接起来组成一个无穷长的字符串w。<br>可知w&thinsp;=&thinsp;<span style="font-family:courier new;font-size:12pt;color:#0000ff;">14025256741014958470038053646…</span></p>
<p>对于正整数k，如果w不存在任意子串的各位数字和等于k，则p(k)被定义为0。如果w至少有一个子串的的各位数字和等于k，我们定义p(k) = z，其中z是最早出现的此类子串的开始位置。</p>
<p>举例而言：</p>
<p>子串<span style="font-family:courier new;font-size:12pt;color:#0000ff;">1</span>, <span style="font-family:courier new;font-size:12pt;color:#0000ff;">14</span>, <span style="font-family:courier new;font-size:12pt;color:#0000ff;">1402</span>, …<br>的各位数字和分别是 1, 5, 7, …<br>且开始位置均为<b>1</b>，因此p(1)&thinsp;=&thinsp;p(5)&thinsp;=&thinsp;p(7)&thinsp;=&thinsp;…&thinsp;=&thinsp;<b>1</b>。</p>
<p>子串<span style="font-family:courier new;font-size:12pt;color:#0000ff;">4</span>, <span style="font-family:courier new;font-size:12pt;color:#0000ff;">402</span>, <span style="font-family:courier new;font-size:12pt;color:#0000ff;">4025</span>, …<br>的各位数字和分别是 4, 6, 11, …<br>且开始位置均为<b>2</b>，因此p(4)&thinsp;=&thinsp;p(6)&thinsp;=&thinsp;p(11)&thinsp;=&thinsp;…&thinsp;=&thinsp;<b>2</b>.</p>
<p>子串<span style="font-family:courier new;font-size:12pt;color:#0000ff;">02</span>, <span style="font-family:courier new;font-size:12pt;color:#0000ff;">0252</span>, …<br>的各位数字和分别是2, 9, …<br>且开始位置均为<b>3</b>，因此p(2)&thinsp;=&thinsp;p(9)&thinsp;=&thinsp;…&thinsp;=&thinsp;<b>3</b>.</p>
<p>注意开始位置为<b>3</b>的子串<span style="font-family:courier new;font-size:12pt;color:#0000ff;">025</span>各位数字和是7，但由于存在更早出现的子串（开始位置为<b>1</b>）各位数字和为7，因此p(7)&thinsp;=&thinsp;1，<i>而不是</i> 3。</p>
<p>我们可以验证，对于0&thinsp;&lt;&thinsp;k&thinsp;≤&thinsp;10<sup>3</sup>，∑&thinsp;p(k) = 4742。</p>
<p>对于0&thinsp;&lt;&thinsp;k&thinsp;≤&thinsp;2·10<sup>15</sup>，求∑&thinsp;p(k)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 239</title>
    <url>/239/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-239"><a href="#Problem-239" class="headerlink" title="Problem 239"></a><a href="https://projecteuler.net/problem=239">Problem 239</a></h1><hr>
<p><strong>Twenty-two Foolish Primes</strong></p>
<p>A set of disks numbered 1 through 100 are placed in a line in random order.</p>
<p>What is the probability that we have a partial derangement such that exactly 22 prime number discs are found away from their natural positions?<br>(Any number of non-prime disks may also be found in or out of their natural positions.)</p>
<p>Give your answer rounded to 12 places behind the decimal point in the form 0.abcdefghijkl.</p>
<hr>
<p><strong>二十二个愚蠢素数</strong></p>
<p>将一系列标有1至100的盘子按随机顺序排成一排。</p>
<p>在这个重排中有恰好22个素数不在原位上的概率是多少？<br>（并不要求任意非素数盘子是否在原位上。）</p>
<p>将你的答案四舍五入至小数点后12位小数，即格式为0.abcdefghijkl。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 24</title>
    <url>/24/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-24"><a href="#Problem-24" class="headerlink" title="Problem 24"></a><a href="https://projecteuler.net/problem=24">Problem 24</a></h1><hr>
<h2 id="Lexicographic-Permutations"><a href="#Lexicographic-Permutations" class="headerlink" title="Lexicographic Permutations"></a><strong>Lexicographic Permutations</strong></h2><p>A permutation is an ordered arrangement of objects. For example, $3124$ is one possible permutation of the digits $1$, $2$, $3$ and $4$. If all of the permutations are listed numerically or alphabetically, we call it lexicographic order. The lexicographic permutations of $0$, $1$ and $2$ are:</p>
<p>$$012 \quad 021 \quad 102 \quad 120 \quad 201 \quad 210$$</p>
<p>What is the millionth lexicographic permutation of the digits $0$, $1$, $2$, $3$, $4$, $5$, $6$, $7$, $8$ and $9$?</p>
<hr>
<h2 id="字典序排列"><a href="#字典序排列" class="headerlink" title="字典序排列"></a><strong>字典序排列</strong></h2><p>排列指的是将一组对象放置为特定的顺序。例如，$3124$是数字$1$、$2$、$3$、$4$的一个排列。将所有排列按照数字大小或字母先后进行排序称为字典序。数字$0$、$1$、$2$的字典序排列是：</p>
<p>$$012 \quad 021 \quad 102 \quad 120 \quad 201 \quad 210$$</p>
<p>在数字$0$、$1$、$2$、$3$、$4$、$5$、$6$、$7$、$8$、$9$的字典序排列中，处于第一百万位的排列是什么？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 240</title>
    <url>/240/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-240"><a href="#Problem-240" class="headerlink" title="Problem 240"></a><a href="https://projecteuler.net/problem=240">Problem 240</a></h1><hr>
<p><strong>Top Dice</strong></p>
<p>There are $1111$ ways in which five $6$-sided dice (sides numbered $1$ to $6$) can be rolled so that the top three sum to $15$. Some examples are:</p>
<p>$$<br>\begin{equation}<br>\begin{aligned}<br>&amp;&amp;D_1,D_2,D_3,D_4,D_5 &amp;= 4,3,6,3,5\\\<br>&amp;&amp;D_1,D_2,D_3,D_4,D_5 &amp;= 4,3,3,5,6\\\<br>&amp;&amp;D_1,D_2,D_3,D_4,D_5 &amp;= 3,3,3,6,6\\\<br>&amp;&amp;D_1,D_2,D_3,D_4,D_5 &amp;= 6,6,3,3,3\\\<br>\end{aligned} \notag<br>\end{equation}<br>$$</p>
<p>In how many ways can twenty $12$-sided dice (sides numbered $1$ to $12$) be rolled so that the top ten sum to $70$?</p>
<hr>
<p><strong>点数最大的骰子</strong></p>
<p>扔出$5$个六面骰子（面上分别标有$1$至$6$），其中三个最大的点数之和为$15$，一共有$1111$种方式。其中的一些例子为：</p>
<p>$$<br>\begin{equation}<br>\begin{aligned}<br>&amp;&amp;D_1,D_2,D_3,D_4,D_5 &amp;= 4,3,6,3,5\\\<br>&amp;&amp;D_1,D_2,D_3,D_4,D_5 &amp;= 4,3,3,5,6\\\<br>&amp;&amp;D_1,D_2,D_3,D_4,D_5 &amp;= 3,3,3,6,6\\\<br>&amp;&amp;D_1,D_2,D_3,D_4,D_5 &amp;= 6,6,3,3,3\\\<br>\end{aligned} \notag<br>\end{equation}<br>$$</p>
<p>扔出$20$个$12$面骰子（面上分别标有$1$至$12$），其中十个最大的点数之和为$70$，一共有多少种方式？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 241</title>
    <url>/241/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-241"><a href="#Problem-241" class="headerlink" title="Problem 241"></a><a href="https://projecteuler.net/problem=241">Problem 241</a></h1><hr>
<p><strong>Perfection Quotients</strong></p>
<p>For a positive integer n, let σ(n) be the sum of all divisors of n, so e.g. σ(6) = 1 + 2 + 3 + 6 = 12.</p>
<p>A perfect number, as you probably know, is a number with σ(n) = 2n.</p>
<p>Let us define the <b>perfection quotient</b> of a positive integer as p(n)= $\frac{\sigma(n)}{n}$</p>
<p>Find the sum of all positive integers n ≤ 10<sup>18</sup> for which p(n) has the form k + <sup>1</sup>⁄<sub>2</sub>, where k is an integer.</p>
<hr>
<p><strong>完全度商数</strong></p>
<p>对于正整数n，记σ(n)为n的所有约数之和，例如σ(6) = 1 + 2 + 3 + 6 = 12。</p>
<p>你可能已经知道，所谓完全数就是满足σ(n) = 2n的数。</p>
<p>我们定义正整数的<b>完全度商数</b>为p(n)= $\frac{\sigma(n)}{n}$。</p>
<p>在所有正整数n ≤ 10<sup>18</sup>中，有些数的p(n)可以写成k + <sup>1</sup>⁄<sub>2</sub>，其中k是整数。求所有这样的数之和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 242</title>
    <url>/242/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-242"><a href="#Problem-242" class="headerlink" title="Problem 242"></a><a href="https://projecteuler.net/problem=242">Problem 242</a></h1><hr>
<p><strong>Odd Triplets</strong></p>
<p>Given the set {1,2,…,n}, we define f(n,k) as the number of its k-element subsets with an odd sum of elements. For example, f(5,3)&thinsp;=&thinsp;4, since the set {1,2,3,4,5} has four 3-element subsets having an odd sum of elements, i.e.: {1,2,4}, {1,3,5}, {2,3,4} and {2,4,5}.</p>
<p>When all three values n, k and f(n,k) are odd, we say that they make<br>an <i>odd-triplet</i> [n,k,f(n,k)].</p>
<p>There are exactly five odd-triplets with n&thinsp;≤&thinsp;10, namely:<br>[1,1,f(1,1)&thinsp;=&thinsp;1], [5,1,f(5,1)&thinsp;=&thinsp;3], [5,5,f(5,5)&thinsp;=&thinsp;1], [9,1,f(9,1)&thinsp;=&thinsp;5] and [9,9,f(9,9)&thinsp;=&thinsp;1].</p>
<p>How many odd-triplets are there with n&thinsp;≤&thinsp;10<sup>12</sup>&thinsp;?</p>
<hr>
<p><strong>奇数三元组</strong></p>
<p>取集合{1,2,…,n}的所有k元子集，记其中元素和为奇数的子集数目为f(n,k)。例如，f(5,3)&thinsp;=&thinsp;4，因为集合{1,2,3,4,5}有4个3元子集，其元素和为奇数，分别是{1,2,4}、{1,3,5}、{2,3,4}和{2,4,5}。</p>
<p>当n、k和f(n,k)均为奇数时，我们称它们组成了<br><i>奇数三元组</i> [n,k,f(n,k)]。</p>
<p>当n&thinsp;≤&thinsp;10时，恰好有5个奇数三元组，分别是：<br>[1,1,f(1,1)&thinsp;=&thinsp;1]、[5,1,f(5,1)&thinsp;=&thinsp;3]、[5,5,f(5,5)&thinsp;=&thinsp;1]、[9,1,f(9,1)&thinsp;=&thinsp;5]和[9,9,f(9,9)&thinsp;=&thinsp;1]。</p>
<p>当n&thinsp;≤&thinsp;10<sup>12</sup>时，有多少个奇数三元组？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 243</title>
    <url>/243/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-243"><a href="#Problem-243" class="headerlink" title="Problem 243"></a><a href="https://projecteuler.net/problem=243">Problem 243</a></h1><hr>
<p><strong>Resilience</strong></p>
<p>A positive fraction whose numerator is less than its denominator is called a proper fraction.<br>For any denominator, d, there will be d−1 proper fractions; for example, with d&thinsp;=&thinsp;12:<br><sup>1</sup>/<sub>12</sub> , <sup>2</sup>/<sub>12</sub> , <sup>3</sup>/<sub>12</sub> , <sup>4</sup>/<sub>12</sub> , <sup>5</sup>/<sub>12</sub> , <sup>6</sup>/<sub>12</sub> , <sup>7</sup>/<sub>12</sub> , <sup>8</sup>/<sub>12</sub> , <sup>9</sup>/<sub>12</sub> , <sup>10</sup>/<sub>12</sub> , <sup>11</sup>/<sub>12</sub>.</p>
<p>We shall call a fraction that cannot be cancelled down a <i>resilient fraction</i>.<br>Furthermore we shall define the <i>resilience</i> of a denominator, R(d), to be the ratio of its proper fractions that are resilient; for example, R(12) = <sup>4</sup>/<sub>11</sub> .<br>In fact, d&thinsp;=&thinsp;12 is the smallest denominator having a resilience R(d) &lt; <sup>4</sup>/<sub>10</sub> .</p>
<p>Find the smallest denominator d, having a resilience R(d) &lt; <sup>15499</sup>/<sub>94744</sub> .</p>
<hr>
<p><strong>不可约度</strong></p>
<p>分子小于分母的正分数被称为真分数。<br>对于分母d，一共有d-1个真分数；例如，当d&thinsp;=&thinsp;12时为：<br><sup>1</sup>/<sub>12</sub>、<sup>2</sup>/<sub>12</sub>、<sup>3</sup>/<sub>12</sub>、<sup>4</sup>/<sub>12</sub>、<sup>5</sup>/<sub>12</sub>、<sup>6</sup>/<sub>12</sub>、<sup>7</sup>/<sub>12</sub>、<sup>8</sup>/<sub>12</sub>、<sup>9</sup>/<sub>12</sub>、<sup>10</sup>/<sub>12</sub>、<sup>11</sup>/<sub>12</sub>。</p>
<p>我们称不能被约简的分数为<i>不可约分数</i>。<br>进一步地，我们可以定义分母的<i>不可约度</i>R(d)为它的真分数中不可约分数的比例；例如，R(12) = <sup>4</sup>/<sub>11</sub>。<br>事实上，d&thinsp;=&thinsp;12是不可约度R(d) &lt; <sup>4</sup>/<sub>10</sub>的最小分母。</p>
<p>求不可约度R(d) &lt; <sup>15499</sup>/<sub>94744</sub>的最小分母d。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 244</title>
    <url>/244/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-244"><a href="#Problem-244" class="headerlink" title="Problem 244"></a><a href="https://projecteuler.net/problem=244">Problem 244</a></h1><hr>
<p><strong>Sliders</strong></p>
<p>You probably know the game <i>Fifteen Puzzle</i>. Here, instead of numbered tiles, we have seven red tiles and eight blue tiles.</p>
<p>A move is denoted by the uppercase initial of the direction (Left, Right, Up, Down) in which the tile is slid, e.g. starting from configuration (<b>S</b>), by the sequence <b>LULUR</b> we reach the configuration (<b>E</b>):</p>
<center><img src="/resources/images/0244_start.gif"></center>
<center>(S)</center>
<center><img src="/resources/images/0244_example.gif"></center>
<center>(E)</center>

<p>For each path, its checksum is calculated by (pseudocode):</p>
<blockquote>
<p>checksum = 0<br>checksum = (checksum × 243 + m<sub>1</sub>) mod 100&thinsp;000&thinsp;007<br>checksum = (checksum × 243 + m<sub>2</sub>) mod 100&thinsp;000&thinsp;007<br>&nbsp;&nbsp;&nbsp;…<br>checksum = (checksum × 243 + m<sub>n</sub>) mod 100&thinsp;000&thinsp;007</p>
</blockquote>
<p>where m<sub>k</sub> is the ASCII value of the k<sup>th</sup> letter in the move sequence and the ASCII values for the moves are:</p>
<table>
<thead>
<tr>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
</tr>
</thead>
<tbody><tr>
<td align="center">L</td>
<td align="center">76</td>
</tr>
<tr>
<td align="center">R</td>
<td align="center">82</td>
</tr>
<tr>
<td align="center">U</td>
<td align="center">85</td>
</tr>
<tr>
<td align="center">D</td>
<td align="center">68</td>
</tr>
</tbody></table>
<p>For the sequence <b>LULUR</b> given above, the checksum would be 19761398.</p>
<p>Now, starting from configuration (<b>S</b>), find all shortest ways to reach configuration (<b>T</b>).</p>
<center><img src="/resources/images/0244_start.gif"></center>
<center>(S)</center>
<center><img src="/resources/images/0244_target.gif"></center>
<center>(T)</center>

<p>What is the sum of all checksums for the paths having the minimal length?</p>
<hr>
<p><strong>滑块</strong></p>
<p>你可能知道<i>十五滑块谜题</i>这个游戏。现在，我们用7块红色滑块和8块蓝色滑块取代了原来标有数字的滑块。</p>
<p>我们用被滑动的滑块所滑的方向对应英文单词（左=left=L，右=right=R，上=up=U，下=down=D）的首字母记录每一步，例如，从布局(<b>S</b>)出发，经过滑动序列<b>LULUR</b>，我们得到了布局(<b>E</b>)：</p>
<center><img src="/resources/images/0244_start.gif"></center>
<center>(S)</center>
<center><img src="/resources/images/0244_example.gif"></center>
<center>(E)</center>

<p>对于每一步，我们按如下方式（伪代码）计算其校验和：</p>
<blockquote>
<p>checksum = 0<br>checksum = (checksum × 243 + m<sub>1</sub>) mod 100&thinsp;000&thinsp;007<br>checksum = (checksum × 243 + m<sub>2</sub>) mod 100&thinsp;000&thinsp;007<br>&nbsp;&nbsp;&nbsp;…<br>checksum = (checksum × 243 + m<sub>n</sub>) mod 100&thinsp;000&thinsp;007</p>
</blockquote>
<p>其中m<sub>k</sub>是滑动序列中第k<sup>th</sup>个字母的ASCII码，具体数值如下：</p>
<table>
<thead>
<tr>
<th align="center">&nbsp;</th>
<th align="center">&nbsp;</th>
</tr>
</thead>
<tbody><tr>
<td align="center">L</td>
<td align="center">76</td>
</tr>
<tr>
<td align="center">R</td>
<td align="center">82</td>
</tr>
<tr>
<td align="center">U</td>
<td align="center">85</td>
</tr>
<tr>
<td align="center">D</td>
<td align="center">68</td>
</tr>
</tbody></table>
<p>对于上述滑动序列<b>LULUR</b>，校验和为19761398。</p>
<p>现在，找出所有从布局(<b>S</b>)出发得到布局(<b>T</b>)的最短序列。</p>
<center><img src="/resources/images/0244_start.gif"></center>
<center>(S)</center>
<center><img src="/resources/images/0244_target.gif"></center>
<center>(T)</center>

<p>所有这些最短序列的校验和之和是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 245</title>
    <url>/245/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-245"><a href="#Problem-245" class="headerlink" title="Problem 245"></a><a href="https://projecteuler.net/problem=245">Problem 245</a></h1><hr>
<p><strong>Coresilience</strong></p>
<p>We shall call a fraction that cannot be cancelled down a resilient fraction. Furthermore we shall define the resilience of a denominator, R(d), to be the ratio of its proper fractions that are resilient; for example, R(12) = <sup>4</sup>⁄<sub>11</sub>.</p>
<p>The resilience of a number d &gt; 1 is then$\frac{\phi(d)}{d-1}$ where φ is Euler’s totient function.</p>
<p>We further define the <b>coresilience</b> of a number n &gt; 1 as C(n)=$\frac{n − \phi(n)}{n-1}$.</p>
<p>The coresilience of a prime p is C(p)=$\frac{1}{p-1}$.</p>
<p>Find the sum of all <b>composite</b> integers 1 &lt; n ≤ 2×10<sup>11</sup>, for which C(n) is a <dfn title="A fraction with numerator 1">unit fraction</dfn>.</p>
<hr>
<p><strong>可约度</strong></p>
<p>我们称不能被约简的分数为<i>不可约分数</i>。进一步地，我们可以定义分母的<i>不可约度</i>R(d)为它的真分数中不可约分数的比例；例如，R(12) = <sup>4</sup>/<sub>11</sub>。</p>
<p>数d &gt; 1的不可约度可以表示成$\frac{\phi(d)}{d-1}$，其中φ是欧拉总计函数。</p>
<p>我们进一步定义数n &gt; 1的<b>可约度</b>为C(n)=$\frac{n − \phi(n)}{n-1}$。</p>
<p>素数p的可约度为C(p)=$\frac{1}{p-1}$。</p>
<p>在所有1 &lt; n ≤ 2×10<sup>11</sup>的<b>合数</b>中，有些数满足C(n)约简后为<dfn title="分子为1的分数">单位分数</dfn>，求这些数之和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 246</title>
    <url>/246/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-246"><a href="#Problem-246" class="headerlink" title="Problem 246"></a><a href="https://projecteuler.net/problem=246">Problem 246</a></h1><hr>
<p><strong>Tangents to an ellipse</strong></p>
<p>A definition for an ellipse is:<br>Given a circle c with centre M and radius r and a point G such that d(G,M)&lt;r, the locus of the points that are equidistant from c and G form an ellipse.</p>
<p>The construction of the points of the ellipse is shown below.</p>
<center><img src="/resources/images/0246_anim.gif" alt=""></center>

<p>Given are the points M(-2000,1500) and G(8000,1500).<br>Given is also the circle c with centre M and radius 15000.<br>The locus of the points that are equidistant from G and c form an ellipse e.<br>From a point P outside e the two tangents t<sub>1</sub> and t<sub>2</sub> to the ellipse are drawn.<br>Let the points where t<sub>1</sub> and t<sub>2</sub> touch the ellipse be R and S.</p>
<center><img src="/resources/images/0246_ellipse.gif" alt=""></center>

<p>For how many lattice points P is angle RPS greater than 45 degrees?</p>
<hr>
<p><strong>椭圆的切线</strong></p>
<p>椭圆的一种定义方式为：<br>给定以M为圆心、半径为r的圆c，取一点G满足d(G,M)&lt;r，则到圆c和到点G的距离相同的点的轨迹构成一个椭圆。</p>
<p>如下动画展示了如何构造一个椭圆。</p>
<center><img src="/resources/images/0246_anim.gif" alt=""></center>

<p>已知点M(-2000,1500)和点G(8000,1500)。<br>同样已知以M为圆心、半径为15000的圆c。<br>到圆c和到点G的距离相同的点的轨迹构成一个椭圆e。<br>从椭圆e外的一个点P引椭圆的两条切线t<sub>1</sub>和t<sub>2</sub>。<br>记t<sub>1</sub>和t<sub>2</sub>切椭圆于点R和点S。</p>
<center><img src="/resources/images/0246_ellipse.gif" alt=""></center>

<p>有多少个格点P使得角RPS大于45度？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 247</title>
    <url>/247/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-247"><a href="#Problem-247" class="headerlink" title="Problem 247"></a><a href="https://projecteuler.net/problem=247">Problem 247</a></h1><hr>
<p><strong>Squares under a hyperbola</strong></p>
<p>Consider the region constrained by 1 ≤ x and 0 ≤ y ≤ <sup>1</sup>/<sub>x</sub>.</p>
<p>Let S<sub>1</sub> be the largest square that can fit under the curve.<br>Let S<sub>2</sub> be the largest square that fits in the remaining area, and so on.<br>Let the <i>index</i> of S<sub>n</sub> be the pair (left, below) indicating the number of squares to the left of S<sub>n</sub> and the number of squares below S<sub>n</sub>.</p>
<center><img src="/resources/images/0247_hypersquares.gif" alt=""></center>

<p>The diagram shows some such squares labelled by number.<br>S<sub>2</sub> has one square to its left and none below, so the index of S<sub>2</sub> is (1,0).<br>It can be seen that the index of S<sub>32</sub> is (1,1) as is the index of S<sub>50</sub>.<br>50 is the largest n for which the index of S<sub>n</sub> is (1,1).</p>
<p>What is the largest n for which the index of S<sub>n</sub> is (3,3)?</p>
<hr>
<p><strong>双曲线下的正方形</strong></p>
<p>考虑由1 ≤ x和0 ≤ y ≤ <sup>1</sup>/<sub>x</sub>所表示的区域。</p>
<p>记S<sub>1</sub>是能够放进曲线下区域的最大正方形。<br>记S<sub>2</sub>是能够放进剩余区域的最大正方形，并依此类推。<br>S<sub>n</sub>的<i>索引</i>是一个数对(left, below)，分别表示S<sub>n</sub>左侧的正方形数目和S<sub>n</sub>下放的正方形数目。</p>
<center><img src="/resources/images/0247_hypersquares.gif" alt=""></center>

<p>上图展示了一些这样的正方形，并标上了相应的数字顺序。<br>S<sub>2</sub>的左侧有一个正方形，下方没有正方形，因此S<sub>2</sub>的索引为(1,0)。<br>可以看出S<sub>32</sub>的索引和S<sub>50</sub>的索引同为(1,1)。<br>使得S<sub>n</sub>索引为(1,1)的数n最大是50。</p>
<p>使得S<sub>n</sub>索引为(3,3)的数n最大是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 248</title>
    <url>/248/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-248"><a href="#Problem-248" class="headerlink" title="Problem 248"></a><a href="https://projecteuler.net/problem=248">Problem 248</a></h1><hr>
<p><strong>Numbers for which Euler’s totient function equals 13!</strong></p>
<p>The first number n for which φ(n)=13! is 6227180929.</p>
<p>Find the 150,000<sup>th</sup> such number.</p>
<hr>
<p><strong>使欧拉总计函数等于13!的数</strong></p>
<p>第一个使得φ(n)=13!的数n为6227180929。</p>
<p>求第150,000个这样的数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 249</title>
    <url>/249/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-249"><a href="#Problem-249" class="headerlink" title="Problem 249"></a><a href="https://projecteuler.net/problem=249">Problem 249</a></h1><hr>
<p><strong>Prime Subset Sums</strong></p>
<p>Let S = {2, 3, 5, …, 4999} be the set of prime numbers less than 5000.</p>
<p>Find the number of subsets of S, the sum of whose elements is a prime number.<br>Enter the rightmost 16 digits as your answer.</p>
<hr>
<p><strong>素数子集和</strong></p>
<p>记S = {2, 3, 5, …, 4999}为小于5000的所有素数组成的集合。</p>
<p>在S的所有子集中，有些子集的元素和为素数，求这样的子集的数目。<br>输入这个数的后十六位作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 25</title>
    <url>/25/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-25"><a href="#Problem-25" class="headerlink" title="Problem 25"></a><a href="https://projecteuler.net/problem=25">Problem 25</a></h1><hr>
<h2 id="1000-digit-Fibonacci-Number"><a href="#1000-digit-Fibonacci-Number" class="headerlink" title="$1000$-digit Fibonacci Number"></a><strong>$1000$-digit Fibonacci Number</strong></h2><p>The Fibonacci sequence is defined by the recurrence relation:<br>$F_n = F_{n-1} + F_{n-2}$, where $F_1 = 1$ and $F_2 = 1$.</p>
<p>Hence the first 12 terms will be:<br>$$\begin{aligned}<br>F_1&amp;=1\\<br>F_2&amp;=1\\<br>F_3&amp;=2\\<br>F_4&amp;=3\\<br>F_5&amp;=5\\<br>F_6&amp;=8\\<br>F_7&amp;=13\\<br>F_8&amp;=21\\<br>F_9&amp;=34\\<br>F_{10}&amp;=55\\<br>F_{11}&amp;=89\\<br>F_{12}&amp;=144\\<br>\end{aligned}$$</p>
<p>The $12$th term, $F_{12}$, is the first term to contain three digits.</p>
<p>What is the first term in the Fibonacci sequence to contain $1000$ digits?</p>
<hr>
<h2 id="1000-位斐波那契数"><a href="#1000-位斐波那契数" class="headerlink" title="$1000$位斐波那契数"></a><strong>$1000$位斐波那契数</strong></h2><p>斐波那契数列是按如下递归定义的数列：<br>$F_n = F_{n-1} + F_{n-2}$，且$F_1 = 1$，$F_2 = 1$。</p>
<p>因此斐波那契数列的前12项分别是：<br>$$\begin{aligned}<br>F_1&amp;=1\\<br>F_2&amp;=1\\<br>F_3&amp;=2\\<br>F_4&amp;=3\\<br>F_5&amp;=5\\<br>F_6&amp;=8\\<br>F_7&amp;=13\\<br>F_8&amp;=21\\<br>F_9&amp;=34\\<br>F_{10}&amp;=55\\<br>F_{11}&amp;=89\\<br>F_{12}&amp;=144\\<br>\end{aligned}$$</p>
<p>在斐波那契数列中，第一个包含三位数字的是第$12$项$F_{12}$。</p>
<p>在斐波那契数列中，第一个包含$1000$位数字的是第几项？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 250</title>
    <url>/250/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-250"><a href="#Problem-250" class="headerlink" title="Problem 250"></a><a href="https://projecteuler.net/problem=250">Problem 250</a></h1><hr>
<p><strong>250250</strong></p>
<p>Find the number of non-empty subsets of {1<sup>1</sup>, 2<sup>2</sup>, 3<sup>3</sup>,…, 250250<sup>250250</sup>}, the sum of whose elements is divisible by 250. Enter the rightmost 16 digits as your answer.</p>
<hr>
<p><strong>250250</strong></p>
<p>在集合{1<sup>1</sup>, 2<sup>2</sup>, 3<sup>3</sup>,…, 250250<sup>250250</sup>}的所有子集中，有些非空子集的元素和能够被250整除，求这样的子集的数目。输入这个数的后十六位作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 251</title>
    <url>/251/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-251"><a href="#Problem-251" class="headerlink" title="Problem 251"></a><a href="https://projecteuler.net/problem=251">Problem 251</a></h1><hr>
<p><strong>Cardano Triplets</strong></p>
<p>A triplet of positive integers (a,b,c) is called a Cardano Triplet if it satisfies the condition:</p>
<center><img src="https://projecteuler.net/project/images/p251_cardano.gif" alt=""></center>

<p>For example, (2,1,5) is a Cardano Triplet.</p>
<p>There exist 149 Cardano Triplets for which a+b+c ≤ 1000.</p>
<p>Find how many Cardano Triplets exist such that a+b+c ≤ 110,000,000.</p>
<hr>
<p><strong>卡尔达诺三元组</strong></p>
<p>若正整数三元组(a,b,c)满足如下性质，就被称为卡尔达诺三元组：</p>
<center><img src="https://projecteuler.net/project/images/p251_cardano.gif" alt=""></center>

<p>例如，(2,1,5)就是一个卡尔达诺三元组。</p>
<p>存在149个卡尔达诺三元组满足a+b+c ≤ 1000。</p>
<p>存在多少个卡尔达诺三元组a+b+c ≤ 110,000,000？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 252</title>
    <url>/252/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-252"><a href="#Problem-252" class="headerlink" title="Problem 252"></a><a href="https://projecteuler.net/problem=252">Problem 252</a></h1><hr>
<p><strong>Convex Holes</strong></p>
<p>Given a set of points on a plane, we define a convex hole to be a convex polygon having as vertices any of the given points and not containing any of the given points in its interior (in addition to the vertices, other given points may lie on the perimeter of the polygon). </p>
<p>As an example, the image below shows a set of twenty points and a few such convex holes. The convex hole shown as a red heptagon has an area equal to 1049694.5 square units, which is the highest possible area for a convex hole on the given set of points.</p>
<center><img src="/resources/images/0252_convexhole.gif" alt=""></center>

<p>For our example, we used the first 20 points (T<sub>2k−1</sub>,&thinsp;T<sub>2k</sub>), for k&thinsp;=&thinsp;1,2,…,20, produced with the pseudo-random number generator:</p>
<center>$S\_0=290797$
$S\_{n+1}=S\_n^2 \text{ mod } 50515093$
$T\_n=\text{(}S\_n \text{ mod } 2000 \text{)}-1000$
</center>

<p><em>i.e.</em> (527,&thinsp;144), (−488,&thinsp;732), (−454,&thinsp;−947), …</p>
<p>What is the maximum area for a convex hole on the set containing the first 500 points in the pseudo-random sequence?<br>Specify your answer including one digit after the decimal point.</p>
<hr>
<p><strong>凸洞</strong></p>
<p>给定平面上一个点集，以这个点集中的点为顶点、且不包含点集中的点在内部（可以在边界上）的凸多边形，称为这个点集的凸洞。</p>
<p>例如，下图展示了20个点组成的点集，以及一系列点集的凸洞。下图中的红色七边形凸洞的面积为1049694.5平方单位，是点集中最大的凸洞。</p>
<center><img src="/resources/images/0252_convexhole.gif" alt=""></center>

<p>在这个例子中，我们使用的20个点(T<sub>2k−1</sub>,&thinsp;T<sub>2k</sub>)是由如下的伪随机数生成器取k&thinsp;=&thinsp;1,2,…,20生成的：</p>
<center>$S\_0=290797$
$S\_{n+1}=S\_n^2 \text{ mod } 50515093$
$T\_n=\text{(}S\_n \text{ mod } 2000 \text{)}-1000$
</center>

<p><em>也就是</em> (527,&thinsp;144), (−488,&thinsp;732), (−454,&thinsp;−947), …</p>
<p>取这个伪随机序列的前500个点构成的集合，凸洞的最大面积是多少？<br>注意将你的答案保留小数点后一位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 253</title>
    <url>/253/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-253"><a href="#Problem-253" class="headerlink" title="Problem 253"></a><a href="https://projecteuler.net/problem=253">Problem 253</a></h1><hr>
<h2 id="Tidying-Up-A"><a href="#Tidying-Up-A" class="headerlink" title="Tidying Up A"></a><strong>Tidying Up A</strong></h2><p>A small child has a “number caterpillar” consisting of forty jigsaw pieces, each with one number on it, which, when connected together in a line, reveal the numbers $1$ to $40$ in order.</p>
<p>Every night, the child’s father has to pick up the pieces of the caterpillar that have been scattered across the play room. He picks up the pieces at random and places them in the correct order.<br>As the caterpillar is built up in this way, it forms distinct segments that gradually merge together.<br>The number of segments starts at zero (no pieces placed), generally increases up to about eleven or twelve, then tends to drop again before finishing at a single segment (all pieces placed).</p>
<p>For example:</p>
<table>
<thead>
<tr>
<th align="center"><strong>Piece Placed</strong></th>
<th align="center"><strong>Segments So Far</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="center">$12$</td>
<td align="center">$1$</td>
</tr>
<tr>
<td align="center">$4$</td>
<td align="center">$2$</td>
</tr>
<tr>
<td align="center">$29$</td>
<td align="center">$3$</td>
</tr>
<tr>
<td align="center">$6$</td>
<td align="center">$4$</td>
</tr>
<tr>
<td align="center">$34$</td>
<td align="center">$5$</td>
</tr>
<tr>
<td align="center">$5$</td>
<td align="center">$4$</td>
</tr>
<tr>
<td align="center">$35$</td>
<td align="center">$4$</td>
</tr>
<tr>
<td align="center">$\ldots$</td>
<td align="center">$\ldots$</td>
</tr>
</tbody></table>
<p>Let $M$ be the maximum number of segments encountered during a random tidy-up of the caterpillar.<br /><br>For a caterpillar of ten pieces, the number of possibilities for each $M$ is</p>
<table>
<thead>
<tr>
<th align="center"><strong>$M$</strong></th>
<th align="center"><strong>Possibilities</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="center">$1$</td>
<td align="center">$512$</td>
</tr>
<tr>
<td align="center">$2$</td>
<td align="center">$250912$</td>
</tr>
<tr>
<td align="center">$3$</td>
<td align="center">$1815264$</td>
</tr>
<tr>
<td align="center">$4$</td>
<td align="center">$1418112$</td>
</tr>
<tr>
<td align="center">$5$</td>
<td align="center">$144000$</td>
</tr>
</tbody></table>
<p>so the most likely value of $M$ is $3$ and the average value is $385643/113400 = 3.400732$, rounded to six decimal places.</p>
<p>The most likely value of $M$ for a forty-piece caterpillar is $11$; but what is the average value of $M$?</p>
<p>Give your answer rounded to six decimal places.</p>
<hr>
<h2 id="清理（一）"><a href="#清理（一）" class="headerlink" title="清理（一）"></a><strong>清理（一）</strong></h2><p>小朋友有一个“数字毛毛虫”玩具，包含有$40$片拼板，分别标有编号；如果把它们都拼起来，将会组成一条直线，且按照$1$到$40$顺序排列。</p>
<p>每天晚上，小朋友的爸爸都要把玩具房里撒了一地的毛毛虫拼板捡起来。他捡的时候是完全随机的，捡起来之后，再按照正确的顺序拼好。<br>这样一来，毛毛虫拼板将会构成分离的片段，并且不断合并直到组成完整的毛毛虫。<br>片段数从$0$开始（没有捡起任何一块拼板），不断上升到大约$11$或$12$，然后再次下降，直到最终只有一段（所有的拼板都组合起来了）。</p>
<p>例如：</p>
<table>
<thead>
<tr>
<th align="center"><strong>捡起的拼板标号</strong></th>
<th align="center"><strong>目前为止的片段数</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="center">$12$</td>
<td align="center">$1$</td>
</tr>
<tr>
<td align="center">$4$</td>
<td align="center">$2$</td>
</tr>
<tr>
<td align="center">$29$</td>
<td align="center">$3$</td>
</tr>
<tr>
<td align="center">$6$</td>
<td align="center">$4$</td>
</tr>
<tr>
<td align="center">$34$</td>
<td align="center">$5$</td>
</tr>
<tr>
<td align="center">$5$</td>
<td align="center">$4$</td>
</tr>
<tr>
<td align="center">$35$</td>
<td align="center">$4$</td>
</tr>
<tr>
<td align="center">$\ldots$</td>
<td align="center">$\ldots$</td>
</tr>
</tbody></table>
<p>记$M$为随机清理毛毛虫拼板的过程中最大的片段数。<br /><br>若毛毛虫拼板共有十片，出现不同$M$的可能情况数分别是：</p>
<table>
<thead>
<tr>
<th align="center"><strong>$M$</strong></th>
<th align="center"><strong>可能情况</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="center">$1$</td>
<td align="center">$512$</td>
</tr>
<tr>
<td align="center">$2$</td>
<td align="center">$250912$</td>
</tr>
<tr>
<td align="center">$3$</td>
<td align="center">$1815264$</td>
</tr>
<tr>
<td align="center">$4$</td>
<td align="center">$1418112$</td>
</tr>
<tr>
<td align="center">$5$</td>
<td align="center">$144000$</td>
</tr>
</tbody></table>
<p>因此，最可能出现的$M$值为$3$，$M$的平均值为$385643/113400 = 3.400732$，保留六位小数。</p>
<p>若毛毛虫拼板共有四十片，最可能出现的$M$值为$11$；那么$M$的平均值是多少？将你的答案保留六位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 254</title>
    <url>/254/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-254"><a href="#Problem-254" class="headerlink" title="Problem 254"></a><a href="https://projecteuler.net/problem=254">Problem 254</a></h1><hr>
<p><strong>Sums of Digit Factorials</strong></p>
<p>Define f(n) as the sum of the factorials of the digits of n. For example, f(342) = 3! + 4! + 2! = 32.</p>
<p>Define sf(n) as the sum of the digits of f(n). So sf(342) = 3 + 2 = 5.</p>
<p>Define g(i) to be the smallest positive integer n such that sf(n) = i. Though sf(342) is 5, sf(25) is also 5, and it can be verified that g(5) is 25.</p>
<p>Define sg(i) as the sum of the digits of g(i). So sg(5) = 2 + 5 = 7.</p>
<p>Further, it can be verified that g(20) is 267 and ∑&thinsp;sg(i) for 1 ≤ i ≤ 20 is 156.</p>
<p>What is ∑&thinsp;sg(i) for 1 ≤ i ≤ 150?</p>
<hr>
<p><strong>各位数字阶乘的和</strong></p>
<p>记f(n)是n的各位数字的阶乘的和。例如，f(342) = 3! + 4! + 2! = 32。</p>
<p>记sf(n)是f(n)的各位数字的和。因此sf(342) = 3 + 2 = 5。</p>
<p>记g(i)是使得sf(n) = i的最小n值。尽管sf(342)为5，然而sf(25)也为5，因此可以验证g(5)是25。</p>
<p>记sg(i)是g(i)的各位数字之和。因此sg(5) = 2 + 5 = 7。</p>
<p>进一步地，可以验证g(20)为267，以及对于1 ≤ i ≤ 20，∑&thinsp;sg(i)为156。</p>
<p>对于1 ≤ i ≤ 150，∑&thinsp;sg(i)是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 255</title>
    <url>/255/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-255"><a href="#Problem-255" class="headerlink" title="Problem 255"></a><a href="https://projecteuler.net/problem=255">Problem 255</a></h1><hr>
<p><strong>Rounded Square Roots</strong></p>
<p>We define the <em>rounded-square-root</em> of a positive integer n as the square root of n rounded to the nearest integer.</p>
<p>The following procedure (essentially Heron’s method adapted to integer arithmetic) finds the rounded-square-root of n:</p>
<p>Let d be the number of digits of the number n.<br>If d is odd, set x<sub>0</sub> = 2×10<sup>(d-1)⁄2</sup>.<br>If d is even, set x<sub>0</sub> = 7×10<sup>(d-2)⁄2</sup>.<br>Repeat:</p>
<center><img src="https://projecteuler.net/project/images/p255_Heron.gif"></center>

<p>until x<sub>k+1</sub> = x<sub>k</sub>.</p>
<p>As an example, let us find the rounded-square-root of n = 4321.<br>n has 4 digits, so x<sub>0</sub> = 7×10<sup>(4-2)⁄2</sup> = 70.</p>
<center><img src="https://projecteuler.net/project/images/p255_Example.gif"></center>

<p>Since x<sub>2</sub> = x<sub>1</sub>, we stop here.<br>So, after just two iterations, we have found that the rounded-square-root of 4321 is 66 (the actual square root is 65.7343137…).</p>
<p>The number of iterations required when using this method is surprisingly low.<br>For example, we can find the rounded-square-root of a 5-digit integer (10,000 ≤ n ≤ 99,999) with an average of 3.2102888889 iterations (the average value was rounded to 10 decimal places).</p>
<p>Using the procedure described above, what is the average number of iterations required to find the rounded-square-root of a 14-digit number (10<sup>13</sup> ≤ n &lt; 10<sup>14</sup>)?<br>Give your answer rounded to 10 decimal places.</p>
<p>Note: The symbols ⌊x⌋ and ⌈x⌉ represent the <dfn title="the largest integer not greater than x">floor function</dfn> and <dfn title="the smallest integer not less than x">ceiling function</dfn> respectively.</p>
<hr>
<p><strong>近似平方根</strong></p>
<p>我们定义正整数n的<em>近似平方根</em>为与n的实际平方根最接近的整数。</p>
<p>如下的过程（实际上就是将希罗求平方根的方法应用在整数算术上）能够给出n的近似平方根：</p>
<p>记n的位数为d。<br>如果d是奇数，则令x<sub>0</sub> = 2×10<sup>(d-1)⁄2</sup>。<br>如果d是偶数，则令x<sub>0</sub> = 7×10<sup>(d-2)⁄2</sup>。<br>依此类推：</p>
<center><img src="https://projecteuler.net/project/images/p255_Heron.gif"></center>

<p>直到x<sub>k+1</sub> = x<sub>k</sub>。</p>
<p>举例来说，我们来寻找n = 4321的近似平方根。<br>n是4位数，因此x<sub>0</sub> = 7×10<sup>(4-2)⁄2</sup> = 70。</p>
<center><img src="https://projecteuler.net/project/images/p255_Example.gif"></center>

<p>因为x<sub>2</sub> = x<sub>1</sub>，就不用再继续下去了。<br>所以，仅仅经过两次迭代，我们就得到了4321的近似平方根为66（实际平方根为65.7343137…）。</p>
<p>这个方法所需的迭代次数少得令人惊讶。<br>例如，对于所有的5位数（10,000 ≤ n ≤ 99,999），我们平均只需要3.2102888889次（四舍五入至10位小数）迭代就能找到其近似平方根。</p>
<p>使用上面描述的方法，对于所有的14位数（10<sup>13</sup> ≤ n &lt; 10<sup>14</sup>），我们平均需要多少次迭代能够找到其近似平方根？<br>将你的答案四舍五入到10位小数。</p>
<p>注意：符号⌊x⌋和⌈x⌉分别表示<dfn title="不大于x的最大整数">下取整函数</dfn>和<dfn title="不小于x的最小整数">上取整函数</dfn>。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 256</title>
    <url>/256/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-256"><a href="#Problem-256" class="headerlink" title="Problem 256"></a><a href="https://projecteuler.net/problem=256">Problem 256</a></h1><hr>
<p><strong>Tatami-Free Rooms</strong></p>
<p>Tatami are rectangular mats, used to completely cover the floor of a room, without overlap.</p>
<p>Assuming that the only type of available tatami has dimensions 1×2, there are obviously some limitations for the shape and size of the rooms that can be covered.</p>
<p>For this problem, we consider only rectangular rooms with integer dimensions a, b and even size s = a·b.<br>We use the term ‘size’ to denote the floor surface area of the room, and — without loss of generality — we add the condition a ≤ b.</p>
<p>There is one rule to follow when laying out tatami: there must be no points where corners of four different mats meet.<br>For example, consider the two arrangements below for a 4×4 room:</p>
<center><img src="/resources/images/0256_tatami3.gif"></center>

<p>The arrangement on the left is acceptable, whereas the one on the right is not: a red “<span style="color:red"><strong>X</strong></span>“ in the middle, marks the point where four tatami meet.</p>
<p>Because of this rule, certain even-sized rooms cannot be covered with tatami: we call them tatami-free rooms.<br>Further, we define T(s) as the number of tatami-free rooms of size s.</p>
<p>The smallest tatami-free room has size s = 70 and dimensions 7×10.<br>All the other rooms of size s = 70 can be covered with tatami; they are: 1×70, 2×35 and 5×14.<br>Hence, T(70) = 1.</p>
<p>Similarly, we can verify that T(1320) = 5 because there are exactly 5 tatami-free rooms of size s = 1320:<br>20×66, 22×60, 24×55, 30×44 and 33×40.<br>In fact, s = 1320 is the smallest room-size s for which T(s) = 5.</p>
<p>Find the smallest room-size s for which T(s) = 200.</p>
<hr>
<p><strong>无法铺满榻榻米的房间</strong></p>
<p>榻榻米是一种长方形的垫子，常常用来不重叠地铺满房间的地板。</p>
<p>假定现在只有唯一一种形状为1×2的榻榻米，显然这对于能够铺满榻榻米的房间的形状和大小都将有所限制。</p>
<p>在这个问题中，我们考虑的房间为长方形，相邻两边长为a和b，且面积s=a·b是偶数。<br>我们用“大小”这个词来表示房间的地板面积，此外，不失一般性，我们假定a ≤ b。</p>
<p>在铺榻榻米的时候必须遵循一个规则：不能有四个榻榻米共用一个顶点。<br>例如，考虑下面两种铺满4×4房间的铺法：</p>
<center><img src="/resources/images/0256_tatami3.gif"></center>

<p>左边的铺法是可行的，而右边的则不是：有一个红色的”<span style="color:red"><strong>X</strong></span>“出现在当中，标记出被四个榻榻米共用的顶点。</p>
<p>因为这个原因，有些面积为偶数的房间依然不能铺满榻榻米：我们称之为无法铺满榻榻米的房间。<br>进一步地，我们定义T(s)是面积为s且无法铺满榻榻米的房间种数。</p>
<p>最小的无法铺满榻榻米的房间面积为s = 70，两边长为7×10。<br>其它所有面积为70的房间都能铺满榻榻米；这些房间的大小分别是：1×70， 2×35和5×14。<br>因此，T(70) = 1。</p>
<p>同样地，我们可以验证T(1320) = 5，因为当房间面积为s = 1320时，恰好有5种房间无法铺满榻榻米：<br>20×66，22×60，24×55，30×44和33×40。<br>事实上，s=1320是使得T(s) = 5的最小房间面积s。</p>
<p>求出使得T(s) = 200的最小房间面积s。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 257</title>
    <url>/257/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-257"><a href="#Problem-257" class="headerlink" title="Problem 257"></a><a href="https://projecteuler.net/problem=257">Problem 257</a></h1><hr>
<p><strong>Angular Bisectors</strong></p>
<p>Given is an integer sided triangle ABC with sides a ≤ b ≤ c. (AB = c, BC = a and AC = b).<br>The angular bisectors of the triangle intersect the sides at points E, F and G (see picture below).</p>
<center><img src="/resources/images/0257_bisector.gif"></center>

<p>The segments EF, EG and FG partition the triangle ABC into four smaller triangles: AEG, BFE, CGF and EFG.<br>It can be proven that for each of these four triangles the ratio area(ABC)/area(subtriangle) is rational.<br>However, there exist triangles for which some or all of these ratios are integral.</p>
<p>How many triangles ABC with perimeter≤100,000,000 exist so that the ratio area(ABC)/area(AEG) is integral?</p>
<hr>
<p><strong>角平分线</strong></p>
<p>如下是边长均为整数的三角形ABC，其三边长为a ≤ b ≤ c（AB = c，BC = a，AC = b）。<br>三角形的角平分线和对边分别交于点E、F和G（如下图所示）。</p>
<center><img src="/resources/images/0257_bisector.gif"></center>

<p>线段EF、EG和FG将三角形ABC分成四个小三角形：AEG、BFE、CGF和EFG。<br>可以证明，对于这四个小三角形来说，三角形ABC的面积与任一小三角形的面积的比值均为有理数。<br>甚而还存在一些三角形ABC，使得其中部分或全部的比值均为整数。</p>
<p>在所有边长≤100,000,000的三角形ABC中，有多少个使得三角形ABC的面积与三角形AEG的面积的比值为整数？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 258</title>
    <url>/258/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-258"><a href="#Problem-258" class="headerlink" title="Problem 258"></a><a href="https://projecteuler.net/problem=258">Problem 258</a></h1><hr>
<p><strong>A lagged Fibonacci sequence</strong></p>
<p>A sequence is defined as:</p>
<ul>
<li>g<sub>k</sub> = 1, for 0 ≤ k ≤ 1999</li>
<li>g<sub>k</sub> = g<sub>k-2000</sub> + g<sub>k-1999</sub>, for k ≥ 2000</li>
</ul>
<p>Find g<sub>k</sub> mod 20092010 for k = 10<sup>18</sup>.</p>
<hr>
<p><strong>延迟斐波那契数列</strong></p>
<p>如下定义了一个数列：</p>
<ul>
<li>g<sub>k</sub> = 1，若0 ≤ k ≤ 1999</li>
<li>g<sub>k</sub> = g<sub>k-2000</sub> + g<sub>k-1999</sub>，若k ≥ 2000</li>
</ul>
<p>取k = 10<sup>18</sup>，求g<sub>k</sub> mod 20092010。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 259</title>
    <url>/259/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-259"><a href="#Problem-259" class="headerlink" title="Problem 259"></a><a href="https://projecteuler.net/problem=259">Problem 259</a></h1><hr>
<p><strong>Reachable Numbers</strong></p>
<p>A positive integer will be called <em>reachable</em> if it can result from an arithmetic expression obeying the following rules:</p>
<ul>
<li>Uses the digits 1 through 9, in that order and exactly once each.</li>
<li>Any successive digits can be concatenated (for example, using the digits 2, 3 and 4 we obtain the number 234).</li>
<li>Only the four usual binary arithmetic operations (addition, subtraction, multiplication and division) are allowed.</li>
<li>Each operation can be used any number of times, or not at all.</li>
<li><dfn title="A minus sign applied to a single operand (as opposed to a subtraction operator between two operands)">Unary minus</dfn> is not allowed.</li>
<li>Any number of (possibly nested) parentheses may be used to define the order of operations.</li>
</ul>
<p>For example, 42 is reachable, since (1/23) * ((4*5)-6) * (78-9) = 42.</p>
<p>What is the sum of all positive reachable integers?</p>
<hr>
<p><strong>可达数</strong></p>
<p>如果正整数可以表示成符合下列规则的算术表达式的结果，就被称为是<em>可达的</em>：</p>
<ul>
<li>按照从小到大顺序使用数字1至9恰好各一次。</li>
<li>任意相邻数字可以连接起来使用（例如，将数字2、3、4连接起来得到234）。</li>
<li>只能使用四则运算（加法、减法、乘法、除法）。</li>
<li>每种运算可以使用任意多次，也可以不用。</li>
<li>禁止使用<dfn title="放在单个运算数前的减号（而不是放在两个运算数当中的减号）">负号</dfn>。</li>
<li>可以使用（甚至嵌套使用）任意数量的括号以规定运算顺序。</li>
</ul>
<p>例如，42是可达的，因为(1/23) * ((4*5)-6) * (78-9) = 42。</p>
<p>所有可达正整数的和是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 26</title>
    <url>/26/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-26"><a href="#Problem-26" class="headerlink" title="Problem 26"></a><a href="https://projecteuler.net/problem=26">Problem 26</a></h1><hr>
<h2 id="Reciprocal-Cycles"><a href="#Reciprocal-Cycles" class="headerlink" title="Reciprocal Cycles"></a><strong>Reciprocal Cycles</strong></h2><p>A unit fraction contains $1$ in the numerator. The decimal representation of the unit fractions with denominators $2$ to $10$ are given:</p>
<p>$$\begin{aligned}<br>1/2 &amp;= 0.5\\<br>1/3 &amp;= 0.(3)\\<br>1/4 &amp;= 0.25\\<br>1/5 &amp;= 0.2\\<br>1/6 &amp;= 0.1(6)\\<br>1/7 &amp;= 0.(142857)\\<br>1/8 &amp;= 0.125\\<br>1/9 &amp;= 0.(1)\\<br>1/10 &amp;= 0.1\\<br>\end{aligned}$$</p>
<p>Where $0.1(6)$ means $0.166666\ldots$, and has a $1$-digit recurring cycle. It can be seen that $1/7$ has a $6$-digit recurring cycle.</p>
<p>Find the value of $d&lt;1000$ for which $1/d$ contains the longest recurring cycle in its decimal fraction part.</p>
<hr>
<h2 id="倒数的循环节"><a href="#倒数的循环节" class="headerlink" title="倒数的循环节"></a><strong>倒数的循环节</strong></h2><p>单位分数指分子为$1$的分数。分母为$2$至$10$的单位分数的十进制表示如下所示：</p>
<p>$$\begin{aligned}<br>1/2 &amp;= 0.5\\<br>1/3 &amp;= 0.(3)\\<br>1/4 &amp;= 0.25\\<br>1/5 &amp;= 0.2\\<br>1/6 &amp;= 0.1(6)\\<br>1/7 &amp;= 0.(142857)\\<br>1/8 &amp;= 0.125\\<br>1/9 &amp;= 0.(1)\\<br>1/10 &amp;= 0.1\\<br>\end{aligned}$$</p>
<p>其中，括号表示循环节，如$0.1(6)$就是指$0.166666\ldots$，循环节的长度为$1$。可以看出，$1/7$的循环节长度为$6$。</p>
<p>在所有满足$d&lt;1000$的数中，求使得其倒数$1/d$的十进制表示中循环节最长的$d$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 260</title>
    <url>/260/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-260"><a href="#Problem-260" class="headerlink" title="Problem 260"></a><a href="https://projecteuler.net/problem=260">Problem 260</a></h1><hr>
<h2 id="Stone-Game"><a href="#Stone-Game" class="headerlink" title="Stone Game"></a><strong>Stone Game</strong></h2><p>A game is played with three piles of stones and two players.<br>On each player’s turn, the player may remove one or more stones from the piles. However, if the player takes stones from more than one pile, she must remove the same number of stones from each of the selected piles.</p>
<p>In other words, the player chooses some $N&gt;0$ and removes:</p>
<ul>
<li>$N$ stones from any single pile; or</li>
<li>$N$ stones from each of any two piles ($2N$ total); or</li>
<li>$N$ stones from each of the three piles ($3N$ total).</li>
</ul>
<p>The player taking the last stone(s) wins the game.</p>
<p>A <em>winning configuration</em> is one where the first player can force a win.<br>For example, $(0,0,13)$, $(0,11,11)$ and $(5,5,5)$ are winning configurations because the first player can immediately remove all stones.</p>
<p>A <em>losing configuration</em> is one where the second player can force a win, no matter what the first player does.<br>For example, $(0,1,2)$ and $(1,3,3)$ are losing configurations: any legal move leaves a winning configuration for the second player.</p>
<p>Consider all  losing configurations $(x_i,y_i,z_i)$ where $x_i\le y_i\le z_i\le 100$.<br /><br>We can verify that $\sum(x_i+y_i+z_i) = 173895$ for these.</p>
<p>Find $\sum(x_i+y_i+z_i)$ where $(x_i,y_i,z_i)$ ranges over the losing configurations with $x_i\le y_i\le z_i\le 1000$.</p>
<hr>
<h2 id="取石子游戏（一）"><a href="#取石子游戏（一）" class="headerlink" title="取石子游戏（一）"></a><strong>取石子游戏（一）</strong></h2><p>取石子游戏需要两名玩家和三堆石子。<br>每一名玩家在自己的回合可以从堆中取走一个或多个石子。然而，如果玩家从多个堆中取石子，从其中每个堆所取的石子数目必须一致。</p>
<p>也就是说，每一名玩家选择一个数$N&gt;0$，然后移走：</p>
<ul>
<li>一个堆中的$N$个石子；或</li>
<li>两个堆中各$N$个石子（共$2N$个）；或</li>
<li>三个堆中各$N$个石子（共$3N$个）。</li>
</ul>
<p>拿走所有石子的玩家赢得游戏。</p>
<p>所谓<i class=zh>必胜态</i>，指的是先手玩家必胜的石子分布。<br>例如，$(0,0,13)$、$(0,11,11)$和$(5,5,5)$是必胜态，因为先手玩家可以立刻取走所有的石子。</p>
<p>所谓<i class=zh>必败态</i>，指的是无论先手玩家如何操作，后手玩家必胜的石子分布。<br>例如，$(0,1,2)$和$(1,3,3)$是必败态：先手玩家任何符合规则的取法都会给后手玩家留下必胜态。</p>
<p>考虑所有满足$x_i\le y_i\le z_i\le 100$的必败态$(x_i,y_i,z_i)$。<br>可以验证，对于所有这些必败态，$\sum(x_i+y_i+z_i) = 173895$。</p>
<p>考虑所有满足$x_i\le y_i\le z_i\le 1000$的必败态$(x_i,y_i,z_i)$，求$\sum(x_i+y_i+z_i)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 261</title>
    <url>/261/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-261"><a href="#Problem-261" class="headerlink" title="Problem 261"></a><a href="https://projecteuler.net/problem=261">Problem 261</a></h1><hr>
<p><strong>Pivotal Square Sums</strong></p>
<p>Let us call a positive integer k a square-pivot, if there is a pair of integers m &gt; 0 and n ≥ k, such that the sum of the (m+1) consecutive squares up to k equals the sum of the m consecutive squares from (n+1) on:</p>
<center>(k-m)<sup>2</sup> + ... + k<sup>2</sup> = (n+1)<sup>2</sup> + ... + (n+m)<sup>2</sup>.</center>

<p>Some small square-pivots are</p>
<ul>
<li><strong>4</strong>: 3<sup>2</sup> + <strong>4</strong><sup>2</sup> = 5<sup>2</sup></li>
<li><strong>21</strong>: 20<sup>2</sup> + <strong>21</strong><sup>2</sup> = 29<sup>2</sup></li>
<li><strong>24</strong>: 21<sup>2</sup> + 22<sup>2</sup> + 23<sup>2</sup> + <strong>24</strong><sup>2</sup> = 25<sup>2</sup> + 26<sup>2</sup> + 27<sup>2</sup></li>
<li><strong>110</strong>: 108<sup>2</sup> + 109<sup>2</sup> + <strong>110</strong><sup>2</sup> = 133<sup>2</sup> + 134<sup>2</sup></li>
</ul>
<p>Find the sum of all <strong>distinct</strong> square-pivots ≤ 10<sup>10</sup>.</p>
<hr>
<p><strong>平方枢轴数</strong></p>
<p>我们称满足如下性质的正整数k为平方枢轴数：存在整数对m &gt; 0和n ≥ k，使得从k开始往前数(m+1)个连续的数的平方和等于从(n+1)开始往后数m个连续数的平方和。</p>
<center>(k-m)<sup>2</sup> + ... + k<sup>2</sup> = (n+1)<sup>2</sup> + ... + (n+m)<sup>2</sup>.</center>

<p>一些较小的平方枢轴数为</p>
<ul>
<li><strong>4</strong>: 3<sup>2</sup> + <strong>4</strong><sup>2</sup> = 5<sup>2</sup></li>
<li><strong>21</strong>: 20<sup>2</sup> + <strong>21</strong><sup>2</sup> = 29<sup>2</sup></li>
<li><strong>24</strong>: 21<sup>2</sup> + 22<sup>2</sup> + 23<sup>2</sup> + <strong>24</strong><sup>2</sup> = 25<sup>2</sup> + 26<sup>2</sup> + 27<sup>2</sup></li>
<li><strong>110</strong>: 108<sup>2</sup> + 109<sup>2</sup> + <strong>110</strong><sup>2</sup> = 133<sup>2</sup> + 134<sup>2</sup></li>
</ul>
<p>求≤ 10<sup>10</sup>的范围内，所有<strong>不同的</strong>平方枢轴数之和。.</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 262</title>
    <url>/262/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-262"><a href="#Problem-262" class="headerlink" title="Problem 262"></a><a href="https://projecteuler.net/problem=262">Problem 262</a></h1><hr>
<p><strong>Mountain Range</strong></p>
<p>The following equation represents the <em>continuous</em> topography of a mountainous region, giving the <dfn title="height above sea level">elevation</dfn> h at any point (x,y):</p>
<center><img src="https://projecteuler.net/project/images/p262_formula1.gif"></center>

<p>A mosquito intends to fly from A(200,200) to B(1400,1400), without leaving the area given by 0&nbsp;≤&nbsp;x,&nbsp;y&nbsp;≤&nbsp;1600.</p>
<p>Because of the intervening mountains, it first rises straight up to a point A’, having elevation f. Then, while remaining at the same elevation f, it flies around any obstacles until it arrives at a point B’ directly above B.</p>
<p>First, determine f<sub>min</sub> which is the minimum constant elevation allowing such a trip from A to B, while remaining in the specified area.<br>Then, find the length of the shortest path between A’ and B’, while flying at that constant elevation f<sub>min</sub>.</p>
<p>Give that length as your answer, rounded to three decimal places.</p>
<p><u>Note</u>: For convenience, the elevation function shown above is repeated below, in a form suitable for most programming languages:<br>h=(5000-0.005*(x*x+y*y+x*y)+12.5*(x+y))*exp(-abs(0.000001*(x*x+y*y)-0.0015*(x+y)+0.7))</p>
<hr>
<p><strong>山的范围</strong></p>
<p>如下的等式表示了一座山<em>连续的</em>地貌，对于任意一点(x,y)，其<dfn title="超过海平面的高度">海拔</dfn>h为：</p>
<center><img src="https://projecteuler.net/project/images/p262_formula1.gif"></center>

<p>一只蚊子试图从点A(200,200)飞往点B(1400,1400)，但不能离开0&nbsp;≤&nbsp;x,&nbsp;y&nbsp;≤&nbsp;1600的这片区域。</p>
<p>为了避免地貌的影响，它先竖直向上飞到一点A’，其海拔为f。然后，它保持海拔高度f不变，绕过所有障碍，直到它到达B点正上方的一点B’。</p>
<p>首先，找出在给定区域内存在由A至B路径的最小海拔高度f<sub>min</sub>。<br>其次，找出A’到B’的最短路径长度，路径上的海拔高度始终为常数f<sub>min</sub>。</p>
<p>给出最短路径长度并四舍五入至三位小数作为你的答案。</p>
<p><u>注意</u>：方便起见，上述海拔函数在下面按照方便大多数编程语言习惯的方式重写为：<br>h=(5000-0.005*(x*x+y*y+x*y)+12.5*(x+y))*exp(-abs(0.000001*(x*x+y*y)-0.0015*(x+y)+0.7))</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 263</title>
    <url>/263/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-263"><a href="#Problem-263" class="headerlink" title="Problem 263"></a><a href="https://projecteuler.net/problem=263">Problem 263</a></h1><hr>
<p><strong>An engineers’ dream come true</strong></p>
<p>Consider the number 6. The divisors of 6 are: 1,2,3 and 6.<br>Every number from 1 up to and including 6 can be written as a sum of distinct divisors of 6:<br>1=1, 2=2, 3=1+2, 4=1+3, 5=2+3, 6=6.<br>A number n is called a practical number if every number from 1 up to and including n can be expressed as a sum of distinct divisors of n.</p>
<p>A pair of consecutive prime numbers with a difference of six is called a sexy pair (since “sex” is the Latin word for “six”). The first sexy pair is (23, 29).</p>
<p>We may occasionally find a triple-pair, which means three consecutive sexy prime pairs, such that the second member of each pair is the first member of the next pair.</p>
<p>We shall call a number n such that:</p>
<ul>
<li>(n-9, n-3), (n-3,n+3), (n+3, n+9) form a triple-pair, and </li>
<li>the numbers n-8, n-4, n, n+4 and n+8 are all practical,</li>
</ul>
<p>an engineers’ paradise.</p>
<p>Find the sum of the first four engineers’ paradises.</p>
<hr>
<p><strong>工程师美梦成真</strong></p>
<p>数6的约数为：1、2、3和6。<br>从1到6的每个数都能写成6的不同约数的和：<br>1=1, 2=2, 3=1+2, 4=1+3, 5=2+3, 6=6.<br>如果从1到n的每个数都能写成n的不同约数的和，n就被称为实用数。</p>
<p>如果一堆连续素数的差为6，则被称为性感数对（因为”sex”（性）恰好是”six”（六）的拉丁语写法）。第一个性感数对是(23, 29)。</p>
<p>我们偶尔可能会发现性感数对三元组，也就是三组连续的性感数对，其中每一组的第二个数恰好是后一组的第一个数。</p>
<p>如果数n满足：</p>
<ul>
<li>(n-9, n-3)、(n-3,n+3)、(n+3, n+9)构成一个性感数对三元组，而且</li>
<li>数n-8、n-4、n、n+4和n+8都是实用数，</li>
</ul>
<p>我们就称之为工程师的天堂数。</p>
<p>找出前四个工程师的天堂数，并求它们的和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 264</title>
    <url>/264/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-264"><a href="#Problem-264" class="headerlink" title="Problem 264"></a><a href="https://projecteuler.net/problem=264">Problem 264</a></h1><hr>
<p><strong>Triangle Centres</strong></p>
<p>Consider all the triangles having:</p>
<ul>
<li>All their vertices on <dfn title="Integer coordinates">lattice points</dfn>.</li>
<li><dfn title="Centre of the circumscribed circle">Circumcentre</dfn> at the origin O.</li>
<li><dfn title="Point where the three altitudes meet">Orthocentre</dfn> at the point H(5, 0).</li>
</ul>
<p>There are nine such triangles having a perimeter ≤ 50.<br>Listed and shown in ascending order of their perimeter, they are:</p>
<center>A(-4, 3), B(5, 0), C(4, -3)
A(4, 3), B(5, 0), C(-4, -3)
A(-3, 4), B(5, 0), C(3, -4)
A(3, 4), B(5, 0), C(-3, -4)
A(0, 5), B(5, 0), C(0, -5)
A(1, 8), B(8, -1), C(-4, -7)
A(8, 1), B(1, -8), C(-4, 7)
A(2, 9), B(9, -2), C(-6, -7)
A(9, 2), B(2, -9), C(-6, 7)
<img src="/resources/images/0264_TriangleCentres.gif">
</center>

<p>The sum of their perimeters, rounded to four decimal places, is 291.0089.</p>
<p>Find all such triangles with a perimeter ≤ 10<sup>5</sup>.<br>Enter as your answer the sum of their perimeters rounded to four decimal places.</p>
<hr>
<p><strong>三角形的心</strong></p>
<p>考虑满足如下条件的三角形：</p>
<ul>
<li>各顶点都在<dfn title="坐标为整数的点">格点</dfn>上。</li>
<li><dfn title="外接圆圆心">外心</dfn>在原点O处。</li>
<li><dfn title="三条高的交点">垂心</dfn>位于点H(5, 0)。</li>
</ul>
<p>在边长≤ 50的所有三角形中，满足上述条件的三角形有九个。<br>按照它们的周长升序排列，分别是：</p>
<center>A(-4, 3), B(5, 0), C(4, -3)
A(4, 3), B(5, 0), C(-4, -3)
A(-3, 4), B(5, 0), C(3, -4)
A(3, 4), B(5, 0), C(-3, -4)
A(0, 5), B(5, 0), C(0, -5)
A(1, 8), B(8, -1), C(-4, -7)
A(8, 1), B(1, -8), C(-4, 7)
A(2, 9), B(9, -2), C(-6, -7)
A(9, 2), B(2, -9), C(-6, 7)
<img src="/resources/images/0264_TriangleCentres.gif">
</center>

<p>它们的周长之和四舍五入到四位小数是291.0089。</p>
<p>在边长≤ 10<sup>5</sup>的所有三角形中，找出所有满足上述条件的三角形。<br>将它们的周长之和四舍五入到四位小数作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 266</title>
    <url>/266/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-266"><a href="#Problem-266" class="headerlink" title="Problem 266"></a><a href="https://projecteuler.net/problem=266">Problem 266</a></h1><hr>
<p><strong>Pseudo Square Root</strong></p>
<p>The divisors of 12 are: 1,2,3,4,6 and 12.<br>The largest divisor of 12 that does not exceed the square root of 12 is 3.<br>We shall call the largest divisor of an integer n that does not exceed the square root of n the pseudo square root (PSR) of n.<br>It can be seen that PSR(3102)=47.</p>
<p>Let p be the product of the primes below 190.<br>Find PSR(p) mod 10<sup>16</sup>.</p>
<hr>
<p><strong>伪平方根</strong></p>
<p>12的约数是：1、2、3、4、6和12。<br>12的所有约数中，不超过其平方根的最大约数是3。<br>我们称n的所有约数中，不超过其平方根的最大约数为n的伪平方根，简称PSR。<br>可以看出PSR(3102)=47。</p>
<p>记p是所有小于190的素数的乘积。<br>求PSR(p) mod 10<sup>16</sup>。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 265</title>
    <url>/265/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-265"><a href="#Problem-265" class="headerlink" title="Problem 265"></a><a href="https://projecteuler.net/problem=265">Problem 265</a></h1><hr>
<p><strong>Binary Circles</strong></p>
<p>2<sup>N</sup> binary digits can be placed in a circle so that all the N-digit clockwise subsequences are distinct.</p>
<p>For N=3, two such circular arrangements are possible, ignoring rotations:</p>
<center><img src="/resources/images/0265_BinaryCircles.gif"></center>

<p>For the first arrangement, the 3-digit subsequences, in clockwise order, are: 000, 001, 010, 101, 011, 111, 110 and 100.</p>
<p>Each circular arrangement can be encoded as a number by concatenating the binary digits starting with the subsequence of all zeros as the most significant bits and proceeding clockwise. The two arrangements for N=3 are thus represented as 23 and 29:</p>
<center>00010111&thinsp;<sub>2</sub> = 23
00011101&thinsp;<sub>2</sub> = 29</center>

<p>Calling S(N) the sum of the unique numeric representations, we can see that S(3) = 23 + 29 = 52.</p>
<p>Find S(5).</p>
<hr>
<p><strong>二进制圈</strong></p>
<p>2<sup>N</sup>个二进制位可以排成一圈，使得所有按顺时针顺序得到的N位二进制子串都不一样。</p>
<p>对于N=3，不考虑旋转，有两种可行的排圈方式：</p>
<center><img src="/resources/images/0265_BinaryCircles.gif"></center>

<p>在第一种排圈方式中，按顺时针顺序得到的3位二进制子串分别是：000、001、010、101、011、111、110和100。</p>
<p>每一种排圈方式都可以按如下方式编码：以全为0的子串作为起点，将所有的二进制位连接起来。N=3的两种排圈方式于是就可以编码为23和29：</p>
<center>00010111&thinsp;<sub>2</sub> = 23
00011101&thinsp;<sub>2</sub> = 29</center>

<p>记S(N)是所有排圈方式的编码之和，我们可以看到S(3) = 23 + 29 = 52。</p>
<p>求S(5)。 </p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 267</title>
    <url>/267/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-267"><a href="#Problem-267" class="headerlink" title="Problem 267"></a><a href="https://projecteuler.net/problem=267">Problem 267</a></h1><hr>
<p><strong>Billionaire</strong></p>
<p>You are given a unique investment opportunity.</p>
<p>Starting with £1 of capital, you can choose a fixed proportion, f, of your capital to bet on a fair coin toss repeatedly for 1000 tosses.</p>
<p>Your return is double your bet for heads and you lose your bet for tails.</p>
<p>For example, if f&thinsp;=&thinsp;1/4,  for the first toss you bet £0.25, and if heads comes up you win £0.5 and so then have £1.5. You then bet £0.375 and if the second toss is tails, you have £1.125.</p>
<p>Choosing f to maximize your chances of having at least £1,000,000,000 after 1,000 flips, what is the chance that you become a billionaire?</p>
<p>All computations are assumed to be exact (no rounding), but give your answer rounded to 12 digits behind the decimal point in the form 0.abcdefghijkl.</p>
<hr>
<p><strong>百万富翁</strong></p>
<p>现在你面前有一个仅此一次的投资机会。</p>
<p>一开始，你有£1的资本。你可以选择一个固定的比例f，每一轮投入这个比例的资本，并抛掷一枚标准硬币，这样的过程重复一千轮。</p>
<p>如果硬币是正面朝上，你的回报是投入资本的两倍，如果是反面朝上则没有回报。</p>
<p>例如，如果选择f&thinsp;=&thinsp;1/4，第一轮投入的资本是£0.25，假定正面朝上，那么你获得的回报是£0.5，因此总资本变成£1.5。下一轮你投入的资本是£0.375，假定反面朝上，那么你现在的总资本是£1.125。</p>
<p>经过1,000轮后你有一定几率拥有至少£1,000,000,000的资本。选择最大化这个几率的f时，你有多大的几率成为百万富翁？</p>
<p>计算过程中必须是精确值（不四舍五入），但将你的答案四舍五入到小数点后12位小数，即形式为0.abcdefghijkl。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 268</title>
    <url>/268/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-268"><a href="#Problem-268" class="headerlink" title="Problem 268"></a><a href="https://projecteuler.net/problem=268">Problem 268</a></h1><hr>
<p><strong>Counting numbers with at least four distinct prime factors less than 100</strong></p>
<p>It can be verified that there are 23 positive integers less than 1000 that are divisible by at least four distinct primes less than 100.</p>
<p>Find how many positive integers less than 10<sup>16</sup> are divisible by at least four distinct primes less than 100.</p>
<hr>
<p><strong>拥有四个小于100的不同质因数的数计数</strong></p>
<p>可以验证，在小于1000的正整数中，有23个能够被至少四个小于100的不同质数整除。</p>
<p>在小于10<sup>16</sup>的正整数中，求出有多少个能够被至少四个小于100的不同质数整除。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 269</title>
    <url>/269/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-269"><a href="#Problem-269" class="headerlink" title="Problem 269"></a><a href="https://projecteuler.net/problem=269">Problem 269</a></h1><hr>
<p><strong>Polynomials with at least one integer root</strong></p>
<p>A root or zero of a polynomial P(x) is a solution to the equation P(x) = 0.<br>Define P<sub>n</sub> as the polynomial whose coefficients are the digits of n.<br>For example, P<sub>5703</sub>(x) = 5x<sup>3</sup> + 7x<sup>2</sup> + 3.</p>
<p>We can see that:</p>
<ul>
<li>P<sub>n</sub>(0) is the last digit of n,</li>
<li>P<sub>n</sub>(1) is the sum of the digits of n,</li>
<li>P<sub>n</sub>(10) is n itself.</li>
</ul>
<p>Define Z(k) as the number of positive integers, n, not exceeding k for which the polynomial P<sub>n</sub> has at least one integer root.</p>
<p>It can be verified that Z(100 000) is 14696.</p>
<p>What is Z(10<sup>16</sup>)?</p>
<hr>
<p><strong>有至少一个整数根的多项式</strong></p>
<p>多项式P(x)的根或零点，是方程P(x) = 0的解。<br>定义P<sub>n</sub>为系数等于n的各位数字的多项式。<br>例如，P<sub>5703</sub>(x) = 5x<sup>3</sup> + 7x<sup>2</sup> + 3。</p>
<p>我们可以看出：</p>
<ul>
<li>P<sub>n</sub>(0)是n的个位数字。</li>
<li>P<sub>n</sub>(1)是n的各位数字和。</li>
<li>P<sub>n</sub>(10)是n本身。</li>
</ul>
<p>在不超过k的正整数中，有些数n满足多项式P<sub>n</sub>至少有一个整数根，定义Z(k)为这类数的数目。</p>
<p>可以验证Z(100 000)为14696。</p>
<p>Z(10<sup>16</sup>)是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 27</title>
    <url>/27/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-27"><a href="#Problem-27" class="headerlink" title="Problem 27"></a><a href="https://projecteuler.net/problem=27">Problem 27</a></h1><hr>
<h2 id="Quadratic-Primes"><a href="#Quadratic-Primes" class="headerlink" title="Quadratic Primes"></a><strong>Quadratic Primes</strong></h2><p>Euler discovered the remarkable quadratic formula:</p>
<p>$$n^2 + n + 41$$</p>
<p>It turns out that the formula will produce $40$ primes for the consecutive integer values $0 \le n \le 39$. However, when $n = 40$, $40^2 + 40 + 41 = 40(40 + 1) + 41$ is divisible by $41$, and certainly when $n = 41$, $41^2 + 41 + 41$ is clearly divisible by $41$.</p>
<p>The incredible formula $n^2 - 79n + 1601$ was discovered, which produces $80$ primes for the consecutive values $0 \le n \le 79$. The product of the coefficients, $−79$ and $1601$, is $−126479$.</p>
<p>Considering quadratics of the form:</p>
<p>$n^2 + an + b$, where $|a|&lt;1000$ and $|b| \le 1000$,</p>
<p>where $|n|$ is the modulus/absolute value of $n$, e.g. $|11| = 11$ and $|-4| = 4$.</p>
<p>Find the product of the coefficients, $a$ and $b$, for the quadratic expression that produces the maximum number of primes for consecutive values of $n$, starting with $n = 0$.</p>
<hr>
<h2 id="素数生成二次多项式"><a href="#素数生成二次多项式" class="headerlink" title="素数生成二次多项式"></a><strong>素数生成二次多项式</strong></h2><p>欧拉发现了这个著名的二次多项式：</p>
<p>$$n^2 + n + 41$$</p>
<p>对$0\le n\le39$范围内的所有整数，这个多项式可以连续生成$40$个质数。但是，当$n=40$时，$40^2 + 40 + 41 = 40(40 + 1) + 41$能够被$41$整除，而当$n=41$时，$41^2 + 41 + 41$显然也能够被$41$整除。</p>
<p>之后，人们又发现了一个神奇的多项式$n^2 - 79n + 1601$，这个多项式能够对$0\le n\le79$范围内的所有整数连续生成$80$个质数。这个二次多项式的系数分别是$-79$和$1601$，其乘积为$-126479$。</p>
<p>考虑所有如下形式的二次多项式：<br>$n^2 + an + b$，其中$|a|&lt;1000$，$|b| \le 1000$。</p>
<p>这里$|n|$表示$n$的绝对值，例如，$|11| = 11$，$|-4| = 4$。</p>
<p>找出其中能够从$n=0$开始连续生成最多素数的二次多项式，求其系数$a$和$b$的乘积。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 270</title>
    <url>/270/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-270"><a href="#Problem-270" class="headerlink" title="Problem 270"></a><a href="https://projecteuler.net/problem=270">Problem 270</a></h1><hr>
<p><strong>Cutting Squares</strong></p>
<p>A square piece of paper with integer dimensions N×N is placed with a corner at the origin and two of its sides along the x- and y-axes. Then, we cut it up respecting the following rules:</p>
<ul>
<li>We only make straight cuts between two points lying on different sides of the square, and having integer coordinates.</li>
<li>Two cuts cannot cross, but several cuts can meet at the same border point.</li>
<li>Proceed until no more legal cuts can be made.</li>
</ul>
<p>Counting any reflections or rotations as distinct, we call C(N) the number of ways to cut an N×N square. For example, C(1)&thinsp;=&thinsp;2 and C(2)&thinsp;=&thinsp;30 (shown below).</p>
<center><img src="/resources/images/0270_CutSquare.gif"></center>

<p>What is C(30) mod 10<sup>8</sup> ?</p>
<hr>
<p><strong>切割正方形</strong></p>
<p>将一张边长为整数、大小为N×N的正方形纸的顶点置于原点，两条相邻边分别贴着x轴和y轴。然后，我们根据下面的规则对它进行切割：</p>
<ul>
<li>我们只进行这样的切割：从正方形不同的两条边上选择两个坐标为整数的点，并沿着两点的连线切割。</li>
<li>两次切割不能相交，但多次切割可以经过边上的同一个点。</li>
<li>一直切割下去，直到不存在合法的切割为止。</li>
</ul>
<p>如果翻转或旋转后相同的切割方法视为不同，我们记切割一个N×N方块的方法数记为C(N)。举例而言，C(1)&thinsp;=&thinsp;2，而C(2)&thinsp;=&thinsp;30（如下图所示）。</p>
<center><img src="/resources/images/0270_CutSquare.gif"></center>

<p>C(30) mod 10<sup>8</sup>是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 271</title>
    <url>/271/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-271"><a href="#Problem-271" class="headerlink" title="Problem 271"></a><a href="https://projecteuler.net/problem=271">Problem 271</a></h1><hr>
<p><strong>Modular Cubes, part 1</strong></p>
<p>For a positive number n, define S(n) as the sum of the integers x, for which 1&lt;x&lt;n and x<sup>3</sup>≡1 mod n.</p>
<p>When n=91, there are 8 possible values for x, namely : 9, 16, 22, 29, 53, 74, 79, 81.<br>Thus, S(91)=9+16+22+29+53+74+79+81=363.</p>
<p>Find S(13082761331670030).</p>
<hr>
<p><strong>立方取模I</strong></p>
<p>对于正整数n，存在整数x，满足1&lt;x&lt;n，且x<sup>3</sup>≡1 mod n。记所有这样的整数x的和为S(n)。</p>
<p>当n=91时，x一共有8个可能的取值，分别是：9、16、22、29、53、74、79、81。<br>因此，S(91)=9+16+22+29+53+74+79+81=363。</p>
<p>求S(13082761331670030).</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 272</title>
    <url>/272/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-272"><a href="#Problem-272" class="headerlink" title="Problem 272"></a><a href="https://projecteuler.net/problem=272">Problem 272</a></h1><hr>
<p><strong>Modular Cubes, part 2</strong></p>
<p>For a positive number n, define C(n) as the number of the integers x, for which 1&lt;x&lt;n and x<sup>3</sup>≡1 mod n.</p>
<p>When n=91, there are 8 possible values for x, namely : 9, 16, 22, 29, 53, 74, 79, 81.<br>Thus, C(91)=8.</p>
<p>Find the sum of the positive numbers n≤10<sup>11</sup> for which C(n)=242.</p>
<hr>
<p><strong>立方取模II</strong></p>
<p>对于正整数n，存在整数x，满足1&lt;x&lt;n，且x<sup>3</sup>≡1 mod n。记所有这样的整数x的数目为C(n)。</p>
<p>当n=91时，x一共有8个可能的取值，分别是：9、16、22、29、53、74、79、81。<br>因此，C(91)=8。</p>
<p>对于所有使得C(n)=242的正整数n≤10<sup>11</sup>，求它们的和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 273</title>
    <url>/273/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-273"><a href="#Problem-273" class="headerlink" title="Problem 273"></a><a href="https://projecteuler.net/problem=273">Problem 273</a></h1><hr>
<p><strong>Sum of Squares</strong></p>
<p>Consider equations of the form: a<sup>2</sup> + b<sup>2</sup> = N, 0 ≤ a ≤ b, a, b and N integer.</p>
<p>For N=65 there are two solutions:</p>
<p>a=1, b=8 and a=4, b=7.</p>
<p>We call S(N) the sum of the values of a of all solutions of a<sup>2</sup> + b<sup>2</sup> = N, 0 ≤ a ≤ b, a, b and N integer.</p>
<p>Thus S(65) = 1 + 4 = 5.</p>
<p>Find ∑S(N), for all squarefree N only divisible by primes of the form 4k+1 with 4k+1 &lt; 150.</p>
<hr>
<p><strong>平方的和</strong></p>
<p>考虑如下形式的方程：a<sup>2</sup> + b<sup>2</sup> = N, 0 ≤ a ≤ b, a、b和N均为整数。</p>
<p>对于N=65，方程有两个解：</p>
<p>a=1, b=8 和 a=4, b=7。</p>
<p>对于方程a<sup>2</sup> + b<sup>2</sup> = N, 0 ≤ a ≤ b, a、b和N均为整数，所有的解中的a值的和记为S(N)。</p>
<p>因此S(65) = 1 + 4 = 5。</p>
<p>有一些无平方因子数N，只能被形如4k+1且&lt; 150的素数整除，对所有这样的数求∑S(N)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 275</title>
    <url>/275/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-275"><a href="#Problem-275" class="headerlink" title="Problem 275"></a><a href="https://projecteuler.net/problem=275">Problem 275</a></h1><hr>
<p><strong>Balanced Sculptures</strong></p>
<p>Let us define a <em>balanced sculpture</em> of order n as follows:</p>
<ul>
<li>A <dfn title="An arrangement of identical squares connected through shared edges; holes are allowed.">polyomino</dfn> made up of n+1 tiles known as the <em>blocks</em> (n tiles) and the <em>plinth</em> (remaining tile);</li>
<li>the plinth has its centre at position (x&thinsp;=&thinsp;0, y&thinsp;=&thinsp;0);</li>
<li>the blocks have y-coordinates greater than zero (so the plinth is the unique lowest tile);</li>
<li>the centre of mass of all the blocks, combined, has x-coordinate equal to zero.</li>
</ul>
<p>When counting the sculptures, any arrangements which are simply reflections about the y-axis, are <u>not</u> counted as distinct. For example, the 18 balanced sculptures of order 6 are shown below; note that each pair of mirror images (about the y-axis) is counted as one sculpture:</p>
<center><img src="/resources/images/0275_sculptures2.gif"></center>

<p>There are 964 balanced sculptures of order 10 and 360505 of order 15.How many balanced sculptures are there of order 18?</p>
<hr>
<p><strong>平衡雕塑</strong></p>
<p>我们定义n阶<em>平衡雕塑</em>如下：</p>
<ul>
<li>是由n+1个方块构成的<dfn title="由一系列相同方块拼接而成的形状，允许有洞。">多联骨牌</dfn>，分为<em>区块</em>（n个方块）和<em>基座</em>（剩下的1个方块）；</li>
<li>基座的中心位于(x&thinsp;=&thinsp;0, y&thinsp;=&thinsp;0)；</li>
<li>区块的y坐标大于0（因此基座是唯一最低的方块）；</li>
<li>所有区块的总体质心的x坐标等于零。</li>
</ul>
<p>在数雕塑的种类时，所有关于y轴翻转后相同的形状都<u>不</u>算作不同的形状。例如，如下展示了全部18种6阶的平衡雕塑；注意每一对镜像（关于y轴）都只算做一种雕塑：</p>
<center><img src="/resources/images/0275_sculptures2.gif"></center>

<p>10阶的平衡雕塑一共有964种，15阶平衡雕塑一共有360505种。18阶平衡雕塑一共有多少种？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 274</title>
    <url>/274/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-274"><a href="#Problem-274" class="headerlink" title="Problem 274"></a><a href="https://projecteuler.net/problem=274">Problem 274</a></h1><hr>
<p><strong>Divisibility Multipliers</strong></p>
<p>For each integer p &gt; 1 coprime to 10 there is a positive <em>divisibility multiplier</em> m &lt; p which preserves divisibility by p for the following function on any positive integer, n:</p>
<p>f(n) = (all but the last digit of n) + (the last digit of n) * m</p>
<p>That is, if m is the divisibility multiplier for p, then f(n) is divisible by p if and only if n is divisible by p.</p>
<p>(When n is much larger than p, f(n) will be less than n and repeated application of f provides a multiplicative divisibility test for p.)</p>
<p>For example, the divisibility multiplier for 113 is 34.</p>
<p>f(76275) = 7627 + 5 * 34 = 7797 : 76275 and 7797 are both divisible by 113<br>f(12345) = 1234 + 5 * 34 = 1404 : 12345 and 1404 are both not divisible by 113</p>
<p>The sum of the divisibility multipliers for the primes that are coprime to 10 and less than 1000 is 39517. What is the sum of the divisibility multipliers for the primes that are coprime to 10 and less than 10<sup>7</sup>?</p>
<hr>
<p><strong>整除性乘数</strong></p>
<p>对于任意与10互质的正整数p &gt; 1，存在一个正<em>整除性乘数</em> m &lt; p，能够让任意正整数n在下面这个函数的作用下保持其对p的整除性：</p>
<p>f(n) = (n除最后一位数字之外的部分) + (n的最后一位数字) * m</p>
<p>也就是说，如果m是p的整除性乘数，那么f(n)能被p整除当且仅当n能被p整除。</p>
<p>（当n远大于p时，f(n)将会比n小，重复这个过程提供了快速检验能否被p整除的方法。）</p>
<p>例如，113的整除性乘数是34。</p>
<p>f(76275) = 7627 + 5 * 34 = 7797 : 76275和7797都能被113整除<br>f(12345) = 1234 + 5 * 34 = 1404 : 12345和1404都不能被112整除</p>
<p>对于所有小于1000且与10互质的素数，其整除性乘数之和是39517。对于所有小于10<sup>7</sup>且与10互质的素数，其整除性乘数之和是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 276</title>
    <url>/276/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-276"><a href="#Problem-276" class="headerlink" title="Problem 276"></a><a href="https://projecteuler.net/problem=276">Problem 276</a></h1><hr>
<p><strong>Primitive Triangles</strong></p>
<p>Consider the triangles with integer sides a, b and c with a ≤ b ≤ c.<br>An integer sided triangle (a,b,c) is called primitive if <dfn title="gcd(a,b,c)=gcd(a,gcd(b,c))">gcd(a,b,c)</dfn>=1.<br>How many primitive integer sided triangles exist with a perimeter not exceeding 10 000 000?</p>
<hr>
<p><strong>互质三角形</strong></p>
<p>考虑三边长a ≤ b ≤ c均为整数的三角形。<br>如果<dfn title="gcd(a,b,c)=gcd(a,gcd(b,c))">gcd(a,b,c)</dfn>=1，该整数边长三角形(a,b,c)就被称为互质三角形。<br>在边长不超过10 000 000的整数边长三角形中，存在多少个互质三角形？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 277</title>
    <url>/277/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-277"><a href="#Problem-277" class="headerlink" title="Problem 277"></a><a href="https://projecteuler.net/problem=277">Problem 277</a></h1><hr>
<p><strong>A Modified Collatz sequence</strong></p>
<p>A modified Collatz sequence of integers is obtained from a starting value a<sub>1</sub> in the following way:</p>
<p>a<sub>n+1</sub> = a<sub>n</sub>/3 if a<sub>n</sub> is divisible by 3. We shall denote this as a large downward step, “D”.</p>
<p>a<sub>n+1</sub> = (4a<sub>n</sub> + 2)/3 if a<sub>n</sub> divided by 3 gives a remainder of 1. We shall denote this as an upward step, “U”.</p>
<p>a<sub>n+1</sub> = (2a<sub>n</sub> - 1)/3 if a<sub>n</sub> divided by 3 gives a remainder of 2. We shall denote this as a small downward step, “d”.</p>
<p>The sequence terminates when some a<sub>n</sub> = 1.</p>
<p>Given any integer, we can list out the sequence of steps.<br>For instance if a<sub>1</sub>=231, then the sequence {a<sub>n</sub>}={231,77,51,17,11,7,10,14,9,3,1} corresponds to the steps “DdDddUUdDD”.</p>
<p>Of course, there are other sequences that begin with that same sequence<br>“DdDddUUdDD….”.<br>For instance, if a<sub>1</sub>=1004064, then the sequence is<br>DdDddUUdDDDdUDUUUdDdUUDDDUdDD.<br>In fact, 1004064 is the smallest possible a<sub>1</sub> &gt; 10<sup>6</sup> that begins with the sequence<br>DdDddUUdDD.</p>
<p>What is the smallest a<sub>1</sub> &gt; 10<sup>15</sup> that begins with the sequence<br>“UDDDUdddDDUDDddDdDddDDUDDdUUDd”?</p>
<hr>
<p><strong>变种考拉兹序列</strong></p>
<p>由a<sub>1</sub>开始根据下列规则生成的整数数列被称为变种考拉兹序列：</p>
<p>a<sub>n+1</sub> = a<sub>n</sub>/3，如果a<sub>n</sub>能被3整除。这是一个较大的下降，我们记这一步操作为“D”。</p>
<p>a<sub>n+1</sub> = (4a<sub>n</sub> + 2)/3，如果a<sub>n</sub>除以3余1。这是一个较大的上升，我们记这一步操作为“U”。</p>
<p>a<sub>n+1</sub> = (2a<sub>n</sub> - 1)/3，如果a<sub>n</sub>除以3余2。这是一个较小的下降，我们记这一步操作为“d”。</p>
<p>一旦有a<sub>n</sub> = 1，序列结束。</p>
<p>给定任意正整数，我们可以列出其操作步骤。<br>例如，若a<sub>1</sub>=231，整数数列{a<sub>n</sub>}={231,77,51,17,11,7,10,14,9,3,1}对应的操作步骤是”DdDddUUdDD”。</p>
<p>当然，存在其它的整数数列其操作步骤的开头同样是”DdDddUUdDD….”。<br>例如，若a<sub>1</sub>=1004064，则操作步骤是DdDddUUdDDDdUDUUUdDdUUDDDUdDD。<br>事实上，1004064是在a<sub>1</sub> &gt; 10<sup>6</sup>范围内，操作步骤以DdDddUUdDD开头的最小值。</p>
<p>在a<sub>1</sub> &gt; 10<sup>15</sup>范围内，操作步骤以”UDDDUdddDDUDDddDdDddDDUDDdUUDd”开头的最小值是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 278</title>
    <url>/278/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-278"><a href="#Problem-278" class="headerlink" title="Problem 278"></a><a href="https://projecteuler.net/problem=278">Problem 278</a></h1><hr>
<p><strong>Linear Combinations of Semiprimes</strong></p>
<p>Given the values of integers 1 &lt; a<sub>1</sub> &lt; a<sub>2</sub> &lt;… &lt; a<sub>n</sub>, consider the linear combination q<sub>1</sub>a<sub>1</sub> + q<sub>2</sub>a<sub>2</sub> + … + q<sub>n</sub>a<sub>n</sub> = b, using only integer values q<sub>k</sub> ≥ 0. </p>
<p>Note that for a given set of a<sub>k</sub>, it may be that not all values of b are possible.<br>For instance, if a<sub>1</sub> = 5 and a<sub>2</sub> = 7, there are no q<sub>1</sub> ≥ 0 and q<sub>2</sub> ≥ 0 such that b could be 1, 2, 3, 4, 6, 8, 9, 11, 13, 16, 18 or 23.<br>In fact, 23 is the largest impossible value of b for a<sub>1</sub> = 5 and a<sub>2</sub> = 7.<br>We therefore call f(5, 7) = 23.<br>Similarly, it can be shown that f(6, 10, 15)=29 and f(14, 22, 77) = 195.</p>
<p>Find ∑ f(p*q,p*r,q*r), where p, q and r are prime numbers and p &lt; q &lt; r &lt; 5000.</p>
<hr>
<p><strong>半素数线性组合</strong></p>
<p>给定整数1 &lt; a<sub>1</sub> &lt; a<sub>2</sub> &lt;… &lt; a<sub>n</sub>，考虑其线性组合q<sub>1</sub>a<sub>1</sub> + q<sub>2</sub>a<sub>2</sub> + … + q<sub>n</sub>a<sub>n</sub> = b，其中q<sub>k</sub> ≥ 0均为整数。 </p>
<p>注意到，对于特定集合a<sub>k</sub>，不是所有的b值都能取到。<br>例如，如果a<sub>1</sub> = 5且a<sub>2</sub> = 7，不存在q<sub>1</sub> ≥ 0和q<sub>2</sub> ≥ 0使得b取1、2、3、4、6、8、9、11、13、16、18或23。<br>事实上，当a<sub>1</sub> = 5且a<sub>2</sub> = 7时，不能取得的b值最大为23。<br>我们因此记f(5, 7) = 23。<br>类似地可以得出f(6, 10, 15)=29以及f(14, 22, 77) = 195。</p>
<p>对于所有素数p &lt; q &lt; r &lt; 5000，求∑ f(p*q,p*r,q*r)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 279</title>
    <url>/279/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-279"><a href="#Problem-279" class="headerlink" title="Problem 279"></a><a href="https://projecteuler.net/problem=279">Problem 279</a></h1><hr>
<p><strong>Triangles with integral sides and an integral angle</strong></p>
<p>How many triangles are there with integral sides, at least one integral angle (measured in degrees), and a perimeter that does not exceed 10<sup>8</sup>?</p>
<hr>
<p><strong>有一个整数角的整数边三角形</strong></p>
<p>有多少个三角形，其三边长均为整数，至少有一个角是整数（以度为单位），并且周长不超过10<sup>8</sup>？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 28</title>
    <url>/28/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-28"><a href="#Problem-28" class="headerlink" title="Problem 28"></a><a href="https://projecteuler.net/problem=28">Problem 28</a></h1><hr>
<h2 id="Number-Spiral-Diagonals"><a href="#Number-Spiral-Diagonals" class="headerlink" title="Number Spiral Diagonals"></a><strong>Number Spiral Diagonals</strong></h2><p>Starting with the number $1$ and moving to the right in a clockwise direction, a $5$ by $5$ spiral is formed as follows:</p>
<center style="font-family: 'Lucida Consolas', 'Consolas', 'Courier New', monospace">
<span style="color:red"><b>21</b></span> 22 23 24 <span style="color:red"><b>25</b></span><br />
20 &nbsp;<span style="color:red"><b>7</b></span> &nbsp;8  <span style="color:red"><b>&nbsp;9</b></span> 10<br />
19  &nbsp;6  &nbsp;<span style="color:red"><b>1</b></span>  &nbsp;2 11<br />
18  &nbsp;<span style="color:red"><b>5</b></span>  &nbsp;4  &nbsp;<span style="color:red"><b>3</b></span> 12<br />
<span style="color:red"><b>17</b></span> 16 15 14 <span style="color:red"><b>13</b></span>
</center>

<p>It can be verified that the sum of the numbers on the diagonals is $101$.</p>
<p>What is the sum of the numbers on the diagonals in a $1001$ by $1001$ spiral formed in the same way?</p>
<hr>
<h2 id="螺旋数阵对角线"><a href="#螺旋数阵对角线" class="headerlink" title="螺旋数阵对角线"></a><strong>螺旋数阵对角线</strong></h2><p>从$1$开始，按顺时针顺序铺开的$5 \times 5$螺旋数阵如下所示：</p>
<center style="font-family: 'Lucida Consolas', 'Consolas', 'Courier New', monospace">
<span style="color:red"><b>21</b></span> 22 23 24 <span style="color:red"><b>25</b></span><br />
20 &nbsp;<span style="color:red"><b>7</b></span> &nbsp;8  <span style="color:red"><b>&nbsp;9</b></span> 10<br />
19  &nbsp;6  &nbsp;<span style="color:red"><b>1</b></span>  &nbsp;2 11<br />
18  &nbsp;<span style="color:red"><b>5</b></span>  &nbsp;4  &nbsp;<span style="color:red"><b>3</b></span> 12<br />
<span style="color:red"><b>17</b></span> 16 15 14 <span style="color:red"><b>13</b></span>
</center>

<p>可以看出，该数阵对角线上的数之和是$101$。</p>
<p>考虑以同样方式构成的$1001 \times 1001$螺旋数阵，其对角线上的数之和是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 280</title>
    <url>/280/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-280"><a href="#Problem-280" class="headerlink" title="Problem 280"></a><a href="https://projecteuler.net/problem=280">Problem 280</a></h1><hr>
<p><strong>Ant and seeds</strong></p>
<p>A laborious ant walks randomly on a 5x5 grid. The walk starts from the central square. At each step, the ant moves to an adjacent square at random, without leaving the grid; thus there are 2, 3 or 4 possible moves at each step depending on the ant’s position.</p>
<p>At the start of the walk, a seed is placed on each square of the lower row. When the ant isn’t carrying a seed and reaches a square of the lower row containing a seed, it will start to carry the seed. The ant will drop the seed on the first empty square of the upper row it eventually reaches.</p>
<p>What’s the expected number of steps until all seeds have been dropped in the top row?<br>Give your answer rounded to 6 decimal places.</p>
<hr>
<p><strong>蚂蚁和种子</strong></p>
<p>一只勤劳的蚂蚁在5x5的网格上从中心方格开始随机行走。每一步它都随机移动到相邻的一格，但不会离开网格；因此，根据它所在的位置，它每一步有2、3或4种不同的选择。</p>
<p>在开始前，网格的最下一行的每一个格子上都摆有一粒种子。如果蚂蚁到达最下一行的格子，此时格子上有种子而蚂蚁并没有携带种子的话，蚂蚁将会拿起种子。它将在之后第一次到达最上一行没有种子的格子时放下种子。</p>
<p>所有的种子都被放到最上一行所需的期望步数是多少？<br>将你的答案四舍五入到六位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 281</title>
    <url>/281/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-281"><a href="#Problem-281" class="headerlink" title="Problem 281"></a><a href="https://projecteuler.net/problem=281">Problem 281</a></h1><hr>
<p><strong>Pizza Toppings</strong></p>
<p>You are given a pizza (perfect circle) that has been cut into m·n equal pieces and you want to have exactly one topping on each slice.</p>
<p>Let f(m,n) denote the number of ways you can have toppings on the pizza with m different toppings (m&thinsp;≥&thinsp;2), using each topping on exactly n slices (n&thinsp;≥&thinsp;1).<br>Reflections are considered distinct, rotations are not. </p>
<p>Thus, for instance, f(2,1)&thinsp;=&thinsp;1, f(2,2)&thinsp;=&thinsp;f(3,1)&thinsp;=&thinsp;2 and f(3,2)&thinsp;=&thinsp;16. f(3,2) is shown below:</p>
<center><img src="/resources/images/0281_pizza.gif"></center>

<p>Find the sum of all f(m,n) such that f(m,n)&thinsp;≤&thinsp;10<sup>15</sup>.</p>
<hr>
<p><strong>披萨馅料</strong></p>
<p>你有一个被切成m·n等分的披萨（圆形），你希望每一片披萨都恰好有一份馅料。</p>
<p>如果你有m种不同的馅料(m&thinsp;≥&thinsp;2)，每种馅料恰好可以放在n片披萨上(n&thinsp;≥&thinsp;1)，记f(m,n)为所有不同的馅料分配方案。<br>如果两种方案经翻转后相同，我们认为它们是不同的方案；但经旋转后相同的是同一种方案。</p>
<p>因此，举例来说，f(2,1)&thinsp;=&thinsp;1，f(2,2)&thinsp;=&thinsp;f(3,1)&thinsp;=&thinsp;2，以及f(3,2)&thinsp;=&thinsp;16。f(3,2)的所有方案如下所示：</p>
<center><img src="/resources/images/0281_pizza.gif"></center>

<p>求所有满足f(m,n)&thinsp;≤&thinsp;10<sup>15</sup>的f(m,n)之和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 282</title>
    <url>/282/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-282"><a href="#Problem-282" class="headerlink" title="Problem 282"></a><a href="https://projecteuler.net/problem=282">Problem 282</a></h1><hr>
<p><strong>The Ackermann function</strong></p>
<p>For non-negative integers m, n, the Ackermann function A(m, n) is defined as follows:</p>
<center><img src="https://projecteuler.net/project/images/p282_formula.gif"></center>

<p>For example A(1, 0) = 2, A(2, 2) = 7 and A(3, 4) = 125.</p>
<p>Find $\Sigma^6_{n=0}A(n,n)$ and give your answer mod 14<sup>8</sup>.</p>
<hr>
<p><strong>阿克曼函数</strong></p>
<p>对于非负整数m和n，阿克曼函数A(m, n)按如下方式定义：</p>
<center><img src="https://projecteuler.net/project/images/p282_formula.gif"></center>

<p>例如，A(1, 0) = 2，A(2, 2) = 7，以及A(3, 4) = 125。</p>
<p>求$\Sigma^6_{n=0}A(n,n)$，并将你的答案模14<sup>8</sup>取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 283</title>
    <url>/283/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-283"><a href="#Problem-283" class="headerlink" title="Problem 283"></a><a href="https://projecteuler.net/problem=283">Problem 283</a></h1><hr>
<p><strong>Integer sided triangles for which the area/perimeter ratio is integral</strong></p>
<p>Consider the triangle with sides 6, 8 and 10. It can be seen that the perimeter and the area are both equal to 24. So the area/perimeter ratio is equal to 1.<br>Consider also the triangle with sides 13, 14 and 15. The perimeter equals 42 while the area is equal to 84. So for this triangle the area/perimeter ratio is equal to 2.</p>
<p>Find the sum of the perimeters of all integer sided triangles for which the area/perimeter ratios are equal to positive integers not exceeding 1000.</p>
<hr>
<p><strong>面积周长比为整数的整数边三角形</strong></p>
<p>考虑三边长为6、8、10的三角形，可以看出它的边长和面积都是24，因此它的面积周长比等于1。<br>再考虑三边长为13、14、15的三角形，它的周长是42，而面积是84，因此它的面积周长比等于2。</p>
<p>找出所有面积周长比为不超过1000的整数的整数边三角形，并求出它们的周长之和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 285</title>
    <url>/285/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-285"><a href="#Problem-285" class="headerlink" title="Problem 285"></a><a href="https://projecteuler.net/problem=285">Problem 285</a></h1><hr>
<p><strong>Pythagorean odds</strong></p>
<p>Albert chooses a positive integer k, then two real numbers a, b are randomly chosen in the interval [0,1] with uniform distribution.<br>The square root of the sum (k·a+1)<sup>2</sup>&thinsp;+&thinsp;(k·b+1)<sup>2</sup> is then computed and rounded to the nearest integer. If the result is equal to k, he scores k points; otherwise he scores nothing.</p>
<p>For example, if k&thinsp;=&thinsp;6, a&thinsp;=&thinsp;0.2 and b&thinsp;=&thinsp;0.85, then (k·a+1)<sup>2</sup>&thinsp;+&thinsp;(k·b+1)<sup>2</sup>&thinsp;=&thinsp;42.05.<br>The square root of 42.05 is 6.484… and when rounded to the nearest integer, it becomes 6.<br>This is equal to k, so he scores 6 points.</p>
<p>It can be shown that if he plays 10 turns with k&thinsp;=&thinsp;1, k&thinsp;=&thinsp;2, …, k&thinsp;=&thinsp;10, the expected value of his total score, rounded to five decimal places, is 10.20914.</p>
<p>If he plays 10<sup>5</sup> turns with k&thinsp;=&thinsp;1, k&thinsp;=&thinsp;2, k&thinsp;=&thinsp;3, …, k&thinsp;=&thinsp;10<sup>5</sup>, what is the expected value of his total score, rounded to five decimal places?</p>
<hr>
<p><strong>毕达哥拉斯奇数</strong></p>
<p>阿尔伯特选择了一个正整数k，然后在区间[0,1]内按照均匀分布随机选择了两个实数a和b。<br>然后，计算出(k·a+1)<sup>2</sup>&thinsp;+&thinsp;(k·b+1)<sup>2</sup>的平方根，并四舍五入到最近的整数。如果结果等于k，他将获得k分；否则不得分。</p>
<p>例如，如果k&thinsp;=&thinsp;6，a&thinsp;=&thinsp;0.2，b&thinsp;=&thinsp;0.85，那么(k·a+1)<sup>2</sup>&thinsp;+&thinsp;(k·b+1)<sup>2</sup>&thinsp;=&thinsp;42.05。<br>42.05的平方根为6.484…，当四舍五入到最近整数时结果是6。<br>结果等于k，因此他得6分。</p>
<p>可以看出，如果他进行10轮，分别选择k&thinsp;=&thinsp;1、k&thinsp;=&thinsp;2、……、k&thinsp;=&thinsp;10，他的期望总得分四舍五入到五位小数是10.20914。</p>
<p>如果他进行10<sup>5</sup>轮，分别选择k&thinsp;=&thinsp;1、k&thinsp;=&thinsp;2、k&thinsp;=&thinsp;3、……、k&thinsp;=&thinsp;10<sup>5</sup>，他的期望总得分四舍五入到五位小数是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 284</title>
    <url>/284/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-284"><a href="#Problem-284" class="headerlink" title="Problem 284"></a><a href="https://projecteuler.net/problem=284">Problem 284</a></h1><hr>
<p><strong>Steady Squares</strong></p>
<p>The 3-digit number 376 in the decimal numbering system is an example of numbers with the special property that its square ends with the same digits: 376<sup>2</sup> = 141376. Let’s call a number with this property a steady square.</p>
<p>Steady squares can also be observed in other numbering systems. In the base 14 numbering system, the 3-digit number c37 is also a steady square: c37<sup>2</sup> = aa0c37, and the sum of its digits is c+3+7=18 in the same numbering system. The letters a, b, c and d are used for the 10, 11, 12 and 13 digits respectively, in a manner similar to the hexadecimal numbering system.</p>
<p>For 1 ≤ n ≤ 9, the sum of the digits of all the n-digit steady squares in the base 14 numbering system is 2d8 (582 decimal). Steady squares with leading 0’s are not allowed.</p>
<p>Find the sum of the digits of all the n-digit steady squares in the base 14 numbering system for 1 ≤ n ≤ 10000 (decimal) and give your answer in the base 14 system using lower case letters where necessary.</p>
<hr>
<p><strong>自守数</strong></p>
<p>十进制表示的三位数376拥有一种特殊的性质，它的平方的末尾就是它本身：376<sup>2</sup> = 141376。我们称拥有这种性质的数为自守数。</p>
<p>在其它进制下也存在自守数。在14进制下，三位数c37同样是自守数：c37<sup>2</sup> = aa0c37，它的各位数字和在14进制下是c+3+7=18。注意这里使用的字母a、b、c、d分别代表10、11、12、13，和16进制下相似。</p>
<p>对于1 ≤ n ≤ 9，所有14进制下的n位自守数的各位数字和为2d8（转化成十进制数为582）。自守数不允许有前导零。</p>
<p>对于1 ≤ n ≤ 10000（十进制数），求所有14进制下的n位自守数的各位数字和，将你的答案用14进制表示，并在有需要时使用小写字母。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 286</title>
    <url>/286/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-286"><a href="#Problem-286" class="headerlink" title="Problem 286"></a><a href="https://projecteuler.net/problem=286">Problem 286</a></h1><hr>
<p><strong>Scoring probabilities</strong></p>
<p>Barbara is a mathematician and a basketball player. She has found that the probability of scoring a point when shooting from a distance x is exactly (1&thinsp;-&nbsp;<sup>x</sup>/<sub>q</sub>), where q is a real constant greater than 50.</p>
<p>During each practice run, she takes shots from distances x&thinsp;=&thinsp;1, x&thinsp;=&thinsp;2, …, x&thinsp;=&thinsp;50 and, according to her records, she has precisely a 2&thinsp;% chance to score a total of exactly 20 points.</p>
<p>Find q and give your answer rounded to 10 decimal places.</p>
<hr>
<p><strong>得分概率</strong></p>
<p>芭芭拉是一名数学家，也是一名篮球运动员。她发现，在距离x处投篮得分的概率恰好是(1&thinsp;-&nbsp;<sup>x</sup>/<sub>q</sub>)，其中q是一个大于50的常数。</p>
<p>在每次练习时，她都分别从距离为x&thinsp;=&thinsp;1、x&thinsp;=&thinsp;2、……、x&thinsp;=&thinsp;50的地方投篮，根据她的记录，她恰好得分20次的精确概率为2%。</p>
<p>求出q，并将你的答案四舍五入到10位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 287</title>
    <url>/287/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-287"><a href="#Problem-287" class="headerlink" title="Problem 287"></a><a href="https://projecteuler.net/problem=287">Problem 287</a></h1><hr>
<p><strong>Quadtree encoding (a simple compression algorithm)</strong></p>
<p>The quadtree encoding allows us to describe a 2<sup>N</sup>×2<sup>N</sup>  black and white image as a sequence of bits (0 and 1). Those sequences are to be read from left to right like this:</p>
<ul>
<li>the first bit deals with the complete 2<sup>N</sup>×2<sup>N</sup> region;</li>
<li>“0” denotes a split:<br>the current 2<sup>n</sup>×2<sup>n</sup> region is divided into 4 sub-regions of dimension 2<sup>n-1</sup>×2<sup>n-1</sup>,<br>the next bits contains the description of the top left, top right, bottom left and bottom right sub-regions - in that order;</li>
<li>“10” indicates that the current region contains only black pixels;</li>
<li>“11” indicates that the current region contains only white pixels.</li>
</ul>
<p>Consider the following 4×4 image (colored marks denote places where a split can occur):</p>
<center><img src="/resources/images/0287_quadtree.gif"></center>

<p>This image can be described by several sequences, for example:<br>“<span style="color:red;"><b>0</b></span><span style="color:blue;"><b>0</b></span>10101010<span style="color:green;"><b>0</b></span>1011111011<span style="color:orange;"><b>0</b></span>10101010”, of length 30, or<br>“<span style="color:red;"><b>0</b></span>10<span style="color:green;"><b>0</b></span>101111101110”, of length 16, which is the minimal sequence for this image.</p>
<p>For a positive integer N, define D<sub>N</sub> as the 2<sup>N</sup>×2<sup>N</sup> image with the following coloring scheme:</p>
<ul>
<li>the pixel with coordinates x&thinsp;=&thinsp;0, y&thinsp;=&thinsp;0 corresponds to the bottom left pixel,</li>
<li>if (x&thinsp;-&thinsp;2<sup>N-1</sup>)<sup>2</sup>&thinsp;+&thinsp;(y&thinsp;-&thinsp;2<sup>N-1</sup>)<sup>2</sup>&thinsp;≤&thinsp;2<sup>2N-2</sup> then the pixel is black,</li>
<li>otherwise the pixel is white.</li>
</ul>
<p>What is the length of the minimal sequence describing D<sub>24</sub>&thinsp;?</p>
<hr>
<p><strong>四分树编码（一个简单的压缩算法）</strong></p>
<p>四分树编码使我们能够将一个2<sup>N</sup>×2<sup>N</sup>的黑白图片表示为一个比特串（0和1）。该比特串可以从左到右解读为：</p>
<ul>
<li>第一个比特位描述完整的2<sup>N</sup>×2<sup>N</sup>区域；</li>
<li>“0”表示对当前区域进行分割：<br>将当前的2<sup>n</sup>×2<sup>n</sup>区域分割为4个2<sup>n-1</sup>×2<sup>n-1</sup>区域，<br>接下来的比特位按照左上、右上、左下、右下的顺序分别描述这四个区域；</li>
<li>“10”表示当前区域只包含黑色像素；</li>
<li>“11”表示当前区域只包含白色像素。</li>
</ul>
<p>考虑如下的4×4图象（彩色标记意味着需要进行分割的位置）：</p>
<center><img src="/resources/images/0287_quadtree.gif"></center>

<p>这个图像可以用多个不同的比特串表示，例如：<br>“<span style="color:red;"><b>0</b></span><span style="color:blue;"><b>0</b></span>10101010<span style="color:green;"><b>0</b></span>1011111011<span style="color:orange;"><b>0</b></span>10101010”，长度为30，或者<br>“<span style="color:red;"><b>0</b></span>10<span style="color:green;"><b>0</b></span>101111101110”，长度为16，后者是描述这幅图象的最短比特串。</p>
<p>对于一个正整数N，记D<sub>N</sub>是按照如下染色方案得到的2<sup>N</sup>×2<sup>N</sup>图象：</p>
<ul>
<li>左下角的像素其坐标为x&thinsp;=&thinsp;0，y&thinsp;=&thinsp;0，</li>
<li>如果(x&thinsp;-&thinsp;2<sup>N-1</sup>)<sup>2</sup>&thinsp;+&thinsp;(y&thinsp;-&thinsp;2<sup>N-1</sup>)<sup>2</sup>&thinsp;≤&thinsp;2<sup>2N-2</sup>，那么该坐标的像素为黑色，</li>
<li>否则该坐标的像素为白色。</li>
</ul>
<p>描述D<sub>24</sub>的最短比特串长度是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 288</title>
    <url>/288/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-288"><a href="#Problem-288" class="headerlink" title="Problem 288"></a><a href="https://projecteuler.net/problem=288">Problem 288</a></h1><hr>
<p><strong>An enormous factorial</strong></p>
<p>For any prime p the number N(p,q) is defined by N(p,q) = ∑<sub>n=0 to q</sub> T<sub>n</sub>*p<sup>n</sup> with T<sub>n</sub> generated by the following random number generator:</p>
<p>S<sub>0</sub> = 290797<br>S<sub>n+1</sub> = S<sub>n</sub><sup>2</sup> mod 50515093<br>T<sub>n</sub> = S<sub>n</sub> mod p</p>
<p>Let Nfac(p,q) be the factorial of N(p,q).<br>Let NF(p,q) be the number of factors p in Nfac(p,q).</p>
<p>You are given that NF(3,10000) mod 3<sup>20</sup>=624955285.</p>
<p>Find NF(61,10<sup>7</sup>) mod 61<sup>10</sup>.</p>
<hr>
<p><strong>巨大的阶乘</strong></p>
<p>对于任意素数p，定义N(p,q) = ∑<sub>n=0 to q</sub> T<sub>n</sub>*p<sup>n</sup>，其中T<sub>n</sub>由以下随机数生成器生成：</p>
<p>S<sub>0</sub> = 290797<br>S<sub>n+1</sub> = S<sub>n</sub><sup>2</sup> mod 50515093<br>T<sub>n</sub> = S<sub>n</sub> mod p</p>
<p>记Nfac(p,q)为N(p,q)的阶乘。<br>记NF(p,q)为Nfac(p,q)的质因数分解中p的个数。</p>
<p>已知NF(3,10000) mod 3<sup>20</sup>=624955285。</p>
<p>求NF(61,10<sup>7</sup>) mod 61<sup>10</sup>。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 289</title>
    <url>/289/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-289"><a href="#Problem-289" class="headerlink" title="Problem 289"></a><a href="https://projecteuler.net/problem=289">Problem 289</a></h1><hr>
<p><strong>Eulerian Cycles</strong></p>
<p>Let C(x,y) be a circle passing through the points (x,&thinsp;y), (x,&thinsp;y+1), (x+1,&thinsp;y) and (x+1,&thinsp;y+1).</p>
<p>For positive integers m and n, let E(m,n) be a configuration which consists of the m·n circles:<br>{ C(x,y): 0&thinsp;≤&thinsp;x&thinsp;&lt;&thinsp;m, 0&thinsp;≤&thinsp;y&thinsp;&lt;&thinsp;n, x and y are integers }</p>
<p>An Eulerian cycle on E(m,n) is a closed path that passes through each arc exactly once.<br>Many such paths are possible on E(m,n), but we are only interested in those which are not self-crossing: A non-crossing path just touches itself at lattice points, but it never crosses itself.</p>
<p>The image below shows E(3,3) and an example of an Eulerian non-crossing path.</p>
<center><img src="/resources/images/0289_euler.gif"></center>

<p>Let L(m,n) be the number of Eulerian non-crossing paths on E(m,n).<br>For example, L(1,2)&thinsp;=&thinsp;2, L(2,2)&thinsp;=&thinsp;37 and L(3,3)&thinsp;=&thinsp;104290.</p>
<p>Find L(6,10) mod 10<sup>10</sup>.</p>
<hr>
<p><strong>欧拉回路</strong></p>
<p>记C(x,y)是穿过点(x,&thinsp;y)、(x,&thinsp;y+1)、(x+1,&thinsp;y)和(x+1,&thinsp;y+1)的圆。</p>
<p>对于正整数m和n，记E(m,n)为包含如下m·n个圆的系统：<br>{ C(x,y): 0&thinsp;≤&thinsp;x&thinsp;&lt;&thinsp;m, 0&thinsp;≤&thinsp;y&thinsp;&lt;&thinsp;n, x和y为整数 }</p>
<p>在E(m,n)上的一个欧拉回路是一条穿过每条弧一次且恰好一次的闭路径。<br>在E(m,n)上这样的路径有许多条，但我们只关心那些不自穿的路径：一条不自穿的路径在格点上只接触而不穿过其本身。</p>
<p>下图展示了E(3,3)和一条不自穿的欧拉回路。</p>
<center><img src="/resources/images/0289_euler.gif"></center>

<p>记L(m,n)是E(m,n)上所有不自穿欧拉回路的数目。<br>举例来说，L(1,2)&thinsp;=&thinsp;2，L(2,2)&thinsp;=&thinsp;37，以及L(3,3)&thinsp;=&thinsp;104290。</p>
<p>求L(6,10) mod 10<sup>10</sup>。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 29</title>
    <url>/29/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-29"><a href="#Problem-29" class="headerlink" title="Problem 29"></a><a href="https://projecteuler.net/problem=29">Problem 29</a></h1><hr>
<h2 id="Distinct-Powers"><a href="#Distinct-Powers" class="headerlink" title="Distinct Powers"></a><strong>Distinct Powers</strong></h2><p>Consider all integer combinations of $a^b$ for $2 \le a \le 5$ and $2 \le b \le 5$:</p>
<p>$$\begin{aligned}<br>&amp; 2^2=4, 2^3=8, 2^4=16, 2^5=32\\<br>&amp; 3^2=9, 3^3=27, 3^4=81, 3^5=243\\<br>&amp; 4^2=16, 4^3=64, 4^4=256, 4^5=1024\\<br>&amp; 5^2=25, 5^3=125, 5^4=625, 5^5=3125\\<br>\end{aligned}$$</p>
<p>If they are then placed in numerical order, with any repeats removed, we get the following sequence of $15$ distinct terms:</p>
<p>$$4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125$$</p>
<p>How many distinct terms are in the sequence generated by $a^b$ for $2\le a \le 100$ and $2 \le  b \le 100$?</p>
<hr>
<h2 id="不同的幂"><a href="#不同的幂" class="headerlink" title="不同的幂"></a><strong>不同的幂</strong></h2><p>考虑所有满足$2 \le a \le 5$和$2 \le b \le 5$的幂$a^b$：</p>
<p>$$\begin{aligned}<br>&amp; 2^2=4, 2^3=8, 2^4=16, 2^5=32\\<br>&amp; 3^2=9, 3^3=27, 3^4=81, 3^5=243\\<br>&amp; 4^2=16, 4^3=64, 4^4=256, 4^5=1024\\<br>&amp; 5^2=25, 5^3=125, 5^4=625, 5^5=3125\\<br>\end{aligned}$$<br>如果把这些幂从小到大排列并去重，可以得到如下由$15$个不同的项组成的数列：</p>
<p>$$4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125$$</p>
<p>考虑所有满足$2 \le a \le 100$和$2 \le b \le 100$的幂$a^b$，将它们排列并去重所得到的数列有多少个不同的项？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 290</title>
    <url>/290/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-290"><a href="#Problem-290" class="headerlink" title="Problem 290"></a><a href="https://projecteuler.net/problem=290">Problem 290</a></h1><hr>
<p><strong>Digital Signature</strong></p>
<p>How many integers 0 ≤ n &lt; 10<sup>18</sup> have the property that the sum of the digits of n equals the sum of digits of 137n?</p>
<hr>
<p><strong>电子签名</strong></p>
<p>有多少个0 ≤ n &lt; 10<sup>18</sup>的整数，其各位数字和等于137n的各位数字和？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 291</title>
    <url>/291/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-291"><a href="#Problem-291" class="headerlink" title="Problem 291"></a><a href="https://projecteuler.net/problem=291">Problem 291</a></h1><hr>
<p><strong>Panaitopol Primes</strong></p>
<p>A prime number p is called a Panaitopol prime if $p=\frac{x^4-y^4}{x^3+y^3}$ for some positive integers x and y.</p>
<p>Find how many Panaitopol primes are less than 5×10<sup>15</sup>.</p>
<hr>
<p><strong>帕纳伊托波尔素数</strong></p>
<p>若素数p可以由正整数x和y表示为$p=\frac{x^4-y^4}{x^3+y^3}$，则称其为帕纳伊托波尔素数。</p>
<p>求出有多少小于5×10<sup>15</sup>的帕纳伊托波尔素数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 292</title>
    <url>/292/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-292"><a href="#Problem-292" class="headerlink" title="Problem 292"></a><a href="https://projecteuler.net/problem=292">Problem 292</a></h1><hr>
<p><strong>Pythagorean Polygons</strong></p>
<p>We shall define a <i>pythagorean polygon</i>  to be a <b>convex polygon</b> with the following properties:</p>
<ul>
<li>there are at least three vertices,</li>
<li>no three vertices are aligned,</li>
<li>each vertex has <b>integer coordinates</b>,</li>
<li>each edge has <b>integer length</b>.</li>
</ul>
<p>For a given integer n, define P(n) as the number of distinct pythagorean polygons for which the perimeter is ≤&thinsp;n.<br>Pythagorean polygons should be considered distinct as long as none is a translation of another.</p>
<p>You are given that P(4)&thinsp;=&thinsp;1, P(30)&thinsp;=&thinsp;3655 and P(60)&thinsp;=&thinsp;891045.<br>Find P(120).</p>
<hr>
<p><strong>毕达哥拉斯多边形</strong></p>
<p>我们定义<i>毕达哥拉斯多边形</i>为满足下列性质的<b>凸多边形</b>：</p>
<ul>
<li>有至少三个顶点，</li>
<li>不存在三个顶点共线，</li>
<li>每个顶点<b>坐标均为整数</b>，</li>
<li>每条边<b>长度均为整数</b>。</li>
</ul>
<p>对于给定的整数n，记P(n)为周长≤&thinsp;n的不同毕达哥拉斯多边形的数目。<br>只要不能将其中一个通过平移得到另一个，就被认为是不同的毕达哥拉斯多边形。</p>
<p>已知P(4)&thinsp;=&thinsp;1，P(30)&thinsp;=&thinsp;3655，以及P(60)&thinsp;=&thinsp;891045。<br>求P(120)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 293</title>
    <url>/293/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-293"><a href="#Problem-293" class="headerlink" title="Problem 293"></a><a href="https://projecteuler.net/problem=293">Problem 293</a></h1><hr>
<p><strong>Pseudo-Fortunate Numbers</strong></p>
<p>An even positive integer N will be called admissible, if it is a power of 2 or its distinct prime factors are consecutive primes.<br>The first twelve admissible numbers are 2,4,6,8,12,16,18,24,30,32,36,48.</p>
<p>If N is admissible, the smallest integer M &gt; 1 such that N+M is prime, will be called the pseudo-Fortunate number for N.</p>
<p>For example, N=630 is admissible since it is even and its distinct prime factors are the consecutive primes 2,3,5 and 7.<br>The next prime number after 631 is 641; hence, the pseudo-Fortunate number for 630 is M=11.<br>It can also be seen that the pseudo-Fortunate number for 16 is 3.</p>
<p>Find the sum of all distinct pseudo-Fortunate numbers for admissible numbers N less than 10<sup>9</sup>.</p>
<hr>
<p><strong>伪幸运数</strong></p>
<p>如果正偶数N是2的幂，或者其所有不同的质因数恰好是连续质数，就被称为是可接受的。<br>前十二个可接受数是2、4、6、8、12、16、18、24、30、32、36、48。</p>
<p>如果N是可接受数，使得N+M为质数的最小整数M &gt; 1就被称为N的伪幸运数。</p>
<p>例如，N=630是可接受数，因为它是偶数，而且它所有不同的质因数为连续质数2、3、5、7。<br>在631之后的下一个素数是641；因此，630的伪幸运数是M=11。<br>同样可以看出，16的伪幸运数是3。</p>
<p>找出所有小于10<sup>9</sup>的可接受数N，分别求出其伪幸运数，并求所有不同的伪幸运数的和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 294</title>
    <url>/294/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-294"><a href="#Problem-294" class="headerlink" title="Problem 294"></a><a href="https://projecteuler.net/problem=294">Problem 294</a></h1><hr>
<p><strong>Sum of digits - experience #23</strong></p>
<p>For a positive integer k, define d(k) as the sum of the digits of k in its usual decimal representation. Thus d(42) = 4+2 = 6.</p>
<p>For a positive integer n, define S(n) as the number of positive integers k &lt; 10<sup>n</sup> with the following properties :</p>
<ul>
<li>k is divisible by 23 and</li>
<li>d(k) = 23.</li>
</ul>
<p>You are given that S(9) = 263626 and S(42) = 6377168878570056.</p>
<p>Find S(11<sup>12</sup>) and give your answer mod 10<sup>9</sup>.</p>
<hr>
<p><strong>各位数字和——邂逅数23</strong></p>
<p>对于正整数k，记d(k)为k在十进制表示下的各位数字和，例如d(42) = 4+2 = 6。</p>
<p>对于正整数n，记S(n)是满足如下性质的正整数k &lt; 10<sup>n</sup>的数目：</p>
<ul>
<li>k能够被23整除；</li>
<li>d(k) = 23。</li>
</ul>
<p>已知S(9) = 263626以及S(42) = 6377168878570056。</p>
<p>求S(11<sup>12</sup>)，并将你的答案模10<sup>9</sup>取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 296</title>
    <url>/296/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-296"><a href="#Problem-296" class="headerlink" title="Problem 296"></a><a href="https://projecteuler.net/problem=296">Problem 296</a></h1><hr>
<p><strong>Angular Bisector and Tangent</strong></p>
<p>Given is an integer sided triangle ABC with BC ≤ AC ≤ AB.<br>k is the angular bisector of angle ACB. m is the tangent at C to the circumscribed circle of ABC. n is a line parallel to m through B.<br>The intersection of n and k is called E.</p>
<center><img src="/resources/images/0296_bisector.gif"></center>

<p>How many triangles ABC with a perimeter not exceeding 100 000 exist such that BE has integral length?</p>
<hr>
<p><strong>角平分线和切线</strong></p>
<p>给定整数边三角形ABC，其三边满足BC ≤ AC ≤ AB。<br>k是角ACB的角平分线。m是ABC的外接圆在点C处的切线。n是过点B平行于m的直线。<br>n和k的交点记为E。</p>
<center><img src="/resources/images/0296_bisector.gif"></center>

<p>有多少个周长不超过100 000的三角形ABC使得BE的长为整数？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 295</title>
    <url>/295/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-295"><a href="#Problem-295" class="headerlink" title="Problem 295"></a><a href="https://projecteuler.net/problem=295">Problem 295</a></h1><hr>
<p><strong>Lenticular holes</strong><br>We call the convex area enclosed by two circles a <i>lenticular hole</i> if:</p>
<ul>
<li>The centres of both circles are on lattice points.</li>
<li>The two circles intersect at two distinct lattice points.</li>
<li>The interior of the convex area enclosed by both circles does not contain any lattice points.</li>
</ul>
<p>Consider the circles:<br>C<sub>0</sub>: x<sup>2</sup>+y<sup>2</sup>=25<br>C<sub>1</sub>: (x+4)<sup>2</sup>+(y-4)<sup>2</sup>=1<br>C<sub>2</sub>: (x-12)<sup>2</sup>+(y-4)<sup>2</sup>=65</p>
<p>The circles C<sub>0</sub>, C<sub>1</sub> and C<sub>2</sub> are drawn in the picture below.</p>
<center><img src="/resources/images/0295_lenticular.gif"></center>

<p>C<sub>0</sub> and C<sub>1</sub> form a lenticular hole, as well as C<sub>0</sub> and C<sub>2</sub>.</p>
<p>We call an ordered pair of positive real numbers (r<sub>1</sub>, r<sub>2</sub>) a <i>lenticular pair</i> if there exist two circles with radii r<sub>1</sub> and r<sub>2</sub> that form a lenticular hole. We can verify that (1, 5) and (5, √65) are the lenticular pairs of the example above.</p>
<p>Let L(N) be the number of <b>distinct</b> lenticular pairs (r<sub>1</sub>, r<sub>2</sub>) for which 0 &lt; r<sub>1</sub> ≤ r<sub>2</sub> ≤ N.<br>We can verify that L(10) = 30 and L(100) = 3442.</p>
<p>Find L(100 000).</p>
<hr>
<p><strong>透镜孔洞</strong><br>若两圆重叠而成的凸区域满足以下条件，我们称之为<i>透镜孔洞</i>：</p>
<ul>
<li>两圆的中心都是格点。</li>
<li>两圆在两个格点处相交。</li>
<li>两圆重叠而成的凸区域内部不包含任何格点。</li>
</ul>
<p>考虑如下的圆：<br>C<sub>0</sub>: x<sup>2</sup>+y<sup>2</sup>=25<br>C<sub>1</sub>: (x+4)<sup>2</sup>+(y-4)<sup>2</sup>=1<br>C<sub>2</sub>: (x-12)<sup>2</sup>+(y-4)<sup>2</sup>=65</p>
<p>圆C<sub>0</sub>、C<sub>1</sub>和C<sub>2</sub>如下图所示。</p>
<center><img src="/resources/images/0295_lenticular.gif"></center>

<p>C<sub>0</sub>和C<sub>1</sub>以及C<sub>0</sub>和C<sub>2</sub>均生成了一个透镜孔洞。</p>
<p>如果存在两个半径分别为r<sub>1</sub>和r<sub>2</sub>的圆能够生成透镜孔洞，我们就称有序正实数对(r<sub>1</sub>, r<sub>2</sub>)为<i>透镜数对</i>。由上述例子，我们可以验证(1, 5)和(5, √65)均为透镜数对。</p>
<p>记L(N)是所有满足0 &lt; r<sub>1</sub> ≤ r<sub>2</sub> ≤ N的<b>不同</b>透镜数对的数目。<br>我们可以验证L(10) = 30以及L(100) = 3442。</p>
<p>求L(100 000)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 297</title>
    <url>/297/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-297"><a href="#Problem-297" class="headerlink" title="Problem 297"></a><a href="https://projecteuler.net/problem=297">Problem 297</a></h1><hr>
<p><strong>Zeckendorf Representation</strong></p>
<p>Each new term in the Fibonacci sequence is generated by adding the previous two terms.<br>Starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89.</p>
<p>Every positive integer can be uniquely written as a sum of nonconsecutive terms of the Fibonacci sequence. For example, 100 = 3 + 8 + 89.<br>Such a sum is called the <b>Zeckendorf representation</b> of the number.</p>
<p>For any integer n&gt;0, let z(n) be the number of terms in the Zeckendorf representation of n.<br>Thus, z(5)&thinsp;=&thinsp;1, z(14)&thinsp;=&thinsp;2, z(100)&thinsp;=&thinsp;3 etc.<br>Also, for 0&lt;n&lt;10<sup>6</sup>, ∑&thinsp;z(n)&thinsp;=&thinsp;7894453.</p>
<p>Find ∑&thinsp;z(n) for 0&lt;n&lt;10<sup>17</sup>.</p>
<hr>
<p><strong>齐肯多夫表示</strong></p>
<p>斐波那契数列的每一项都由前两项相加而得。<br>从1和2开始，前10项是：1、2、3、5、8、13、21、34、55、89。</p>
<p>每一个正整数可以唯一地写成斐波那契数列中非连续项的和。例如，100 = 3 + 8 + 89。<br>这样的和被称为数的<b>齐肯多夫表示</b>。</p>
<p>对于任意整数n&gt;0，记z(n)为n的齐肯多夫表示中的项数。<br>因此，z(5)&thinsp;=&thinsp;1，z(14)&thinsp;=&thinsp;2，z(100)&thinsp;=&thinsp;3，等等。<br>此外，对于0&lt;n&lt;10<sup>6</sup>，∑&thinsp;z(n)&thinsp;=&thinsp;7894453。</p>
<p>对于0&lt;n&lt;10<sup>17</sup>，求∑&thinsp;z(n)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 298</title>
    <url>/298/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-298"><a href="#Problem-298" class="headerlink" title="Problem 298"></a><a href="https://projecteuler.net/problem=298">Problem 298</a></h1><hr>
<p><strong>Selective Amnesia</strong></p>
<p>Larry and Robin play a memory game involving of a sequence of random numbers between 1 and 10, inclusive, that are called out one at a time. Each player can remember up to 5 previous numbers. When the called number is in a player’s memory, that player is awarded a point. If it’s not, the player adds the called number to his memory, removing another number if his memory is full.</p>
<p>Both players start with empty memories. Both players always add new missed numbers to their memory but use a different strategy in deciding which number to remove:<br>Larry’s strategy is to remove the number that hasn’t been called in the longest time.<br>Robin’s strategy is to remove the number that’s been in the memory the longest time.</p>
<p>Example game:</p>
<table>
<thead>
<tr>
<th align="center">Turn</th>
<th align="center">Called number</th>
<th align="center">Larry’s memory</th>
<th align="center">Larry’s score</th>
<th align="center">Robin’s memory</th>
<th align="center">Robin’s score</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1</td>
<td align="center">1</td>
<td align="center">1</td>
<td align="center">0</td>
<td align="center">1</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">2</td>
<td align="center">2</td>
<td align="center">1,2</td>
<td align="center">0</td>
<td align="center">1,2</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">4</td>
<td align="center">1,2,4</td>
<td align="center">0</td>
<td align="center">1,2,4</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">4</td>
<td align="center">6</td>
<td align="center">1,2,4,6</td>
<td align="center">0</td>
<td align="center">1,2,4,6</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">5</td>
<td align="center">1</td>
<td align="center">1,2,4,6</td>
<td align="center">1</td>
<td align="center">1,2,4,6</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">6</td>
<td align="center">8</td>
<td align="center">1,2,4,6,8</td>
<td align="center">1</td>
<td align="center">1,2,4,6,8</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">7</td>
<td align="center">10</td>
<td align="center">1,4,6,8,10</td>
<td align="center">1</td>
<td align="center">2,4,6,8,10</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">8</td>
<td align="center">2</td>
<td align="center">1,2,6,8,10</td>
<td align="center">1</td>
<td align="center">2,4,6,8,10</td>
<td align="center">2</td>
</tr>
<tr>
<td align="center">9</td>
<td align="center">4</td>
<td align="center">1,2,4,8,10</td>
<td align="center">1</td>
<td align="center">2,4,6,8,10</td>
<td align="center">3</td>
</tr>
<tr>
<td align="center">10</td>
<td align="center">1</td>
<td align="center">1,2,4,8,10</td>
<td align="center">2</td>
<td align="center">1,4,6,8,10</td>
<td align="center">3</td>
</tr>
</tbody></table>
<p>Denoting Larry’s score by L and Robin’s score by R, what is the expected value of |L-R| after 50 turns? Give your answer rounded to eight decimal places using the format x.xxxxxxxx.</p>
<hr>
<p><strong>选择性遗忘</strong></p>
<p>拉里和罗宾正在玩一个记忆游戏，这个游戏需要一个在1到10之间的随机数组成的序列，每一轮按照序列叫一个数。每个玩家可以记住最多5个之前出现过的数。当叫到的数在玩家的记忆中时，该玩家得一分。如果不在，则玩家将这个被叫到的数加入他的记忆，如果记忆已经满了，需要先从中去掉另一个数。</p>
<p>两名玩家开始时记忆都是空的。在要去掉一个数的时候，两名玩家使用不同的策略：<br>拉里的策略是移除最久未被叫到的数。<br>罗宾的策略是移除在记忆中存在最久的数。</p>
<p>游戏样例：</p>
<table>
<thead>
<tr>
<th align="center">轮数</th>
<th align="center">被叫的数</th>
<th align="center">拉里的记忆</th>
<th align="center">拉里的得分</th>
<th align="center">罗宾的记忆</th>
<th align="center">罗宾的得分</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1</td>
<td align="center">1</td>
<td align="center">1</td>
<td align="center">0</td>
<td align="center">1</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">2</td>
<td align="center">2</td>
<td align="center">1,2</td>
<td align="center">0</td>
<td align="center">1,2</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">4</td>
<td align="center">1,2,4</td>
<td align="center">0</td>
<td align="center">1,2,4</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">4</td>
<td align="center">6</td>
<td align="center">1,2,4,6</td>
<td align="center">0</td>
<td align="center">1,2,4,6</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">5</td>
<td align="center">1</td>
<td align="center">1,2,4,6</td>
<td align="center">1</td>
<td align="center">1,2,4,6</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">6</td>
<td align="center">8</td>
<td align="center">1,2,4,6,8</td>
<td align="center">1</td>
<td align="center">1,2,4,6,8</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">7</td>
<td align="center">10</td>
<td align="center">1,4,6,8,10</td>
<td align="center">1</td>
<td align="center">2,4,6,8,10</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">8</td>
<td align="center">2</td>
<td align="center">1,2,6,8,10</td>
<td align="center">1</td>
<td align="center">2,4,6,8,10</td>
<td align="center">2</td>
</tr>
<tr>
<td align="center">9</td>
<td align="center">4</td>
<td align="center">1,2,4,8,10</td>
<td align="center">1</td>
<td align="center">2,4,6,8,10</td>
<td align="center">3</td>
</tr>
<tr>
<td align="center">10</td>
<td align="center">1</td>
<td align="center">1,2,4,8,10</td>
<td align="center">2</td>
<td align="center">1,4,6,8,10</td>
<td align="center">3</td>
</tr>
</tbody></table>
<p>记拉里的得分为L，罗宾的得分为R，在50轮后，|L-R|的期望值是多少？将你的答案四舍五入到八位小数，即格式为x.xxxxxxxx。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 299</title>
    <url>/299/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-299"><a href="#Problem-299" class="headerlink" title="Problem 299"></a><a href="https://projecteuler.net/problem=299">Problem 299</a></h1><hr>
<p><strong>Three similar triangles</strong></p>
<p>Four points with integer coordinates are selected:A(a,&nbsp;0), B(b,&nbsp;0), C(0,&nbsp;c) and D(0,&nbsp;d), with 0&nbsp;&lt;&nbsp;a&nbsp;&lt;&nbsp;b and 0&nbsp;&lt;&nbsp;c&nbsp;&lt;&nbsp;d.<br>Point P, also with integer coordinates, is chosen on the line AC so that the three triangles ABP, CDP and BDP are all <dfn title="Have equal angles">similar</dfn>.</p>
<center><img src="/resources/images/0299_ThreeSimTri.gif"></center>

<p>It is easy to prove that the three triangles can be similar, only if a=c.</p>
<p>So, given that a=c, we are looking for triplets (a,b,d) such that at least one point P (with integer coordinates) exists on AC, making the three triangles ABP, CDP and BDP all similar.</p>
<p>For example, if (a,b,d)=(2,3,4), it can be easily verified that point P(1,1) satisfies the above condition. Note that the triplets (2,3,4) and (2,4,3) are considered as distinct, although point P(1,1) is common for both.</p>
<p>If b+d&nbsp;&lt;&nbsp;100, there are 92 distinct triplets (a,b,d) such that point P exists.<br>If b+d&nbsp;&lt;&nbsp;100 000, there are 320471 distinct triplets (a,b,d) such that point P exists.</p>
<p>If b+d&nbsp;&lt;&nbsp;100 000 000, how many distinct triplets (a,b,d) are there such that point P exists?</p>
<hr>
<p><strong>三个相似三角形</strong></p>
<p>给定四个坐标为整数的点：A(a,&nbsp;0)、B(b,&nbsp;0)、C(0,&nbsp;c)和D(0,&nbsp;d)，其中0&nbsp;&lt;&nbsp;a&nbsp;&lt;&nbsp;b且0&nbsp;&lt;&nbsp;c&nbsp;&lt;&nbsp;d。<br>在直线AC上选择另一个坐标为整数的点P，使得三角形ABP、CDP和BDP均<dfn title="对应角相等">相似</dfn>。</p>
<center><img src="/resources/images/0299_ThreeSimTri.gif"></center>

<p>很容易证明仅当a=c时这三个三角形可能相似。</p>
<p>因此，给定a=c，我们需要找到三元组(a,b,d)使得AC上至少存在一个坐标为整数的点P满足三角形ABP、CDP和BDP均相似。</p>
<p>例如，如果(a,b,d)=(2,3,4)，很容易验证点P(1,1)满足上述条件。注意三元组(2,3,4)和(2,4,3)被认为是不同的三元组，尽管P(1,1)这两个三元组来说都满足条件。</p>
<p>如果要求b+d&nbsp;&lt;&nbsp;100，一共有92个不同的三元组(a,b,d)使得点P存在。<br>如果要求b+d&nbsp;&lt;&nbsp;100 000，一共有320471个不同的三元组(a,b,d)使得点P存在。</p>
<p>如果要求b+d&nbsp;&lt;&nbsp;100 000 000，一共有多少个不同的三元组(a,b,d)使得点P存在？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 3</title>
    <url>/3/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-3"><a href="#Problem-3" class="headerlink" title="Problem 3"></a><a href="https://projecteuler.net/problem=3">Problem 3</a></h1><hr>
<h2 id="Largest-Prime-Factor"><a href="#Largest-Prime-Factor" class="headerlink" title="Largest Prime Factor"></a><strong>Largest Prime Factor</strong></h2><p>The prime factors of $13195$ are $5$, $7$, $13$ and $29$.</p>
<p>What is the largest prime factor of the number $600851475143$?</p>
<hr>
<h2 id="最大质因数"><a href="#最大质因数" class="headerlink" title="最大质因数"></a><strong>最大质因数</strong></h2><p>$13195$的质因数包括$5$、$7$、$13$和$29$。</p>
<p>$600851475143$的最大质因数是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 30</title>
    <url>/30/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-30"><a href="#Problem-30" class="headerlink" title="Problem 30"></a><a href="https://projecteuler.net/problem=30">Problem 30</a></h1><hr>
<h2 id="Digit-Fifth-Powers"><a href="#Digit-Fifth-Powers" class="headerlink" title="Digit Fifth Powers"></a><strong>Digit Fifth Powers</strong></h2><p>Surprisingly there are only three numbers that can be written as the sum of fourth powers of their digits:<br>$$1634=1^4+6^4+3^4+4^4$$<br>$$8208=8^4+2^4+0^4+8^4$$<br>$$9474=9^4+4^4+7^4+4^4$$</p>
<p>As $1 = 1^4$ is not a sum it is not included.</p>
<p>The sum of these numbers is $1634 + 8208 + 9474 = 19316$.</p>
<p>Find the sum of all the numbers that can be written as the sum of fifth powers of their digits.</p>
<hr>
<h2 id="各位数字的五次幂"><a href="#各位数字的五次幂" class="headerlink" title="各位数字的五次幂"></a><strong>各位数字的五次幂</strong></h2><p>令人惊讶的是，只有三个数可以写成其各位数字的四次幂之和：<br>$$1634=1^4+6^4+3^4+4^4$$<br>$$8208=8^4+2^4+0^4+8^4$$<br>$$9474=9^4+4^4+7^4+4^4$$</p>
<p>由于$1 = 1^4$并不是求和，所以这里不计入内。</p>
<p>上面这三个数的和是$1634 + 8208 + 9474 = 19316$。</p>
<p>找出所有可以写成其各位数字的五次幂之和的数，并求这些数的和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 300</title>
    <url>/300/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-300"><a href="#Problem-300" class="headerlink" title="Problem 300"></a><a href="https://projecteuler.net/problem=300">Problem 300</a></h1><hr>
<p><strong>Protein folding</strong></p>
<p>In a very simplified form, we can consider proteins as strings consisting of hydrophobic (H) and polar (P) elements, e.g. HHPPHHHPHHPH.<br>For this problem, the orientation of a protein is important; e.g. HPP is considered distinct from PPH. Thus, there are 2<sup>n</sup> distinct proteins consisting of n elements.</p>
<p>When one encounters these strings in nature, they are always folded in such a way that the number of H-H contact points is as large as possible, since this is energetically advantageous.<br>As a result, the H-elements tend to accumulate in the inner part, with the P-elements on the outside.<br>Natural proteins are folded in three dimensions of course, but we will only consider protein folding in <u>two dimensions</u>.</p>
<p>The figure below shows two possible ways that our example protein could be folded (H-H contact points are shown with red dots).</p>
<center><img src="/resources/images/0300_protein.gif"></center>

<p>The folding on the left has only six H-H contact points, thus it would never occur naturally.<br>On the other hand, the folding on the right has nine H-H contact points, which is optimal for this string.</p>
<p>Assuming that H and P elements are equally likely to occur in any position along the string, the average number of H-H contact points in an optimal folding of a random protein string of length 8 turns out to be 850&nbsp;/&nbsp;2<sup>8</sup>=3.3203125.</p>
<p>What is the average number of H-H contact points in an optimal folding of a random protein string of length 15?<br>Give your answer using as many decimal places as necessary for an exact result.</p>
<hr>
<p><strong>蛋白质折叠</strong></p>
<p>我们可以将蛋白质简单地想象成由疏水成分（H）和极性成分（P）构成的串，例如HHPPHHHPHHPH。<br>在这个问题中，蛋白质的方向是很重要的；例如，HPP和PPH被认为是不同的蛋白质。因此，有n个成分的不同蛋白质一共有2<sup>n</sup>种。</p>
<p>在自然界中，这些串一般都会折叠起来，使得H-H接触点尽可能多，因为这在能量上有优势。<br>结果是，H成分倾向于聚集在中间部分，而P成分则留在外围。<br>天然蛋白质当然是在三个维度上折叠的，但我们只考虑蛋白质在<u>二维</u>进行折叠的情况。</p>
<p>下图中展示了上述样例蛋白质两种可能的折叠方式（H-H接触点用红色点表示）。</p>
<center><img src="/resources/images/0300_protein.gif"></center>

<p>左边的折叠方式只有6个H-H接触点，因此它不可能自然生成。<br>相反地，右边的折叠方式有9个H-H接触点，是这个样例蛋白质的最优折叠方式。</p>
<p>假定H成分和P成分在串的任何位置都等可能出现，对于一个长度为8的蛋白质串，最优折叠方式中H-H接触点的平均数目是850&nbsp;/&nbsp;2<sup>8</sup>=3.3203125。</p>
<p>对于一个长度为15的蛋白质串，最优折叠方式中H-H接触点的平均数目是多少？<br>使用所必需的全部小数位，给出精确答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 301</title>
    <url>/301/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-301"><a href="#Problem-301" class="headerlink" title="Problem 301"></a><a href="https://projecteuler.net/problem=301">Problem 301</a></h1><hr>
<p><strong>Nim</strong></p>
<p><i>Nim</i> is a game played with heaps of stones, where two players take it in turn to remove any number of stones from any heap until no stones remain.</p>
<p>We’ll consider the three-heap normal-play version of Nim, which works as follows:</p>
<ul>
<li>At the start of the game there are three heaps of stones.</li>
<li>On his turn the player removes any positive number of stones from any single heap.</li>
<li>The first player unable to move (because no stones remain) loses.</li>
</ul>
<p>If (n<sub>1</sub>,n<sub>2</sub>,n<sub>3</sub>) indicates a Nim position consisting of heaps of size n<sub>1</sub>, n<sub>2</sub> and n<sub>3</sub> then there is a simple function X(n<sub>1</sub>,n<sub>2</sub>,n<sub>3</sub>) — that you may look up or attempt to deduce for yourself — that returns:</p>
<ul>
<li>zero if, with perfect strategy, the player about to move will eventually lose; or</li>
<li>non-zero if, with perfect strategy, the player about to move will eventually win.</li>
</ul>
<p>For example X(1,2,3) = 0 because, no matter what the current player does, his opponent can respond with a move that leaves two heaps of equal size, at which point every move by the current player can be mirrored by his opponent until no stones remain; so the current player loses. To illustrate:</p>
<ul>
<li>current player moves to (1,2,1)</li>
<li>opponent moves to (1,0,1)</li>
<li>current player moves to (0,0,1)</li>
<li>opponent moves to (0,0,0), and so wins.</li>
</ul>
<p>For how many positive integers n&thinsp;≤&thinsp;2<sup>30</sup> does X(n,2n,3n) = 0?</p>
<hr>
<p><strong>取石子游戏</strong></p>
<p><i class=zh>取石子游戏</i>是用数堆石子进行的游戏，由两名玩家轮流从任意一堆中取走任意数量的石子，直到石子全部取完为止。</p>
<p>我们考虑按如下方式进行的三堆经典取石子游戏：</p>
<ul>
<li>游戏开始时有三堆石子。</li>
<li>每名玩家在轮到自己时从任意一堆中取走任意正数枚石子。</li>
<li>轮到时已无石子可取的玩家输掉游戏。</li>
</ul>
<p>如果用(n<sub>1</sub>,n<sub>2</sub>,n<sub>3</sub>)表示游戏目前的三堆石子分别有n<sub>1</sub>、n<sub>2</sub>和n<sub>3</sub>枚，那么存在一个简单函数X(n<sub>1</sub>,n<sub>2</sub>,n<sub>3</sub>)——你可以查询相关知识或自己推理得出——其函数值为：</p>
<ul>
<li>零，如果在双方都采取最优策略的情况下即将取石子的玩家最终会输掉游戏；或者</li>
<li>非零，如果在双方都采取最优策略的情况下即将取石子的玩家最终会赢得游戏。</li>
</ul>
<p>例如，X(1,2,3) = 0，因为无论当前玩家如何操作，他的对手都能够给他留下两堆同样规模的石子并不断仿照他的操作直到石子全部取完；因此当前玩家必定会输掉游戏。举例来说：</p>
<ul>
<li>当前玩家取完后留下(1,2,1)</li>
<li>对手玩家取完后留下(1,0,1)</li>
<li>当前玩家取完后留下(0,0,1)</li>
<li>对手玩家取完后留下(0,0,0)，对手玩家获胜。</li>
</ul>
<p>有多少个正整数n&thinsp;≤&thinsp;2<sup>30</sup>使得X(n,2n,3n) = 0？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 302</title>
    <url>/302/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-302"><a href="#Problem-302" class="headerlink" title="Problem 302"></a><a href="https://projecteuler.net/problem=302">Problem 302</a></h1><hr>
<p><strong>Strong Achilles Numbers</strong></p>
<p>A positive integer n is <strong>powerful</strong> if p<sup>2</sup> is a divisor of n for every prime factor p in n.</p>
<p>A positive integer n is a <strong>perfect power</strong> if n can be expressed as a power of another positive integer.</p>
<p>A positive integer n is an <strong>Achilles number</strong> if n is powerful but not a perfect power. For example, 864 and 1800 are Achilles numbers: 864 = 2<sup>5</sup>·3<sup>3</sup> and 1800 = 2<sup>3</sup>·3<sup>2</sup>·5<sup>2</sup>.</p>
<p>We shall call a positive integer S a <i>Strong Achilles number</i> if both S and φ(S) are Achilles numbers.<sup>1</sup><br>For example, 864 is a Strong Achilles number: φ(864) = 288 = 2<sup>5</sup>·3<sup>2</sup>. However, 1800 isn’t a Strong Achilles number because: φ(1800) = 480 = 2<sup>5</sup>·3<sup>1</sup>·5<sup>1</sup>.</p>
<p>There are 7 Strong Achilles numbers below 10<sup>4</sup> and 656 below 10<sup>8</sup>.</p>
<p>How many Strong Achilles numbers are there below 10<sup>18</sup>?</p>
<p><sup>1</sup> φ denotes <strong>Euler’s totient function</strong>.</p>
<hr>
<p><strong>强阿喀琉斯数</strong></p>
<p>我们称正整数n是<strong>强大的（似幂的）</strong>，如果对于n的每一个质因数p，p<sup>2</sup>都是n的约数。</p>
<p>我们称正整数n是<strong>完美的（完全幂的）</strong>，如果n可以表达成另一个正整数的幂。</p>
<p>我们称正整数n是<strong>阿喀琉斯数</strong>，如果n是强大的但不是完美的。例如，864和1800都是阿喀琉斯数：864 = 2<sup>5</sup>·3<sup>3</sup>，而1800 = 2<sup>3</sup>·3<sup>2</sup>·5<sup>2</sup>。</p>
<p>我们称正整数S是<i>强阿喀琉斯数</i>，如果S和φ(S)都是阿喀琉斯数。<sup>1</sup><br>例如，864是强阿喀琉斯数：φ(864) = 288 = 2<sup>5</sup>·3<sup>2</sup>。然而，1800不是强阿喀琉斯数：φ(1800) = 480 = 2<sup>5</sup>·3<sup>1</sup>·5<sup>1</sup>。</p>
<p>一共有7个小于10<sup>4</sup>的强阿喀琉斯数，656个小于10<sup>8</sup>的强阿喀琉斯数。</p>
<p>有多少个小于10<sup>18</sup>的强阿喀琉斯数？</p>
<p><sup>1</sup> φ表示<strong>欧拉总计函数</strong>。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 303</title>
    <url>/303/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-303"><a href="#Problem-303" class="headerlink" title="Problem 303"></a><a href="https://projecteuler.net/problem=303">Problem 303</a></h1><hr>
<p><strong>Multiples with small digits</strong></p>
<p>For a positive integer n, define f(n) as the least positive multiple of n that, written in base 10, uses only digits ≤ 2.</p>
<p>Thus f(2)=2, f(3)=12, f(7)=21, f(42)=210, f(89)=1121222.</p>
<p>Also, $\sum^{100}_{n=1}\frac{f(n)}{n}=11363107$.</p>
<p>Find $\sum^{10000}_{n=1}\frac{f(n)}{n}$.</p>
<hr>
<p><strong>数字较小的倍数</strong></p>
<p>正整数n的有些正倍数在十进制下所有数字均≤ 2，记其中最小的为f(n)。</p>
<p>因此f(2)=2，f(3)=12，f(7)=21，f(42)=210，f(89)=1121222。</p>
<p>此外，已知$\sum^{100}_{n=1}\frac{f(n)}{n}=11363107$。</p>
<p>求$\sum^{10000}_{n=1}\frac{f(n)}{n}$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 304</title>
    <url>/304/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-304"><a href="#Problem-304" class="headerlink" title="Problem 304"></a><a href="https://projecteuler.net/problem=304">Problem 304</a></h1><hr>
<p><strong>Primonacci</strong></p>
<p>For any positive integer n the function next_prime(n) returns the smallest prime p such that p&gt;n.</p>
<p>The sequence a(n) is defined by:<br>a(1)=next_prime(10<sup>14</sup>) and a(n)=next_prime(a(n-1)) for n&gt;1.</p>
<p>The fibonacci sequence f(n) is defined by: f(0)=0, f(1)=1 and f(n)=f(n-1)+f(n-2) for n&gt;1.</p>
<p>The sequence b(n) is defined as f(a(n)).</p>
<p>Find ∑b(n) for 1≤n≤100 000. Give your answer mod 1234567891011. </p>
<hr>
<p><strong>素斐波那契数</strong></p>
<p>对于任意正整数n，函数next_prime(n)给出满足p&gt;n的最小素数p。</p>
<p>序列a(n)按如下方式定义：<br>a(1)=next_prime(10<sup>14</sup>)；对于n&gt;1，a(n)=next_prime(a(n-1))。</p>
<p>斐波那契数列f(n)按如下方式定义：f(0)=0，f(1)=1；对于n&gt;1，f(n)=f(n-1)+f(n-2)。</p>
<p>序列b(n)的定义为f(a(n))。</p>
<p>对于1≤n≤100 000，求∑b(n)。将你的答案模1234567891011取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 305</title>
    <url>/305/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-305"><a href="#Problem-305" class="headerlink" title="Problem 305"></a><a href="https://projecteuler.net/problem=305">Problem 305</a></h1><hr>
<p><strong>Reflexive Position</strong></p>
<p>Let’s call S the (infinite) string that is made by concatenating the consecutive positive integers (starting from 1)  written down in base 10.<br>Thus, S = 1234567891011121314151617181920212223242…</p>
<p>It’s easy to see that any number will show up an infinite number of times in S.</p>
<p>Let’s call f(n) the starting position of the n<sup>th</sup> occurrence of n in S.<br>For example, f(1)=1, f(5)=81, f(12)=271 and f(7780)=111111365.</p>
<p>Find ∑f(3<sup>k</sup>) for 1≤k≤13.</p>
<hr>
<p><strong>自反位置</strong></p>
<p>我们将十进制下的连续正整数（从1开始）拼接起来，构造出（无限长的）字符串S。<br>也即是说，S = 1234567891011121314151617181920212223242…</p>
<p>很容易看出，任何数都会在S中出现无限多次。</p>
<p>我们称f(n)是n在S中第n次出现时的起始位置。<br>例如，f(1)=1，f(5)=81，f(12)=271，以及f(7780)=111111365。</p>
<p>对于1≤k≤13，求∑f(3<sup>k</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 306</title>
    <url>/306/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-306"><a href="#Problem-306" class="headerlink" title="Problem 306"></a><a href="https://projecteuler.net/problem=306">Problem 306</a></h1><hr>
<p><strong>Paper-strip Game</strong></p>
<p>The following game is a classic example of Combinatorial Game Theory:</p>
<p>Two players start with a strip of n white squares and they take alternate turns.<br>On each turn, a player picks two contiguous white squares and paints them black.<br>The first player who cannot make a move loses.</p>
<ul>
<li>If n = 1, there are no valid moves, so the first player loses automatically.</li>
<li>If n = 2, there is only one valid move, after which the second player loses.</li>
<li>If n = 3, there are two valid moves, but both leave a situation where the second player loses.</li>
<li>If n = 4, there are three valid moves for the first player; she can win the game by painting the two middle squares.</li>
<li>If n = 5, there are four valid moves for the first player (shown below in red); but no matter what she does, the second player (blue) wins.</li>
</ul>
<center><img src="/resources/images/0306_pstrip.gif"></center>

<p>So, for 1 ≤ n ≤ 5, there are 3 values of n for which the first player can force a win.<br>Similarly, for 1 ≤ n ≤ 50, there are 40 values of n for which the first player can force a win.</p>
<p>For 1 ≤ n ≤ 1 000 000, how many values of n are there for which the first player can force a win?</p>
<hr>
<p><strong>纸条游戏</strong></p>
<p>以下游戏是组合博弈论中的一个经典例子：</p>
<p>游戏开始时，有一张划成n个白格的纸条，两名玩家轮流进行操作。<br>每一轮，一名玩家选择相邻的两个白格，并将它们涂成黑色。<br>首先无法进行操作的玩家输掉游戏。</p>
<ul>
<li>如果n = 1，不存在合法操作，先手玩家自动输掉游戏。</li>
<li>如果n = 2，只有一种合法操作，在此之后后手玩家输掉游戏。</li>
<li>如果n = 3，有两种合法操作，但在此之后后手玩家均输掉游戏。</li>
<li>如果n = 4，有三种合法操作，先手玩家只需将中间两个白格涂成黑色即可赢得游戏。</li>
<li>如果n = 5，有四种合法操作（如下图红色所示）；但无论先手玩家如何操作，后手玩家（蓝色所示）都将赢得游戏。</li>
</ul>
<center><img src="/resources/images/0306_pstrip.gif"></center>

<p>因此，对于1 ≤ n ≤ 5，共有3种n值使得先手玩家必胜。<br>同样地，对于1 ≤ n ≤ 50，共有40种n值使得先手玩家必胜。</p>
<p>对于1 ≤ n ≤ 1 000 000，共有多少种n值使得先手玩家必胜？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 307</title>
    <url>/307/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-307"><a href="#Problem-307" class="headerlink" title="Problem 307"></a><a href="https://projecteuler.net/problem=307">Problem 307</a></h1><hr>
<p><strong>Chip Defects</strong></p>
<p>k defects are randomly distributed amongst n integrated-circuit chips produced by a factory (any number of defects may be found on a chip and each defect is independent of the other defects).</p>
<p>Let p(k,n) represent the probability that there is a chip with at least 3 defects.<br>For instance p(3,7) ≈ 0.0204081633.</p>
<p>Find p(20 000, 1 000 000) and give your answer rounded to 10 decimal places in the form 0.abcdefghij.</p>
<hr>
<p><strong>电路瑕疵</strong></p>
<p>在一个工厂生产的n块集成电路上随机分布有k个瑕疵（一块集成电路上可能有任意数量的瑕疵，瑕疵之间相互独立）。</p>
<p>记p(k,n)为存在一块集成电路上面有至少3个瑕疵的概率。<br>例如，p(3,7) ≈ 0.0204081633。</p>
<p>求p(20 000, 1 000 000)，并将你的答案四舍五入到10位小数，即形式为0.abcdefghij。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 308</title>
    <url>/308/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-308"><a href="#Problem-308" class="headerlink" title="Problem 308"></a><a href="https://projecteuler.net/problem=308">Problem 308</a></h1><hr>
<p><strong>An amazing Prime-generating Automaton</strong></p>
<p>A program written in the programming language Fractran consists of a list of fractions.</p>
<p>The internal state of the Fractran Virtual Machine is a positive integer, which is initially set to a seed value. Each iteration of a Fractran program multiplies the state integer by the first fraction in the list which will leave it an integer.</p>
<p>For example, one of the Fractran programs that John Horton Conway wrote for prime-generation consists of the following 14 fractions:</p>
<p>$\frac{17}{91}$, $\frac{78}{85}$, $\frac{19}{51}$, $\frac{23}{38}$, $\frac{29}{33}$, $\frac{77}{29}$, $\frac{95}{23}$, $\frac{77}{19}$, $\frac{1}{17}$, $\frac{11}{13}$, $\frac{13}{11}$, $\frac{15}{2}$, $\frac{1}{7}$, $\frac{55}{1}$. </p>
<p>Starting with the seed integer 2, successive iterations of the program produce the sequence:<br>15, 825, 725, 1925, 2275, 425, …, 68, <strong>4</strong>, 30, …, 136, <strong>8</strong>, 60, …, 544, <strong>32</strong>, 240, …</p>
<p>The powers of 2 that appear in this sequence are 2<sup>2</sup>, 2<sup>3</sup>, 2<sup>5</sup>, …<br>It can be shown that <i>all</i> the powers of 2 in this sequence have prime exponents and that <i>all</i> the primes appear as exponents of powers of 2, in proper order!</p>
<p>If someone uses the above Fractran program to solve Project Euler Problem 7 (find the 10001<sup>st</sup> prime), how many iterations would be needed until the program produces 2<sup>10001st prime</sup>?</p>
<hr>
<p><strong>神奇的素数生成自动机</strong></p>
<p>用编程语言Fractran所写的程序由一个分数序列组成。</p>
<p>Fractran虚拟机的内部状态为一个正整数，初始化时被设定为某个种子值。在Fractran程序每次迭代时，找到序列中第一个与状态整数相乘得到整数的分数，并更新状态整数为新得到的整数。</p>
<p>例如，约翰·何顿·康威所写的一个用于素数生成的Fractran程序由下列14个分数组成：</p>
<p>$\frac{17}{91}$, $\frac{78}{85}$, $\frac{19}{51}$, $\frac{23}{38}$, $\frac{29}{33}$, $\frac{77}{29}$, $\frac{95}{23}$, $\frac{77}{19}$, $\frac{1}{17}$, $\frac{11}{13}$, $\frac{13}{11}$, $\frac{15}{2}$, $\frac{1}{7}$, $\frac{55}{1}$. </p>
<p>从种子值2开始，这个程序的连续迭代生成了如下的序列：<br>15, 825, 725, 1925, 2275, 425, …, 68, <strong>4</strong>, 30, …, 136, <strong>8</strong>, 60, …, 544, <strong>32</strong>, 240, …</p>
<p>在这个序列中出现的2的幂为2<sup>2</sup>, 2<sup>3</sup>, 2<sup>5</sup>, …<br>可以看出<i>所有</i>出现在序列中的2的幂，其指数均为素数，而且<i>所有</i>素数恰好按顺序作为2的指数出现！</p>
<p>如果有人用上述Fractran程序来解决欧拉计划第7题（找出第10001个素数），需要迭代多少步才能生成2<sup>第10001个素数</sup>?</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 309</title>
    <url>/309/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-309"><a href="#Problem-309" class="headerlink" title="Problem 309"></a><a href="https://projecteuler.net/problem=309">Problem 309</a></h1><hr>
<p><strong>Integer Ladders</strong></p>
<p>In the classic “Crossing Ladders” problem, we are given the lengths x and y of two ladders resting on the opposite walls of a narrow, level street. We are also given the height h above the street where the two ladders cross and we are asked to find the width of the street (w).</p>
<center><img src="/resources/images/0309_ladders.gif"></center>

<p>Here, we are only concerned with instances where all four variables are positive integers.<br>For example, if x = 70, y = 119 and h = 30, we can calculate that w = 56.</p>
<p>In fact, for integer values x, y, h and 0 &lt; x &lt; y &lt; 200, there are only five triplets (x,y,h) producing integer solutions for w:<br>(70, 119, 30), (74, 182, 21), (87, 105, 35), (100, 116, 35) and (119, 175, 40).</p>
<p>For integer values x, y, h and 0 &lt; x &lt; y &lt; 1 000 000, how many triplets (x,y,h) produce integer solutions for w?</p>
<hr>
<p><strong>整数梯子</strong></p>
<p>在经典问题“穿越梯子”中，我们已知两架长度分别为x和y的梯子相对靠在一条狭长、水平街道的两侧墙上。我们还知道两架梯子相交处的高度为h，最终目标是求街道的宽度(w)。</p>
<center><img src="/resources/images/0309_ladders.gif"></center>

<p>在这个问题中，我们只关心所有四个变量均为正整数的情况。<br>例如，如果x = 70，y = 119，h = 30，我们可以计算出w = 56。</p>
<p>事实上，若x、y、h均取正整数，且0 &lt; x &lt; y &lt; 200，只有五个三元组(x,y,h)能解出w为整数：<br>(70, 119, 30)、(74, 182, 21)、(87, 105, 35)、(100, 116, 35)和(119, 175, 40)。</p>
<p>若x、y、h均取正整数，且0 &lt; x &lt; y &lt; 1 000 000，有多少个三元组(x,y,h)能解出w为整数？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 31</title>
    <url>/31/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-31"><a href="#Problem-31" class="headerlink" title="Problem 31"></a><a href="https://projecteuler.net/problem=31">Problem 31</a></h1><hr>
<h2 id="Coin-Sums"><a href="#Coin-Sums" class="headerlink" title="Coin Sums"></a><strong>Coin Sums</strong></h2><p>In the United Kingdom the currency is made up of pound ($\it\unicode{xA3}$) and pence ($p$). There are eight coins in general circulation:<br>$$1p, 2p, 5p, 10p, 20p, 50p, {\it\unicode{xA3}}1(100p), {\it\unicode{xA3}}2(200p).$$</p>
<p>It is possible to make ${\it\unicode{xA3}}2$ in the following way:<br>$$1\times {\it\unicode{xA3}}1+ 1\times 50p + 2 \times 20 p+1\times 5p+ 1\times 2p+3\times 1p$$</p>
<p>How many different ways can ${\it\unicode{xA3}}2$ be made using any number of coins?</p>
<hr>
<h2 id="硬币求和"><a href="#硬币求和" class="headerlink" title="硬币求和"></a><strong>硬币求和</strong></h2><p>英国的货币单位分为英镑（$\it\unicode{xA3}$）和便士（$p$）。目前流通的硬币一共有八种面值：<br>$$1p, 2p, 5p, 10p, 20p, 50p, {\it\unicode{xA3}}1(100p), {\it\unicode{xA3}}2(200p).$$</p>
<p>想要凑出${\it\unicode{xA3}}2$，其中一种做法是：<br>$$1\times {\it\unicode{xA3}}1+ 1\times 50p + 2 \times 20 p+1\times 5p+ 1\times 2p+3\times 1p$$</p>
<p>不限制硬币数量，凑出${\it\unicode{xA3}}2$有多少种不同的做法？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 310</title>
    <url>/310/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-310"><a href="#Problem-310" class="headerlink" title="Problem 310"></a><a href="https://projecteuler.net/problem=310">Problem 310</a></h1><hr>
<p><strong>Nim Square</strong></p>
<p>Alice and Bob play the game Nim Square.<br>Nim Square is just like ordinary three-heap normal play Nim, but the players may only remove a square number of stones from a heap.<br>The number of stones in the three heaps is represented by the ordered triple (a,b,c).<br>If 0≤a≤b≤c≤29 then the number of losing positions for the next player is 1160.</p>
<p>Find the number of losing positions for the next player if 0≤a≤b≤c≤100 000.</p>
<hr>
<p><strong>取平方数石子</strong></p>
<p>爱丽丝和鲍勃正在玩取平方数石子的游戏。<br>取平方数石子游戏和通常玩的三堆经典取石子游戏基本一致，只是玩家每次从堆中只能取走平方数枚石子。<br>三堆中的石子数目用有序三元组(a,b,c)表示。<br>如果0≤a≤b≤c≤29，将要取石子的玩家必败的状态有1160种。</p>
<p>如果0≤a≤b≤c≤100 000，求将要取石子的玩家必败的状态数目。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 311</title>
    <url>/311/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-311"><a href="#Problem-311" class="headerlink" title="Problem 311"></a><a href="https://projecteuler.net/problem=311">Problem 311</a></h1><hr>
<p><strong>Biclinic Integral Quadrilaterals</strong></p>
<p>ABCD is a convex, integer sided quadrilateral with 1 ≤ AB &lt; BC &lt; CD &lt; AD.<br>BD has integer length. O is the midpoint of BD. AO has integer length.<br>We’ll call ABCD a <i>biclinic integral quadrilateral</i> if AO = CO ≤ BO = DO.</p>
<p>For example, the following quadrilateral is a biclinic integral quadrilateral:<br>AB = 19, BC = 29, CD = 37, AD = 43, BD = 48 and AO = CO = 23.</p>
<center><img src="/resources/images/0311_biclinic.gif"></center>

<p>Let B(N) be the number of distinct biclinic integral quadrilaterals ABCD that satisfy AB<sup>2</sup>+BC<sup>2</sup>+CD<sup>2</sup>+AD<sup>2</sup> ≤ N.<br>We can verify that B(10 000) = 49 and B(1 000 000) = 38239.</p>
<p>Find B(10 000 000 000).</p>
<hr>
<p><strong>双斜整数四边形</strong></p>
<p>ABCD是一个各边长为整数的凸四边形，满足1 ≤ AB &lt; BC &lt; CD &lt; AD。<br>BD的长为整数，O是BD的中点，且AO的长也是整数。<br>如果AO = CO ≤ BO = DO，我们称ABCD为<i>双斜整数四边形</i>。</p>
<p>例如，如下的四边形是双斜整数四边形：<br>AB = 19，BC = 29，CD = 37，AD = 43，BD = 48，以及AO = CO = 23。</p>
<center><img src="/resources/images/0311_biclinic.gif"></center>

<p>记B(N)是所有满足AB<sup>2</sup>+BC<sup>2</sup>+CD<sup>2</sup>+AD<sup>2</sup> ≤ N的双斜整数四边形ABCD的数目。<br>我们可以验证B(10 000) = 49以及B(1 000 000) = 38239。</p>
<p>求B(10 000 000 000)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 312</title>
    <url>/312/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-312"><a href="#Problem-312" class="headerlink" title="Problem 312"></a><a href="https://projecteuler.net/problem=312">Problem 312</a></h1><hr>
<p><strong>Cyclic paths on Sierpiński graphs</strong></p>
<p>A <strong>Sierpiński graph</strong> of order-1 (S<sub>1</sub>) is an equilateral triangle.<br>S<sub>n+1</sub> is obtained from S<sub>n</sub> by positioning three copies of S<sub>n</sub> so that every pair of copies has one common corner.</p>
<center><img src="/resources/images/0312_sierpinskyAt.gif"></center>

<p>Let C(n) be the number of cycles that pass exactly once through all the vertices of S<sub>n</sub>.<br>For example, C(3) = 8 because eight such cycles can be drawn on S<sub>3</sub>, as shown below:</p>
<center><img src="/resources/images/0312_sierpinsky8t.gif"></center>

<p>It can also be verified that :<br>C(1) = C(2) = 1<br>C(5) = 71328803586048<br>C(10 000) mod 10<sup>8</sup> = 37652224<br>C(10 000) mod 13<sup>8</sup> = 617720485</p>
<p>Find C(C(C(10 000))) mod 13<sup>8</sup>.</p>
<hr>
<p><strong>谢尔宾斯基图的回路</strong></p>
<p>1阶<strong>谢尔宾斯基图</strong>（S<sub>1</sub>）是一个等边三角形。<br>将三个S<sub>n</sub>摆在一起，使得任意两个S<sub>n</sub>都共用一个角，就得到了S<sub>n+1</sub>。</p>
<center><img src="/resources/images/0312_sierpinskyAt.gif"></center>

<p>记C(n)是经过S<sub>n</sub>中所有顶点恰好一次的回路的数目。<br>例如，C(3) = 8，因为在S<sub>3</sub>上恰好可以画出8条这样的回路，如下图所示：</p>
<center><img src="/resources/images/0312_sierpinsky8t.gif"></center>

<p>同样可以验证：<br>C(1) = C(2) = 1<br>C(5) = 71328803586048<br>C(10 000) mod 10<sup>8</sup> = 37652224<br>C(10 000) mod 13<sup>8</sup> = 617720485</p>
<p>求C(C(C(10 000))) mod 13<sup>8</sup>。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 313</title>
    <url>/313/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-313"><a href="#Problem-313" class="headerlink" title="Problem 313"></a><a href="https://projecteuler.net/problem=313">Problem 313</a></h1><hr>
<p><strong>Sliding game</strong></p>
<p>In a sliding game a counter may slide horizontally or vertically into an empty space. The objective of the game is to move the red counter from the top left corner of a grid to the bottom right corner; the space always starts in the bottom right corner. For example, the following sequence of pictures show how the game can be completed in five moves on a 2 by 2 grid.</p>
<center><img src="/resources/images/0313_sliding_game_1.gif"></center>

<p>Let S(m,n) represent the minimum number of moves to complete the game on an m by n grid. For example, it can be verified that S(5,4) = 25.</p>
<center><img src="/resources/images/0313_sliding_game_2.gif"></center>

<p>There are exactly 5482 grids for which S(m,n) = p<sup>2</sup>, where p &lt; 100 is prime.</p>
<p>How many grids does S(m,n) = p<sup>2</sup>, where p &lt; 10<sup>6</sup> is prime?</p>
<hr>
<p><strong>滑动游戏</strong></p>
<p>在滑动游戏中，筹码可以水平或竖直地划入相邻的空位。游戏的目标是将网格左上角的红色筹码移动到右下角；开始时空格总是在右下角。下面的一系列图片演示了如何用五步完成2乘2网格的游戏。</p>
<center><img src="/resources/images/0313_sliding_game_1.gif"></center>

<p>记S(m,n)为完成m乘n网格的游戏所需的最少步数。例如，可以验证S(5,4) = 25。</p>
<center><img src="/resources/images/0313_sliding_game_2.gif"></center>

<p>一共有5482种网格使得S(m,n) = p<sup>2</sup>，其中p &lt; 100是素数。</p>
<p>有多少种网格使得S(m,n) = p<sup>2</sup>，其中p &lt; 10<sup>6</sup>是素数？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 314</title>
    <url>/314/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-314"><a href="#Problem-314" class="headerlink" title="Problem 314"></a><a href="https://projecteuler.net/problem=314">Problem 314</a></h1><hr>
<p><strong>The Mouse on the Moon</strong></p>
<p>The moon has been opened up, and land can be obtained for free, but there is a catch. You have to build a wall around the land that you stake out, and building a wall on the moon is expensive. Every country has been allotted a 500 m by 500 m square area, but they will possess only that area which they wall in. 251001 posts have been placed in a rectangular grid with 1 meter spacing. The wall must be a closed series of straight lines, each line running from post to post.</p>
<p>The bigger countries of course have built a 2000 m wall enclosing the entire 250 000 m<sup>2</sup> area. The <a href="http://en.wikipedia.org/wiki/Grand_Fenwick">Duchy of Grand Fenwick</a>, has a tighter budget, and has asked you (their Royal Programmer) to compute what shape would get best maximum enclosed-area/wall-length ratio.</p>
<p>You have done some preliminary calculations on a sheet of paper. For a 2000 meter wall enclosing the 250 000 m<sup>2</sup> area the enclosed-area/wall-length ratio is 125.<br>Although not allowed , but to get an idea if this is anything better:  if you place a circle inside the square area touching the four sides the area will be equal to π*250<sup>2</sup> m<sup>2</sup> and the perimeter will be π*500 m, so the enclosed-area/wall-length ratio will also be 125.</p>
<p>However, if you cut off from the square four triangles with sides 75 m, 75 m and 75√2 m the total area becomes 238750 m<sup>2</sup> and the perimeter becomes 1400+300√2 m. So this gives an enclosed-area/wall-length ratio of 130.87, which is significantly better.</p>
<center><img src="/resources/images/0314_landgrab.gif"></center>

<p>Find the maximum enclosed-area/wall-length ratio.<br>Give your answer rounded to 8 places behind the decimal point in the form abc.defghijk.</p>
<hr>
<p><strong>月球上的老鼠</strong></p>
<p>为了开发月球，现在可以免费地获得月球上的土地，但是且慢，你必须在你的土地周围建一堵墙才算数，而在月亮上建墙是非常昂贵的。现在每个国家都分配到一块500米乘500米的方形土地，但是最终只能持有用墙围起来的那部分。在每个国家的土地上，按照1米间隔打下了251001根桩，墙必须是由一系列直线构成的封闭曲线，每条直线都必须从一根桩开始到另一根桩结束。</p>
<p>当然，强大的国家会建一堵2000米长的墙，将全部250 000平方米都包围起来。但是<a href="http://en.wikipedia.org/wiki/Grand_Fenwick">大芬威克公国</a>的预算有点紧张，因此要求你（皇家程序员）计算出什么形状可以使得包围面积和墙长的比值最大。</p>
<p>你在草稿纸上做了些初步的计算。用2000米的长围住全部的250 000平方米，包围面积和墙长的比值是125。<br>尽管并不允许这么做，但是考虑一下这种情况也无妨：如果你在方形土地内画一个圆和四条边相切，面积将会是π*250<sup>2</sup>平方米，周长则是π*500米，所以包围面积和墙长的比值仍然是125。</p>
<p>然而，如果你从方形土地的四个角各切掉一个边长为75米、75米和75√2米的三角形，总面积将会变成238750平方米，而周长变成1400+300√2米。因此包围面积和墙长的比值是130.87，比上述情况都要好得多。</p>
<center><img src="/resources/images/0314_landgrab.gif"></center>

<p>求包围面积和墙长的最大比值。<br>将你的答案保留小数点后8位小数，即格式为abc.defghijk。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 316</title>
    <url>/316/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-316"><a href="#Problem-316" class="headerlink" title="Problem 316"></a><a href="https://projecteuler.net/problem=316">Problem 316</a></h1><hr>
<p><strong>Numbers in decimal expansions</strong></p>
<p>Let p = p<sub>1</sub> p<sub>2</sub> p<sub>3</sub> … be an infinite sequence of random digits, selected from {0,1,2,3,4,5,6,7,8,9} with equal probability.<br>It can be seen that p corresponds to the real number 0.p<sub>1</sub> p<sub>2</sub> p<sub>3</sub> ….<br>It can also be seen that choosing a random real number from the interval [0,1) is equivalent to choosing an infinite sequence of random digits selected from {0,1,2,3,4,5,6,7,8,9} with equal probability.</p>
<p>For any positive integer n with d decimal digits, let k be the smallest index such that  p<sub>k</sub>, p<sub>k+1</sub>, …p<sub>k+d-1</sub> are the decimal digits of n, in the same order.<br>Also, let g(n) be the expected value of k; it can be proven that g(n) is always finite and, interestingly, always an integer number.</p>
<p>For example, if n = 535, then<br>for p = 31415926<strong>535</strong>897…., we get k = 9<br>for p = 35528714365004956000049084876408468<strong>535</strong>4…, we get k = 36<br>etc and we find that g(535) = 1008.</p>
<p>Given that $\sum^{999}_{n=2}g(\lfloor \frac{10^6}{n} \rfloor)=27280188$, find $\sum^{999999}_{n=2}g(\lfloor \frac{10^{16}}{n} \rfloor)$。</p>
<p><u><em>Note</em></u> : $\lfloor x \rfloor$ represents the floor function.</p>
<hr>
<p><strong>十进制展开中的数</strong></p>
<p>记p = p<sub>1</sub> p<sub>2</sub> p<sub>3</sub> … 为无限随机数字序列，每一位数字都从{0,1,2,3,4,5,6,7,8,9}中等概率地选取。<br>可以看出，p对应了一个实数0.p<sub>1</sub> p<sub>2</sub> p<sub>3</sub> ….<br>同样可以看出，从区间[0,1)中随机选择一个实数等价于从{0,1,2,3,4,5,6,7,8,9}中等概率地选择数字构成一个无限随机数字序列。</p>
<p>对于任意d位十进制正整数n，存在最小的k，使得p<sub>k</sub>、p<sub>k+1</sub>、……p<sub>k+d-1</sub>恰好是n按顺序排列的各位数字。<br>此外，记g(n)为k的期望值；可以证明，g(n)总是有限的，而且有趣的是，g(n)总是整数。</p>
<p>例如，取n = 535，那么<br>若p = 31415926<strong>535</strong>897….，我们有k = 9<br>若p = 35528714365004956000049084876408468<strong>535</strong>4…，我们有k = 36<br>依此类推，我们可以得到g(535) = 1008.</p>
<p>已知$\sum^{999}_{n=2}g(\lfloor \frac{10^6}{n} \rfloor)=27280188$，求$\sum^{999999}_{n=2}g(\lfloor \frac{10^{16}}{n} \rfloor)$。</p>
<p><u><em>注意</em></u>：$\lfloor x \rfloor$表示下取整函数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 315</title>
    <url>/315/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-315"><a href="#Problem-315" class="headerlink" title="Problem 315"></a><a href="https://projecteuler.net/problem=315">Problem 315</a></h1><hr>
<p><strong>Digital root clocks</strong></p>
<center><img src="/resources/images/0315_clocks.gif"></center>

<p>Sam and Max are asked to transform two digital clocks into two “digital root” clocks.<br>A digital root clock is a digital clock that calculates digital roots step by step.</p>
<p>When a clock is fed a number, it will show it and then it will start the calculation, showing all the intermediate values until it gets to the result.<br>For example, if the clock is fed the number 137, it will show: “<strong>137</strong>“ → “<strong>11</strong>“ → “<strong>2</strong>“ and then it will go black, waiting for the next number.</p>
<p>Every digital number consists of some light segments: three horizontal (top, middle, bottom) and four vertical (top-left, top-right, bottom-left, bottom-right).<br>Number “<strong>1</strong>“ is made of vertical top-right and bottom-right, number “<strong>4</strong>“ is made by middle horizontal and vertical top-left, top-right and bottom-right. Number “<strong>8</strong>“ lights them all.</p>
<p>The clocks consume energy only when segments are turned on/off.<br>To turn on a “<strong>2</strong>“ will cost 5 transitions, while a “<strong>7</strong>“ will cost only 4 transitions.</p>
<p>Sam and Max built two different clocks.</p>
<p>Sam’s clock is fed e.g. number 137: the clock shows “<strong>137</strong>“, then the panel is turned off, then the next number (“<strong>11</strong>“) is turned on, then the panel is turned off again and finally the last number (“<strong>2</strong>“) is turned on and, after some time, off.<br>For the example, with number 137, Sam’s clock requires:</p>
<table>
<thead>
<tr>
<th align="left">&nbsp;</th>
<th>&nbsp;</th>
<th align="left">&nbsp;</th>
</tr>
</thead>
<tbody><tr>
<td align="left">“<strong>137</strong>“</td>
<td>:</td>
<td align="left">(2 + 5 + 4) × 2 = 22 transitions (“<strong>137</strong>“ on/off).</td>
</tr>
<tr>
<td align="left">“<strong>11</strong>“</td>
<td>:</td>
<td align="left">(2 + 2) × 2 = 8 transitions (“<strong>11</strong>“ on/off).</td>
</tr>
<tr>
<td align="left">“<strong>2</strong>“</td>
<td>:</td>
<td align="left">(5) × 2 = 10 transitions (“<strong>2</strong>“ on/off).</td>
</tr>
</tbody></table>
<p>For a grand total of 40 transitions.</p>
<p>Max’s clock works differently. Instead of turning off the whole panel, it is smart enough to turn off only those segments that won’t be needed for the next number.<br>For number 137, Max’s clock requires:</p>
<table>
<thead>
<tr>
<th align="left">&nbsp;</th>
<th>&nbsp;</th>
<th align="left">&nbsp;</th>
</tr>
</thead>
<tbody><tr>
<td align="left">“<strong>137</strong>“</td>
<td>:</td>
<td align="left">2 + 5 + 4 = 11 transitions (“<strong>137</strong>“ on)</td>
</tr>
<tr>
<td align="left"></td>
<td></td>
<td align="left">7 transitions (to turn off the segments that are not needed for number “<strong>11</strong>“).</td>
</tr>
<tr>
<td align="left">“<strong>11</strong>“</td>
<td>:</td>
<td align="left">0 transitions (number “<strong>11</strong>“ is already turned on correctly)</td>
</tr>
<tr>
<td align="left"></td>
<td></td>
<td align="left">3 transitions (to turn off the first “<strong>1</strong>“ and the bottom part of the second “<strong>1</strong>“;</td>
</tr>
<tr>
<td align="left"></td>
<td></td>
<td align="left">the top part is common with number “<strong>2</strong>“).</td>
</tr>
<tr>
<td align="left">“<strong>2</strong>“</td>
<td>:</td>
<td align="left">4 transitions (to turn on the remaining segments in order to get a “<strong>2</strong>“)</td>
</tr>
<tr>
<td align="left"></td>
<td></td>
<td align="left">5 transitions (to turn off number “<strong>2</strong>“).</td>
</tr>
</tbody></table>
<p>For a grand total of 30 transitions.</p>
<p>Of course, Max’s clock consumes less power than Sam’s one.<br>The two clocks are fed all the prime numbers between A = 10<sup>7</sup> and B = 2×10<sup>7</sup>.<br>Find the difference between the total number of transitions needed by Sam’s clock and that needed by Max’s one.</p>
<hr>
<p><strong>数根时钟</strong></p>
<center><img src="/resources/images/0315_clocks.gif"></center>

<p>（左：萨姆的钟；右：马克斯的钟；下：在本题中钟面上的数字样式）</p>
<p>萨姆和马克斯被要求将两个数字时钟改装成两个“数根”时钟。<br>所谓数根时钟就是迭代计算数字根的数字时钟。</p>
<p>当时钟接收到一个数时，它会先显示这个数，然后开始计算，期间展示所有的中间值，直到它得到结果。<br>例如，如果时钟接收到的数是137，它会显示：”<strong>137</strong>“ → “<strong>11</strong>“ → “<strong>2</strong>“，然后它会黑屏，等待接收下一个数。</p>
<p>每个数字在钟面上用七段数码管显示：三根水平数码管（上、中、下）和四根竖直数码管（左上、右上、左下、右下）。<br>显示数字”<strong>1</strong>“需要点亮右上和右下的竖直数码管，显示数字”<strong>4</strong>“需要点亮中间的水平数码管和左上、右上、右下的竖直数码管，显示数字”<strong>8</strong>“则需要点亮所有的数码管。</p>
<p>只有在数码管打开或关闭时时钟才消耗能量。<br>因此，显示”<strong>2</strong>“需要5次转换，而”<strong>7</strong>“则只需要4次转换。</p>
<p>萨姆和马克斯制作了两个不同的时钟。</p>
<p>如果萨姆的时钟接收到一个数，比如说137：时钟先显示”<strong>137</strong>“，然后全部关掉，然后显示下一个数(“<strong>11</strong>“)，再全部关掉，然后显示最后一个数(“<strong>2</strong>“)，过一段时间后再全部关掉。<br>在这个例子中，接收到137后，萨姆的时钟需要消耗：</p>
<table>
<thead>
<tr>
<th align="left">&nbsp;</th>
<th>&nbsp;</th>
<th align="left">&nbsp;</th>
</tr>
</thead>
<tbody><tr>
<td align="left">“<strong>137</strong>“</td>
<td>:</td>
<td align="left">(2 + 5 + 4) × 2 = 22次转换（显示和关闭”<strong>137</strong>“）。</td>
</tr>
<tr>
<td align="left">“<strong>11</strong>“</td>
<td>:</td>
<td align="left">(2 + 2) × 2 = 8次转换（显示和关闭”<strong>11</strong>“）。</td>
</tr>
<tr>
<td align="left">“<strong>2</strong>“</td>
<td>:</td>
<td align="left">(5) × 2 = 10次转换（显示和关闭”<strong>2</strong>“）。</td>
</tr>
</tbody></table>
<p>总计需要40次转换。</p>
<p>马克斯的时钟运作的方式略有不同。它会很聪明地只关掉那些显示下一个数时不再用到的数码管，而不是全部关掉。<br>接收到137后，马克斯的时钟需要消耗：</p>
<table>
<thead>
<tr>
<th align="left">&nbsp;</th>
<th>&nbsp;</th>
<th align="left">&nbsp;</th>
</tr>
</thead>
<tbody><tr>
<td align="left">“<strong>137</strong>“</td>
<td>:</td>
<td align="left">2 + 5 + 4 = 11次转换（显示”<strong>137</strong>“ on）</td>
</tr>
<tr>
<td align="left"></td>
<td></td>
<td align="left">7次转换（关闭显示”<strong>11</strong>“不需要的数码管）。</td>
</tr>
<tr>
<td align="left">“<strong>11</strong>“</td>
<td>:</td>
<td align="left">0次转换（”<strong>11</strong>“已经正确显示）</td>
</tr>
<tr>
<td align="left"></td>
<td></td>
<td align="left">3次转换（关闭第一个”<strong>1</strong>“和第二个”<strong>1</strong>“的下半部分；</td>
</tr>
<tr>
<td align="left"></td>
<td></td>
<td align="left">上半部分保留用于显示”<strong>2</strong>“)。</td>
</tr>
<tr>
<td align="left">“<strong>2</strong>“</td>
<td>:</td>
<td align="left">4次转换（显示”<strong>2</strong>“的剩余部分）</td>
</tr>
<tr>
<td align="left"></td>
<td></td>
<td align="left">5次转换（关闭”<strong>2</strong>“）。</td>
</tr>
</tbody></table>
<p>总计需要30次转换。</p>
<p>显然，马克斯的时钟比萨姆的时钟更节能。<br>这两个时钟随后依次接收到在A = 10<sup>7</sup>和B = 2×10<sup>7</sup>之间的所有质数。<br>求萨姆的时钟和马克斯的时钟所需要的转换次数的差。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 317</title>
    <url>/317/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-317"><a href="#Problem-317" class="headerlink" title="Problem 317"></a><a href="https://projecteuler.net/problem=317">Problem 317</a></h1><hr>
<p><strong>Firecracker</strong></p>
<p>A firecracker explodes at a height of 100 m above level ground. It breaks into a large number of very small fragments, which move in every direction; all of them have the same initial velocity of 20 m/s.</p>
<p>We assume that the fragments move without air resistance, in a uniform gravitational field with g=9.81 m/s<sup>2</sup>.</p>
<p>Find the volume (in m<sup>3</sup>) of the region through which the fragments move before reaching the ground. Give your answer rounded to four decimal places.</p>
<hr>
<p><strong>爆竹</strong></p>
<p>一枚爆竹在距离水平地面100米的高度爆炸。它分裂成了许多非常小的碎片，向各个方向迸射；这些碎片的初始速率均为20 m/s。</p>
<p>我们假定碎片移动时不受空气阻力，但处在均匀的重力场中，重力加速度g=9.81 m/s<sup>2</sup>。</p>
<p>求碎片在落地前所经过空间的总体积（单位为m<sup>3</sup>）。将你的答案四舍五入到四位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 318</title>
    <url>/318/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-318"><a href="#Problem-318" class="headerlink" title="Problem 318"></a><a href="https://projecteuler.net/problem=318">Problem 318</a></h1><hr>
<p><strong>2011 nines</strong></p>
<p>Consider the real number √2+√3.<br>When we calculate the even powers of √2+√3 we get:<br>(√2+√3)<sup>2</sup> = 9.898979485566356…<br>(√2+√3)<sup>4</sup> = 97.98979485566356…<br>(√2+√3)<sup>6</sup> = 969.998969071069263…<br>(√2+√3)<sup>8</sup> = 9601.99989585502907…<br>(√2+√3)<sup>10</sup> = 95049.999989479221…<br>(√2+√3)<sup>12</sup> = 940897.9999989371855…<br>(√2+√3)<sup>14</sup> = 9313929.99999989263…<br>(√2+√3)<sup>16</sup> = 92198401.99999998915…</p>
<p>It looks like that the number of consecutive nines at the beginning of the fractional part of these powers is non-decreasing.<br>In fact it can be proven that the fractional part of (√2+√3)<sup>2n</sup> approaches 1 for large n.</p>
<p>Consider all real numbers of the form √p+√q with p and q positive integers and p&lt;q, such that the fractional part of (√p+√q)<sup>2n</sup> approaches 1 for large n.</p>
<p>Let C(p,q,n) be the number of consecutive nines at the beginning of the fractional part of  (√p+√q)<sup>2n</sup>.</p>
<p>Let N(p,q) be the minimal value of n such that C(p,q,n) ≥ 2011.</p>
<p>Find ∑N(p,q) for p+q ≤ 2011.</p>
<hr>
<p><strong>2011个9</strong></p>
<p>考虑实数√2+√3。<br>计算√2+√3的偶数次幂，我们得到：<br>(√2+√3)<sup>2</sup> = 9.898979485566356…<br>(√2+√3)<sup>4</sup> = 97.98979485566356…<br>(√2+√3)<sup>6</sup> = 969.998969071069263…<br>(√2+√3)<sup>8</sup> = 9601.99989585502907…<br>(√2+√3)<sup>10</sup> = 95049.999989479221…<br>(√2+√3)<sup>12</sup> = 940897.9999989371855…<br>(√2+√3)<sup>14</sup> = 9313929.99999989263…<br>(√2+√3)<sup>16</sup> = 92198401.99999998915…</p>
<p>看起来似乎这些幂的小数部分开头连续的9的数目始终不降。<br>事实上，可以证明(√2+√3)<sup>2n</sup>的小数部分在n充分大时趋向于1。</p>
<p>考虑所有可以表示为√p+√q的实数，要求p和q均为正整数，p&lt;q，并且(√p+√q)<sup>2n</sup>的小数部分在n充分大时趋向于1。</p>
<p>记C(p,q,n)为(√p+√q)<sup>2n</sup>的小数部分开头连续的9的数目。</p>
<p>记N(p,q)为使得C(p,q,n) ≥ 2011的最小n值。</p>
<p>对于所有p+q ≤ 2011，求∑N(p,q)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 319</title>
    <url>/319/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-319"><a href="#Problem-319" class="headerlink" title="Problem 319"></a><a href="https://projecteuler.net/problem=319">Problem 319</a></h1><hr>
<p><strong>Bounded Sequences</strong></p>
<p>Let x<sub>1</sub>, x<sub>2</sub>,…, x<sub>n</sub> be a sequence of length n such that:</p>
<ul>
<li>x<sub>1</sub> = 2</li>
<li>for all 1 &lt; i ≤ n : x<sub>i-<i>1</i></sub> &lt; x<sub>i</sub></li>
<li>for all i and j with 1 ≤ i, j ≤ n : (x<sub>i</sub>)<sup>j</sup> &lt; (x<sub>j</sub> + 1)<sup>i</sup></li>
</ul>
<p>There are only five such sequences of length 2, namely: {2,4}, {2,5}, {2,6}, {2,7} and {2,8}.<br>There are 293 such sequences of length 5; three examples are given below:<br>{2,5,11,25,55}, {2,6,14,36,88}, {2,8,22,64,181}.</p>
<p>Let t(n) denote the number of such sequences of length n.<br>You are given that t(10) = 86195 and t(20) = 5227991891.</p>
<p>Find t(10<sup>10</sup>) and give your answer modulo 10<sup>9</sup>.</p>
<hr>
<p><strong>有界序列</strong></p>
<p>记x<sub>1</sub>, x<sub>2</sub>,…, x<sub>n</sub>是长度为n的序列，且满足：</p>
<ul>
<li>x<sub>1</sub> = 2</li>
<li>对于所有1 &lt; i ≤ n：x<sub>i-<i>1</i></sub> &lt; x<sub>i</sub></li>
<li>对于所有1 ≤ i, j ≤ n：(x<sub>i</sub>)<sup>j</sup> &lt; (x<sub>j</sub> + 1)<sup>i</sup></li>
</ul>
<p>在长度为2的序列中，这样的数列只有5个，分别是：{2,4}、{2,5}、{2,6}、{2,7}和{2,8}。<br>在长度为5的序列中，这样的数列共有293个；如下是其中三个例子：<br>{2,5,11,25,55}、{2,6,14,36,88}、{2,8,22,64,181}。</p>
<p>在长度为n的序列中，记这样的数列有t(n)个。<br>已知t(10) = 86195以及t(20) = 5227991891。</p>
<p>求t(10<sup>10</sup>)并将你的答案模10<sup>9</sup>取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 32</title>
    <url>/32/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-32"><a href="#Problem-32" class="headerlink" title="Problem 32"></a><a href="https://projecteuler.net/problem=32">Problem 32</a></h1><hr>
<h2 id="Pandigital-Products"><a href="#Pandigital-Products" class="headerlink" title="Pandigital Products"></a><strong>Pandigital Products</strong></h2><p>We shall say that an $n$-digit number is pandigital if it makes use of all the digits $1$ to $n$ exactly once; for example, the $5$-digit number, $15234$, is $1$ through $5$ pandigital.</p>
<p>The product $7254$ is unusual, as the identity, $39\times186 = 7254$, containing multiplicand, multiplier, and product is $1$ through $9$ pandigital.</p>
<p>Find the sum of all products whose multiplicand/multiplier/product identity can be written as a $1$ through $9$ pandigital.</p>
<p>HINT: Some products can be obtained in more than one way so be sure to only include it once in your sum.</p>
<hr>
<h2 id="全数字的乘积"><a href="#全数字的乘积" class="headerlink" title="全数字的乘积"></a><strong>全数字的乘积</strong></h2><p>如果一个$n$位数包含了$1$至$n$的所有数字恰好一次，我们称它为全数字的；例如，五位数$15234$就是$1$至$5$全数字的。</p>
<p>$7254$是一个特殊的乘积，因为在等式$39 \times 186 = 7254$中，被乘数、乘数和乘积恰好是$1$至$9$全数字的。</p>
<p>找出所有被乘数、乘数和乘积恰好是$1$至$9$全数字的乘法等式，并求出这些等式中乘积的和。</p>
<p>注意：有些乘积可能从多个乘法等式中得到，但在求和的时候只计算一次。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 320</title>
    <url>/320/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-320"><a href="#Problem-320" class="headerlink" title="Problem 320"></a><a href="https://projecteuler.net/problem=320">Problem 320</a></h1><hr>
<p><strong>Factorials divisible by a huge integer</strong></p>
<p>Let N(i) be the smallest integer n such that n! is divisible by (i!)<sup>1234567890</sup></p>
<p>Let S(u)=∑N(i) for 10 ≤ i ≤ u.</p>
<p>S(1000)=614538266565663.</p>
<p>Find S(1 000 000) mod 10<sup>18</sup>.</p>
<hr>
<p><strong>能被巨大整数整除的阶乘</strong></p>
<p>记N(i)是使得n!被(i!)<sup>1234567890</sup>整除的最小n值。</p>
<p>记S(u)=∑N(i)，其中10 ≤ i ≤ u。</p>
<p>已知S(1000)=614538266565663。</p>
<p>求S(1 000 000) mod 10<sup>18</sup>。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 321</title>
    <url>/321/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-321"><a href="#Problem-321" class="headerlink" title="Problem 321"></a><a href="https://projecteuler.net/problem=321">Problem 321</a></h1><hr>
<p><strong>Swapping Counters</strong></p>
<p>A horizontal row comprising of 2n + 1 squares has n red counters placed at one end and n blue counters at the other end, being separated by a single empty square in the centre. For example, when n = 3.</p>
<center><img src="/resources/images/0321_swapping_counters_1.gif"></center>

<p>A counter can move from one square to the next (slide) or can jump over another counter (hop) as long as the square next to that counter is unoccupied.</p>
<center><img src="/resources/images/0321_swapping_counters_2.gif"></center>

<p>Let M(n) represent the minimum number of moves/actions to completely reverse the positions of the coloured counters; that is, move all the red counters to the right and all the blue counters to the left.</p>
<p>It can be verified M(3) = 15, which also happens to be a triangle number.</p>
<p>If we create a sequence based on the values of n for which M(n) is a triangle number then the first five terms would be: 1, 3, 10, 22, and 63, and their sum would be 99.</p>
<p>Find the sum of the first forty terms of this sequence.</p>
<hr>
<p><strong>交换筹码</strong></p>
<p>在一行2n+1个水平方格上，一端摆有n个红色筹码，另一端摆有n个蓝色筹码，中间用一个空格分开。例如，当n=3时：</p>
<center><img src="/resources/images/0321_swapping_counters_1.gif"></center>

<p>筹码可以从一格移到下一格（滑动）或者在目的地为空格时跳过另一个筹码（跳跃）。</p>
<center><img src="/resources/images/0321_swapping_counters_2.gif"></center>

<p>记M(n)是完全逆转彩色筹码位置所需要的最小步数，所谓完全逆转，就是说将所有的红色筹码移到右边，蓝色筹码移到左边。</p>
<p>可以验证M(3) = 15，恰好是一个三角形数。</p>
<p>如果我们将使得M(n)为三角形数的n取出来单独作为做一个数列，这个数列的前五项将会是：1、3、10、22和63。它们的和为99。</p>
<p>求这个数列的前40项的和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 322</title>
    <url>/322/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-322"><a href="#Problem-322" class="headerlink" title="Problem 322"></a><a href="https://projecteuler.net/problem=322">Problem 322</a></h1><hr>
<p><strong>Binomial coefficients divisible by 10</strong></p>
<p>Let T(m, n) be the number of the binomial coefficients <sup>i</sup>C<sub>n</sub> that are divisible by 10 for n ≤ i &lt; m(i, m and n are positive integers).<br>You are given that T(10<sup>9</sup>, 10<sup>7</sup>-10) = 989697000.</p>
<p>Find T(10<sup>18</sup>, 10<sup>12</sup>-10).</p>
<hr>
<p><strong>能被10整除的二项式系数</strong></p>
<p>记T(m, n)是所有能被10整除的二项式系数<sup>i</sup>C<sub>n</sub>的数目，其中n ≤ i &lt; m（i、m、n均为正整数）。<br>已知T(10<sup>9</sup>, 10<sup>7</sup>-10) = 989697000。</p>
<p>求T(10<sup>18</sup>, 10<sup>12</sup>-10)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 323</title>
    <url>/323/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-323"><a href="#Problem-323" class="headerlink" title="Problem 323"></a><a href="https://projecteuler.net/problem=323">Problem 323</a></h1><hr>
<p><strong>Bitwise-OR operations on random integers</strong></p>
<p>Let y<sub>0</sub>, y<sub>1</sub>, y<sub>2</sub>,… be a sequence of random unsigned 32 bit integers<br>(i.e. 0 ≤ y<sub>i</sub> &lt; 2<sup>32</sup>, every value equally likely).</p>
<p>For the sequence x<sub>i</sub> the following recursion is given:</p>
<ul>
<li>x<sub>0</sub> = 0 and</li>
<li>x<sub>i</sub> = x<sub>i-<i>1</i></sub> <strong>|</strong> y<sub>i-<i>1</i></sub>, for i &gt; 0. ( <strong>|</strong> is the bitwise-OR operator)</li>
</ul>
<p>It can be seen that eventually there will be an index N such that x<sub>i</sub> = 2<sup>32</sup> -1 (a bit-pattern of all ones) for all i ≥ N.</p>
<p>Find the expected value of N.<br>Give your answer rounded to 10 digits after the decimal point.</p>
<hr>
<p><strong>随机整数按位或运算</strong></p>
<p>记y<sub>0</sub>、y<sub>1</sub>、y<sub>2</sub>、……是一系列32比特无符号随机整数。<br>（也就是说，0 ≤ y<sub>i</sub> &lt; 2<sup>32</sup>，其中每个数等概率出现)。</p>
<p>序列x<sub>i</sub>按如下方式递归定义：</p>
<ul>
<li>x<sub>0</sub> = 0，以及</li>
<li>对于所有 i &gt; 0，x<sub>i</sub> = x<sub>i-<i>1</i></sub> <strong>|</strong> y<sub>i-<i>1</i></sub>。（<strong>|</strong>指按位或运算符）</li>
</ul>
<p>可以看出，存在下标N，使得对于所有i ≥ N，x<sub>i</sub> = 2<sup>32</sup> -1（所有比特位均取1）。</p>
<p>求N的期望值。<br>将你的答案保留小数点后十位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 325</title>
    <url>/325/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-325"><a href="#Problem-325" class="headerlink" title="Problem 325"></a><a href="https://projecteuler.net/problem=325">Problem 325</a></h1><hr>
<h2 id="Stone-Game-II"><a href="#Stone-Game-II" class="headerlink" title="Stone Game II"></a><strong>Stone Game II</strong></h2><p>A game is played with two piles of stones and two players.<br>On each player’s turn, the player may remove a number of stones from the larger pile.<br>The number of removed must be a positive multiple of the number of stones in the smaller pile.</p>
<p>E.g., let the ordered pair $(6,14)$ describe a configuration with $6$ stones in the smaller pile and $14$ stones in the larger pile, then the first player can remove $6$ or $12$ stones from the larger pile.</p>
<p>The player taking all the stones from a pile wins the game.</p>
<p>A <i>winning configuration</i> is one where the first player can force a win. For example, $(1,5)$, $(2,6)$ and $(3,12)$ are winning configurations because the first player can immediately remove all stones in the second pile.</p>
<p>A <i>losing configuration</i> is one where the second player can force a win, no matter what the first player does. For example, $(2,3)$ and $(3,4)$ are losing configurations: any legal move leaves a winning configuration for the second player.</p>
<p>Define $S(N)$ as the sum of $(x_i+y_i)$ for all losing configurations $(x_i,y_i)$, $0 &lt; x_i &lt; y_i \le N$. <br /><br>We can verify that $S(10) = 211$ and $S(10^4) = 230312207313$.</p>
<p>Find $S(10^{16}) \bmod 7^{10}$.</p>
<hr>
<h2 id="取石子游戏（二）"><a href="#取石子游戏（二）" class="headerlink" title="取石子游戏（二）"></a><strong>取石子游戏（二）</strong></h2><p>两名玩家正在用两堆石子玩游戏。<br>每一轮，玩家可以从较大的堆中取走一定数量的石子。<br>移走石子的数量必须是较小的堆中石子数量的正整数倍。</p>
<p>例如，用有序对$(6,14)$表示游戏中较小的堆有$6$枚石子，较大的堆有$14$枚石子，先手玩家可以从较大的堆中取走$6$枚或$12$枚石子。</p>
<p>从某一堆中取走所有石头的玩家赢得游戏。</p>
<p>所谓<i class=zh>必胜态</i>指先手玩家必胜的状态。例如$(1,5)$、$(2,6)$和$(3,12)$都是必胜态，因为先手玩家可以立即取走第二个堆中的所有石子。</p>
<p>所谓<i class=zh>必败态</i>指无论先手玩家如何操作，后手玩家都必胜的状态。例如，$(2,3)$和$(3,4)$都是必败态：先手玩家的任意合法操作都会给后手玩家留下必胜态。</p>
<p>对于所有$0 &lt; x_i &lt; y_i \le N$的必败态$(x_i,y_i)$，记$S(N)$为$(x_i+y_i)$的和。<br /><br>可以验证$S(10) = 211$，$S(10^4) = 230312207313$。</p>
<p>求$S(10^{16}) \bmod 7^{10}$。</p>
<p><i class=zh>译注：“取石子游戏（一）”参见第<a href="/260">260</a>题。</i></p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 324</title>
    <url>/324/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-324"><a href="#Problem-324" class="headerlink" title="Problem 324"></a><a href="https://projecteuler.net/problem=324">Problem 324</a></h1><hr>
<p><strong>Building a tower</strong></p>
<p>Let f(n) represent the number of ways one can fill a 3×3×n tower with blocks of 2×1×1.<br>You’re allowed to rotate the blocks in any way you like; however, rotations, reflections etc of the tower itself are counted as distinct.</p>
<p>For example (with q = 100000007) :<br>f(2) = 229,<br>f(4) = 117805,<br>f(10) mod q = 96149360,<br>f(10<sup>3</sup>) mod q = 24806056,<br>f(10<sup>6</sup>) mod q = 30808124.</p>
<p>Find f(10<sup>10000</sup>) mod 100000007.</p>
<hr>
<p><strong>建塔</strong></p>
<p>记f(n)是用2×1×1的砖块建造一座3×3×n的塔的方式数。<br>你可以随意地旋转方块；然而将塔进行旋转或翻转则视为不同的建造方式。</p>
<p>举例而言（其中q = 100000007）：<br>f(2) = 229，<br>f(4) = 117805，<br>f(10) mod q = 96149360，<br>f(10<sup>3</sup>) mod q = 24806056，<br>f(10<sup>6</sup>) mod q = 30808124。</p>
<p>求f(10<sup>10000</sup>) mod 100000007。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 326</title>
    <url>/326/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-326"><a href="#Problem-326" class="headerlink" title="Problem 326"></a><a href="https://projecteuler.net/problem=326">Problem 326</a></h1><hr>
<p><strong>Modulo Summations</strong></p>
<p>Let a<sub>n</sub> be a sequence recursively defined by: $a_1=1, a_n=(\sum_{k=1}^{n-1}k·a_k) \text{ mod } n$.</p>
<p>So the first 10 elements of a<sub>n</sub> are: 1,1,0,3,0,3,5,4,1,9.</p>
<p>Let f(N,M) represent the number of pairs (p,q) such that: </p>
<p>$$ 1 \le p \le q \le N \text{ and } (\sum_{t=p}^{q}a_i) \text{ mod } M=0$$</p>
<p>It can be seen that f(10,10)=4 with the pairs (3,3), (5,5), (7,9) and (9,10).</p>
<p>You are also given that f(10<sup>4</sup>,10<sup>3</sup>)=97158.</p>
<p>Find f(10<sup>12</sup>,10<sup>6</sup>).</p>
<hr>
<p><strong>同余加和</strong></p>
<p>数列a<sub>n</sub>按如下方式递归定义：$a_1=1, a_n=(\sum_{k=1}^{n-1}k·a_k) \text{ mod } n$。</p>
<p>因此a<sub>n</sub>的前10项分别是：1,1,0,3,0,3,5,4,1,9。</p>
<p>记f(N,M)为满足如下条件的数对(p,q)的数目：</p>
<p>$$ 1 \le p \le q \le N \text{ 且 } (\sum_{t=p}^{q}a_i) \text{ mod } M=0$$</p>
<p>可以看出f(10,10)=4，这4个数对分别是(3,3)、(5,5)、(7,9)和(9,10)。</p>
<p>此外还已知f(10<sup>4</sup>,10<sup>3</sup>)=97158。</p>
<p>求f(10<sup>12</sup>,10<sup>6</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 327</title>
    <url>/327/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-327"><a href="#Problem-327" class="headerlink" title="Problem 327"></a><a href="https://projecteuler.net/problem=327">Problem 327</a></h1><hr>
<p><strong>Rooms of Doom</strong></p>
<p>A series of three rooms are connected to each other by automatic doors.</p>
<center><img src="/resources/images/0327_rooms_of_doom.gif"></center>

<p>Each door is operated by a security card. Once you enter a room the door automatically closes and that security card cannot be used again. A machine at the start will dispense an unlimited number of cards, but each room (including the starting room) contains scanners and if they detect that you are holding more than three security cards or if they detect an unattended security card on the floor, then all the doors will become permanently locked. However, each room contains a box where you may safely store any number of security cards for use at a later stage.</p>
<p>If you simply tried to travel through the rooms one at a time then as you entered room 3 you would have used all three cards and would be trapped in that room forever!</p>
<p>However, if you make use of the storage boxes, then escape is possible. For example, you could enter room 1 using your first card, place one card in the storage box, and use your third card to exit the room back to the start. Then after collecting three more cards from the dispensing machine you could use one to enter room 1 and collect the card you placed in the box a moment ago. You now have three cards again and will be able to travel through the remaining three doors. This method allows you to travel through all three rooms using six security cards in total.</p>
<p>It is possible to travel through six rooms using a total of 123 security cards while carrying a maximum of 3 cards.</p>
<p>Let C be the maximum number of cards which can be carried at any time.</p>
<p>Let R be the number of rooms to travel through.</p>
<p>Let M(C,R) be the minimum number of cards required from the dispensing machine to travel through R rooms carrying up to a maximum of C cards at any time.</p>
<p>For example, M(3,6)=123 and M(4,6)=23.<br>And, ΣM(C,6)=146 for 3 ≤ C ≤ 4.</p>
<p>You are given that ΣM(C,10)=10382 for 3 ≤ C ≤ 10.</p>
<p>Find ΣM(C,30) for 3 ≤ C ≤ 40.</p>
<hr>
<p><strong>命运房间</strong></p>
<p>有三个房间，相互之间由自动门相连接。</p>
<center><img src="/resources/images/0327_rooms_of_doom.gif"></center>

<p>（左：初始房间；右：结束房间）</p>
<p>每扇门可以用安保卡操作。一旦你打开门进入房间，门会自动关闭，所使用的安保卡将失效。在初始位置有一台分发机能够提供无限量的安保卡，但每一间房间（包括初始房间）中都安装有扫描器，如果它们检测到你持有多于三张有效安保卡，或者在地上发现了无主的有效安保卡，所有的门将会永久上锁。不过，每个房间中提供了一个箱子，你可以在其中储存任意数量的安保卡，以供后用。</p>
<p>如果你试图直接穿过所有的门，当你进入第3个房间时，你就会用完所有3张安保卡，然后永远地陷在这个房间里！</p>
<p>不过，如果你利用储存箱，想要逃到结束房间还是很容易的。例如，你可以先用第一张安保卡进入第1个房间，放一张安保卡在储存箱里，然后用第三张安保卡回到初始房间。然后，从分发机中再取出三张安保卡，用一张进入第1个房间，再取走之前放入储存箱的那张安保卡，这样你就又有了三张安保卡，可以穿过剩下的三道门。这个方法使得你可以使用总计六张安保卡通过全部三个房间。</p>
<p>当携带上限为3张安保卡时，通过六个房间最少需要总计123张安保卡。</p>
<p>记C是安保卡的携带上限。</p>
<p>记R是要通过的房间数目。</p>
<p>记M(C,R)为当携带上限为C张安保卡时，通过R个房间最少需要从分发机中取出的安保卡数目。</p>
<p>例如， M(3,6)=123以及M(4,6)=23。<br>进而对于3 ≤ C ≤ 4，ΣM(C,6)=146。</p>
<p>已知对于3 ≤ C ≤ 10，ΣM(C,10)=10382。</p>
<p>对于3 ≤ C ≤ 40，求ΣM(C,30)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 328</title>
    <url>/328/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-328"><a href="#Problem-328" class="headerlink" title="Problem 328"></a><a href="https://projecteuler.net/problem=328">Problem 328</a></h1><hr>
<p><strong>Lowest-cost Search</strong></p>
<p>We are trying to find a hidden number selected from the set of integers {1, 2, …, n} by asking questions. Each number (question) we ask, has a <u>cost equal to the number asked</u> and we get one of three possible answers:</p>
<ul>
<li>“Your guess is lower than the hidden number”, or</li>
<li>“Yes, that’s it!”, or</li>
<li>“Your guess is higher than the hidden number”.</li>
</ul>
<p>Given the value of n, an <i>optimal strategy</i> minimizes the total cost (i.e. the sum of all the questions asked) <u>for the worst possible case</u>. E.g.</p>
<p>If n=3, the best we can do is obviously to ask the number “<b>2</b>“. The answer will immediately lead us to find the hidden number (at a total cost = 2).</p>
<p>If n=8, we might decide to use a “binary search” type of strategy: Our first question would be “<b>4</b>“ and if the hidden number is higher than 4 we will need one or two additional questions.<br>Let our second question be “<b>6</b>“. If the hidden number is still higher than 6, we will need a third question in order to discriminate between 7 and 8.<br>Thus, our third question will be “<b>7</b>“ and the total cost for this worst-case scenario will be 4+6+7=<span style="color:red;"><b>17</b></span>.</p>
<p>We can improve considerably the worst-case cost for n=8, by asking “<b>5</b>“ as our first question.<br>If we are told that the hidden number is higher than 5, our second question will be “<b>7</b>“, then we’ll know for certain what the hidden number is (for a total cost of 5+7=<span style="color:blue;"><b>12</b></span>).<br>If we are told that the hidden number is lower than 5, our second question will be “<b>3</b>“ and if the hidden number is lower than 3 our third question will be “<b>1</b>“, giving a total cost of 5+3+1=<span style="color:blue;"><b>9</b></span>.<br>Since <span style="color:blue;"><b>12</b></span>&gt;<span style="color:blue;"><b>9</b></span>, the worst-case cost for this strategy is <span style="color:red;"><b>12</b></span>. That’s better than what we achieved previously with the “binary search” strategy; it is also better than or equal to any other strategy.<br>So, in fact, we have just described an optimal strategy for n=8.</p>
<p>Let C(n) be the worst-case cost achieved by an optimal strategy for n, as described above.<br>Thus C(1) = 0, C(2) = 1, C(3) = 2 and C(8) = 12.<br>Similarly, C(100) = 400 and $\sum_{n=1}^{100}$C(n) = 17575.</p>
<p>Find $\sum_{n=1}^{200000}$C(n).</p>
<hr>
<p><strong>最低成本搜索</strong></p>
<p>我们正试图通过提问的方式从数集{1, 2, …, n}中找出一个特定的隐藏数。每次我们提问一个数，需要付出<u>和所问的数同等大小的成本</u>，我们得到的回答可能是以下三种之一：</p>
<ul>
<li>“你猜的数小于隐藏数”，或者</li>
<li>“你猜对了！”，或者</li>
<li>“你猜的数大于隐藏数”。</li>
</ul>
<p>给定n的值，<i>最优策略</i>指的是在<u>在最差的情况下</u>最小化总成本（即所有提问的数字之和）的策略，下面来举一些例子进行说明。</p>
<p>如果n=3，我们最好的选择显然是提问”<b>2</b>“，回答将直接告诉我们隐藏数是多少（总成本=2）。</p>
<p>如果n=8，我们先考虑这样一个“二分搜索”的策略：第一次我们提问“<b>4</b>”；如果隐藏数大于4，我们还需要再问一两次问题。<br>第二次不妨问“<b>6</b>”。如果隐藏数仍然比6大，我们需要问第三次问题以区分7和8。因此，第三次我们问“<b>7</b>”，因此这种最差的场景下的总成本为4+6+7=<span style="color:red;"><b>17</b></span>。</p>
<p>然而，如果我们第一次提问“<b>5</b>”，能够可观地降低n=8的最差情况下的总成本。<br>如果我们被告知隐藏数大于5，我们第二次问“<b>7</b>”就可以立即确认隐藏数（总成本为5+7=<span style="color:blue;"><b>12</b></span>）。<br>如果我们被告知隐藏数小于5，我们第二次问“<b>3</b>”，如果隐藏数还小于3，第三次我们问“<b>1</b>”，总成本为5+3+1=<span style="color:blue;"><b>9</b></span>。<br>因为<span style="color:blue;"><b>12</b></span>&gt;<span style="color:blue;"><b>9</b></span>，这种策略在最差情况下的成本是<span style="color:red;"><b>12</b></span>。这比之前使用“二分搜索”策略的结果更优；比起其它策略，这个策略也更好或至少一样好。<br>事实上，我们刚才描述的就是n=8时的一个最优策略。</p>
<p>记C(n)为n的最优策略在最差情况下的成本，其中最优策略的含义如上所述。<br>因此C(1) = 0，C(2) = 1，C(3) = 2以及C(8) = 12。<br>此外，已知C(100) = 400以及$\sum_{n=1}^{100}$C(n) = 17575。</p>
<p>求$\sum_{n=1}^{200000}$C(n)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 329</title>
    <url>/329/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-329"><a href="#Problem-329" class="headerlink" title="Problem 329"></a><a href="https://projecteuler.net/problem=329">Problem 329</a></h1><hr>
<p><strong>Prime Frog</strong></p>
<p>Susan has a prime frog.<br>Her frog is jumping around over 500 squares numbered 1 to 500. He can only jump one square to the left or to the right, with equal probability, and he cannot jump outside the range [1;500].<br>(if it lands at either end, it automatically jumps to the only available square on the next move.)</p>
<p>When he is on a square with a prime number on it, he croaks ‘P’ (PRIME) with probability 2/3 or ‘N’ (NOT PRIME) with probability 1/3 just before jumping to the next square.<br>When he is on a square with a number on it that is not a prime he croaks ‘P’ with probability 1/3 or ‘N’ with probability 2/3 just before jumping to the next square.</p>
<p>Given that the frog’s starting position is random with the same probability for every square, and given that she listens to his first 15 croaks, what is the probability that she hears the sequence PPPPNNPPPNPPNPN?</p>
<p>Give your answer as a fraction p/q in reduced form.</p>
<hr>
<p><strong>素数青蛙</strong></p>
<p>苏珊有一只素数青蛙。<br>她的青蛙在500个标有1至500的方格上跳来跳去。它每次等概率地往左或往右跳一格，而且它不能跳出1到500这个范围。<br>（如果它跳到了两端，它将自动在下一步跳到唯一可行的那一格。）</p>
<p>当青蛙位于标有素数的方格时，它有2/3的概率会叫一声“P”（素数PRIME），有1/3的概率叫一声“N”（非素数NOT PRIME），叫完之后再跳下一步。<br>当青蛙位于标有非素数的方格时，它有1/3的概率会叫一声“P”，有2/3的概率叫一声“N”，叫完之后再跳下一步。</p>
<p>如果青蛙的初始位置等概率地位于任意方格，而且苏珊听到了青蛙前15次的叫声，那么苏珊听到的序列为PPPPNNPPPNPPNPN的概率是多少？</p>
<p>将你的答案表示为最简分数p/q。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 33</title>
    <url>/33/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-33"><a href="#Problem-33" class="headerlink" title="Problem 33"></a><a href="https://projecteuler.net/problem=33">Problem 33</a></h1><hr>
<h2 id="Digit-Cancelling-Fractions"><a href="#Digit-Cancelling-Fractions" class="headerlink" title="Digit Cancelling Fractions"></a><strong>Digit Cancelling Fractions</strong></h2><p>The fraction $49/98$ is a curious fraction, as an inexperienced mathematician in attempting to simplify it may incorrectly believe that $49/98=4/8$, which is correct, is obtained by cancelling the $9$s.</p>
<p>We shall consider fractions like, $30/50=3/5$, to be trivial examples.</p>
<p>There are exactly four non-trivial examples of this type of fraction, less than one in value, and containing two digits in the numerator and denominator.</p>
<p>If the product of these four fractions is given in its lowest common terms, find the value of the denominator.</p>
<hr>
<h2 id="消去数字的分数"><a href="#消去数字的分数" class="headerlink" title="消去数字的分数"></a><strong>消去数字的分数</strong></h2><p>$49/98$是一个有趣的分数，因为缺乏经验的数学家可能在约简时错误地认为，等式$49/98=4/8$之所以成立，是因为在分数线上下同时消去了$9$的缘故。</p>
<p>显然，存在诸如$30/50=3/5$这样的平凡解。</p>
<p>除此之外，在所有值小于$1$且分子和分母都是两位数的分数中，恰好有四个非平凡解。</p>
<p>将这四个分数的乘积写成最简分数，并求此时分母的值。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 331</title>
    <url>/331/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-331"><a href="#Problem-331" class="headerlink" title="Problem 331"></a><a href="https://projecteuler.net/problem=331">Problem 331</a></h1><hr>
<p><strong>Cross flips</strong></p>
<p>N×N disks are placed on a square game board. Each disk has a black side and white side.</p>
<p>At each turn, you may choose a disk and flip all the disks in the same row and the same column as this disk: thus 2×N-1 disks are flipped. The game ends when all disks show their white side. The following example shows a game on a 5×5 board.</p>
<center><img src="/resources/images/0331_crossflips3.gif"></center>

<p>It can be proven that 3 is the minimal number of turns to finish this game.</p>
<p>The bottom left disk on the N×N board has coordinates (0,0);<br>the bottom right disk has coordinates (N-1,0) and the top left disk has coordinates (0,N-1). </p>
<p>Let C<sub>N</sub> be the following configuration of a board with N×N disks:<br>A disk at (x,y) satisfying $N-1 \le \sqrt{x^2+y^2} \lt N$, shows its black side; otherwise, it shows its white side. C<sub>5</sub> is shown above.</p>
<p>Let T(N) be the minimal number of turns to finish a game starting from configuration C<sub>N</sub> or 0 if configuration C<sub>N</sub> is unsolvable.<br>We have shown that T(5)=3. You are also given that T(10)=29 and T(1 000)=395253.</p>
<p>Find $\sum_{i=3}^{31}T(2^i-1)$.</p>
<hr>
<p><strong>交叉翻转</strong></p>
<p>N×N个碟子被放置在方形的游戏板上。每个碟子一面是黑色，另一面是白色。</p>
<p>每一轮，你可以选择一个碟子，并将与其同一行或同一列的碟子都翻转过来：这样一共要翻转2×N-1个碟子。当所有碟子都是白色面朝上时，游戏结束。下图所示是一个5×5游戏版上的例子。</p>
<center><img src="/resources/images/0331_crossflips3.gif"></center>

<p>可以证明，最少需要3次翻转才能结束游戏。</p>
<p>记N×N游戏板左下角碟子的坐标为(0,0)；<br>记右下角碟子的坐标为(N-1,0)，左上角碟子的坐标为(0,N-1)。</p>
<p>将N×N个碟子按如下方式摆在游戏板上，这样的设置记为C<sub>N</sub>：<br>位于(x,y)的碟子，若$N-1 \le \sqrt{x^2+y^2} \lt N$，则黑色面朝上；否则白色面朝上。上述样例即为C<sub>5</sub>。</p>
<p>若从C<sub>N</sub>开始的游戏能够结束，记T(N)为最少需要翻转的次数；若不能结束，则记T(N)为0。<br>我们已经得出T(5)=3。此外，还已知T(10)=29以及T(1 000)=395253。</p>
<p>求$\sum_{i=3}^{31}T(2^i-1)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 330</title>
    <url>/330/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-330"><a href="#Problem-330" class="headerlink" title="Problem 330"></a><a href="https://projecteuler.net/problem=330">Problem 330</a></h1><hr>
<p><strong>Euler’s Number</strong></p>
<p>An infinite sequence of real numbers $a(n)$ is defined for all integers $n$ as follows:</p>
<center><img src="https://projecteuler.net/project/images/p330_formula.gif"></center>

<p>For example,<br>$$a(0)=\frac{1}{1!}+\frac{1}{2!}+\frac{1}{3!}+…=e-1$$<br>$$a(1)=\frac{e-1}{1!}+\frac{1}{2!}+\frac{1}{3!}+…=2e-3$$<br>$$a(2)=\frac{2e-3}{1!}+\frac{e-1}{2!}+\frac{1}{3!}+…=\frac{7}{2}e-6$$<br>with $e = 2.7182818\ldots$ being Euler’s constant.</p>
<p>It can be shown that $a(n)$ is of the form $\frac{A(n)e+B(n)}{n!}$ for integers $A(n)$ and $B(n)$.<br>For example $a(10) = \frac{328161643 e − 652694486}{10!}$.</p>
<p>Find $A(10^9) + B(10^9)$ and give your answer mod $77\ 777\ 777$.</p>
<hr>
<p><strong>欧拉数</strong></p>
<p>无穷实数序列$a(n)$按如下方式定义:</p>
<center><img src="https://projecteuler.net/project/images/p330_formula.gif"></center>

<p>例如，<br>$$a(0)=\frac{1}{1!}+\frac{1}{2!}+\frac{1}{3!}+…=e-1$$<br>$$a(1)=\frac{e-1}{1!}+\frac{1}{2!}+\frac{1}{3!}+…=2e-3$$<br>$$a(2)=\frac{2e-3}{1!}+\frac{e-1}{2!}+\frac{1}{3!}+…=\frac{7}{2}e-6$$<br>其中$e = 2.7182818\ldots$是欧拉常数。</p>
<p>可以发现$a(n)$总是可以表达为$\frac{A(n)e+B(n)}{n!}$的形式，其中$A(n)$和$B(n)$均为整数。<br>例如$a(10) = \frac{328161643 e − 652694486}{10!}$。</p>
<p>求$A(10^9) + B(10^9)$，并将你的答案模$77\ 777\ 777$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 332</title>
    <url>/332/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-332"><a href="#Problem-332" class="headerlink" title="Problem 332"></a><a href="https://projecteuler.net/problem=332">Problem 332</a></h1><hr>
<p><strong>Spherical triangles</strong></p>
<p>A <b>spherical triangle</b> is a figure formed on the surface of a sphere by three <b>great circular arcs</b> intersecting pairwise in three vertices.</p>
<center><img src="/resources/images/0332_spherical.jpg"></center>

<p>Let C(r) be the sphere with the centre (0,0,0) and radius r.<br>Let Z(r) be the set of points on the surface of C(r) with integer coordinates.<br>Let T(r) be the set of spherical triangles with vertices in Z(r). Degenerate spherical triangles, formed by three points on the same great arc, are <u>not</u> included in T(r).<br>Let A(r) be the area of the smallest spherical triangle in T(r).</p>
<p>For example A(14) is 3.294040 rounded to six decimal places.</p>
<p>Find $\sum_{r=1}^{50}$ A(r). Give your answer rounded to six decimal places.</p>
<hr>
<p><strong>球面三角形</strong></p>
<p><b>球面三角形</b>是在球面上由三条<b>大圆圆弧</b>两两相交所构成的图形。</p>
<center><img src="/resources/images/0332_spherical.jpg"></center>

<p>记C(r)为中心在(0,0,0)，半径为r的球。<br>记Z(r)为C(r)表面坐标为整数的点构成的集合。<br>记T(r)为顶点均在Z(r)中的球面三角形构成的集合。T(r)中<u>不</u>包含三个顶点在同一大圆圆弧上的退化球面三角形。<br>记A(r)为T(r)中最小的球面三角形的面积。</p>
<p>举例来说，A(14)四舍五入到六位小数为3.294040。</p>
<p>求$\sum_{r=1}^{50}$ A(r)。将你的答案四舍五入到六位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 333</title>
    <url>/333/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-333"><a href="#Problem-333" class="headerlink" title="Problem 333"></a><a href="https://projecteuler.net/problem=333">Problem 333</a></h1><hr>
<p><strong>Special partitions</strong></p>
<p>All positive integers can be partitioned in such a way that each and every term of the partition can be expressed as 2<sup>i</sup>×3<sup>j</sup>, where i,j ≥ 0.</p>
<p>Let’s consider only those such partitions where none of the terms can divide any of the other terms.<br>For example, the partition of 17 = 2 + 6 + 9 = (2<sup>1</sup>×3<sup>0</sup> + 2<sup>1</sup>×3<sup>1</sup> + 2<sup>0</sup>×3<sup>2</sup>) would not be valid since 2 can divide 6. Neither would the partition 17 = 16 + 1 = (2<sup>4</sup>×3<sup>0</sup> + 2<sup>0</sup>×3<sup>0</sup>) since 1 can divide 16. The only valid partition of 17 would be 8 + 9 = (2<sup>3</sup>×3<sup>0</sup> + 2<sup>0</sup>×3<sup>2</sup>).</p>
<p>Many integers have more than one valid partition, the first being 11 having the following two partitions.<br>11 = 2 + 9 = (2<sup>1</sup>×3<sup>0</sup> + 2<sup>0</sup>×3<sup>2</sup>)<br>11 = 8 + 3 = (2<sup>3</sup>×3<sup>0</sup> + 2<sup>0</sup>×3<sup>1</sup>)</p>
<p>Let’s define P(n) as the number of valid partitions of n. For example, P(11) = 2.</p>
<p>Let’s consider only the prime integers q which would have a single valid partition such as P(17).</p>
<p>The sum of the primes q &lt;100 such that P(q)=1 equals 233.</p>
<p>Find the sum of the primes q &lt;1000000 such that P(q)=1.</p>
<hr>
<p><strong>特殊分划</strong></p>
<p>所有的正整数可以进行如下的分划；分划的每一项都能表示成2<sup>i</sup>×3<sup>j</sup>，其中i,j ≥ 0。</p>
<p>进一步地，我们只考虑任意一项不能整除其它项的分划。<br>例如，分划17 = 2 + 6 + 9 = (2<sup>1</sup>×3<sup>0</sup> + 2<sup>1</sup>×3<sup>1</sup> + 2<sup>0</sup>×3<sup>2</sup>)是不合理的，因为2可以整除6。分划17 = 16 + 1 = (2<sup>4</sup>×3<sup>0</sup> + 2<sup>0</sup>×3<sup>0</sup>)同样是不合理的，因为1可以整除16。对17唯一合理的分划为8 + 9 = (2<sup>3</sup>×3<sup>0</sup> + 2<sup>0</sup>×3<sup>2</sup>)。</p>
<p>许多整数都有不止一种合理的分划，其中最小的为11，有如下两种分划。<br>11 = 2 + 9 = (2<sup>1</sup>×3<sup>0</sup> + 2<sup>0</sup>×3<sup>2</sup>)<br>11 = 8 + 3 = (2<sup>3</sup>×3<sup>0</sup> + 2<sup>0</sup>×3<sup>1</sup>)</p>
<p>我们记P(n)为对n合理的分划数目。例如，P(11) = 2。</p>
<p>再进一步，我们只考虑只有一种合理分划的素数q，如P(17)=1。</p>
<p>所有使得P(q)=1的素数q &lt;100之和是233。</p>
<p>求所有使得P(q)=1的素数q &lt;1000000之和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 334</title>
    <url>/334/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-334"><a href="#Problem-334" class="headerlink" title="Problem 334"></a><a href="https://projecteuler.net/problem=334">Problem 334</a></h1><hr>
<p><strong>Spilling the beans</strong></p>
<p>In Plato’s heaven, there exist an infinite number of bowls in a straight line.<br>Each bowl either contains some or none of a finite number of beans.<br>A child plays a game, which allows only one kind of move: removing two beans from any bowl, and putting one in each of the two adjacent bowls.<br>The game ends when each bowl contains either one or no beans.</p>
<p>For example, consider two adjacent bowls containing 2 and 3 beans respectively, all other bowls being empty. The following eight moves will finish the game:</p>
<center><img src="/resources/images/0334_beans.gif"></center>

<p>You are given the following sequences:</p>
<p>$t_0=123456.$</p>
<p>$t_i=\frac{t_{i-1}}{2}$, if $t_{i-1}$ is even<br>$t_i=\lfloor \frac{t_{i-1}}{2} \rfloor \oplus 926252$, if $t_{i-1}$ is odd<br>where $\lfloor x \rfloor$ is the floor function<br>and $\oplus$ is the bitwise XOR operator.</p>
<p>$b_i=(t_i \text{ mod } 2^11) + 1.$</p>
<p>The first two terms of the last sequence are b<sub><i>1</i></sub> = 289 and b<sub><i>2</i></sub> = 145.<br>If we start with b<sub><i>1</i></sub> and b<sub><i>2</i></sub> beans in two adjacent bowls, 3419100 moves would be required to finish the game.</p>
<p>Consider now 1500 adjacent bowls containing b<sub><i>1</i></sub>, b<sub><i>2</i></sub>,…, b<sub><i>1500</i></sub> beans respectively, all other bowls being empty. Find how many moves it takes before the game ends.</p>
<hr>
<p><strong>放豆子</strong></p>
<p>在柏拉图的天堂，有无穷只碗排成一条直线。<br>每个碗中或者有有限颗豆子，或者没有豆子。<br>有一个小孩在玩游戏，游戏只允许一种操作：从任意一个碗中取出两颗豆子，然后在其相邻的两个碗中各放一颗。<br>当每个碗中要么只有一颗豆子要么没有豆子时，游戏结束。</p>
<p>例如，考虑相邻的两个碗中分别装有2颗和3颗豆子，其它的碗中都没有豆子的情况。如下八次操作之后游戏结束：</p>
<center><img src="/resources/images/0334_beans.gif"></center>

<p>已知以下序列：</p>
<p>$t_0=123456.$</p>
<p>$t_i=\frac{t_{i-1}}{2}$，如果$t_{i-1}$为偶数。<br>$t_i=\lfloor \frac{t_{i-1}}{2} \rfloor \oplus 926252$，如果$t_{i-1}$为奇数。<br>其中$\lfloor x \rfloor$是下取整函数<br>而$\oplus$是按位异或运算符</p>
<p>$b_i=(t_i \text{ mod } 2^11) + 1.$</p>
<p>上述最后一个序列的前两项分别是b<sub><i>1</i></sub> = 289和b<sub><i>2</i></sub> = 145。<br>如果我们从相邻的两个碗中分别装有b<sub><i>1</i></sub>和b<sub><i>2</i></sub>颗豆子开始，结束游戏需要3419100次操作。</p>
<p>现在考虑相邻的1500个碗中分别装有b<sub><i>1</i></sub>、b<sub><i>2</i></sub>、……、b<sub><i>1500</i></sub>颗豆子，其它的碗中都没有豆子的情况。求结束游戏需要多少次操作。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 335</title>
    <url>/335/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-335"><a href="#Problem-335" class="headerlink" title="Problem 335"></a><a href="https://projecteuler.net/problem=335">Problem 335</a></h1><hr>
<p><strong>Gathering the beans</strong></p>
<p>Whenever Peter feels bored, he places some bowls, containing one bean each, in a circle. After this, he takes all the beans out of a certain bowl and drops them one by one in the bowls going clockwise. He repeats this, starting from the bowl he dropped the last bean in, until the initial situation appears again. For example with 5 bowls he acts as follows:</p>
<center><img src="/resources/images/0335_mancala.gif"></center>

<p>So with 5 bowls it takes Peter 15 moves to return to the initial situation.</p>
<p>Let M(x) represent the number of moves required to return to the initial situation, starting with x bowls. Thus, M(5) = 15. It can also be verified that M(100) = 10920.</p>
<p>Find $\sum_{k=0}^{10^{18}}$M(2<sup>k</sup>+1). Give your answer modulo 7<sup>9</sup>.</p>
<hr>
<p><strong>收豆子</strong></p>
<p>每当彼得感到无聊的时候，他会将一些碗摆成圆形，每个碗中放一颗豆子。然后，他拿出某一个碗中的所有豆子，把这些豆子按顺时针在每个碗中放一个，再从最后放入豆子的那个碗开始重复这一操作，直到回到初始状态。例如，当有5个碗时，他每一次的操作如下所示：</p>
<center><img src="/resources/images/0335_mancala.gif"></center>

<p>因此，有5个碗时，彼得需要15次操作，才能回到初始状态。</p>
<p>记M(x)为当有x个碗时，回到初始状态所需要的操作数。因此，M(5) = 15。同样可以验证M(100) = 10920。</p>
<p>求$\sum_{k=0}^{10^{18}}$M(2<sup>k</sup>+1)。将你的答案模7<sup>9</sup>取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 336</title>
    <url>/336/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-336"><a href="#Problem-336" class="headerlink" title="Problem 336"></a><a href="https://projecteuler.net/problem=336">Problem 336</a></h1><hr>
<p><strong>Maximix Arrangements</strong></p>
<p>A train is used to transport four carriages in the order: ABCD. However, sometimes when the train arrives to collect the carriages they are not in the correct order.<br>To rearrange the carriages they are all shunted on to a large rotating turntable. After the carriages are uncoupled at a specific point the train moves off the turntable pulling the carriages still attached with it. The remaining carriages are rotated 180 degrees. All of the carriages are then rejoined and this process is repeated as often as necessary in order to obtain the least number of uses of the turntable.<br>Some arrangements, such as ADCB, can be solved easily: the carriages are separated between A and D, and after DCB are rotated the correct order has been achieved.</p>
<p>However, Simple Simon, the train driver, is not known for his efficiency, so he always solves the problem by initially getting carriage A in the correct place, then carriage B, and so on.</p>
<p>Using four carriages, the worst possible arrangements for Simon, which we shall call <i>maximix arrangements</i>, are DACB and DBAC; each requiring him five rotations (although, using the most efficient approach, they could be solved using just three rotations). The process he uses for DACB is shown below.</p>
<center><img src="/resources/images/0336_maximix.gif"></center>

<p>It can be verified that there are 24 maximix arrangements for six carriages, of which the tenth lexicographic maximix arrangement is DFAECB.</p>
<p>Find the 2011<sup>th</sup> lexicographic maximix arrangement for eleven carriages.</p>
<hr>
<p><strong>最大最小安排</strong></p>
<p>一架火车头被用来运输按如下顺序排列的四节车厢：ABCD。不过，有时候当火车头准备拉上车厢时，车厢并没有按照正确的顺序排列。<br>为了重新排列车厢，这些车厢被转运到了一个大型旋转台上。在某一个点将部分车厢分离，然后火车头带着分离点前的车厢离开旋转台，留在旋转台上的车厢随后旋转180度，然后再把所有车厢重新连起来。这个过程不断重复直到重排完成，不过我们希望尽可能少地使用旋转台。<br>有些安排，如ADCB，很容易进行重排：首先在A和D之间断开，然后DCB旋转180度，重新连接后就是正确的顺序。</p>
<p>然而，火车司机没头脑西蒙并不是一个有效率的人，他解决这个问题时，总是先把A车厢放到正确的位置，然后是B车厢，依此类推。</p>
<p>在有四节车厢时，西蒙所碰到的最差情况，我们也称为<i>最大最小安排</i>，将会是DACB和DBAC；这两种安排下，他都需要进行五次旋转（而在最有效的方法下，只需要三次旋转就可以解决）。西蒙解决DACB的过程如下所示。</p>
<center><img src="/resources/images/0336_maximix.gif"></center>

<p>可以验证，在有六节车厢时，共有24种最大最小安排，按字典序排列的第十个为DFAECB。</p>
<p>在有十一节车厢时，找出按字典序排列的第2011个最大最小安排。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 337</title>
    <url>/337/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-337"><a href="#Problem-337" class="headerlink" title="Problem 337"></a><a href="https://projecteuler.net/problem=337">Problem 337</a></h1><hr>
<p><strong>Totient Stairstep Sequences</strong></p>
<p>Let {a<sub>1</sub>, a<sub>2</sub>,…, a<sub>n</sub>} be an integer sequence of length n such that:</p>
<ul>
<li>a<sub>1</sub> = 6</li>
<li>for all 1 ≤ i &lt; n : φ(a<sub>i</sub>) &lt; φ(a<sub>i+1</sub>) &lt; a<sub>i</sub> &lt; a<sub>i+1</sub> <sup>1</sup></li>
</ul>
<p>Let S(N) be the number of such sequences with a<sub>n</sub> ≤ N.<br>For example, S(10) = 4: {6}, {6, 8}, {6, 8, 9} and {6, 10}.<br>We can verify that S(100) = 482073668 and S(10 000) mod 10<sup>8</sup> = 73808307.</p>
<p>Find S(20 000 000) mod 10<sup>8</sup>.</p>
<p><sup>1</sup> φ denotes <b>Euler’s totient function</b>.</p>
<hr>
<p><strong>总计函数台阶序列</strong></p>
<p>记{a<sub>1</sub>, a<sub>2</sub>,…, a<sub>n</sub>}是长度为n且满足以下条件的整数序列：</p>
<ul>
<li>a<sub>1</sub> = 6</li>
<li>对于所有1 ≤ i &lt; n：φ(a<sub>i</sub>) &lt; φ(a<sub>i+1</sub>) &lt; a<sub>i</sub> &lt; a<sub>i+1</sub> <sup>1</sup></li>
</ul>
<p>记S(N)为满足a<sub>n</sub> ≤ N的这类序列的数目。<br>例如，S(10) = 4：{6}、{6, 8}、{6, 8, 9}和{6, 10}。<br>我们可以验证S(100) = 482073668以及S(10 000) mod 10<sup>8</sup> = 73808307。</p>
<p>求S(20 000 000) mod 10<sup>8</sup>。</p>
<p><sup>1</sup> φ表示<b>欧拉总计函数</b>.</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 338</title>
    <url>/338/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-338"><a href="#Problem-338" class="headerlink" title="Problem 338"></a><a href="https://projecteuler.net/problem=338">Problem 338</a></h1><hr>
<p><strong>Cutting Rectangular Grid Paper</strong></p>
<p>A rectangular sheet of grid paper with integer dimensions w × h is given. Its grid spacing is 1.<br>When we cut the sheet along the grid lines into two pieces and rearrange those pieces without overlap, we can make new rectangles with different dimensions.</p>
<p>For example, from a sheet with dimensions 9 × 4 , we can make rectangles with dimensions 18 × 2, 12 × 3 and 6 × 6 by cutting and rearranging as below:</p>
<center><img src="/resources/images/0338_gridpaper.gif"></center>

<p>Similarly, from a sheet with dimensions 9 × 8 , we can make rectangles with dimensions 18 × 4 and 12 × 6 .</p>
<p>For a pair w and h, let F(w,h) be the number of distinct rectangles that can be made from a sheet with dimensions w × h .<br>For example, F(2,1) = 0, F(2,2) = 1, F(9,4) = 3 and F(9,8) = 2.<br>Note that rectangles congruent to the initial one are not counted in F(w,h).<br>Note also that rectangles with dimensions w × h and dimensions h × w are not considered distinct.</p>
<p>For an integer N, let G(N) be the sum of F(w,h) for all pairs w and h which satisfy 0 &lt; h ≤ w ≤ N.<br>We can verify that G(10) = 55, G(10<sup>3</sup>) = 971745 and G(10<sup>5</sup>) = 9992617687.</p>
<p>Find G(10<sup>12</sup>). Give your answer modulo 10<sup>8</sup>.</p>
<hr>
<p><strong>剪长方形网格纸</strong></p>
<p>我们有一张边长为整数w × h的长方形网格纸，网格的宽度为1。<br>如果我们沿着网格线将这张纸剪成两片，然后将它们不重叠地重排在一起，我们可以得到不同边长的新长方形。</p>
<p>例如，用一张边长为9 × 4的长方形网格纸，我们可以通过剪裁和重排得到边长为18 × 2、12 × 3或6 × 6的长方形，如下所示：</p>
<center><img src="/resources/images/0338_gridpaper.gif"></center>

<p>同样地，用一张边长为9 × 8的长方形网格纸，我们可以得到边长为18 × 4和12 × 6的长方形。</p>
<p>对于一对w和h，记F(w,h)为用一张边长为w × h的长方形网格纸所能得到的不同长方形数目。<br>例如，F(2,1) = 0，F(2,2) = 1，F(9,4) = 3以及F(9,8) = 2。<br>注意长方形网格纸本身的长方形不计入F(w,h)中。<br>还要注意边长为w × h的长方形和边长为h × w的长方形被认为是相同的长方形。</p>
<p>对于正整数N，找出所有满足0 &lt; h ≤ w ≤ N的数对w和h，记F(w,h)的和为G(N)。<br>我们可以验证G(10) = 55，G(10<sup>3</sup>) = 971745，以及G(10<sup>5</sup>) = 9992617687。</p>
<p>求G(10<sup>12</sup>)。将你的答案模10<sup>8</sup>取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 339</title>
    <url>/339/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-339"><a href="#Problem-339" class="headerlink" title="Problem 339"></a><a href="https://projecteuler.net/problem=339">Problem 339</a></h1><hr>
<p><strong>Peredur fab Efrawg</strong></p>
<p><i>“And he came towards a valley, through which ran a river; and the borders of the valley were wooded, and on each side of the river were level meadows. And on one side of the river he saw a flock of white sheep, and on the other a flock of black sheep. And whenever one of the white sheep bleated, one of the black sheep would cross over and become white; and when one of the black sheep bleated, one of the white sheep would cross over and become black.”</i><br><a href="http://en.wikisource.org/wiki/The_Mabinogion/Peredur_the_Son_of_Evrawc">en.wikisource.org</a></p>
<p>Initially each flock consists of n sheep. Each sheep (regardless of colour) is equally likely to be the next sheep to bleat. After a sheep has bleated and a sheep from the other flock has crossed over, Peredur may remove a number of white sheep in order to maximize the expected final number of black sheep. Let E(n) be the expected final number of black sheep if Peredur uses an optimal strategy.</p>
<p>You are given that E(5) = 6.871346 rounded to 6 places behind the decimal point.<br>Find E(10 000) and give your answer rounded to 6 places behind the decimal point.</p>
<hr>
<p><strong>埃夫罗格之子佩雷迪尔</strong></p>
<p><i>“他走向一座山谷，山谷中有河流经过；山谷的四周被树木环绕，河流的两岸有平整的牧草。在河的一边他看到一群白色的绵羊，在河的另一边他看到一群黑色的绵羊。每当一只白色绵羊叫唤时，一只黑色绵羊会穿过河流并变成白色；每当一只黑色绵羊叫唤时，一只白色绵羊会穿过河流变成黑色。</i><br><a href="http://en.wikisource.org/wiki/The_Mabinogion/Peredur_the_Son_of_Evrawc">译自英文维基百科</a></p>
<p>一开始，两群羊均为n只。每只羊（无论颜色）都等概率地成为下一只会叫的羊。在有一只羊叫唤，另一只羊穿过河流变色之后，佩雷迪尔可以移除一定数量的白色绵羊，以最大化黑色绵羊最终数目的期望值。记E(n)是在佩雷迪尔使用最优策略时黑色绵羊最终数目的期望值。</p>
<p>已知保留小数点后6位小数时E(5) = 6.871346。<br>求E(10 000)，并将你的答案保留小数点后6位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 34</title>
    <url>/34/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-34"><a href="#Problem-34" class="headerlink" title="Problem 34"></a><a href="https://projecteuler.net/problem=34">Problem 34</a></h1><hr>
<h2 id="Digit-Factorials"><a href="#Digit-Factorials" class="headerlink" title="Digit Factorials"></a><strong>Digit Factorials</strong></h2><p>$145$ is a curious number, as $1! + 4! + 5! = 1 + 24 + 120 = 145$.</p>
<p>Find the sum of all numbers which are equal to the sum of the factorial of their digits.</p>
<p>Note: as $1! = 1$ and $2! = 2$ are not sums they are not included.</p>
<hr>
<h2 id="数字阶乘和"><a href="#数字阶乘和" class="headerlink" title="数字阶乘和"></a><strong>数字阶乘和</strong></h2><p>$145$是个有趣的数，因为$1! + 4! + 5! = 1 + 24 + 120 = 145$。</p>
<p>找出所有各位数字的阶乘和等于其本身的数，并求它们的和。</p>
<p>注意：因为$1! = 1$和$2! = 2$不是和的形式，所以它们并不在讨论范围内。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 340</title>
    <url>/340/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-340"><a href="#Problem-340" class="headerlink" title="Problem 340"></a><a href="https://projecteuler.net/problem=340">Problem 340</a></h1><hr>
<p><strong>Crazy Function</strong></p>
<p>For fixed integers a, b, c, define the <i>crazy function</i> F(n) as follows:<br>F(n) = n - c for all n &gt; b<br>F(n) = F(a + F(a + F(a + F(a + n)))) for all n ≤ b</p>
<p>Also, define S(a, b, c) = $\sum_{n=0}^{b}F(n)$.</p>
<p>For example, if a = 50, b = 2000 and c = 40, then F(0) = 3240 and F(2000) = 2040.<br>Also, S(50, 2000, 40) = 5204240.</p>
<p>Find the last 9 digits of S(21<sup>7</sup>, 7<sup>21</sup>, 12<sup>7</sup>).</p>
<hr>
<p><strong>疯狂函数</strong></p>
<p>对于给定的整数a、b、c，定义<i>疯狂函数</i>F(n)如下：<br>对于所有n &gt; b，F(n) = n - c<br>对于所有n ≤ b，F(n) = F(a + F(a + F(a + F(a + n))))</p>
<p>此外，定义S(a, b, c) = $\sum_{n=0}^{b}F(n)$。</p>
<p>举例来说，如果a = 50、b = 2000以及c = 40，那么F(0) = 3240而F(2000) = 2040。<br>此外，S(50, 2000, 40) = 5204240。</p>
<p>求S(21<sup>7</sup>, 7<sup>21</sup>, 12<sup>7</sup>)的最后9位数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 341</title>
    <url>/341/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-341"><a href="#Problem-341" class="headerlink" title="Problem 341"></a><a href="https://projecteuler.net/problem=341">Problem 341</a></h1><hr>
<p><strong>Golomb’s self-describing sequence</strong></p>
<p>The <b>Golomb’s self-describing sequence</b> {G(n)} is the only nondecreasing sequence of natural numbers such that n appears exactly G(n) times in the sequence. The values of G(n) for the first few n are</p>
<table>
<thead>
<tr>
<th>n</th>
<th>1&nbsp;</th>
<th>2&nbsp;</th>
<th>3&nbsp;</th>
<th>4&nbsp;</th>
<th>5&nbsp;</th>
<th>6&nbsp;</th>
<th>7&nbsp;</th>
<th>8&nbsp;</th>
<th>9&nbsp;</th>
<th>10</th>
<th>11</th>
<th>12</th>
<th>13</th>
<th>14</th>
<th>15</th>
<th>…</th>
</tr>
</thead>
<tbody><tr>
<td>G(n)</td>
<td>1</td>
<td>2</td>
<td>2</td>
<td>3</td>
<td>3</td>
<td>4</td>
<td>4</td>
<td>4</td>
<td>5</td>
<td>5</td>
<td>5</td>
<td>6</td>
<td>6</td>
<td>6</td>
<td>6</td>
<td>…</td>
</tr>
</tbody></table>
<p>You are given that G(10<sup>3</sup>) = 86, G(10<sup>6</sup>) = 6137.<br>You are also given that ΣG(n<sup>3</sup>) = 153506976 for 1 ≤ n &lt; 10<sup>3</sup>.</p>
<p>Find ΣG(n<sup>3</sup>) for 1 ≤ n &lt; 10<sup>6</sup>.</p>
<hr>
<p><strong>戈洛姆的自描述序列</strong></p>
<p><b>戈洛姆的自描述序列</b> {G(n)}是唯一一个单调不降且n出现恰好G(n)次的自然数序列。对于前几个n，G(n)的值为</p>
<table>
<thead>
<tr>
<th>n</th>
<th>1&nbsp;</th>
<th>2&nbsp;</th>
<th>3&nbsp;</th>
<th>4&nbsp;</th>
<th>5&nbsp;</th>
<th>6&nbsp;</th>
<th>7&nbsp;</th>
<th>8&nbsp;</th>
<th>9&nbsp;</th>
<th>10</th>
<th>11</th>
<th>12</th>
<th>13</th>
<th>14</th>
<th>15</th>
<th>…</th>
</tr>
</thead>
<tbody><tr>
<td>G(n)</td>
<td>1</td>
<td>2</td>
<td>2</td>
<td>3</td>
<td>3</td>
<td>4</td>
<td>4</td>
<td>4</td>
<td>5</td>
<td>5</td>
<td>5</td>
<td>6</td>
<td>6</td>
<td>6</td>
<td>6</td>
<td>…</td>
</tr>
</tbody></table>
<p>已知G(10<sup>3</sup>) = 86，G(10<sup>6</sup>) = 6137。<br>此外，还已知对于1 ≤ n &lt; 10<sup>3</sup>，ΣG(n<sup>3</sup>) = 153506976。</p>
<p>对于1 ≤ n &lt; 10<sup>6</sup>，求ΣG(n<sup>3</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 342</title>
    <url>/342/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-342"><a href="#Problem-342" class="headerlink" title="Problem 342"></a><a href="https://projecteuler.net/problem=342">Problem 342</a></h1><hr>
<p><strong>The totient of a square is a cube</strong></p>
<p>Consider the number 50.<br>50<sup>2</sup> = 2500 = 2<sup>2</sup> × 5<sup>4</sup>, so φ(2500) = 2 × 4 × 5<sup>3</sup> = 8 × 5<sup>3</sup> = 2<sup>3</sup> × 5<sup>3</sup>. <sup>1</sup><br>So 2500 is a square and  φ(2500) is a cube.</p>
<p>Find the sum of all numbers n, 1 &lt; n &lt; 10<sup>10</sup> such that φ(n<sup>2</sup>) is a cube.</p>
<p><sup>1</sup> φ denotes <b>Euler’s totient function</b>.</p>
<hr>
<p><strong>平方数的总计函数为立方数</strong></p>
<p>考虑数50。<br>50<sup>2</sup> = 2500 = 2<sup>2</sup> × 5<sup>4</sup>，因此φ(2500) = 2 × 4 × 5<sup>3</sup> = 8 × 5<sup>3</sup> = 2<sup>3</sup> × 5<sup>3</sup>。<sup>1</sup><br>所以2500是一个平方数，而φ(2500)是一个立方数。</p>
<p>有些数1 &lt; n &lt; 10<sup>10</sup>满足φ(n<sup>2</sup>)为立方数，求所有这类数的和。</p>
<p><sup>1</sup> φ表示<b>欧拉总计函数</b>。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 343</title>
    <url>/343/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-343"><a href="#Problem-343" class="headerlink" title="Problem 343"></a><a href="https://projecteuler.net/problem=343">Problem 343</a></h1><hr>
<p><strong>Fractional Sequences</strong></p>
<p>For any positive integer k, a finite sequence a<sub>i</sub> of fractions x<sub>i</sub>/y<sub>i</sub> is defined by:<br>a<sub>1</sub> = 1/k and<br>a<sub>i</sub> = (x<sub>i-1</sub>+1)/(y<sub>i-1</sub>-1) reduced to lowest terms for i&gt;1.<br>When a<sub>i</sub> reaches some integer n, the sequence stops. (That is, when y<sub>i</sub>=1.)<br>Define f(k) = n.<br>For example, for k = 20:</p>
<p>1/20 → 2/19 → 3/18 = 1/6 → 2/5 → 3/4 → 4/3 → 5/2 → 6/1 = 6</p>
<p>So f(20) = 6.</p>
<p>Also f(1) = 1, f(2) = 2, f(3) = 1 and Σf(k<sup>3</sup>) = 118937 for 1 ≤ k ≤ 100.</p>
<p>Find Σf(k<sup>3</sup>) for 1 ≤ k ≤ 2×10<sup>6</sup>.</p>
<hr>
<p><strong>分数序列</strong></p>
<p>对于任意正整数k，由分数x<sub>i</sub>/y<sub>i</sub>组成的有限序列a<sub>i</sub>按如下方式定义：<br>a<sub>1</sub> = 1/k，以及<br>对于i&gt;1，a<sub>i</sub> = (x<sub>i-1</sub>+1)/(y<sub>i-1</sub>-1)，并约分到最简形式。<br>当a<sub>i</sub>为某个整数n时，序列结束。（换句话说，当y<sub>i</sub>=1时序列结束。）<br>定义f(k) = n。<br>例如，对于k = 20：</p>
<p>1/20 → 2/19 → 3/18 = 1/6 → 2/5 → 3/4 → 4/3 → 5/2 → 6/1 = 6</p>
<p>所以f(20) = 6。</p>
<p>此外，已知f(1) = 1，f(2) = 2，f(3) = 1以及对于1 ≤ k ≤ 100，Σf(k<sup>3</sup>) = 118937。</p>
<p>对于1 ≤ k ≤ 2×10<sup>6</sup>，求Σf(k<sup>3</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 344</title>
    <url>/344/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-344"><a href="#Problem-344" class="headerlink" title="Problem 344"></a><a href="https://projecteuler.net/problem=344">Problem 344</a></h1><hr>
<p><strong>Silver dollar game</strong></p>
<p>One variant of N.G. de Bruijn’s <b>silver dollar</b> game can be described as follows:</p>
<p>On a strip of squares a number of coins are placed, at most one coin per square. Only one coin, called the <b>silver dollar</b>, has any value. Two players take turns making moves. At each turn a player must make either a <i>regular</i> or a <i>special</i> move.</p>
<p>A <i>regular</i> move consists of selecting one coin and moving it one or more squares to the left. The coin cannot move out of the strip or jump on or over another coin.</p>
<p>Alternatively, the player can choose to make the <i>special</i> move of pocketing the leftmost coin rather than making a regular move. If no regular moves are possible, the player is forced to pocket the leftmost coin.</p>
<p>The winner is the player who pockets the silver dollar.</p>
<center><img src="/resources/images/0344_silverdollar.gif"></center>

<p>A <i>winning configuration</i> is an arrangement of coins on the strip where the first player can force a win no matter what the second player does.</p>
<p>Let W(n,c) be the number of winning configurations for a strip of n squares, c worthless coins and one silver dollar.</p>
<p>You are given that W(10,2) = 324 and W(100,10) = 1514704946113500.</p>
<p>Find W(1 000 000, 100) modulo the semiprime 1000 036 000 099 (= 1 000 003 · 1 000 033).</p>
<hr>
<p><strong>银币游戏</strong></p>
<p>N.G.德布鲁因的<b>银币</b>游戏的其中一个变种如下所述：</p>
<p>在一长条的方格上放置有一些硬币，最多每个方格一枚硬币。只有一枚称为<b>银币</b>的硬币是有价值的。两名玩家轮流进行操作，每一轮玩家可以选择进行一次<i>常规</i>操作或者进行一次<i>特殊</i>操作。</p>
<p><i>常规</i>操作就是选择一枚硬币，并将其向左移动一格或多格。硬币不能移出方格，也不能跳过或重叠其它硬币。</p>
<p>除了常规操作，玩家也可以选择进行<i>特殊</i>操作，将最左边的硬币放进自己的口袋。如果不存在可以进行的常规操作，玩家必须将最左边的硬币放进自己的口袋。</p>
<p>将银币装进自己口袋的玩家获胜。</p>
<center><img src="/resources/images/0344_silverdollar.gif"></center>

<p>所谓<i>必胜态</i>指的是无论后手玩家如何操作，先手玩家都必然获胜的硬币放置状态。</p>
<p>记W(n,c)为一长条有n个方格，放置有c枚无价值硬币和一枚银币时的必胜状态数目。</p>
<p>已知W(10,2) = 324以及W(100,10) = 1514704946113500。</p>
<p>求W(1 000 000, 100)，并模半素数1000 036 000 099 (= 1 000 003 · 1 000 033)取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 345</title>
    <url>/345/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-345"><a href="#Problem-345" class="headerlink" title="Problem 345"></a><a href="https://projecteuler.net/problem=345">Problem 345</a></h1><hr>
<p><strong>Matrix Sum</strong></p>
<p>We define the Matrix Sum of a matrix as the maximum sum of matrix elements with each element being the only one in his row and column. For example, the Matrix Sum of the matrix below equals 3315 ( = 863 + 383 + 343 + 959 + 767):</p>
<p style="text-align:center;font-family:courier new;">
&nbsp;&nbsp;7 &nbsp;53 183 439 <span style="color:#00ff00;font-family:courier new;"><b>863</b></span>
497 <span style="color:#00ff00;font-family:courier new;"><b>383</b></span> 563 &nbsp;79 973
287 &nbsp;63 <span style="color:#00ff00;font-family:courier new;"><b>343</b></span> 169 583
627 343 773 <span style="color:#00ff00;font-family:courier new;"><b>959</b></span> 943
<span style="color:#00ff00;font-family:courier new;"><b>767</b></span> 473 103 699 303
</p>

<p>Find the Matrix Sum of:</p>
<p style="text-align:center;font-family:courier new;">
&nbsp;&nbsp;7 &nbsp;53 183 439 863 497 383 563 &nbsp;79 973 287 &nbsp;63 343 169 583
627 343 773 959 943 767 473 103 699 303 957 703 583 639 913
447 283 463 &nbsp;29 &nbsp;23 487 463 993 119 883 327 493 423 159 743
217 623 &nbsp;&nbsp;3 399 853 407 103 983 &nbsp;89 463 290 516 212 462 350
960 376 682 962 300 780 486 502 912 800 250 346 172 812 350
870 456 192 162 593 473 915 &nbsp;45 989 873 823 965 425 329 803
973 965 905 919 133 673 665 235 509 613 673 815 165 992 326
322 148 972 962 286 255 941 541 265 323 925 281 601 &nbsp;95 973
445 721 &nbsp;11 525 473 &nbsp;65 511 164 138 672 &nbsp;18 428 154 448 848
414 456 310 312 798 104 566 520 302 248 694 976 430 392 198
184 829 373 181 631 101 969 613 840 740 778 458 284 760 390
821 461 843 513 &nbsp;17 901 711 993 293 157 274 &nbsp;94 192 156 574
&nbsp;34 124 &nbsp;&nbsp;4 878 450 476 712 914 838 669 875 299 823 329 699
815 559 813 459 522 788 168 586 966 232 308 833 251 631 107
813 883 451 509 615 &nbsp;77 281 613 459 205 380 274 302 &nbsp;35 805</p>

<hr>
<p><strong>矩阵和</strong></p>
<p>在一个矩阵中选择部分元素，使得每个元素都是所在的行和列中唯一被选中的元素，这些元素的和的最大值定义为矩阵的矩阵和。例如，如下矩阵的矩阵和为3315 ( = 863 + 383 + 343 + 959 + 767)：</p>
<p style="text-align:center;font-family:courier new;">
&nbsp;&nbsp;7 &nbsp;53 183 439 <span style="color:#00ff00;font-family:courier new;"><b>863</b></span>
497 <span style="color:#00ff00;font-family:courier new;"><b>383</b></span> 563 &nbsp;79 973
287 &nbsp;63 <span style="color:#00ff00;font-family:courier new;"><b>343</b></span> 169 583
627 343 773 <span style="color:#00ff00;font-family:courier new;"><b>959</b></span> 943
<span style="color:#00ff00;font-family:courier new;"><b>767</b></span> 473 103 699 303
</p>

<p>求如下矩阵的矩阵和：</p>
<p style="text-align:center;font-family:courier new;">
&nbsp;&nbsp;7 &nbsp;53 183 439 863 497 383 563 &nbsp;79 973 287 &nbsp;63 343 169 583
627 343 773 959 943 767 473 103 699 303 957 703 583 639 913
447 283 463 &nbsp;29 &nbsp;23 487 463 993 119 883 327 493 423 159 743
217 623 &nbsp;&nbsp;3 399 853 407 103 983 &nbsp;89 463 290 516 212 462 350
960 376 682 962 300 780 486 502 912 800 250 346 172 812 350
870 456 192 162 593 473 915 &nbsp;45 989 873 823 965 425 329 803
973 965 905 919 133 673 665 235 509 613 673 815 165 992 326
322 148 972 962 286 255 941 541 265 323 925 281 601 &nbsp;95 973
445 721 &nbsp;11 525 473 &nbsp;65 511 164 138 672 &nbsp;18 428 154 448 848
414 456 310 312 798 104 566 520 302 248 694 976 430 392 198
184 829 373 181 631 101 969 613 840 740 778 458 284 760 390
821 461 843 513 &nbsp;17 901 711 993 293 157 274 &nbsp;94 192 156 574
&nbsp;34 124 &nbsp;&nbsp;4 878 450 476 712 914 838 669 875 299 823 329 699
815 559 813 459 522 788 168 586 966 232 308 833 251 631 107
813 883 451 509 615 &nbsp;77 281 613 459 205 380 274 302 &nbsp;35 805</p>

<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 346</title>
    <url>/346/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-346"><a href="#Problem-346" class="headerlink" title="Problem 346"></a><a href="https://projecteuler.net/problem=346">Problem 346</a></h1><hr>
<p><strong>Strong Repunits</strong></p>
<p>The number 7 is special, because 7 is 111 written in base 2, and 11 written in base 6 (i.e. 7<sub>10</sub> = 11<sub>6</sub> = 111<sub>2</sub>). In other words, 7 is a repunit in at least two bases b &gt; 1. </p>
<p>We shall call a positive integer with this property a strong repunit. It can be verified that there are 8 strong repunits below 50:  {1,7,13,15,21,31,40,43}.<br>Furthermore, the sum of all strong repunits below 1000 equals 15864.</p>
<p>Find the sum of all strong repunits below 10<sup>12</sup>.</p>
<hr>
<p><strong>强循环单位数</strong></p>
<p>7是一个特别的数，因为7在2进制下写作111，在6进制下写作11（也即7<sub>10</sub> = 11<sub>6</sub> = 111<sub>2</sub>）。换句话说，7在至少两种b &gt; 1进制下为循环单位数。</p>
<p>我们称拥有这种性质的正整数为强循环单位数。可以验证，有8个小于50的强循环单位数：{1,7,13,15,21,31,40,43}。<br>进一步地，所有小于1000的强循环单位数之和是15864。</p>
<p>求所有小于10<sup>12</sup>的强循环单位数之和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 347</title>
    <url>/347/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-347"><a href="#Problem-347" class="headerlink" title="Problem 347"></a><a href="https://projecteuler.net/problem=347">Problem 347</a></h1><hr>
<p><strong>Largest integer divisible by two primes</strong></p>
<p>The largest integer ≤ 100 that is only divisible by both the primes 2 and 3 is 96, as 96=32*3=2<sup>5</sup>*3. For two <i>distinct</i> primes p and q let M(p,q,N) be the largest positive integer ≤N only divisible by both p and q and M(p,q,N)=0 if such a positive integer does not exist.</p>
<p>E.g. M(2,3,100)=96.<br>M(3,5,100)=75 and not 90 because 90 is divisible by 2 ,3 and 5.<br>Also M(2,73,100)=0 because there does not exist a positive integer ≤ 100 that is divisible by both 2 and 73.</p>
<p>Let S(N) be the sum of all distinct M(p,q,N). S(100)=2262.</p>
<p>Find S(10 000 000).</p>
<hr>
<p><strong>能被两个素数整除的最大整数</strong></p>
<p>在≤ 100的整数中，能整除的素数只有2和3的最大整数是96，因为96=32*3=2<sup>5</sup>*3。对于两个<i>不同</i>的素数p和q，在≤N的正整数中，能整除的素数只有p和q的最大整数记为M(p,q,N)；如果这样的正整数不存在，则记M(p,q,N)=0。</p>
<p>例如，M(2,3,100)=96。<br>M(3,5,100)=75而非90，因为90能被2、3、5整除。<br>此外M(2,73,100)=0，因为不存在≤ 100的正整数使得能整除的素数只有2和73。</p>
<p>记S(N)为所有不同的M(p,q,N)之和。S(100)=2262。</p>
<p>求S(10 000 000)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 348</title>
    <url>/348/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-348"><a href="#Problem-348" class="headerlink" title="Problem 348"></a><a href="https://projecteuler.net/problem=348">Problem 348</a></h1><hr>
<p><strong>Sum of a square and a cube</strong></p>
<p>Many numbers can be expressed as the sum of a square and a cube. Some of them in more than one way.</p>
<p>Consider the palindromic numbers that can be expressed as the sum of a square and a cube, both greater than 1, in <b>exactly</b> 4 different ways.<br>For example, 5229225 is a palindromic number and it can be expressed in exactly 4 different ways:</p>
<p>2285<sup>2</sup> + 20<sup>3</sup><br>2223<sup>2</sup> + 66<sup>3</sup><br>1810<sup>2</sup> + 125<sup>3</sup><br>1197<sup>2</sup> + 156<sup>3</sup></p>
<p>Find the sum of the five smallest such palindromic numbers.</p>
<hr>
<p><strong>平方数和立方数之和</strong></p>
<p>许多数可以表示称一个平方数和一个立方数之和，有些数甚至有不止一种表示方式。</p>
<p>考虑能表示成大于1的平方数和立方数之和，且<b>恰好</b>有4种不同的表示方式的回文数。<br>例如，5229225是一个回文数，而且它恰好可以用4种不同的方式进行表达：</p>
<p>2285<sup>2</sup> + 20<sup>3</sup><br>2223<sup>2</sup> + 66<sup>3</sup><br>1810<sup>2</sup> + 125<sup>3</sup><br>1197<sup>2</sup> + 156<sup>3</sup></p>
<p>求出这类回文数中最小的五个之和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 349</title>
    <url>/349/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-349"><a href="#Problem-349" class="headerlink" title="Problem 349"></a><a href="https://projecteuler.net/problem=349">Problem 349</a></h1><hr>
<p><strong>Langton’s ant</strong></p>
<p>An ant moves on a regular grid of squares that are coloured either black or white.<br>The ant is always oriented in one of the cardinal directions (left, right, up or down) and moves from square to adjacent square according to the following rules:</p>
<ul>
<li>if it is on a black square, it flips the color of the square to white, rotates 90 degrees counterclockwise and moves forward one square.</li>
<li>if it is on a white square, it flips the color of the square to black, rotates 90 degrees clockwise and moves forward one square.</li>
</ul>
<p>Starting with a grid that is entirely white, how many squares are black after 10<sup>18</sup> moves of the ant?</p>
<hr>
<p><strong>兰顿的蚂蚁</strong></p>
<p>一只蚂蚁在涂有黑色或白色的普通网格方格上移动。<br>蚂蚁总是朝向四种基本方向（左、右、上、下）之一，每次遵循以下规则移动到相邻的方格：</p>
<ul>
<li>如果它在黑色方格上，它将方格的颜色变为白色，逆时针旋转90度，向前移动一个方格。</li>
<li>如果它在白色方格上，它将方格的颜色变为黑色，顺时针旋转90度，向前移动一个方格。</li>
</ul>
<p>从全白的网格开始，在蚂蚁移动10<sup>18</sup>次之后，有多少个方格是黑色的？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 35</title>
    <url>/35/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-35"><a href="#Problem-35" class="headerlink" title="Problem 35"></a><a href="https://projecteuler.net/problem=35">Problem 35</a></h1><hr>
<h2 id="Circular-Primes"><a href="#Circular-Primes" class="headerlink" title="Circular Primes"></a><strong>Circular Primes</strong></h2><p>The number, $197$, is called a circular prime because all rotations of the digits: $197$, $971$, and $719$, are themselves prime.</p>
<p>There are thirteen such primes below $100$: $2$, $3$, $5$, $7$, $11$, $13$, $17$, $31$, $37$, $71$, $73$, $79$, and $97$.</p>
<p>How many circular primes are there below one million?</p>
<hr>
<h2 id="圆周素数"><a href="#圆周素数" class="headerlink" title="圆周素数"></a><strong>圆周素数</strong></h2><p>$197$被称为圆周素数，因为将它逐位轮转所得到的数：$197$、$971$和$719$都是素数。</p>
<p>小于$100$的圆周素数有十三个：$2$、$3$、$5$、$7$、$11$、$13$、$17$、$31$、$37$、$71$、$73$、$79$和$97$。</p>
<p>小于一百万的圆周素数有多少个？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 351</title>
    <url>/351/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-351"><a href="#Problem-351" class="headerlink" title="Problem 351"></a><a href="https://projecteuler.net/problem=351">Problem 351</a></h1><hr>
<p><strong>Hexagonal orchards</strong></p>
<p>A <i>hexagonal orchard</i> of order n is a triangular lattice made up of points within a regular hexagon with side n. The following is an example of a hexagonal orchard of order 5:</p>
<center><img src="/resources/images/0351_hexorchard.png"></center>

<p>Highlighted in green are the points which are hidden from the center by a point closer to it. It can be seen that for a hexagonal orchard of order 5, 30 points are hidden from the center.</p>
<p>Let H(n) be the number of points hidden from the center in a hexagonal orchard of order n.</p>
<p>H(5) = 30. H(10) = 138. H(1 000) = 1177848.</p>
<p>Find H(100 000 000).</p>
<hr>
<p><strong>六边形果园</strong></p>
<p>n阶<i>六边形果园</i>是在边长为n的正六边形中的三角形网格。如下所示是5阶六边形果园：</p>
<center><img src="/resources/images/0351_hexorchard.png"></center>

<p>站在中间向外看，图中用绿色标出的点都会被更近的点挡住。可以看出，对于5阶六边形果园，从中间向外看时有30个点会被挡住。</p>
<p>对于n阶六边形果园，记从中间向外看时会被挡住的点的数目为H(n)。</p>
<p>已知H(5) = 30，H(10) = 138，H(1 000) = 1177848。</p>
<p>求H(100 000 000).</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 350</title>
    <url>/350/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-350"><a href="#Problem-350" class="headerlink" title="Problem 350"></a><a href="https://projecteuler.net/problem=350">Problem 350</a></h1><hr>
<p><strong>Constraining the least greatest and the greatest least</strong></p>
<p>A <i>list of size n</i> is a sequence of n natural numbers.<br>Examples are (2,4,6), (2,6,4), (10,6,15,6), and (11).</p>
<p>The <b>greatest common divisor</b>, or gcd, of a list is the largest natural number that divides all entries of the list.<br>Examples: gcd(2,6,4) = 2, gcd(10,6,15,6) = 1 and gcd(11) = 11.</p>
<p>The <b>least common multiple</b>, or lcm, of a list is the smallest natural number divisible by each entry of the list.<br>Examples: lcm(2,6,4) = 12, lcm(10,6,15,6) = 30 and lcm(11) = 11.</p>
<p>Let f(G, L, N) be the number of lists of size N with gcd ≥ G and lcm ≤ L. For example:</p>
<p>f(10, 100, 1) = 91.<br>f(10, 100, 2) = 327.<br>f(10, 100, 3) = 1135.<br>f(10, 100, 1000) mod 101<sup>4</sup> = 3286053.</p>
<p>Find f(10<sup>6</sup>, 10<sup>12</sup>, 10<sup>18</sup>) mod 101<sup>4</sup>.</p>
<hr>
<p><strong>约束最小最大和最大最小</strong></p>
<p>一个<i>规模为n的列表</i>是一个包含有n个自然数的序列。<br>例如(2,4,6)、(2,6,4)、(10,6,15,6)以及(11)。</p>
<p>列表的<b>最大公约数</b>，简记为gcd，是整除列表上所有数的最大自然数。<br>例如；gcd(2,6,4) = 2，gcd(10,6,15,6) = 1以及gcd(11) = 11。</p>
<p>列表的<b>最小公倍数</b>，简记为lcm，是被列表上所有数整除的最小自然数。<br>例如: lcm(2,6,4) = 12，lcm(10,6,15,6) = 30以及lcm(11) = 11。</p>
<p>记f(G, L, N)为所有规模为N、gcd ≥ G、lcm ≤ L的列表数目。例如：</p>
<p>f(10, 100, 1) = 91。<br>f(10, 100, 2) = 327。<br>f(10, 100, 3) = 1135。<br>f(10, 100, 1000) mod 101<sup>4</sup> = 3286053。</p>
<p>求f(10<sup>6</sup>, 10<sup>12</sup>, 10<sup>18</sup>) mod 101<sup>4</sup>。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 352</title>
    <url>/352/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-352"><a href="#Problem-352" class="headerlink" title="Problem 352"></a><a href="https://projecteuler.net/problem=352">Problem 352</a></h1><hr>
<p><strong>Blood tests</strong></p>
<p>Each one of the 25 sheep in a flock must be tested for a rare virus, known to affect 2% of the sheep population. An accurate and extremely sensitive PCR test exists for blood samples, producing a clear positive / negative result, but it is very time-consuming and expensive.</p>
<p>Because of the high cost, the vet-in-charge suggests that instead of performing 25 separate tests, the following procedure can be used instead:</p>
<p>The sheep are split into 5 groups of 5 sheep in each group. For each group, the 5 samples are mixed together and a single test is performed. Then,</p>
<ul>
<li>If the result is negative, all the sheep in that group are deemed to be virus-free.</li>
<li>If the result is positive, 5 additional tests will be performed (a separate test for each animal) to determine the affected individual(s).</li>
</ul>
<p>Since the probability of infection for any specific animal is only 0.02, the first test (on the pooled samples) for each group will be:</p>
<ul>
<li>Negative (and no more tests needed) with probability 0.98<sup>5</sup> = 0.9039207968.</li>
<li>Positive (5 additional tests needed) with probability 1 - 0.9039207968 = 0.0960792032.</li>
</ul>
<p>Thus, the expected number of tests for each group is 1 + 0.0960792032 × 5 = 1.480396016.<br>Consequently, all 5 groups can be screened using an average of only 1.480396016 × 5 = <b>7.40198008</b> tests, which represents a huge saving of more than 70% !</p>
<p>Although the scheme we have just described seems to be very efficient, it can still be improved considerably (always assuming that the test is sufficiently sensitive and that there are no adverse effects caused by mixing different samples). E.g.:</p>
<ul>
<li>We may start by running a test on a mixture of all the 25 samples. It can be verified that in about 60.35% of the cases this test will be negative, thus no more tests will be needed. Further testing will only be required for the remaining 39.65% of the cases.</li>
<li>If we know that at least one animal in a group of 5 is infected and the first 4 individual tests come out negative, there is no need to run a test on the fifth animal (we know that it must be infected).</li>
<li>We can try a different number of groups / different number of animals in each group, adjusting those numbers at each level so that the total expected number of tests will be minimised.</li>
</ul>
<p>To simplify the very wide range of possibilities, there is one restriction we place when devising the most cost-efficient testing scheme: whenever we start with a mixed sample, all the sheep contributing to that sample must be fully screened (i.e. a verdict of infected / virus-free must be reached for all of them) before we start examining any other animals.</p>
<p>For the current example, it turns out that the most cost-efficient testing scheme (we’ll call it the <i>optimal strategy</i>) requires an average of just <b>4.155452</b> tests!</p>
<p>Using the optimal strategy, let T(s,p) represent the average number of tests needed to screen a flock of s sheep for a virus having probability p to be present in any individual.<br>Thus, rounded to six decimal places, T(25, 0.02) = 4.155452 and T(25, 0.10) = 12.702124.</p>
<p>Find ΣT(10000, p) for p=0.01, 0.02, 0.03, … 0.50.<br>Give your answer rounded to six decimal places.</p>
<hr>
<p><strong>血液检测</strong></p>
<p>一群共25只羊需要逐一检测是否感染了一种罕见的病毒，已知这种病毒在羊群中的感染率为2%。现在有一种准确而极为敏感的PCR检测，能够对血液样品给出明确的阳性或阴性的结论，但这种监测非常耗时而且昂贵。</p>
<p>出于成本考虑，兽医负责人建议，并不需要进行25次分别检测，而是采用以下的做法：</p>
<p>首先将羊群分成5组，每组有5只羊。在每一组中，将5份血液样品混合在一起进行一次检测。随后，</p>
<ul>
<li>如果结果呈阴性，这一组中所有的羊一定都没有感染病毒。</li>
<li>如果结果呈阳性，再进行5次检测（每只羊一次）以确认被感染的个体。</li>
</ul>
<p>由于每只羊感染的概率仅为0.02，每组第一次检测（对混合血液样品）的结果将会；</p>
<ul>
<li>有0.98<sup>5</sup> = 0.9039207968的概率为阴性（不需要再进行检测）。</li>
<li>有1 - 0.9039207968 = 0.0960792032的概率为阳性（需要再进行5次检测）。</li>
</ul>
<p>因此，每一组的期望检测次数为1 + 0.0960792032 × 5 = 1.480396016。<br>由此，所有5个组总共需要1.480396016 × 5 = <b>7.40198008</b>次检测，比最初的方案节省了超过70%！</p>
<p>尽管上述安排看起来非常有效，它仍然有很大的改进空间（前提是这种检测充分敏感以及混合不同的样品不会有副作用）。例如：</p>
<ul>
<li>我们可以在一开始先混合所有25份血液样品进行一次检测。可以验证，在大约60.35%的情况下，检测结果会是阴性，因此不需要再进行更多的检测。只有在剩下的39.65%的情况下需要进一步检测。</li>
<li>如果我们知道在一组5只羊中至少有一只感染了病毒，而前4只的检测结果均为阴性，那么就不需要对第五只羊进行检测（我们知道它一定被感染了）。</li>
<li>我们可以尝试其它的组数或每组的羊数，通过调整这些数目使得期望总检测数最小。</li>
</ul>
<p>为了简化这个问题非常宽泛的各种可能性，我们对于成本最低的检测安排有一个限制要求：如果我们检测了一份混合样品，必须先完全确认该样品中所有的羊（也就是对每只羊给出一个感染或未感染的结论）之后才能检测其它的羊。</p>
<p>在上述样例中，成本最低的检测安排（我们称之为<i>最优策略</i>）平均仅需要<b>4.155452</b>次检测！</p>
<p>现在有一群共s只羊和一种感染率为p的病毒，记T(s,p)为最优策略所需要的平均检测次数。<br>已知在四舍五入到六位小数时，T(25, 0.02) = 4.155452以及T(25, 0.10) = 12.702124。</p>
<p>对于p=0.01、0.02、0.03、……、0.50，求ΣT(10000, p)。<br>将你的答案四舍五入到六位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 353</title>
    <url>/353/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-353"><a href="#Problem-353" class="headerlink" title="Problem 353"></a><a href="https://projecteuler.net/problem=353">Problem 353</a></h1><hr>
<p><strong>Risky moon</strong></p>
<p>A moon could be described by the sphere C(r) with centre (0,0,0) and radius r. </p>
<p>There are stations on the moon at the points on the surface of C(r) with integer coordinates. The station at (0,0,r) is called North Pole station, the station at (0,0,-r) is called South Pole station.</p>
<p>All stations are connected with each other via the shortest road on the great arc through the stations. A journey between two stations is risky. If d is the length of the road between two stations, (d/(π r))<sup>2</sup> is a measure for the risk of the journey (let us call it the risk of the road). If the journey includes more than two stations, the risk of the journey is the sum of risks of the used roads.</p>
<p>A direct journey from the North Pole station to the South Pole station has the length πr and risk 1. The journey from the North Pole station to the South Pole station via (0,r,0) has the same length, but a smaller risk: (½πr/(πr))<sup>2</sup>+(½πr/(πr))<sup>2</sup>=0.5.</p>
<p>The minimal risk of a journey from the North Pole station to the South Pole station on C(r) is M(r).</p>
<p>You are given that M(7)=0.1784943998 rounded to 10 digits behind the decimal point. </p>
<p>Find ∑M(2<sup>n</sup>-1) for 1≤n≤15.</p>
<p>Give your answer rounded to 10 digits behind the decimal point in the form a.bcdefghijk.</p>
<hr>
<p><strong>危险的月球</strong></p>
<p>月球可以表示为以(0,0,0)为中心、半径为r的球体C(r)。</p>
<p>月球上的站点设立在C(r)表面坐标为整数的点处。位于坐标(0,0,r)的站点称为北极站，位于坐标(0,0,-r)的站点被称为南极站。</p>
<p>所有的站点通过沿大圆圆弧的最短路与其它站点相连。在两个站点之间的旅行是很危险的。如果两个站点之间路径的长度为d，则在两个站点之间旅行的危险程度为(d/(π r))<sup>2</sup>（或称之为该路径的危险程度）。如果一次旅行包括了多于两个站点，则旅行的危险程度为途中每一段路径的危险程度之和。</p>
<p>直接从北极站到南极站的旅行，其长度为πr，危险程度为1。从北极站到南极站途径(0,r,0)的旅行，总长度不变，但是危险程度更低：(½πr/(πr))<sup>2</sup>+(½πr/(πr))<sup>2</sup>=0.5。</p>
<p>从C(r)的北极站到南极站的旅行，其最低危险程度记为M(r)。</p>
<p>已知M(7)=0.1784943998，四舍五入到小数点后10位数字。</p>
<p>对于1≤n≤15，求∑M(2<sup>n</sup>-1)。</p>
<p>将你的答案四舍五入到小数点后10位数字，即形如a.bcdefghijk。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 354</title>
    <url>/354/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-354"><a href="#Problem-354" class="headerlink" title="Problem 354"></a><a href="https://projecteuler.net/problem=354">Problem 354</a></h1><hr>
<p><strong>Distances in a bee’s honeycomb</strong></p>
<p>Consider a honey bee’s honeycomb where each cell is a perfect regular hexagon with side length 1.</p>
<center><img src="/resources/images/0354_bee_honeycomb.png"></center>

<p>One particular cell is occupied by the queen bee.<br>For a positive real number L, let B(L) count the cells with distance L from the queen bee cell (all distances are measured from centre to centre); you may assume that the honeycomb is large enough to accommodate for any distance we wish to consider.<br>For example, B(√3) = 6, B(√21) = 12 and B(111 111 111) = 54.</p>
<p>Find the number of L ≤ 5·10<sup>11</sup> such that B(L) = 450.</p>
<hr>
<p><strong>蜜蜂蜂巢距离</strong></p>
<p>蜜蜂蜂巢的每个单元都是边长为1的正六边形。</p>
<center><img src="/resources/images/0354_bee_honeycomb.png"></center>

<p>其中一个单元被蜂后占据。<br>对于正实数L，记B(L)为距离蜂后所在单元的距离为L的单元总数（单元的距离指单元中心之间的距离）；你可以假定蜂巢足够大，允许我们在本题中考虑任意远的距离。<br>例如，B(√3) = 6，B(√21) = 12以及B(111 111 111) = 54。</p>
<p>有些L ≤ 5·10<sup>11</sup>满足B(L) = 450，求所有这样的L的数目。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 355</title>
    <url>/355/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-355"><a href="#Problem-355" class="headerlink" title="Problem 355"></a><a href="https://projecteuler.net/problem=355">Problem 355</a></h1><hr>
<p><strong>Maximal coprime subset</strong></p>
<p>Define Co(n) to be the maximal possible sum of a set of mutually co-prime elements from {1,&nbsp;2,&nbsp;…,&nbsp;n}. For example Co(10) is 30 and hits that maximum on the subset {1,&nbsp;5,&nbsp;7,&nbsp;8,&nbsp;9}.</p>
<p>You are given that Co(30) = 193 and Co(100) = 1356. </p>
<p>Find Co(200000).</p>
<hr>
<p><strong>最大互素子集</strong></p>
<p>取集合{1,&nbsp;2,&nbsp;…,&nbsp;n}的一个子集，使得其中的元素两两互质，记子集中各元素之和的最大值为Co(n)。例如，Co(10)为30，此时的子集为{1,&nbsp;5,&nbsp;7,&nbsp;8,&nbsp;9}。</p>
<p>已知Co(30) = 193以及Co(100) = 1356。</p>
<p>求Co(200000)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 356</title>
    <url>/356/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-356"><a href="#Problem-356" class="headerlink" title="Problem 356"></a><a href="https://projecteuler.net/problem=356">Problem 356</a></h1><hr>
<p><strong>Largest roots of cubic polynomials</strong></p>
<p>Let a<sub>n</sub> be the largest real root of a polynomial g(x) = x<sup>3</sup> - 2<sup>n</sup>·x<sup>2</sup> + n.<br>For example, a<sub>2</sub> = 3.86619826…</p>
<p>Find the last eight digits of $\sum^{30}_{i=1} \lfloor a_i^{987654321} \rfloor$.</p>
<p><u>Note</u>: $\lfloor a \rfloor$ represents the floor function.</p>
<hr>
<p><strong>三次多项式的最大根</strong></p>
<p>记a<sub>n</sub>为多项式g(x) = x<sup>3</sup> - 2<sup>n</sup>·x<sup>2</sup> + n的最大实根。<br>例如，a<sub>2</sub> = 3.86619826…</p>
<p>求$\sum^{30}_{i=1} \lfloor a_i^{987654321} \rfloor$的最后8位数字。</p>
<p><u>注</u>：$\lfloor a \rfloor$表示下取整函数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 357</title>
    <url>/357/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-357"><a href="#Problem-357" class="headerlink" title="Problem 357"></a><a href="https://projecteuler.net/problem=357">Problem 357</a></h1><hr>
<p><strong>Prime generating integers</strong></p>
<p>Consider the divisors of 30: 1,2,3,5,6,10,15,30.<br>It can be seen that for every divisor d of 30, d+30/d is prime.</p>
<p>Find the sum of all positive integers n not exceeding 100 000 000 such that for every divisor d of n, d+n/d is prime.</p>
<hr>
<p><strong>生成素数的整数</strong></p>
<p>考虑30的约数：1、2、3、5、6、10、15、30。<br>可以看出，对于30的每个约数d，d+30/d都是素数。</p>
<p>存在不超过100 000 000的正整数n，使得对于n的每个约数d，d+n/d都是素数；求所有这样的数n的和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 358</title>
    <url>/358/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-358"><a href="#Problem-358" class="headerlink" title="Problem 358"></a><a href="https://projecteuler.net/problem=358">Problem 358</a></h1><hr>
<p><strong>Cyclic numbers</strong></p>
<p>A <b>cyclic number</b> with n digits has a very interesting property:<br>When it is multiplied by 1, 2, 3, 4, … n, all the products have exactly the same digits, in the same order, but rotated in a circular fashion!</p>
<p>The smallest cyclic number is the 6-digit number 142857 :<br>142857 × 1 = 142857<br>142857 × 2 = 285714<br>142857 × 3 = 428571<br>142857 × 4 = 571428<br>142857 × 5 = 714285<br>142857 × 6 = 857142  </p>
<p>The next cyclic number is 0588235294117647 with 16 digits :<br>0588235294117647 × 1 = 0588235294117647<br>0588235294117647 × 2 = 1176470588235294<br>0588235294117647 × 3 = 1764705882352941<br>…<br>0588235294117647 × 16 = 9411764705882352</p>
<p>Note that for cyclic numbers, leading zeros are important.</p>
<p>There is only one cyclic number for which, the eleven leftmost digits are 00000000137 and the five rightmost digits are 56789 (i.e., it has the form 00000000137…56789 with an unknown number of digits in the middle). Find the sum of all its digits.</p>
<hr>
<p><strong>循环数</strong></p>
<p>n位<b>循环数</b>是指拥有如下有趣性质的数：<br>当它乘以1、2、3、4、……、n时，所有的乘积拥有按相同顺序排列的相同数字，只是在循环地轮转而已！</p>
<p>最小的循环数是6位数142857：<br>142857 × 1 = 142857<br>142857 × 2 = 285714<br>142857 × 3 = 428571<br>142857 × 4 = 571428<br>142857 × 5 = 714285<br>142857 × 6 = 857142  </p>
<p>下一个循环数是16位数0588235294117647：<br>0588235294117647 × 1 = 0588235294117647<br>0588235294117647 × 2 = 1176470588235294<br>0588235294117647 × 3 = 1764705882352941<br>……<br>0588235294117647 × 16 = 9411764705882352</p>
<p>注意对于循环数而言，前导零是很重要的。</p>
<p>满足以下条件的循环数是唯一的：其最左侧的11位数字为00000000137，最右侧的5位数字是56789（也就是说，它的形式是00000000137……56789，中间的数字未知）。求它的所有各位数字之和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 359</title>
    <url>/359/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-359"><a href="#Problem-359" class="headerlink" title="Problem 359"></a><a href="https://projecteuler.net/problem=359">Problem 359</a></h1><hr>
<p><strong>Hilbert’s New Hotel</strong></p>
<p>An infinite number of people (numbered 1, 2, 3, etc.) are lined up to get a room at Hilbert’s newest infinite hotel. The hotel contains an infinite number of floors (numbered 1, 2, 3, etc.), and each floor contains an infinite number of rooms (numbered 1, 2, 3, etc.). </p>
<p>Initially the hotel is empty. Hilbert declares a rule on how the n<sup>th</sup> person is assigned a room: person n gets the first vacant room in the lowest numbered floor satisfying either of the following:</p>
<ul>
<li>the floor is empty</li>
<li>the floor is not empty, and if the latest person taking a room in that floor is person m, then m + n is a perfect square</li>
</ul>
<p>Person 1 gets room 1 in floor 1 since floor 1 is empty.<br>Person 2 does not get room 2 in floor 1 since 1 + 2 = 3 is not a perfect square.<br>Person 2 instead gets room 1 in floor 2 since floor 2 is empty.<br>Person 3 gets room 2 in floor 1 since 1 + 3 = 4 is a perfect square.</p>
<p>Eventually, every person in the line gets a room in the hotel.</p>
<p>Define P(f, r) to be n if person n occupies room r in floor f, and 0 if no person occupies the room. Here are a few examples:<br>P(1, 1) = 1<br>P(1, 2) = 3<br>P(2, 1) = 2<br>P(10, 20) = 440<br>P(25, 75) = 4863<br>P(99, 100) = 19454</p>
<p>Find the sum of all P(f, r) for all positive f and r such that f × r = 71328803586048 and give the last 8 digits as your answer.</p>
<hr>
<p><strong>希尔伯特的新旅馆</strong></p>
<p>无穷多人（分别标号为1、2、3等等）在希尔伯特最新的无穷旅馆前排队想要住一间房。旅馆有无穷层（分别标号为1、2、3等等），每一层有无穷间房间（分别标号为1、2、3等等）。</p>
<p>一开始这个旅馆是空的。希尔伯特宣布了以下分配房间的规则：第n个人将在满足以下两个条件之一的最低楼层中获得编号最小的空房间：</p>
<ul>
<li>这层楼是空的</li>
<li>这层楼不是空的，前一个住进这层楼的是第m个人，且m + n为完全平方数</li>
</ul>
<p>第1个人住进第1层的房间1，因为第1层是空的。<br>第2个人无法住进第1层的房间2，因为1 + 2 = 3不是完全平方数。<br>第2个人只得住进第2层的房间1，因为第2层是空的。<br>第3个人住进第1层的房间2，因为1 + 3 = 4是完全平方数。</p>
<p>最终，队伍中的每个人都住进了旅馆中的一个房间。</p>
<p>若第f层的房间r住着第n个人，则记P(f, r)为n，若没有住人则记为0。以下是其中一些例子：<br>P(1, 1) = 1<br>P(1, 2) = 3<br>P(2, 1) = 2<br>P(10, 20) = 440<br>P(25, 75) = 4863<br>P(99, 100) = 19454</p>
<p>对于所有满足f × r = 71328803586048的正数f和r，求P(f, r)的和，并给出其最后8位数字作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 36</title>
    <url>/36/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-36"><a href="#Problem-36" class="headerlink" title="Problem 36"></a><a href="https://projecteuler.net/problem=36">Problem 36</a></h1><hr>
<h2 id="Double-base-Palindromes"><a href="#Double-base-Palindromes" class="headerlink" title="Double-base Palindromes"></a><strong>Double-base Palindromes</strong></h2><p>The decimal number, $585 = 1001001001_2$ (binary), is palindromic in both bases.</p>
<p>Find the sum of all numbers, less than one million, which are palindromic in base $10$ and base $2$.</p>
<p>(Please note that the palindromic number, in either base, may not include leading zeros.)</p>
<hr>
<h2 id="双进制回文数"><a href="#双进制回文数" class="headerlink" title="双进制回文数"></a><strong>双进制回文数</strong></h2><p>十进制数$585 = 1001001001_2$（二进制表示），因此它在这两种进制下都是回文数。</p>
<p>找出所有小于一百万，且在十进制和二进制下均回文的数，并求它们的和。</p>
<p>（请注意，无论在哪种进制下，回文数均不考虑前导零。）</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 360</title>
    <url>/360/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-360"><a href="#Problem-360" class="headerlink" title="Problem 360"></a><a href="https://projecteuler.net/problem=360">Problem 360</a></h1><hr>
<p><strong>Scary Sphere</strong></p>
<p>Given two points (x<sub>1</sub>,y<sub>1</sub>,z<sub>1</sub>) and (x<sub>2</sub>,y<sub>2</sub>,z<sub>2</sub>) in three dimensional space, the <b>Manhattan distance</b> between those points is defined as  |x<sub>1</sub>-x<sub>2</sub>|+|y<sub>1</sub>-y<sub>2</sub>|+|z<sub>1</sub>-z<sub>2</sub>|.</p>
<p>Let C(r) be a sphere with radius r and center in the origin O(0,0,0).<br>Let I(r) be the set of all points with integer coordinates on the surface of C(r).<br>Let S(r) be the sum of the Manhattan distances of all elements of I(r) to the origin O.</p>
<p>E.g. S(45)=34518.</p>
<p>Find S(10<sup>10</sup>).</p>
<hr>
<p><strong>可怕的球体</strong></p>
<p>给定三维空间中的两个点(x<sub>1</sub>,y<sub>1</sub>,z<sub>1</sub>)和(x<sub>2</sub>,y<sub>2</sub>,z<sub>2</sub>)，两点之间的<b>曼哈顿距离</b>被定义为|x<sub>1</sub>-x<sub>2</sub>|+|y<sub>1</sub>-y<sub>2</sub>|+|z<sub>1</sub>-z<sub>2</sub>|。</p>
<p>记C(r)为半径为r、以原点O(0,0,0)为中心的球体。<br>记I(r)为C(r)表面所有坐标为整数的点构成的集合。<br>记S(r)为I(r)中所有元素到原点O的曼哈顿距离之和。</p>
<p>例如，S(45)=34518。</p>
<p>求S(10<sup>10</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 361</title>
    <url>/361/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-361"><a href="#Problem-361" class="headerlink" title="Problem 361"></a><a href="https://projecteuler.net/problem=361">Problem 361</a></h1><hr>
<p><strong>Subsequence of Thue-Morse sequence</strong></p>
<p>The <b>Thue-Morse sequence</b> {T<sub>n</sub>} is a binary sequence satisfying:</p>
<ul>
<li>T<sub>0</sub> = 0</li>
<li>T<sub>2n</sub> = T<sub>n</sub></li>
<li>T<sub>2n+1</sub> = 1 - T<sub>n</sub></li>
</ul>
<p>The first several terms of {T<sub>n</sub>} are given as follows:<br>01101001<span style="color:red;">10010</span>1101001011001101001….</p>
<p>We define {A<sub>n</sub>} as the sorted sequence of integers such that the binary expression of each element appears as a subsequence in {T<sub>n</sub>}.<br>For example, the decimal number 18 is expressed as 10010 in binary. 10010 appears in {T<sub>n</sub>} (T<sub>8</sub> to T<sub>12</sub>), so 18 is an element of {A<sub>n</sub>}.<br>The decimal number 14 is expressed as 1110 in binary. 1110 never appears in {T<sub>n</sub>}, so 14 is not an element of {A<sub>n</sub>}.</p>
<p>The first several terms of A<sub>n</sub> are given as follows:</p>
<table>
<thead>
<tr>
<th>n</th>
<th>0&nbsp;</th>
<th>1&nbsp;</th>
<th>2&nbsp;</th>
<th>3&nbsp;</th>
<th>4&nbsp;</th>
<th>5&nbsp;</th>
<th>6&nbsp;</th>
<th>7&nbsp;</th>
<th>8&nbsp;</th>
<th>9&nbsp;</th>
<th>10</th>
<th>11</th>
<th>12</th>
<th>…</th>
</tr>
</thead>
<tbody><tr>
<td>$A_n$</td>
<td>0&nbsp;</td>
<td>1&nbsp;</td>
<td>2&nbsp;</td>
<td>3&nbsp;</td>
<td>4&nbsp;</td>
<td>5&nbsp;</td>
<td>6&nbsp;</td>
<td>9&nbsp;</td>
<td>10</td>
<td>11</td>
<td>12</td>
<td>13</td>
<td>18</td>
<td>…</td>
</tr>
</tbody></table>
<p>We can also verify that A<sub>100</sub> = 3251 and A<sub>1000</sub> = 80852364498.</p>
<p>Find the last 9 digits of $\sum_{k=1}^{18}A_{10^k}$.</p>
<hr>
<p><strong>图厄-摩尔斯序列的子序列</strong></p>
<p><b>图厄-摩尔斯序列</b> {T<sub>n</sub>}是满足下列条件的二进制序列：</p>
<ul>
<li>T<sub>0</sub> = 0</li>
<li>T<sub>2n</sub> = T<sub>n</sub></li>
<li>T<sub>2n+1</sub> = 1 - T<sub>n</sub></li>
</ul>
<p>{T<sub>n</sub>}的前几项如下所示：<br>01101001<span style="color:red;">10010</span>1101001011001101001….</p>
<p>有些整数的二进制表示是序列{T<sub>n</sub>}的子序列，我们定义{A<sub>n</sub>}为将这些数排序后组成的序列。<br>例如，十进制数18的二进制表示为10010。10010出现在{T<sub>n</sub>}中（从T<sub>8</sub>到T<sub>12</sub>），因此18是{A<sub>n</sub>}中的元素。<br>十进制数14的二进制表示为1110。1110永远不会出现在{T<sub>n</sub>}中，因此14不是{A<sub>n</sub>}中的元素。</p>
<p>A<sub>n</sub>的前几项如下所示：</p>
<table>
<thead>
<tr>
<th>n</th>
<th>0&nbsp;</th>
<th>1&nbsp;</th>
<th>2&nbsp;</th>
<th>3&nbsp;</th>
<th>4&nbsp;</th>
<th>5&nbsp;</th>
<th>6&nbsp;</th>
<th>7&nbsp;</th>
<th>8&nbsp;</th>
<th>9&nbsp;</th>
<th>10</th>
<th>11</th>
<th>12</th>
<th>…</th>
</tr>
</thead>
<tbody><tr>
<td>$A_n$</td>
<td>0&nbsp;</td>
<td>1&nbsp;</td>
<td>2&nbsp;</td>
<td>3&nbsp;</td>
<td>4&nbsp;</td>
<td>5&nbsp;</td>
<td>6&nbsp;</td>
<td>9&nbsp;</td>
<td>10</td>
<td>11</td>
<td>12</td>
<td>13</td>
<td>18</td>
<td>…</td>
</tr>
</tbody></table>
<p>我们还可以验证A<sub>100</sub> = 3251以及A<sub>1000</sub> = 80852364498。</p>
<p>求$\sum_{k=1}^{18}A_{10^k}$的最后9位数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 362</title>
    <url>/362/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-362"><a href="#Problem-362" class="headerlink" title="Problem 362"></a><a href="https://projecteuler.net/problem=362">Problem 362</a></h1><hr>
<p><strong>Squarefree factors</strong></p>
<p>Consider the number 54.<br>54 can be factored in 7 distinct ways into one or more factors larger than 1:<br>54, 2×27, 3×18, 6×9, 3×3×6, 2×3×9 and 2×3×3×3.<br>If we require that the factors are all squarefree only two ways remain: 3×3×6 and 2×3×3×3.</p>
<p>Let’s call Fsf(n) the number of ways n can be factored into one or more squarefree factors larger than 1, so Fsf(54)=2.</p>
<p>Let S(n) be ∑Fsf(k) for k=2 to n.</p>
<p>S(100)=193.</p>
<p>Find S(10 000 000 000). </p>
<hr>
<p><strong>无平方因子的因数</strong></p>
<p>考虑数54。<br>有7种不同的方式将54分解为一个或多个大于1的因数乘积：<br>54、2×27、3×18、6×9、3×3×6、2×3×9和2×3×3×3。<br>如果我们要求所有的因数都是无平方因子的，那么只剩下其中两种方式：3×3×6和2×3×3×3。</p>
<p>我们记Fsf(n)是将n分解为一个或多个大于1的无平方因子因数乘积的方式数，因此Fsf(54)=2。</p>
<p>记S(n)为∑Fsf(k)，其中k=2至n。</p>
<p>已知S(100)=193。</p>
<p>求S(10 000 000 000)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 363</title>
    <url>/363/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-363"><a href="#Problem-363" class="headerlink" title="Problem 363"></a><a href="https://projecteuler.net/problem=363">Problem 363</a></h1><hr>
<p><strong>Bézier Curves</strong></p>
<p>A cubic Bézier curve is defined by four points: P<sub>0</sub>, P<sub>1</sub>, P<sub>2</sub> and P<sub>3</sub>.</p>
<center><img src="/resources/images/0363_bezier.png"></center>

<p>The curve is constructed as follows:<br>On the segments P<sub>0</sub>P<sub>1</sub>, P<sub>1</sub>P<sub>2</sub> and P<sub>2</sub>P<sub>3</sub> the points Q<sub>0</sub>,Q<sub>1</sub> and Q<sub>2</sub> are drawn such that<br>P<sub>0</sub>Q<sub>0</sub> / P<sub>0</sub>P<sub>1</sub> = P<sub>1</sub>Q<sub>1</sub> / P<sub>1</sub>P<sub>2</sub> = P<sub>2</sub>Q<sub>2</sub> / P<sub>2</sub>P<sub>3</sub> = t (t in [0,1]).<br>On the segments Q<sub>0</sub>Q<sub>1</sub> and Q<sub>1</sub>Q<sub>2</sub> the points R<sub>0</sub> and R<sub>1</sub> are drawn such that<br>Q<sub>0</sub>R<sub>0</sub>  / Q<sub>0</sub>Q<sub>1</sub> = Q<sub>1</sub>R<sub>1</sub> / Q<sub>1</sub>Q<sub>2</sub> = t for the same value of t.<br>On the segment R<sub>0</sub>R<sub>1</sub> the point B is drawn such that R<sub>0</sub>B / R<sub>0</sub>R<sub>1</sub> = t for the same value of t.<br>The Bézier curve defined by the points P<sub>0</sub>, P<sub>1</sub>, P<sub>2</sub>, P<sub>3</sub> is the locus of B as Q<sub>0</sub> takes all possible positions on the segment P<sub>0</sub>P<sub>1</sub>.<br>(Please note that for all points the value of t is the same.)</p>
<p>At <a href="http://home.kpn.nl/hklein/bezier/bezier.html" target="_blank">this (external) web address</a> you will find an applet that allows you to drag the points P<sub>0</sub>, P<sub>1</sub>, P<sub>2</sub> and P<sub>3</sub> to see what the Bézier curve (green curve) defined by those points looks like. You can also drag the point Q<sub>0</sub> along the segment P<sub>0</sub>P<sub>1</sub>.</p>
<p>From the construction it is clear that the Bézier curve will be tangent to the segments P<sub>0</sub>P<sub>1</sub> in P<sub>0</sub> and P<sub>2</sub>P<sub>3</sub> in P<sub>3</sub>.</p>
<p>A cubic Bézier curve with P<sub>0</sub>=(1,0), P<sub>1</sub>=(1,v), P<sub>2</sub>=(v,1) and P<sub>3</sub>=(0,1) is used to approximate a quarter circle.<br>The value v &gt; 0 is chosen such that the area enclosed by the lines OP<sub>0</sub>, OP<sub>3</sub> and the curve is equal to <sup>π</sup>/<sub>4</sub> (the area of the quarter circle).</p>
<p>By how many percent does the length of the curve differ from the length of the quarter circle?</p>
<p>That is, if L is the length of the curve, calculate 100 × $\frac{L − π/2}{π/2}$.</p>
<p>Give your answer rounded to 10 digits behind the decimal point.</p>
<hr>
<p><strong>贝塞尔曲线</strong></p>
<p>一条立方贝塞尔曲线由四个点确定：P<sub>0</sub>、P<sub>1</sub>、P<sub>2</sub>和P<sub>3</sub>。</p>
<center><img src="/resources/images/0363_bezier.png"></center>

<p>曲线的构造方式如下所述：<br>在线段P<sub>0</sub>P<sub>1</sub>、P<sub>1</sub>P<sub>2</sub>和P<sub>2</sub>P<sub>3</sub>上，取点Q<sub>0</sub>、Q<sub>1</sub>和Q<sub>2</sub>，满足<br>P<sub>0</sub>Q<sub>0</sub> / P<sub>0</sub>P<sub>1</sub> = P<sub>1</sub>Q<sub>1</sub> / P<sub>1</sub>P<sub>2</sub> = P<sub>2</sub>Q<sub>2</sub> / P<sub>2</sub>P<sub>3</sub> = t (t 属于 [0,1])。<br>在线段Q<sub>0</sub>Q<sub>1</sub>和Q<sub>1</sub>Q<sub>2</sub>上，取点R<sub>0</sub>和R<sub>1</sub>，满足<br>Q<sub>0</sub>R<sub>0</sub>  / Q<sub>0</sub>Q<sub>1</sub> = Q<sub>1</sub>R<sub>1</sub> / Q<sub>1</sub>Q<sub>2</sub> = t，t的值同上。<br>在线段R<sub>0</sub>R<sub>1</sub>上，取点B，满足R<sub>0</sub>B / R<sub>0</sub>R<sub>1</sub> = t，t的值同上。<br>由点P<sub>0</sub>、P<sub>1</sub>、P<sub>2</sub>、P<sub>3</sub>确定的贝塞尔曲线即为Q<sub>0</sub>在线段P<sub>0</sub>P<sub>1</sub>上取遍所有位置时点B的轨迹。<br>（请注意，对于所有的取点过程，t的值都是相同的。）</p>
<p>在<a href="http://home.kpn.nl/hklein/bezier/bezier.html" target="_blank">这个（外部链接）网址</a>，你会找到一个应用，允许你拖动点P<sub>0</sub>、P<sub>1</sub>、P<sub>2</sub>和P<sub>3</sub>，以观察由这些点确定的贝塞尔曲线（绿色曲线）的外观。你也可以在线段P<sub>0</sub>P<sub>1</sub>上拖动点Q<sub>0</sub>。</p>
<p>根据构造过程，显然贝塞尔曲线在P<sub>0</sub>处与线段P<sub>0</sub>P<sub>1</sub>相切，在P<sub>3</sub>处于P<sub>2</sub>P<sub>3</sub>相切。</p>
<p>由P<sub>0</sub>=(1,0)、P<sub>1</sub>=(1,v)、P<sub>2</sub>=(v,1)和P<sub>3</sub>=(0,1)确定的贝塞尔曲线被用于近似表示四分之一圆.<br>适当地选取v &gt; 0，以使由线段OP<sub>0</sub>、OP<sub>3</sub>和该曲线包围的面积等于<sup>π</sup>/<sub>4</sub>（四分之一圆的面积）。</p>
<p>该曲线的长度和四分之一圆弧的长度相差百分之多少？</p>
<p>也就是说，如果该曲线的长度为L，试计算100 × $\frac{L − π/2}{π/2}$。</p>
<p>将你的答案保留小数点后10位数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 364</title>
    <url>/364/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-364"><a href="#Problem-364" class="headerlink" title="Problem 364"></a><a href="https://projecteuler.net/problem=364">Problem 364</a></h1><hr>
<p><strong>Comfortable distance</strong></p>
<p>There are N seats in a row. N people come after each other to fill the seats according to the following rules:</p>
<ol>
<li>If there is any seat whose adjacent seat(s) are not occupied take such a seat.</li>
<li>If there is no such seat and there is any seat for which only one adjacent seat is occupied take such a seat.</li>
<li>Otherwise take one of the remaining available seats. </li>
</ol>
<p>Let T(N) be the number of possibilities that N seats are occupied by N people with the given rules. The following figure shows T(4)=8.</p>
<center><img src="/resources/images/0364_comf_dist.gif"></center>

<p>We can verify that T(10) = 61632 and T(1 000) mod 100 000 007 = 47255094.</p>
<p>Find T(1 000 000) mod 100 000 007.</p>
<hr>
<p><strong>舒适距离</strong></p>
<p>有N个座位排成一行。N个人陆续前来，根据以下规则选择座位：</p>
<ol>
<li>如果存在空座位两侧都没有人，则选择这样的座位。</li>
<li>如果没有这样的座位，但存在空座位只有一侧有人，则选择这样的座位。</li>
<li>否则，选择任意一张剩下的空座位。</li>
</ol>
<p>记T(N)为在上述规则下N个人坐N个座位的所有可能性。下图说明T(4)=8。</p>
<center><img src="/resources/images/0364_comf_dist.gif"></center>

<p>我们可以验证T(10) = 61632以及T(1 000) mod 100 000 007 = 47255094。</p>
<p>求T(1 000 000) mod 100 000 007。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 365</title>
    <url>/365/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-365"><a href="#Problem-365" class="headerlink" title="Problem 365"></a><a href="https://projecteuler.net/problem=365">Problem 365</a></h1><hr>
<p><strong>A huge binomial coefficient</strong></p>
<p>The binomial coeffient C(10<sup>18</sup>,10<sup>9</sup>) is a number with more than 9 billion (9×10<sup>9</sup>) digits.</p>
<p>Let M(n,k,m) denote the binomial coefficient C(n,k) modulo m.</p>
<p>Calculate ∑M(10<sup>18</sup>,10<sup>9</sup>,p<em>q</em>r) for 1000&lt;p&lt;q&lt;r&lt;5000 and p,q,r prime.</p>
<hr>
<p><strong>巨大的二项式系数</strong></p>
<p>二项式系数C(10<sup>18</sup>,10<sup>9</sup>)是一个超过90亿（9×10<sup>9</sup>）位的数。</p>
<p>记M(n,k,m)为二项式系数C(n,k)除以m的余数。</p>
<p>对于素数1000&lt;p&lt;q&lt;r&lt;5000，试计算∑M(10<sup>18</sup>,10<sup>9</sup>,p<em>q</em>r)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 366</title>
    <url>/366/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-366"><a href="#Problem-366" class="headerlink" title="Problem 366"></a><a href="https://projecteuler.net/problem=366">Problem 366</a></h1><hr>
<h2 id="Stone-Game-III"><a href="#Stone-Game-III" class="headerlink" title="Stone Game III"></a><strong>Stone Game III</strong></h2><p>Two players, Anton and Bernhard, are playing the following game.<br>There is one pile of $n$ stones.<br /><br>The first player may remove any positive number of stones, but not the whole pile.<br>Thereafter, each player may remove at most twice the number of stones his opponent took on the previous move.<br>The player who removes the last stone wins.</p>
<p>E.g. $n=5$<br /><br>If the first player takes anything more than one stone the next player will be able to take all remaining stones.<br>If the first player takes one stone, leaving four, his opponent will take also one stone, leaving three stones.<br>The first player cannot take all three because he may take at most $2\times 1=2$ stones. So let’s say he takes also one stone, leaving $2$. The second player can take the two remaining stones and wins.<br /><br>So $5$ is a losing position for the first player.<br /><br>For some winning positions there is more than one possible move for the first player.<br>E.g. when $n=17$ the first player can remove one or four stones.</p>
<p>Let $M(n)$ be the maximum number of stones the first player can take from a winning position <i>at his first turn</i> and $M(n)=0$ for any other position.</p>
<p>$\sum M(n)$ for $n\le 100$ is $728$.</p>
<p>Find $\sum M(n)$ for $n\le 10^{18}$. Give your answer modulo $10^8$.</p>
<hr>
<h2 id="取石子游戏（三）"><a href="#取石子游戏（三）" class="headerlink" title="取石子游戏（三）"></a><strong>取石子游戏（三）</strong></h2><p>两名玩家安东和伯恩哈德正在玩下面这个游戏。<br>有一堆共$n$枚石子。<br /><br>先手玩家可以从堆中取走任意正数枚石子，但不能全部拿走。<br>此后，每名玩家可以从堆中取走的石子数目最多是其对手上一轮取走石子数目的两倍。<br>取走最后一枚石子的玩家获胜。</p>
<p>例如，若$n=5$<br /><br>如果先手玩家取走多于一枚石子，后手玩家总能取走剩下的全部石子。如果先手玩家取走一枚石子，他的对手将同样取走一枚石子，留下三枚石子。<br>先手玩家不能取走全部三枚石子，因为他最多只能取走$2 \times 1 = 2$枚石子。若他又取走一枚石子，留下两枚。后手玩家可以取走剩下两枚石子并获胜。<br /><br>因此$5$是先手玩家的必败态。<br /><br>在某些必胜态时，先手玩家可能有不止一种可行操作。<br>例如，若$n=17$，先手玩家可以先取走一枚或四枚石子。</p>
<p>对于先手玩家的必胜态，记$M(n)$为先手玩家<i class=zh>第一轮</i>最多取走的石子数目；对于必败态，记$M(n)=0$。</p>
<p>对于所有$n\le 100$，$\sum M(n)$为$728$。</p>
<p>对于所有$n\le 10^{18}$，求$\sum M(n)$，并将其对$10^8$取余作为你的答案。</p>
<p><i class=zh>译注：“取石子游戏（二）”参见第<a href="/325">325</a>题。</i></p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 367</title>
    <url>/367/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-367"><a href="#Problem-367" class="headerlink" title="Problem 367"></a><a href="https://projecteuler.net/problem=367">Problem 367</a></h1><hr>
<p><strong>Bozo sort</strong></p>
<p><b>Bozo sort</b>, not to be confused with the slightly less efficient <b>bogo sort</b>, consists out of checking if the input sequence is sorted and if not swapping randomly two elements. This is repeated until eventually the sequence is sorted.</p>
<p>If we consider all permutations of the first 4 natural numbers as input the expectation value of the number of swaps, averaged over all 4! input sequences is 24.75.<br>The already sorted sequence takes 0 steps. </p>
<p>In this problem we consider the following variant on bozo sort.<br>If the sequence is not in order we pick three elements at random and shuffle these three elements randomly.<br>All 3!=6 permutations of those three elements are equally likely.<br>The already sorted sequence will take 0 steps.<br>If we consider all permutations of the first 4 natural numbers as input the expectation value of the number of shuffles, averaged over all 4! input sequences is 27.5.<br>Consider as input sequences the permutations of the first 11 natural numbers.<br>Averaged over all 11! input sequences, what is the expected number of shuffles this sorting algorithm will perform?</p>
<p>Give your answer rounded to the nearest integer.</p>
<hr>
<p><strong>Bozo排序</strong></p>
<p><b>Bozo排序</b>常常会和稍微更没效率的<b>Bogo排序</b>相混淆，前者先检查输入序列是否是有序的，如果不是，则随机交换两个元素，不断重复这个过程，直到序列有序为止。</p>
<p>如果我们将前4个自然数的所有排列作为输入，这4!种输入序列所需交换次数的期望值平均是24.75。<br>已经有序的序列所需操作次数为0次。</p>
<p>在本题中，我们考虑Bozo排序的以下变种。<br>如果序列并不有序，我们随机选择三个元素，再随机重排这三个元素。<br>这三个元素所有3!=6种排列都等可能发生。<br>已经有序的序列所需操作次数为0次。<br>如果我们将前4个自然数的所有排列作为输入，这4!种输入序列所需重排次数的期望值平均是27.5。<br>现在考虑将前11个自然数的所有排列作为输入。<br>这11!种输入序列所需重排次数的期望值平均是多少？</p>
<p>将你的答案四舍五入到最近的整数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 368</title>
    <url>/368/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-368"><a href="#Problem-368" class="headerlink" title="Problem 368"></a><a href="https://projecteuler.net/problem=368">Problem 368</a></h1><hr>
<p><strong>A Kempner-like series</strong></p>
<p>The <b>harmonic series</b> $1+\frac{1}{2}+\frac{1}{3}+\frac{1}{4}+ … $is well known to be divergent. </p>
<p>If we however omit from this series every term where the denominator has a 9 in it, the series remarkably enough converges to approximately 22.9206766193.<br>This modified harmonic series is called the <b>Kempner</b> series.</p>
<p>Let us now consider another modified harmonic series by omitting from the harmonic series every term where the denominator has 3 or more equal consecutive digits. One can verify that out of the first 1200 terms of the harmonic series, only 20 terms will be omitted.<br>These 20 omitted terms are:</p>
<p>$\frac{1}{111}$, $\frac{1}{222}$, $\frac{1}{333}$, $\frac{1}{444}$, $\frac{1}{555}$, $\frac{1}{666}$, $\frac{1}{777}$, $\frac{1}{888}$, $\frac{1}{999}$, $\frac{1}{1000}$, $\frac{1}{1110}$,<br>$\frac{1}{1111}$, $\frac{1}{1112}$, $\frac{1}{1113}$, $\frac{1}{1114}$, $\frac{1}{1115}$, $\frac{1}{1116}$, $\frac{1}{1117}$, $\frac{1}{1118}$ and $\frac{1}{1119}$.</p>
<p>This series converges as well.</p>
<p>Find the value the series converges to.<br>Give your answer rounded to 10 digits behind the decimal point.</p>
<hr>
<p><strong>类肯普纳级数</strong></p>
<p>众所周知，<b>调和级数</b> $1+\frac{1}{2}+\frac{1}{3}+\frac{1}{4}+ … $是发散的。 </p>
<p>不过，如果我们忽略所有分母中含有数字9的项，新的级数将神奇地收敛到大约22.9206766193。<br>这种修正调和级数被称为<b>肯普纳</b>级数。</p>
<p>现在让我们考虑另外一种修正调和级数，忽略所有分母中有至少3个连续相同数字的项。可以验证，在调和级数的前1200项中，只有20项会被忽略。<br>这20个被忽略的项是：</p>
<p>$\frac{1}{111}$、$\frac{1}{222}$、$\frac{1}{333}$、$\frac{1}{444}$、$\frac{1}{555}$、$\frac{1}{666}$、$\frac{1}{777}$、$\frac{1}{888}$、$\frac{1}{999}$、$\frac{1}{1000}$、$\frac{1}{1110}$、<br>$\frac{1}{1111}$、$\frac{1}{1112}$、$\frac{1}{1113}$、$\frac{1}{1114}$、$\frac{1}{1115}$、$\frac{1}{1116}$、$\frac{1}{1117}$、$\frac{1}{1118}$和$\frac{1}{1119}$。</p>
<p>新的级数同样收敛。</p>
<p>求这个级数的收敛值。<br>将你的答案四舍五入到小数点后10位数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 369</title>
    <url>/369/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-369"><a href="#Problem-369" class="headerlink" title="Problem 369"></a><a href="https://projecteuler.net/problem=369">Problem 369</a></h1><hr>
<p><strong>Badugi</strong></p>
<p>In a standard 52 card deck of playing cards, a set of 4 cards is a <b>Badugi</b> if it contains 4 cards with no pairs and no two cards of the same suit.</p>
<p>Let f(n) be the number of ways to choose n cards with a 4 card subset that is a Badugi. For example, there are 2598960 ways to choose five cards from a standard 52 card deck, of which 514800 contain a 4 card subset that is a Badugi, so f(5) = 514800.</p>
<p>Find ∑f(n) for 4 ≤ n ≤ 13.</p>
<hr>
<p><strong>百得之</strong></p>
<p>从一副标准扑克牌的52张非鬼牌中取出4张，如果其中没有两张牌点数相同或花色相同，则称为<b>百得之</b>。</p>
<p>记f(n)为选择n张牌，使得其中有4张牌构成百得之的方法数。例如，从一副标准扑克牌的52张非鬼牌中取出5张，一共有2598960种取法，其中有514800种包含4张牌构成百得之，因此f(5) = 514800。</p>
<p>对于4 ≤ n ≤ 13，求∑f(n)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 37</title>
    <url>/37/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-37"><a href="#Problem-37" class="headerlink" title="Problem 37"></a><a href="https://projecteuler.net/problem=37">Problem 37</a></h1><hr>
<h2 id="Truncatable-Primes"><a href="#Truncatable-Primes" class="headerlink" title="Truncatable Primes"></a><strong>Truncatable Primes</strong></h2><p>The number $3797$ has an interesting property. Being prime itself, it is possible to continuously remove digits from left to right, and remain prime at each stage: $3797$, $797$, $97$, and $7$. Similarly we can work from right to left: $3797$, $379$, $37$, and $3$.</p>
<p>Find the sum of the only eleven primes that are both truncatable from left to right and right to left.</p>
<p>NOTE: $2$, $3$, $5$, and $7$ are not considered to be truncatable primes.</p>
<hr>
<h2 id="可截素数"><a href="#可截素数" class="headerlink" title="可截素数"></a><strong>可截素数</strong></h2><p>$3797$有着奇特的性质。它本身是一个素数；如果从左往右逐一截去数字，剩下的仍然都是素数：$3797$、$797$、$97$和$7$；如果从右往左逐一截去数字，剩下的也仍然都是素数：$3797$、$379$、$37$和$3$。</p>
<p>如果一个素数满足，无论从左往右还是从右往左逐一截去数字，剩下的仍然都是素数，则称之为可截素数。已知总共有十一个可截素数，求这些数的和。</p>
<p>注意：$2$、$3$、$5$和$7$不被视为可截素数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 370</title>
    <url>/370/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-370"><a href="#Problem-370" class="headerlink" title="Problem 370"></a><a href="https://projecteuler.net/problem=370">Problem 370</a></h1><hr>
<p><strong>Geometric triangles</strong></p>
<p>Let us define a <i>geometric triangle</i> as an integer sided triangle with sides a ≤ b ≤ c so that its sides form a <b>geometric progression</b>, i.e. b<sup>2</sup>&nbsp;=&nbsp;a&nbsp;·&nbsp;c&nbsp;.&nbsp; </p>
<p>An example of such a geometric triangle is the triangle with sides a = 144, b = 156 and c = 169.</p>
<p>There are 861805 geometric triangles with perimeter ≤ 10<sup>6</sup> .</p>
<p>How many geometric triangles exist with perimeter ≤ 2.5·10<sup>13</sup> ?</p>
<hr>
<p><strong>等比三角形</strong></p>
<p>若三角形的边长为整数a ≤ b ≤ c，且构成<b>等比数列</b>，即b<sup>2</sup>&nbsp;=&nbsp;a&nbsp;·&nbsp;c&nbsp;，则称之为<i>等比三角形</i>。</p>
<p>一个等比三角形的例子是边长为a = 144、b = 156、c = 169的三角形。</p>
<p>周长≤ 10<sup>6</sup>的等比三角形有861805个。</p>
<p>周长≤ 2.5·10<sup>13</sup>的等比三角形有多少个？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 371</title>
    <url>/371/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-371"><a href="#Problem-371" class="headerlink" title="Problem 371"></a><a href="https://projecteuler.net/problem=371">Problem 371</a></h1><hr>
<p><strong>Licence plates</strong></p>
<p>Oregon licence plates consist of three letters followed by a three digit number (each digit can be from [0..9]).<br>While driving to work Seth plays the following game:<br>Whenever the numbers of two licence plates seen on his trip add to 1000 that’s a win.</p>
<p>E.g. MIC-012 and HAN-988 is a win and RYU-500 and SET-500 too (as long as he sees them in the same trip). </p>
<p>Find the expected number of plates he needs to see for a win.<br>Give your answer rounded to 8 decimal places behind the decimal point.</p>
<p><b>Note:</b> We assume that each licence plate seen is equally likely to have any three digit number on it.</p>
<hr>
<p><strong>汽车牌照</strong></p>
<p>俄勒冈州的汽车牌照包括三个字母和一个三位数（每一位都可以取[0..9]）。<br>在开车上班的路上，赛斯会玩如下的游戏：<br>在他上班途中看到的所有汽车牌照中，如果有两个牌照上的三位数相加等于1000，则游戏获胜。</p>
<p>例如，MIC-012和HAN-988可以使他获胜，RYU-500和SET-500同样如此（只要他是在同一天上班途中看见的）。</p>
<p>求他想要获胜所需要看到的汽车牌照数的期望值。<br>将你的答案四舍五入到小数点后8位小数。</p>
<p><b>注意：</b>我们假定每一个三位数在赛斯看到的每一块汽车牌照上等概率地出现。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 372</title>
    <url>/372/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-372"><a href="#Problem-372" class="headerlink" title="Problem 372"></a><a href="https://projecteuler.net/problem=372">Problem 372</a></h1><hr>
<p><strong>Pencils of rays</strong></p>
<p>Let R(M, N) be the number of lattice points (x, y) which satisfy M&lt;x≤N, M&lt;y≤N and $\lfloor \frac{y^2}{x^2} \rfloor$ is odd.<br>We can verify that R(0, 100) = 3019 and R(100, 10000) = 29750422.<br>Find R(2·10<sup>6</sup>, 10<sup>9</sup>).</p>
<p><u><i>Note</i></u> : $\lfloor x \rfloor$ represents the floor function.</p>
<hr>
<p><strong>光锥</strong></p>
<p>记R(M, N)为满足M&lt;x≤N、M&lt;y≤N且$\lfloor \frac{y^2}{x^2} \rfloor$为奇数的格点(x, y)的数目。<br>我们可以验证R(0, 100) = 3019以及R(100, 10000) = 29750422。<br>求R(2·10<sup>6</sup>, 10<sup>9</sup>)。</p>
<p><u><i>注</i></u>：$\lfloor x \rfloor$表示下取整函数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 374</title>
    <url>/374/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-374"><a href="#Problem-374" class="headerlink" title="Problem 374"></a><a href="https://projecteuler.net/problem=374">Problem 374</a></h1><hr>
<p><strong>Maximum Integer Partition Product</strong></p>
<p>An integer partition of a number n is a way of writing n as a sum of positive integers.</p>
<p>Partitions that differ only in the order of their summands are considered the same. A partition of n into <b>distinct parts</b> is a partition of n in which every part occurs at most once.</p>
<p>The partitions of 5 into distinct parts are:<br>5, 4+1 and 3+2.</p>
<p>Let f(n) be the maximum product of the parts of any such partition of n into distinct parts and let m(n) be the number of elements of any such partition of n with that product.</p>
<p>So f(5)=6 and m(5)=2.</p>
<p>For n=10 the partition with the largest product is 10=2+3+5, which gives f(10)=30 and m(10)=3.<br>And their product, f(10)·m(10) = 30·3 = 90</p>
<p>It can be verified that<br>∑f(n)·m(n) for 1 ≤ n ≤ 100 = 1683550844462.</p>
<p>Find ∑f(n)·m(n) for 1 ≤ n ≤ 10<sup>14</sup>.<br>Give your answer modulo 982451653, the 50 millionth prime.</p>
<hr>
<p><strong>整数分拆最大乘积</strong></p>
<p>整数n的分拆是将n写成一系列正整数的和。</p>
<p>只有所加正整数顺序不同的分拆被认为是同样的分拆。n的<b>不等</b>分拆是指分拆后每个正整数至多出现一次的n的分拆。</p>
<p>5的不等分拆包括：<br>5、4+1和3+2。</p>
<p>记f(n)是n的不等分拆中各正整数乘积的最大值，并记m(n)为相应分拆中正整数的个数。</p>
<p>因此f(5)=6且m(5)=2。</p>
<p>对于n=10，乘积最大的分拆是10=2+3+5，因此f(10)=30且m(10)=3。<br>这两者的乘积为f(10)·m(10) = 30·3 = 90</p>
<p>可以验证<br>对于1 ≤ n ≤ 100，∑f(n)·m(n) = 1683550844462。</p>
<p>对于1 ≤ n ≤ 10<sup>14</sup>，求∑f(n)·m(n)。<br>将其除以第五千万个素数982451653取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 373</title>
    <url>/373/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-373"><a href="#Problem-373" class="headerlink" title="Problem 373"></a><a href="https://projecteuler.net/problem=373">Problem 373</a></h1><hr>
<p><strong>Circumscribed Circles</strong></p>
<p>Every triangle has a circumscribed circle that goes through the three vertices. Consider all integer sided triangles for which the radius of the circumscribed circle is integral as well.</p>
<p>Let S(n) be the sum of the radii of the circumscribed circles of all such triangles for which the radius does not exceed n.</p>
<p>S(100)=4950 and S(1200)=1653605.</p>
<p>Find S(10<sup>7</sup>).</p>
<hr>
<p><strong>外接圆</strong></p>
<p>每个三角形都有一个经过三个顶点的外接圆。考虑所有外接圆半径也是整数的整数边长三角形。</p>
<p>取其中外接圆半径不超过n的三角形，记它们的外接圆半径之和为S(n)。</p>
<p>已知S(100)=4950以及S(1200)=1653605。</p>
<p>求S(10<sup>7</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 375</title>
    <url>/375/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-375"><a href="#Problem-375" class="headerlink" title="Problem 375"></a><a href="https://projecteuler.net/problem=375">Problem 375</a></h1><hr>
<p><strong>Minimum of subsequences</strong></p>
<p>Let S<sub>n</sub> be an integer sequence produced with the following pseudo-random number generator:</p>
<p>$$S_0=290797$$ $$S_{n+1}=S_n^2 \text{ mod } 50515093$$</p>
<p>Let A(i, j) be the minimum of the numbers S<sub>i</sub>, S<sub>i+1</sub>, … , S<sub>j</sub> for i ≤ j.<br>Let M(N) = ΣA(i, j) for 1 ≤ i ≤ j ≤ N.<br>We can verify that M(10) = 432256955 and M(10 000) = 3264567774119.</p>
<p>Find M(2 000 000 000).</p>
<hr>
<p><strong>子序列最小值</strong></p>
<p>记S<sub>n</sub>为由下列伪随机数生成器生成的整数序列：</p>
<p>$$S_0=290797$$ $$S_{n+1}=S_n^2 \text{ mod } 50515093$$</p>
<p>记A(i, j)为数S<sub>i</sub>、S<sub>i+1</sub>、……、S<sub>j</sub>中的最小值，其中i ≤ j。<br>记M(N) = ΣA(i, j)，其中1 ≤ i ≤ j ≤ N。<br>我们可以验证M(10) = 432256955以及M(10 000) = 3264567774119。</p>
<p>求M(2 000 000 000)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 376</title>
    <url>/376/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-376"><a href="#Problem-376" class="headerlink" title="Problem 376"></a><a href="https://projecteuler.net/problem=376">Problem 376</a></h1><hr>
<p><strong>Nontransitive sets of dice</strong></p>
<p>Consider the following set of dice with nonstandard pips:</p>
<p>Die A: 1 4 4 4 4 4<br>Die B: 2 2 2 5 5 5<br>Die C: 3 3 3 3 3 6</p>
<p>A game is played by two players picking a die in turn and rolling it. The player who rolls the highest value wins.</p>
<p>If the first player picks die A and the second player picks die B we get<br>P(second player wins) = <sup>7</sup>/<sub>12</sub> &gt; <sup>1</sup>/<sub>2</sub></p>
<p>If the first player picks die B and the second player picks die C we get<br>P(second player wins) = <sup>7</sup>/<sub>12</sub> &gt; <sup>1</sup>/<sub>2</sub></p>
<p>If the first player picks die C and the second player picks die A we get<br>P(second player wins) = <sup>25</sup>/<sub>36</sub> &gt; <sup>1</sup>/<sub>2</sub></p>
<p>So whatever die the first player picks, the second player can pick another die and have a larger than 50% chance of winning.<br>A set of dice having this property is called a <b>nontransitive set of dice</b>.</p>
<p>We wish to investigate how many sets of nontransitive dice exist. We will assume the following conditions:</p>
<ul>
<li>There are three six-sided dice with each side having between 1 and N pips, inclusive.</li>
<li>Dice with the same set of pips are equal, regardless of which side on the die the pips are located.</li>
<li>The same pip value may appear on multiple dice; if both players roll the same value neither player wins.</li>
<li>The sets of dice {A,B,C}, {B,C,A} and {C,A,B} are the same set.</li>
</ul>
<p>For N = 7 we find there are 9780 such sets.<br>How many are there for N = 30 ?</p>
<hr>
<p><strong>非传递性骰子集合</strong></p>
<p>考虑如下的非标准骰子集合；</p>
<p>骰子A：1 4 4 4 4 4<br>骰子B：2 2 2 5 5 5<br>骰子C：3 3 3 3 3 6</p>
<p>两名玩家玩一个游戏，他们轮流选择一枚骰子，然后掷出，点数高者获胜。</p>
<p>如果先手玩家选择骰子A，而后手玩家选择骰子B，我们有<br>P(后手玩家获胜) = <sup>7</sup>/<sub>12</sub> &gt; <sup>1</sup>/<sub>2</sub></p>
<p>如果先手玩家选择骰子B，而后手玩家选择骰子C，我们有<br>P(后手玩家获胜) = <sup>7</sup>/<sub>12</sub> &gt; <sup>1</sup>/<sub>2</sub></p>
<p>如果先手玩家选择骰子C，而后手玩家选择骰子A，我们有<br>P(后手玩家获胜) = <sup>25</sup>/<sub>36</sub> &gt; <sup>1</sup>/<sub>2</sub></p>
<p>因此，无论先手玩家选择哪个骰子，后手玩家总能找到一枚骰子，使自己有超过50%的概率获胜。<br>拥有这一性质的骰子集合被称为<b>非传递性骰子集合</b>。</p>
<p>我们想要研究存在多少种非传递性骰子集合。首先，我们假设以下条件成立：</p>
<ul>
<li>有三枚六面骰子，每一面上的点数在1至N之间，包括1和N。</li>
<li>只要骰子上的点数均相同，无论点数标在哪个面上，都被视为相同的骰子。</li>
<li>多个骰子上可以有同样的点数；如果两名玩家掷出同样的点数则均不获胜。</li>
<li>骰子集合{A,B,C}、{B,C,A}和{C,A,B}是相同的集合。</li>
</ul>
<p>对于N = 7，我们能找到9780种这样的集合。<br>对于N = 30，有多少种这样的集合？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 377</title>
    <url>/377/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-377"><a href="#Problem-377" class="headerlink" title="Problem 377"></a><a href="https://projecteuler.net/problem=377">Problem 377</a></h1><hr>
<p><strong>Sum of digits, experience 13</strong></p>
<p>There are 16 positive integers that do not have a zero in their digits and that have a digital sum equal to 5, namely:<br>5, 14, 23, 32, 41, 113, 122, 131, 212, 221, 311, 1112, 1121, 1211, 2111 and 11111.<br>Their sum is 17891.</p>
<p>Let f(n) be the sum of all positive integers that do not have a zero in their digits and have a digital sum equal to n.</p>
<p>Find $\sum_{i=1}^{17}f(13^i)$.<br>Give the last 9 digits as your answer.</p>
<hr>
<p><strong>数字和，邂逅13</strong></p>
<p>数字中不包含零且各位数字之和等于5的正整数一共有16个，分别是：<br>5、14、23、32、41、113、122、131、212、221、311、1112、1121、1211、2111和11111。<br>它们的和是17891。</p>
<p>数字中不包含零且各位数字之和等于n的正整数之和记为f(n)。</p>
<p>求$\sum_{i=1}^{17}f(13^i)$。<br>给出其最后9位数字作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 378</title>
    <url>/378/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-378"><a href="#Problem-378" class="headerlink" title="Problem 378"></a><a href="https://projecteuler.net/problem=378">Problem 378</a></h1><hr>
<p><strong>Triangle Triples</strong></p>
<p>Let T(n) be the n<sup>th</sup> triangle number, so T(n) = $\frac{n(n+1)}{2}$.</p>
<p>Let dT(n) be the number of divisors of T(n).<br>E.g.: T(7) = 28 and dT(7) = 6.</p>
<p>Let Tr(n) be the number of triples (i, j, k) such that 1 ≤ i &lt; j &lt; k ≤ n and dT(i) &gt; dT(j) &gt; dT(k).<br>Tr(20) = 14, Tr(100) = 5772 and Tr(1000) = 11174776.</p>
<p>Find Tr(60 000 000).<br>Give the last 18 digits of your answer.</p>
<hr>
<p><strong>三角形三元组</strong></p>
<p>记T(n)为第n个三角形数，因此T(n) = $\frac{n(n+1)}{2}$。</p>
<p>记dT(n)为T(n)的约数数目。<br>例如：T(7) = 28，因此dT(7) = 6。</p>
<p>记Tr(n)为满足1 ≤ i &lt; j &lt; k ≤ n和dT(i) &gt; dT(j) &gt; dT(k)的三元组(i, j, k)的数目。<br>已知Tr(20) = 14，Tr(100) = 5772以及Tr(1000) = 11174776。</p>
<p>求Tr(60 000 000)。<br>给出其最后18位数字作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 379</title>
    <url>/379/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-379"><a href="#Problem-379" class="headerlink" title="Problem 379"></a><a href="https://projecteuler.net/problem=379">Problem 379</a></h1><hr>
<p><strong>Least common multiple count</strong></p>
<p>Let f(n) be the number of couples (x,y) with x and y positive integers, x ≤ y and the least common multiple of x and y equal to n.</p>
<p>Let g be the <b>summatory function</b> of f, i.e.: g(n) = ∑ f(i)  for 1 ≤ i ≤ n.</p>
<p>You are given that g(10<sup>6</sup>) = 37429395.</p>
<p>Find g(10<sup>12</sup>).</p>
<hr>
<p><strong>最小公倍数计数</strong></p>
<p>数对(x,y)满足x和y均为正整数，x ≤ y，以及x和y的最小公倍数等于n；记这类数对的数目为f(n)。</p>
<p>记g是f的<b>求和函数</b>，也就是说：g(n) = ∑ f(i)，其中1 ≤ i ≤ n。</p>
<p>已知g(10<sup>6</sup>) = 37429395。</p>
<p>求g(10<sup>12</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 38</title>
    <url>/38/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-38"><a href="#Problem-38" class="headerlink" title="Problem 38"></a><a href="https://projecteuler.net/problem=38">Problem 38</a></h1><hr>
<h2 id="Pandigital-Multiples"><a href="#Pandigital-Multiples" class="headerlink" title="Pandigital Multiples"></a><strong>Pandigital Multiples</strong></h2><p>Take the number $192$ and multiply it by each of $1$, $2$, and $3$:</p>
<blockquote>
<p>$192 × 1 = 192$<br /><br>$192 × 2 = 384$<br /><br>$192 × 3 = 576$</p>
</blockquote>
<p>By concatenating each product we get the $1$ to $9$ pandigital, $192384576$. We will call $192384576$ the concatenated product of $192$ and $(1,2,3)$</p>
<p>The same can be achieved by starting with $9$ and multiplying by $1$, $2$, $3$, $4$, and $5$, giving the pandigital, $918273645$, which is the concatenated product of $9$ and $(1,2,3,4,5)$.</p>
<p>What is the largest $1$ to $9$ pandigital 9-digit number that can be formed as the concatenated product of an integer with $(1,2, … ,n)$ where $n&gt;1$?</p>
<hr>
<h2 id="全数字的倍数"><a href="#全数字的倍数" class="headerlink" title="全数字的倍数"></a><strong>全数字的倍数</strong></h2><p>将$192$分别与$1$、$2$、$3$相乘：</p>
<blockquote>
<p>$192 × 1 = 192$<br /><br>$192 × 2 = 384$<br /><br>$192 × 3 = 576$</p>
</blockquote>
<p>将这些乘积拼接起来，可以得到一个$1$至$9$全数字的数$192384576$，因此称$192384576$为$192$和$(1,2,3)$的拼接乘积。</p>
<p>类似地，将$9$分别与$1$、$2$、$3$、$4$、$5$相乘，可以得到$1$至$9$全数字的数$918273645$，并称之为$9$和$(1,2,3,4,5)$的拼接乘积。</p>
<p>考虑所有$n&gt;1$时某个整数和$(1,2, … ,n)$的拼接乘积，其中最大的$1$至$9$全数字的数是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 381</title>
    <url>/381/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-381"><a href="#Problem-381" class="headerlink" title="Problem 381"></a><a href="https://projecteuler.net/problem=381">Problem 381</a></h1><hr>
<p><strong>(prime-k) factorial</strong></p>
<p>For a prime p let S(p) = (∑(p-k)!) mod(p) for 1 ≤ k ≤ 5.</p>
<p>For example, if p=7,<br>(7-1)! + (7-2)! + (7-3)! + (7-4)! + (7-5)! = 6! + 5! + 4! + 3! + 2! = 720+120+24+6+2 = 872.<br>As 872 mod(7) = 4, S(7) = 4.</p>
<p>It can be verified that ∑S(p) = 480 for 5 ≤ p &lt; 100.</p>
<p>Find ∑S(p) for 5 ≤ p &lt; 10<sup>8</sup>.</p>
<hr>
<p><strong>（素数-k）阶乘</strong></p>
<p>取素数p，令S(p) = (∑(p-k)!) mod(p)，其中1 ≤ k ≤ 5。</p>
<p>例如，如果p=7，<br>(7-1)! + (7-2)! + (7-3)! + (7-4)! + (7-5)! = 6! + 5! + 4! + 3! + 2! = 720+120+24+6+2 = 872。<br>由于872 mod(7) = 4，所以S(7) = 4。</p>
<p>可以验证，对于5 ≤ p &lt; 100，∑S(p) = 480。</p>
<p>对于5 ≤ p &lt; 10<sup>8</sup>，求∑S(p)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 380</title>
    <url>/380/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-380"><a href="#Problem-380" class="headerlink" title="Problem 380"></a><a href="https://projecteuler.net/problem=380">Problem 380</a></h1><hr>
<p><strong>Amazing Mazes!</strong></p>
<p>An m×n maze is an m×n rectangular grid with walls placed between grid cells such that there is exactly one path from the top-left square to any other square. The following are examples of a 9×12 maze and a 15×20 maze:</p>
<center><img src="/resources/images/0380_mazes.gif"></center>

<p>Let C(m,n) be the number of distinct m×n mazes. Mazes which can be formed by rotation and reflection from another maze are considered distinct.</p>
<p>It can be verified that C(1,1) = 1, C(2,2) = 4, C(3,4) = 2415, and C(9,12) = 2.5720e46 (in scientific notation rounded to 5 significant digits).<br>Find C(100,500) and write your answer in scientific notation rounded to 5 significant digits.</p>
<p>When giving your answer, use a lowercase e to separate mantissa and exponent. E.g. if the answer is 1234567891011 then the answer format would be 1.2346e12. </p>
<hr>
<p><strong>神奇的迷宫！</strong></p>
<p>将一个m×n的长方形网格的部分方格之间用墙隔开，使得从左上角的方格出发恰好只有一条路到达其它任意方格，就构建了一个m×n迷宫。如下所示是一个9×12迷宫和一个15×20迷宫：</p>
<center><img src="/resources/images/0380_mazes.gif"></center>

<p>记C(m,n)是不同的m×n迷宫的数目。如果一个迷宫可以通过旋转或翻转变为另一个，这两个迷宫仍然被认为是不同的。</p>
<p>可以验证C(1,1) = 1，C(2,2) = 4，C(3,4) = 2415，以及C(9,12) = 2.5720e46（用科学计数法表示，四舍五入至5位有效数字）。<br>求C(100,500)，并将你的答案用科学计数法表示，四舍五入至5位有效数字。</p>
<p>在给出你的答案时，用一个小写字母e隔开尾数和指数。例如，如果精确答案是1234567891011，那么提交的答案格式应当为1.2346e12。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 382</title>
    <url>/382/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-382"><a href="#Problem-382" class="headerlink" title="Problem 382"></a><a href="https://projecteuler.net/problem=382">Problem 382</a></h1><hr>
<p><strong>Generating polygons</strong></p>
<p>A <b>polygon</b> is a flat shape consisting of straight line segments that are joined to form a closed chain or circuit. A polygon consists of at least three sides and does not self-intersect.</p>
<p>A set S of positive numbers is said to <i>generate a polygon</i> P if:</p>
<ul>
<li>no two sides of P are the same length,</li>
<li>the length of every side of P is in S, and</li>
<li>S contains no other value.</li>
</ul>
<p>For example:<br>The set {3, 4, 5} generates a polygon with sides 3, 4, and 5 (a triangle).<br>The set {6, 9, 11, 24} generates a polygon with sides 6, 9, 11, and 24 (a quadrilateral).<br>The sets {1, 2, 3} and {2, 3, 4, 9} do not generate any polygon at all.</p>
<p>Consider the sequence s, defined as follows:</p>
<ul>
<li>s<sub>1</sub> = 1, s<sub>2</sub> = 2, s<sub>3</sub> = 3</li>
<li>s<sub>n</sub> = s<sub>n-1</sub> + s<sub>n-3</sub> for n &gt; 3.</li>
</ul>
<p>Let U<sub>n</sub> be the set {s<sub>1</sub>, s<sub>2</sub>, …, s<sub>n</sub>}. For example, U<sub>10</sub> = {1, 2, 3, 4, 6, 9, 13, 19, 28, 41}.<br>Let f(n) be the number of subsets of U<sub>n</sub> which generate at least one polygon.<br>For example, f(5) = 7, f(10) = 501 and f(25) = 18635853.</p>
<p>Find the last 9 digits of f(10<sup>18</sup>).</p>
<hr>
<p><strong>生成多边形</strong></p>
<p><b>多边形</b>是指由直线段相连接构成封闭路径的平面图形。一个多边形至少有三条边，而且边不能自交。</p>
<p>我们称正整数集S<i>生成了多边形P</i>，如果：</p>
<ul>
<li>P的任意两条边长度都不相等，</li>
<li>P的每一条边的长度都在集合S中，而且</li>
<li>S中不包含除P的边长外其它的值。</li>
</ul>
<p>举例来说：<br>集合{3, 4, 5}生成边长为3、4、5的多边形（三角形）。<br>集合{6, 9, 11, 24}生成边长为6、9、11、24的多边形（四边形）。<br>集合{1, 2, 3}和{2, 3, 4, 9}不能生成多边形。</p>
<p>考虑按如下方式定义的序列s：</p>
<ul>
<li>s<sub>1</sub> = 1，s<sub>2</sub> = 2，s<sub>3</sub> = 3</li>
<li>当n &gt; 3时，s<sub>n</sub> = s<sub>n-1</sub> + s<sub>n-3</sub>。</li>
</ul>
<p>记U<sub>n</sub>为集合{s<sub>1</sub>, s<sub>2</sub>, …, s<sub>n</sub>}。例如，U<sub>10</sub> = {1, 2, 3, 4, 6, 9, 13, 19, 28, 41}。<br>记f(n)为能够生成至少一个多边形的U<sub>n</sub>子集的数目。<br>例如，f(5) = 7，f(10) = 501以及f(25) = 18635853。</p>
<p>求f(10<sup>18</sup>)的最后9位数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 383</title>
    <url>/383/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-383"><a href="#Problem-383" class="headerlink" title="Problem 383"></a><a href="https://projecteuler.net/problem=383">Problem 383</a></h1><hr>
<p><strong>Divisibility comparison between factorials</strong></p>
<p>Let f<sub>5</sub>(n) be the largest integer x for which 5<sup>x</sup> divides n.<br>For example, f<sub>5</sub>(625000) = 7.</p>
<p>Let T<sub>5</sub>(n) be the number of integers i which satisfy f<sub>5</sub>((2·i-1)!) &lt; 2·f<sub>5</sub>(i!) and 1 ≤ i ≤ n.<br>It can be verified that T<sub>5</sub>(10<sup>3</sup>) = 68 and T<sub>5</sub>(10<sup>9</sup>) = 2408210.</p>
<p>Find T<sub>5</sub>(10<sup>18</sup>).</p>
<hr>
<p><strong>阶乘之间的整除性比较</strong></p>
<p>记f<sub>5</sub>(n)为使得5<sup>x</sup>整除n的最大整数x。<br>例如，f<sub>5</sub>(625000) = 7。</p>
<p>记T<sub>5</sub>(n)为满足f<sub>5</sub>((2·i-1)!) &lt; 2·f<sub>5</sub>(i!)且1 ≤ i ≤ n的整数i的数目。<br>可以验证，T<sub>5</sub>(10<sup>3</sup>) = 68以及T<sub>5</sub>(10<sup>9</sup>) = 2408210。</p>
<p>求T<sub>5</sub>(10<sup>18</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 384</title>
    <url>/384/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-384"><a href="#Problem-384" class="headerlink" title="Problem 384"></a><a href="https://projecteuler.net/problem=384">Problem 384</a></h1><hr>
<p><strong>Rudin-Shapiro sequence</strong></p>
<p>Define the sequence a(n) as the number of adjacent pairs of ones in the binary expansion of n (possibly overlapping).<br>E.g.: a(5) = a(101<sub>2</sub>) = 0, a(6) = a(110<sub>2</sub>) = 1, a(7) = a(111<sub>2</sub>) = 2</p>
<p>Define the sequence b(n) = (-1)<sup>a(n)</sup>.<br>This sequence is called the <b>Rudin-Shapiro</b> sequence.</p>
<p>Also consider the summatory sequence of b(n): $s(n)=\sum_{i=0}^{n}b(i)$.</p>
<p>The first couple of values of these sequences are:</p>
<table>
<thead>
<tr>
<th align="center">n</th>
<th align="center">&nbsp;0</th>
<th align="center">&nbsp;1</th>
<th align="center">&nbsp;2</th>
<th align="center">&nbsp;3</th>
<th align="center">&nbsp;4</th>
<th align="center">&nbsp;5</th>
<th align="center">&nbsp;6</th>
<th align="center">&nbsp;7</th>
</tr>
</thead>
<tbody><tr>
<td align="center">a(n)</td>
<td align="center">&nbsp;0</td>
<td align="center">&nbsp;0</td>
<td align="center">&nbsp;0</td>
<td align="center">&nbsp;1</td>
<td align="center">&nbsp;0</td>
<td align="center">&nbsp;0</td>
<td align="center">&nbsp;1</td>
<td align="center">&nbsp;2</td>
</tr>
<tr>
<td align="center">b(n)</td>
<td align="center">&nbsp;1</td>
<td align="center">&nbsp;1</td>
<td align="center">&nbsp;1</td>
<td align="center">-1</td>
<td align="center">&nbsp;1</td>
<td align="center">&nbsp;1</td>
<td align="center">-1</td>
<td align="center">&nbsp;1</td>
</tr>
<tr>
<td align="center">s(n)</td>
<td align="center">&nbsp;1</td>
<td align="center">&nbsp;2</td>
<td align="center">&nbsp;3</td>
<td align="center">&nbsp;2</td>
<td align="center">&nbsp;3</td>
<td align="center">&nbsp;4</td>
<td align="center">&nbsp;3</td>
<td align="center">&nbsp;4</td>
</tr>
</tbody></table>
<p>The sequence s(n) has the remarkable property that all elements are positive and every positive integer k occurs exactly k times.</p>
<p>Define g(t,c), with 1 ≤ c ≤ t, as the index in s(n) for which t occurs for the c’th time in s(n).<br>E.g.: g(3,3) = 6, g(4,2) = 7 and g(54321,12345) = 1220847710.</p>
<p>Let F(n) be the fibonacci sequence defined by:<br>F(0)=F(1)=1 and<br>F(n)=F(n-1)+F(n-2) for n&gt;1.</p>
<p>Define GF(t)=g(F(t),F(t-1)).</p>
<p>Find ΣGF(t) for 2≤t≤45.</p>
<hr>
<p><strong>鲁丁-夏皮罗序列</strong></p>
<p>定义序列a(n)为在n的二进制表示中两个1相邻出现的次数（可能有重叠）。<br>例如：a(5) = a(101<sub>2</sub>) = 0，a(6) = a(110<sub>2</sub>) = 1，a(7) = a(111<sub>2</sub>) = 2</p>
<p>定义序列b(n) = (-1)<sup>a(n)</sup>。<br>这个序列被称为<b>鲁丁-夏皮罗</b>序列。</p>
<p>同时，考虑b(n)的部分和序列：$s(n)=\sum_{i=0}^{n}b(i)$。</p>
<p>这些序列的前几项分别是：</p>
<table>
<thead>
<tr>
<th align="center">n</th>
<th align="center">&nbsp;0</th>
<th align="center">&nbsp;1</th>
<th align="center">&nbsp;2</th>
<th align="center">&nbsp;3</th>
<th align="center">&nbsp;4</th>
<th align="center">&nbsp;5</th>
<th align="center">&nbsp;6</th>
<th align="center">&nbsp;7</th>
</tr>
</thead>
<tbody><tr>
<td align="center">a(n)</td>
<td align="center">&nbsp;0</td>
<td align="center">&nbsp;0</td>
<td align="center">&nbsp;0</td>
<td align="center">&nbsp;1</td>
<td align="center">&nbsp;0</td>
<td align="center">&nbsp;0</td>
<td align="center">&nbsp;1</td>
<td align="center">&nbsp;2</td>
</tr>
<tr>
<td align="center">b(n)</td>
<td align="center">&nbsp;1</td>
<td align="center">&nbsp;1</td>
<td align="center">&nbsp;1</td>
<td align="center">-1</td>
<td align="center">&nbsp;1</td>
<td align="center">&nbsp;1</td>
<td align="center">-1</td>
<td align="center">&nbsp;1</td>
</tr>
<tr>
<td align="center">s(n)</td>
<td align="center">&nbsp;1</td>
<td align="center">&nbsp;2</td>
<td align="center">&nbsp;3</td>
<td align="center">&nbsp;2</td>
<td align="center">&nbsp;3</td>
<td align="center">&nbsp;4</td>
<td align="center">&nbsp;3</td>
<td align="center">&nbsp;4</td>
</tr>
</tbody></table>
<p>序列s(n)有一个奇特的性质，它的所有元素都是整数，而且每个正整数k恰好出现k次。</p>
<p>定义g(t,c)为t在s(n)中第c次出现时的下标，其中1 ≤ c ≤ t。<br>例如：g(3,3) = 6，g(4,2) = 7以及g(54321,12345) = 1220847710。</p>
<p>令F(n)表示斐波那契数列，按如下方式定义：<br>F(0)=F(1)=1 且<br>对于n&gt;1，F(n)=F(n-1)+F(n-2)。</p>
<p>定义GF(t)=g(F(t),F(t-1))。</p>
<p>对于2≤t≤45，求ΣGF(t)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 385</title>
    <url>/385/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-385"><a href="#Problem-385" class="headerlink" title="Problem 385"></a><a href="https://projecteuler.net/problem=385">Problem 385</a></h1><hr>
<p><strong>Ellipses inside triangles</strong></p>
<p>For any triangle T in the plane, it can be shown that there is a unique ellipse with largest area that is completely inside T.</p>
<center><img src="/resources/images/0385_ellipsetriangle.png"></center>

<p>For a given n, consider triangles T such that:</p>
<ul>
<li>the vertices of T have integer coordinates with absolute value ≤ n, and </li>
<li>the <b>foci</b><sup>1</sup> of the largest-area ellipse inside T are (√13,0) and (-√13,0).<br>Let A(n) be the sum of the areas of all such triangles.</li>
</ul>
<p>For example, if n = 8, there are two such triangles. Their vertices are (-4,-3),(-4,3),(8,0) and (4,3),(4,-3),(-8,0), and the area of each triangle is 36. Thus A(8) = 36 + 36 = 72.</p>
<p>It can be verified that A(10) = 252, A(100) = 34632 and A(1000) = 3529008.</p>
<p>Find A(1 000 000 000).</p>
<p><sup>1</sup>The <b>foci</b> (plural of <b>focus</b>) of an ellipse are two points A and B such that for every point P on the boundary of the ellipse, AP + PB is constant.</p>
<hr>
<p><strong>三角形内的椭圆</strong></p>
<p>对于平面上的任意三角形T，可以证明，完全包含在T内部的面积最大的椭圆是唯一的。</p>
<center><img src="/resources/images/0385_ellipsetriangle.png"></center>

<p>对于给定的n，考虑如下的三角形T：</p>
<ul>
<li>T的顶点的坐标均为绝对值≤ n的整数，而且 </li>
<li>T内面积最大的椭圆的<b>焦点</b><sup>1</sup>是(√13,0)和(-√13,0)。<br>记A(n)是所有这样的三角形的面积之和。</li>
</ul>
<p>例如，当n = 8时，有两个这样的三角形。它们的顶点分别是(-4,-3)、(-4,3)、(8,0)和(4,3)、(4,-3)、(-8,0)，面积均为36。因此A(8) = 36 + 36 = 72。</p>
<p>可以验证，A(10) = 252，A(100) = 34632以及A(1000) = 3529008。</p>
<p>求A(1 000 000 000)。</p>
<p><sup>1</sup>椭圆的<b>焦点</b>是椭圆内的两个点A和B，对于椭圆边界上的每一点P，满足AP + PB为常数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 386</title>
    <url>/386/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-386"><a href="#Problem-386" class="headerlink" title="Problem 386"></a><a href="https://projecteuler.net/problem=386">Problem 386</a></h1><hr>
<p><strong>Maximum length of an antichain</strong></p>
<p>Let n be an integer and S(n) be the set of factors of n.</p>
<p>A subset A of S(n) is called an <b>antichain</b> of S(n) if A contains only one element or if none of the elements of A divides any of the other elements of A.</p>
<p>For example: S(30) = {1, 2, 3, 5, 6, 10, 15, 30}<br>{2, 5, 6} is not an antichain of S(30).<br>{2, 3, 5} is an antichain of S(30).</p>
<p>Let N(n) be the maximum length of an antichain of S(n).</p>
<p>Find ΣN(n) for 1 ≤ n ≤ 10<sup>8</sup></p>
<hr>
<p><strong>反链的最大长度</strong></p>
<p>取整数n，记S(n)为n的约数构成的集合。</p>
<p>若S(n)的子集A只包含一个元素，或者A中任意一个元素均不能整除其它元素，则称A为S(n)的<b>反链</b>。</p>
<p>例如：S(30) = {1, 2, 3, 5, 6, 10, 15, 30}<br>{2, 5, 6}不是S(30)的反链。<br>{2, 3, 5}是S(30)的反链。</p>
<p>记N(n)为S(n)的反链的最大长度。</p>
<p>对于1 ≤ n ≤ 10<sup>8</sup>，求ΣN(n)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 388</title>
    <url>/388/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-388"><a href="#Problem-388" class="headerlink" title="Problem 388"></a><a href="https://projecteuler.net/problem=388">Problem 388</a></h1><hr>
<p><strong>Distinct Lines</strong></p>
<p>Consider all lattice points (a,b,c) with 0 ≤ a,b,c ≤ N.</p>
<p>From the origin O(0,0,0) all lines are drawn to the other lattice points.<br>Let D(N) be the number of <i>distinct</i> such lines.</p>
<p>You are given that D(1 000 000) = 831909254469114121.</p>
<p>Find D(10<sup>10</sup>). Give as your answer the first nine digits followed by the last nine digits.</p>
<hr>
<p><strong>不同的直线</strong></p>
<p>考虑所有满足0 ≤ a,b,c ≤ N的格点(a,b,c)。</p>
<p>从原点O(0,0,0)引直线穿过其它格点。<br>记D(N)为所有<i>不同</i>直线的数目。</p>
<p>已知D(1 000 000) = 831909254469114121。</p>
<p>求D(10<sup>10</sup>)，将其前九位数字和后九位数字作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 387</title>
    <url>/387/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-387"><a href="#Problem-387" class="headerlink" title="Problem 387"></a><a href="https://projecteuler.net/problem=387">Problem 387</a></h1><hr>
<p><strong>Harshad Numbers</strong></p>
<p>A <b>Harshad or Niven number</b> is a number that is divisible by the sum of its digits.<br>201 is a Harshad number because it is divisible by 3 (the sum of its digits).<br>When we truncate the last digit from 201, we get 20, which is a Harshad number.<br>When we truncate the last digit from 20, we get 2, which is also a Harshad number.<br>Let’s call a Harshad number that, while recursively truncating the last digit, always results in a Harshad number a <i>right truncatable Harshad number</i>.</p>
<p>Also:<br>201/3=67 which is prime.<br>Let’s call a Harshad number that, when divided by the sum of its digits, results in a prime a <i>strong Harshad number</i>.</p>
<p>Now take the number 2011 which is prime.<br>When we truncate the last digit from it we get 201, a strong Harshad number that is also right truncatable.<br>Let’s call such primes <i>strong, right truncatable Harshad primes</i>.</p>
<p>You are given that the sum of the strong, right truncatable Harshad primes less than 10000 is 90619.</p>
<p>Find the sum of the strong, right truncatable Harshad primes less than 10<sup>14</sup>.</p>
<hr>
<p><strong>哈沙德数</strong></p>
<p>能够被其各位数字和整除的数被称为<b>哈沙德数</b>或<b>奈文数</b>。<br>201是一个哈沙德数，因为它能被3整除（其各位数字和是3）。<br>如果我们截去201的最后一位数字，我们得到20，同样是一个哈沙德数。<br>如果我们截去20的最后一位数字，我们得到2，仍然是一个哈沙德数。<br>如果一个哈沙德数不断截去最后一位数字的结果始终是哈沙德数，我们称之为<i>可右截哈沙德数</i>。  </p>
<p>此外：<br>201/3=67是一个素数。<br>如果一个哈沙德数被其各位数字除的结果是一个素数，我们称之为<i>强哈沙德数</i>。</p>
<p>现在我们取素数2011。<br>如果我们截去2011的最后一位数字，我们得到201，一个可右截的强哈沙德数。<br>我们称这样的素数为<i>可右截强哈沙德素数</i>。</p>
<p>已知所有小于10000的可右截强哈沙德素数之和为90619。</p>
<p>求所有小于10<sup>14</sup>的可右截强哈沙德素数之和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 389</title>
    <url>/389/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-389"><a href="#Problem-389" class="headerlink" title="Problem 389"></a><a href="https://projecteuler.net/problem=389">Problem 389</a></h1><hr>
<p><strong>Platonic Dice</strong></p>
<p>An unbiased single 4-sided die is thrown and its value, T, is noted.<br>T unbiased 6-sided dice are thrown and their scores are added together. The sum, C, is noted.<br>C unbiased 8-sided dice are thrown and their scores are added together. The sum, O, is noted.<br>O unbiased 12-sided dice are thrown and their scores are added together. The sum, D, is noted.<br>D unbiased 20-sided dice are thrown and their scores are added together. The sum, I, is noted.<br>Find the variance of I, and give your answer rounded to 4 decimal places.</p>
<hr>
<p><strong>柏拉图多面体骰子</strong></p>
<p>掷一个无偏的正四面体骰子，记点数为T。<br>掷T个无偏的正六面体骰子，记点数和为C。<br>掷C个无偏的正八面体骰子，记点数和为O。<br>掷O个无偏的正十二面体骰子，记点数和为D。<br>掷D个无偏的正二十面体骰子，记点数和为I。<br>求I的方差，并将你的答案四舍五入到4位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 39</title>
    <url>/39/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-39"><a href="#Problem-39" class="headerlink" title="Problem 39"></a><a href="https://projecteuler.net/problem=39">Problem 39</a></h1><hr>
<h2 id="Integer-Right-Triangles"><a href="#Integer-Right-Triangles" class="headerlink" title="Integer Right Triangles"></a><strong>Integer Right Triangles</strong></h2><p>If $p$ is the perimeter of a right angle triangle with integral length sides, $\{a,b,c\}$, there are exactly three solutions for $p = 120$.</p>
<p>$$\{20,48,52\}, \{24,45,51\}, \{30,40,50\}$$</p>
<p>For which value of $p \le 1000$, is the number of solutions maximised?</p>
<hr>
<h2 id="整数边长直角三角形"><a href="#整数边长直角三角形" class="headerlink" title="整数边长直角三角形"></a><strong>整数边长直角三角形</strong></h2><p>考虑三边长$\{a,b,c\}$均为整数的直角三角形，并记其周长为$p$，当$p = 120$时，恰好存在三个不同的解：</p>
<p>$$\{20,48,52\}, \{24,45,51\}, \{30,40,50\}$$</p>
<p>在所有的$p \le 1000$中，$p$取何值时有最多个解？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 390</title>
    <url>/390/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-390"><a href="#Problem-390" class="headerlink" title="Problem 390"></a><a href="https://projecteuler.net/problem=390">Problem 390</a></h1><hr>
<p><strong>Triangles with non rational sides and integral area</strong></p>
<p>Consider the triangle with sides √5, √65 and √68. It can be shown that this triangle has area 9.</p>
<p>S(n) is the sum of the areas of all triangles with sides √(1+b<sup>2</sup>), √(1+c<sup>2</sup>) and √(b<sup>2</sup>+c<sup>2</sup>) (for positive integers b and c ) that have an integral area not exceeding n.</p>
<p>The example triangle has b=2 and c=8.</p>
<p>S(10<sup>6</sup>)=18018206.</p>
<p>Find S(10<sup>10</sup>).</p>
<hr>
<p><strong>边长为无理数而面积为整数的三角形</strong></p>
<p>考虑边长为√5、√65和√68的三角形，可以算出这个三角形的面积为9。</p>
<p>考虑所有边长为√(1+b<sup>2</sup>)、√(1+c<sup>2</sup>)和√(b<sup>2</sup>+c<sup>2</sup>)（b和c均为正整数），且面积为不超过n的整数的三角形，记其面积之和为S(n)。</p>
<p>取b=2和c=8即为上述样例三角形。</p>
<p>已知S(10<sup>6</sup>)=18018206。</p>
<p>求S(10<sup>10</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 391</title>
    <url>/391/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-391"><a href="#Problem-391" class="headerlink" title="Problem 391"></a><a href="https://projecteuler.net/problem=391">Problem 391</a></h1><hr>
<p><strong>Hopping Game</strong></p>
<p>Let s<sub>k</sub> be the number of 1’s when writing the numbers from 0 to k in binary.<br>For example, writing 0 to 5 in binary, we have 0, 1, 10, 11, 100, 101. There are seven 1’s, so s<sub>5</sub> = 7.<br>The sequence S = {s<sub>k</sub> : k ≥ 0} starts {0, 1, 2, 4, 5, 7, 9, 12, …}.</p>
<p>A game is played by two players. Before the game starts, a number n is chosen. A counter c starts at 0. At each turn, the player chooses a number from 1 to n (inclusive) and increases c by that number. The resulting value of c must be a member of S. If there are no more valid moves, the player loses.</p>
<p>For example:<br>Let n = 5. c starts at 0.<br>Player 1 chooses 4, so c becomes 0 + 4 = 4.<br>Player 2 chooses 5, so c becomes 4 + 5 = 9.<br>Player 1 chooses 3, so c becomes 9 + 3 = 12.<br>etc.<br>Note that c must always belong to S, and each player can increase c by at most n.</p>
<p>Let M(n) be the highest number the first player can choose at her first turn to force a win, and M(n) = 0 if there is no such move. For example, M(2) = 2, M(7) = 1 and M(20) = 4.</p>
<p>Given Σ(M(n))<sup>3</sup> = 8150 for 1 ≤ n ≤ 20.</p>
<p>Find Σ(M(n))<sup>3</sup> for 1 ≤ n ≤ 1000.</p>
<hr>
<p><strong>跳跃游戏</strong></p>
<p>写下数0至k的二进制表示，其中所有1的个数记为s<sub>k</sub>。<br>例如，写下0至5的二进制表示，即0、1、10、11、100、101，这其中一共有7个1，因此s<sub>5</sub> = 7。<br>序列S = {s<sub>k</sub> : k ≥ 0}的前几项为{0, 1, 2, 4, 5, 7, 9, 12, …}。</p>
<p>两名玩家正在玩一个游戏。在游戏开始前，先选定一个数n。计数器c在游戏开始时置为0。每一回合，玩家从1至n中选择一个数（包含），然后向计数器c加上这个数，其结果必须在集合S中。当不存在可行操作时，当前玩家输掉游戏。</p>
<p>例如：<br>取n = 5。c从0开始。<br>玩家1选择4，因此c变为0 + 4 = 4。<br>玩家2选择5，因此c变为4 + 5 = 9。<br>玩家1选择3，因此c变为9 + 3 = 12。<br>依此类推。<br>注意，c必须始终在集合S中，且每个玩家每回合最多给计数器c增加n。</p>
<p>记M(n)为先手玩家在保证必胜的前提下，在第一轮所能选择的最大的数；如果不存在这样的数，则M(n)=0。例如，M(2) = 2，M(7) = 1以及M(20) = 4。</p>
<p>已知对于1 ≤ n ≤ 20，Σ(M(n))<sup>3</sup> = 8150。</p>
<p>对于1 ≤ n ≤ 1000，求Σ(M(n))<sup>3</sup>。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 392</title>
    <url>/392/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-392"><a href="#Problem-392" class="headerlink" title="Problem 392"></a><a href="https://projecteuler.net/problem=392">Problem 392</a></h1><hr>
<p><strong>Enmeshed unit circle</strong></p>
<p>A rectilinear grid is an orthogonal grid where the spacing between the gridlines does not have to be equidistant.<br>An example of such grid is logarithmic graph paper.</p>
<p>Consider rectilinear grids in the Cartesian coordinate system with the following properties:</p>
<ul>
<li>The gridlines are parallel to the axes of the Cartesian coordinate system.</li>
<li>There are N+2 vertical and N+2 horizontal gridlines. Hence there are (N+1) x (N+1) rectangular cells.</li>
<li>The equations of the two outer vertical gridlines are x = -1 and x = 1.</li>
<li>The equations of the two outer horizontal gridlines are y = -1 and y = 1.</li>
<li>The grid cells are colored red if they overlap with the <dfn title="The unit circle is the circle that has radius 1 and is centered at the origin">unit circle</dfn>, black otherwise.</li>
</ul>
<p>For this problem we would like you to find the postions of the remaining N inner horizontal and N inner vertical gridlines so that the area occupied by the red cells is minimized.</p>
<p>E.g. here is a picture of the solution for N = 10:</p>
<center><img src="/resources/images/0392_gridlines.png"></center>

<p>The area occupied by the red cells for N = 10 rounded to 10 digits behind the decimal point is 3.3469640797.</p>
<p>Find the positions for N = 400.<br>Give as your answer the area occupied by the red cells rounded to 10 digits behind the decimal point.</p>
<hr>
<p><strong>单位圆陷阱</strong></p>
<p>所谓直线网格是指网格线间距不一定相等的直角网格。<br>这类网格的其中一个例子是对数图象纸。</p>
<p>考虑笛卡尔坐标系下满足如下性质的直线网格：</p>
<ul>
<li>网格线均平行于笛卡尔坐标系的坐标轴。</li>
<li>一共有N+2条竖直网格线和N+2条水平网格线，因此一共有(N+1) x (N+1) 个长方形网格单元。</li>
<li>最外侧两条竖直网格线的方程为x = -1和x = 1。</li>
<li>最外侧两条水平网格线的方程为y = -1和y = 1。</li>
<li>若网格单元和<dfn title="以原点为中心，半径为1的圆">单位圆</dfn>重叠则染上红色，否则染上黑色。</li>
</ul>
<p>在这个问题中，我们需要你确定剩下的N条竖直网格线和N条水平网格线，使得红色网格单元占据的总面积最小。</p>
<p>例如，下图是N = 10时最优解的图示：</p>
<center><img src="/resources/images/0392_gridlines.png"></center>

<p>当N = 10时，红色网格单元占据的总面积四舍五入到小数点后10位小数为3.3469640797。</p>
<p>求N = 400时各条网格线的位置。<br>你的答案应当是此时红色网格单元占据的总面积四舍五入到小数点后10位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 393</title>
    <url>/393/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-393"><a href="#Problem-393" class="headerlink" title="Problem 393"></a><a href="https://projecteuler.net/problem=393">Problem 393</a></h1><hr>
<p><strong>Migrating ants</strong></p>
<p>An n×n grid of squares contains n<sup>2</sup> ants, one ant per square.<br>All ants decide to move simultaneously to an adjacent square (usually 4 possibilities, except for ants on the edge of the grid or at the corners).<br>We define f(n) to be the number of ways this can happen without any ants ending on the same square and without any two ants crossing the same edge between two squares.</p>
<p>You are given that f(4) = 88.<br>Find f(10).</p>
<hr>
<p><strong>蚂蚁迁徙</strong></p>
<p>在n×n的方形网格上有n<sup>2</sup>只蚂蚁，每个方格上一只。<br>所有的蚂蚁决定同时移动到相邻的方格上（通常有4种可能，除非蚂蚁在网格的边上或角上）。<br>若没有两只蚂蚁在移动后落到同一方格或是移动时穿过了同一条边，记这样的移动方式总数为f(n)。</p>
<p>已知f(4) = 88。<br>求f(10)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 394</title>
    <url>/394/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-394"><a href="#Problem-394" class="headerlink" title="Problem 394"></a><a href="https://projecteuler.net/problem=394">Problem 394</a></h1><hr>
<p><strong>Eating pie</strong></p>
<p>Jeff eats a pie in an unusual way.<br>The pie is circular. He starts with slicing an initial cut in the pie along a radius.<br>While there is at least a given fraction F of pie left, he performs the following procedure:</p>
<ul>
<li>He makes two slices from the pie centre to any point of what is remaining of the pie border, any point on the remaining pie border equally likely. This will divide the remaining pie into three pieces. </li>
<li>Going counterclockwise from the initial cut, he takes the first two pie pieces and eats them.<br>When less than a fraction F of pie remains, he does not repeat this procedure. Instead, he eats all of the remaining pie.</li>
</ul>
<center><img src="/resources/images/0394_eatpie.gif"></center>

<p>For x ≥ 1, let E(x) be the expected number of times Jeff repeats the procedure above with F = <sup>1</sup>/<sub>x</sub>.<br>It can be verified that  E(1) = 1, E(2) ≈ 1.2676536759, and E(7.5) ≈ 2.1215732071.</p>
<p>Find E(40) rounded to 10 decimal places behind the decimal point.</p>
<hr>
<p><strong>吃馅饼</strong></p>
<p>杰夫用一种不同寻常的方式吃馅饼。<br>馅饼是圆形的，他先沿着一条半径在馅饼上切一刀。<br>如果剩下的馅饼不少于某个给定的比例F，他就进行如下步骤：</p>
<ul>
<li>他在剩下的馅饼边缘上等概率地选择两个点，然后从馅饼的中心到这两个点切两刀。这样剩下的馅饼就分为三份。</li>
<li>他从切这两刀之前切的位置处开始，按逆时针拿走前两份馅饼然后吃掉它们。<br>如果剩下的馅饼不足上述比例F，他就不再重复这些步骤，而是把剩下的馅饼全部拿走吃掉。</li>
</ul>
<center><img src="/resources/images/0394_eatpie.gif"></center>

<p>对于x ≥ 1，取F = <sup>1</sup>/<sub>x</sub>，记E(x)是杰夫重复上述步骤的期望次数。<br>可以验证E(1) = 1，E(2) ≈ 1.2676536759，以及E(7.5) ≈ 2.1215732071。</p>
<p>求E(40)，并四舍五入到小数点后10位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 395</title>
    <url>/395/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-395"><a href="#Problem-395" class="headerlink" title="Problem 395"></a><a href="https://projecteuler.net/problem=395">Problem 395</a></h1><hr>
<p><strong>Pythagorean tree</strong></p>
<p>The <b>Pythagorean tree</b> is a fractal generated by the following procedure:</p>
<p>Start with a unit square. Then, calling one of the sides its base (in the animation, the bottom side is the base):</p>
<ol>
<li>Attach a right triangle to the side opposite the base, with the hypotenuse coinciding with that side and with the sides in a 3-4-5 ratio. Note that the smaller side of the triangle must be on the ‘right’ side with respect to the base (see animation).</li>
<li>Attach a square to each leg of the right triangle, with one of its sides coinciding with that leg.</li>
<li>Repeat this procedure for both squares, considering as their bases the sides touching the triangle.<br>The resulting figure, after an infinite number of iterations, is the Pythagorean tree.</li>
</ol>
<center><img src="/resources/images/0395_pythagorean.gif"></center>

<p>It can be shown that there exists at least one rectangle, whose sides are parallel to the largest square of the Pythagorean tree, which encloses the Pythagorean tree completely.</p>
<p>Find the smallest area possible for such a bounding rectangle, and give your answer rounded to 10 decimal places.</p>
<hr>
<p><strong>毕达哥拉斯树</strong></p>
<p><b>毕达哥拉斯树</b>是按如下步骤生成的分形图形：</p>
<p>从一个单位正方形开始，以其中一条边为基底（在图示动画中，单位正方形下放的边作为基底）：</p>
<ol>
<li>给基底所对的边粘连上一个三边长之比为3-4-5的直角三角形，其中基底所对的边为斜边。注意直角三角形较短的直角边始终处在相对基底来说的右侧（参见动画演示）。</li>
<li>给直角三角形的两条直角边分别粘连上一个正方形，该直角边充当正方形的其中一条边。</li>
<li>对这两个正方形重复以上操作，并将正方形与之粘连的直角边作为基底。<br>经过无数次迭代所最终得到的三角形就是毕达哥拉斯树。</li>
</ol>
<center><img src="/resources/images/0395_pythagorean.gif"></center>

<p>可以证明，至少存在一个长方形，其各边与初始的单位正方形各边分别平行，且该长方形完整包含了整棵毕达哥拉斯树在其内部。</p>
<p>求这个长方形的最小面积，并将你的答案四舍五入至10位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 396</title>
    <url>/396/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-396"><a href="#Problem-396" class="headerlink" title="Problem 396"></a><a href="https://projecteuler.net/problem=396">Problem 396</a></h1><hr>
<p><strong>Weak Goodstein sequence</strong></p>
<p>For any positive integer n, the <b>nth weak Goodstein sequence</b> {g<sub>1</sub>, g<sub>2</sub>, g<sub>3</sub>, …} is defined as:</p>
<ul>
<li>g<sub>1</sub> = n </li>
<li>for k &gt; 1, g<sub>k</sub> is obtained by writing g<sub>k-1</sub> in base k, interpreting it as a base k + 1 number, and subtracting 1.</li>
</ul>
<p>The sequence terminates when g<sub>k</sub> becomes 0.</p>
<p>For example, the 6th weak Goodstein sequence is {6, 11, 17, 25, …}:</p>
<ul>
<li>g<sub>1</sub> = 6.</li>
<li>g<sub>2</sub> = 11 since 6 = 110<sub>2</sub>, 110<sub>3</sub> = 12, and 12 - 1 = 11.</li>
<li>g<sub>3</sub> = 17 since 11 = 102<sub>3</sub>, 102<sub>4</sub> = 18, and 18 - 1 = 17.</li>
<li>g<sub>4</sub> = 25 since 17 = 101<sub>4</sub>, 101<sub>5</sub> = 26, and 26 - 1 = 25.<br>and so on.</li>
</ul>
<p>It can be shown that every weak Goodstein sequence terminates.</p>
<p>Let G(n) be the number of nonzero elements in the nth weak Goodstein sequence.<br>It can be verified that G(2) = 3, G(4) = 21 and G(6) = 381.<br>It can also be verified that ΣG(n) = 2517 for 1 ≤ n &lt; 8.</p>
<p>Find the last 9 digits of ΣG(n) for 1 ≤ n &lt; 16.</p>
<hr>
<p><strong>弱古德斯坦序列</strong></p>
<p>对于任意正整数n，<b>第n个弱古德斯坦序列</b> {g<sub>1</sub>, g<sub>2</sub>, g<sub>3</sub>, …}按如下方式定义：</p>
<ul>
<li>g<sub>1</sub> = n </li>
<li>对于k &gt; 1，将g<sub>k-1</sub>写成k进制表示，然后将其视为k+1进制的数，最后减去1，得到g<sub>k</sub>。</li>
</ul>
<p>当g<sub>k</sub>变为0时序列终止。</p>
<p>例如，第6个弱古德斯坦序列为{6, 11, 17, 25, …}：</p>
<ul>
<li>g<sub>1</sub> = 6。</li>
<li>g<sub>2</sub> = 11，因为6 = 110<sub>2</sub>，然后110<sub>3</sub> = 12，最后12 - 1 = 11。</li>
<li>g<sub>3</sub> = 17，因为11 = 102<sub>3</sub>，然后102<sub>4</sub> = 18，最后18 - 1 = 17。</li>
<li>g<sub>4</sub> = 25，因为17 = 101<sub>4</sub>，然后101<sub>5</sub> = 26，最后26 - 1 = 25。<br>依此类推。</li>
</ul>
<p>可以证明所有弱古德斯坦序列都会终止。</p>
<p>记G(n)为第n个弱古德斯坦序列中的非零元素个数。<br>可以验证G(2) = 3，G(4) = 21以及G(6) = 381。<br>同样可以验证，对于1 ≤ n &lt; 8，ΣG(n) = 2517。</p>
<p>对于1 ≤ n &lt; 16，求ΣG(n)的最后9位数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 397</title>
    <url>/397/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-397"><a href="#Problem-397" class="headerlink" title="Problem 397"></a><a href="https://projecteuler.net/problem=397">Problem 397</a></h1><hr>
<p><strong>Triangle on parabola</strong></p>
<p>On the parabola y = x<sup>2</sup>/k, three points A(a, a<sup>2</sup>/k), B(b, b<sup>2</sup>/k) and C(c, c<sup>2</sup>/k) are chosen.</p>
<p>Let F(K, X) be the number of the integer quadruplets (k, a, b, c) such that at least one angle of the triangle ABC is 45-degree, with 1 ≤ k ≤ K and -X ≤ a &lt; b &lt; c ≤ X.</p>
<p>For example, F(1, 10) = 41 and F(10, 100) = 12492.<br>Find F(10<sup>6</sup>, 10<sup>9</sup>).</p>
<hr>
<p><strong>双曲线上的三角形</strong></p>
<p>在双曲线上y = x<sup>2</sup>/k上选择三个点A(a, a<sup>2</sup>/k)、B(b, b<sup>2</sup>/k)和C(c, c<sup>2</sup>/k)。</p>
<p>若四元整数组(k, a, b, c)满足1 ≤ k ≤ K以及-X ≤ a &lt; b &lt; c ≤ X，且使得三角形ABC至少有一个角为45度，记这样的四元整数组的总数为F(K, X)。</p>
<p>已知F(1, 10) = 41以及F(10, 100) = 12492。<br>求F(10<sup>6</sup>, 10<sup>9</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 398</title>
    <url>/398/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-398"><a href="#Problem-398" class="headerlink" title="Problem 398"></a><a href="https://projecteuler.net/problem=398">Problem 398</a></h1><hr>
<p><strong>Cutting rope</strong></p>
<p>Inside a rope of length n, n-1 points are placed with distance 1 from each other and from the endpoints. Among these points, we choose m-1 points at random and cut the rope at these points to create m segments.</p>
<p>Let E(n, m) be the expected length of the second-shortest segment.<br>For example, E(3, 2) = 2 and E(8, 3) = 16/7.<br>Note that if multiple segments have the same shortest length the length of the second-shortest segment is defined as the same as the shortest length.</p>
<p>Find E(10<sup>7</sup>, 100).<br>Give your answer rounded to 5 decimal places behind the decimal point.</p>
<hr>
<p><strong>割绳子</strong></p>
<p>在一条长为n的绳子上，分布有间距（及最外侧与绳子末端距离）为1的n-1个点。在这些点中，我们随机选择m-1个点，并在这些点处切开，使绳子分成m个分段。</p>
<p>记E(n, m)为第二短的分段的期望长度。<br>例如，E(3, 2) = 2以及E(8, 3) = 16/7。<br>注意如果有多个分段均为最短长度，那么第二短的分段长度即为最短长度。</p>
<p>求E(10<sup>7</sup>, 100)。<br>将你的答案四舍五入到小数点后5位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 4</title>
    <url>/4/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-4"><a href="#Problem-4" class="headerlink" title="Problem 4"></a><a href="https://projecteuler.net/problem=4">Problem 4</a></h1><hr>
<h2 id="Largest-Palindrome-Product"><a href="#Largest-Palindrome-Product" class="headerlink" title="Largest Palindrome Product"></a><strong>Largest Palindrome Product</strong></h2><p>A palindromic number reads the same both ways. The largest palindrome made from the product of two $2$-digit numbers is $9009 = 91 \times 99$.</p>
<p>Find the largest palindrome made from the product of two $3$-digit numbers.</p>
<hr>
<h2 id="最大回文乘积"><a href="#最大回文乘积" class="headerlink" title="最大回文乘积"></a><strong>最大回文乘积</strong></h2><p>回文数是指从前往后读和从后往前读都一样的数。由两个$2$位数相乘得到的回文数中，最大的是 $9009 = 91 \times 99$。</p>
<p>求最大的由两个$3$位数相乘得到的回文数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 399</title>
    <url>/399/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-399"><a href="#Problem-399" class="headerlink" title="Problem 399"></a><a href="https://projecteuler.net/problem=399">Problem 399</a></h1><hr>
<p><strong>Squarefree Fibonacci Numbers</strong></p>
<p>The first 15 fibonacci numbers are:<br>1,1,2,3,5,8,13,21,34,55,89,144,233,377,610.<br>It can be seen that 8 and 144 are not squarefree: 8 is divisible by 4 and 144 is divisible by 4 and by 9.<br>So the first 13 squarefree fibonacci numbers are:<br>1,1,2,3,5,13,21,34,55,89,233,377 and 610.</p>
<p>The 200th squarefree fibonacci number is:<br>971183874599339129547649988289594072811608739584170445.<br>The last sixteen digits of this number are: 1608739584170445 and in scientific notation this number can be written as 9.7e53.</p>
<p>Find the 100 000 000th squarefree fibonacci number.<br>Give as your answer its last sixteen digits followed by a comma followed by the number in scientific notation (rounded to one digit after the decimal point).<br>For the 200th squarefree number the answer would have been: 1608739584170445,9.7e53</p>
<font size="-1">
Note:
For this problem, assume that for every prime p, the first fibonacci number divisible by p is not divisible by p<sup>2</sup> (this is part of <b>Wall's conjecture</b>). This has been verified for primes ≤ 3·10<sup>15</sup>, but has not been proven in general.
If it happens that the conjecture is false, then the accepted answer to this problem isn't guaranteed to be the 100 000 000th squarefree fibonacci number, rather it represents only a lower bound for that number.
</font>

<hr>
<p><strong>无平方因子斐波那契数</strong></p>
<p>前15个斐波那契数是：<br>1，1，2，3，5，8，13，21，34，55，89，144，233，377，610。<br>可以看出8和144都不是无平方因子数：8能被4整除，而144能被4和9整除。<br>所以前13个无平方因子斐波那契数为：<br>1，1，2，3，5，13，21，34，55，89，233，377和610。</p>
<p>第200个无平方因子斐波那契数为：<br>971183874599339129547649988289594072811608739584170445.<br>这个数的最后十六位数字是：1608739584170445；用科学计数法表示，这个数可以写成9.7e53。</p>
<p>求第100,000,000个无平方因子斐波那契数。<br>你的答案应当为这个数的最后十六位数字和这个数的科学计数法表示（四舍五入到小数点后一位小数），用半角逗号隔开。<br>对于第200个无平方因子斐波那契数，你的答案应当写成：1608739584170445,9.7e53</p>
<font size="-1">
注意：
在这个问题中，我们假定对于任意素数p，第一个能够被p整除的斐波那契数不能够被p<sup>2</sup>整除（这是沃尔猜想的一部分）。目前，对于≤ 3·10<sup>15</sup>的素数，这个假定已经得到验证，然而并没有完全证明。
如果最终这个假定被证伪，那么这个问题目前给出的答案并不保证是第100,000,000个无平方因子斐波那契数，而只能作为其下界。
</font>

<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 40</title>
    <url>/40/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-40"><a href="#Problem-40" class="headerlink" title="Problem 40"></a><a href="https://projecteuler.net/problem=40">Problem 40</a></h1><hr>
<h2 id="Champernowne’s-Constant"><a href="#Champernowne’s-Constant" class="headerlink" title="Champernowne’s Constant"></a><strong>Champernowne’s Constant</strong></h2><p>An irrational decimal fraction is created by concatenating the positive integers:</p>
<p>$$0.12345678910{\color{red}1}112131415161718192021…$$</p>
<p>It can be seen that the $12$<sup>th</sup> digit of the fractional part is $1$.</p>
<p>If $d_n$ represents the $n$<sup>th</sup> digit of the fractional part, find the value of the following expression.</p>
<p>$$d_1 \times d_{10} \times d_{100} \times d_{1000} \times d_{10000} \times d_{100000} \times d_{1000000}$$</p>
<hr>
<h2 id="钱珀瑙恩常数"><a href="#钱珀瑙恩常数" class="headerlink" title="钱珀瑙恩常数"></a><strong>钱珀瑙恩常数</strong></h2><p>将所有正整数连接起来构造的一个十进制无理数如下所示：</p>
<p>$$0.12345678910{\color{red}1}112131415161718192021…$$</p>
<p>可以看出小数点后第$12$位数字是$1$。</p>
<p>如果$d_n$表示上述无理数小数点后的第$n$位数字，求下式的值：</p>
<p>$$d_1 \times d_{10} \times d_{100} \times d_{1000} \times d_{10000} \times d_{100000} \times d_{1000000}$$</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 400</title>
    <url>/400/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-400"><a href="#Problem-400" class="headerlink" title="Problem 400"></a><a href="https://projecteuler.net/problem=400">Problem 400</a></h1><hr>
<p><strong>Fibonacci tree game</strong></p>
<p>A <b>Fibonacci tree</b> is a binary tree recursively defined as:</p>
<ul>
<li>T(0) is the empty tree.</li>
<li>T(1) is the binary tree with only one node.</li>
<li>T(k) consists of a root node that has T(k-1) and T(k-2) as children.</li>
</ul>
<p>On such a tree two players play a take-away game. On each turn a player selects a node and removes that node along with the subtree rooted at that node.<br>The player who is forced to take the root node of the entire tree loses.</p>
<p>Here are the winning moves of the first player on the first turn for T(k) from k=1 to k=6.</p>
<center><img src="/resources/images/0400_winning.png"></center>

<p>Let f(k) be the number of winning moves of the first player (i.e. the moves for which the second player has no winning strategy) on the first turn of the game when this game is played on T(k).</p>
<p>For example, f(5) = 1 and f(10) = 17.</p>
<p>Find f(10000). Give the last 18 digits of your answer.</p>
<hr>
<p><strong>斐波那契树游戏</strong></p>
<p><b>斐波那契树</b>是一棵递归定义的二叉树：</p>
<ul>
<li>T(0)是一棵空树。</li>
<li>T(1)是只有一个结点的二叉树。</li>
<li>T(k)有一个根结点，其左右子树分别为T(k-1)和T(k-2)。</li>
</ul>
<p>在这棵树上，两个玩家进行一个取结点游戏。每一回合，一名玩家选择一个结点，并取走以这个结点为根结点的子树。<br>取走整棵树的根结点的玩家将输掉这个游戏。</p>
<p>以下是当k=1~6时，先手玩家面对T(k)第一步所有的必胜走法：</p>
<center><img src="/resources/images/0400_winning.png"></center>

<p>记f(k)是先手玩家面对T(k)时第一步所有的必胜走法数目（所谓必胜走法指保证后手玩家没有必胜策略）。</p>
<p>例如，f(5) = 1以及f(10) = 17。</p>
<p>求f(10000)。给出其最后18位数作为你答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 401</title>
    <url>/401/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-401"><a href="#Problem-401" class="headerlink" title="Problem 401"></a><a href="https://projecteuler.net/problem=401">Problem 401</a></h1><hr>
<p><strong>Sum of squares of divisors</strong></p>
<p>The divisors of 6 are 1,2,3 and 6.<br>The sum of the squares of these numbers is 1+4+9+36=50.</p>
<p>Let sigma2(n) represent the sum of the squares of the divisors of n. Thus sigma2(6)=50.</p>
<p>Let SIGMA2 represent the summatory function of sigma2, that is SIGMA2(n)=∑sigma2(i) for i=1 to n.<br>The first 6 values of SIGMA2 are: 1,6,16,37,63 and 113.</p>
<p>Find SIGMA2(10<sup>15</sup>) modulo 10<sup>9</sup>. </p>
<hr>
<p><strong>约数的平方和</strong></p>
<p>6的约数有1、2、3和6。<br>这些数的平方和是1+4+9+36=50。</p>
<p>我们记sigma2(n)是n的所有约数的平方和。因此sigma2(6)=50.</p>
<p>我们记SIGMA2是sigma2的和函数，也就是说SIGMA2(n)=∑sigma2(i)，其中i=1~n。<br>SIGMA2的前6项为：1、6、16、37、63和113。</p>
<p>求SIGMA2(10<sup>15</sup>)模10<sup>9</sup>取余的值。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 402</title>
    <url>/402/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-402"><a href="#Problem-402" class="headerlink" title="Problem 402"></a><a href="https://projecteuler.net/problem=402">Problem 402</a></h1><hr>
<p><strong>Integer-valued polynomials</strong></p>
<p>It can be shown that the polynomial n<sup>4</sup> + 4n<sup>3</sup> + 2n<sup>2</sup> + 5n is a multiple of 6 for every integer n. It can also be shown that 6 is the largest integer satisfying this property.</p>
<p>Define M(a, b, c) as the maximum m such that n<sup>4</sup> + an<sup>3</sup> + bn<sup>2</sup> + cn is a multiple of m for all integers n. For example, M(4, 2, 5) = 6.</p>
<p>Also, define S(N) as the sum of M(a, b, c) for all 0 &lt; a, b, c ≤ N.</p>
<p>We can verify that S(10) = 1972 and S(10000) = 2024258331114.</p>
<p>Let F<sub>k</sub> be the Fibonacci sequence:<br>F<sub>0</sub> = 0, F<sub>1</sub> = 1 and<br>F<sub>k</sub> = F<sub>k-1</sub> + F<sub>k-2</sub> for k ≥ 2.</p>
<p>Find the last 9 digits of Σ S(F<sub>k</sub>) for 2 ≤ k ≤ 1234567890123.</p>
<hr>
<p><strong>值为整数的多项式</strong></p>
<p>可以验证，对于任意整数n，n<sup>4</sup> + 4n<sup>3</sup> + 2n<sup>2</sup> + 5n是6的倍数，而6是最大的满足这一性质的整数。</p>
<p>若对于任意整数n，n<sup>4</sup> + an<sup>3</sup> + bn<sup>2</sup> + cn是整数m的倍数，记M(a, b, c)为m的最大值。例如，M(4, 2, 5) = 6。</p>
<p>记S(N)是所有满足0 &lt; a, b, c ≤ N的M(a, b, c)的和。</p>
<p>我们可以验证S(10) = 1972，以及S(10000) = 2024258331114。</p>
<p>记F<sub>k</sub>为斐波那契数列：<br>F<sub>0</sub> = 0，F<sub>1</sub> = 1 并且对于任意k ≥ 2<br>F<sub>k</sub> = F<sub>k-1</sub> + F<sub>k-2</sub>。</p>
<p>对于2 ≤ k ≤ 1234567890123，求Σ S(F<sub>k</sub>)的最后9位数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 403</title>
    <url>/403/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-403"><a href="#Problem-403" class="headerlink" title="Problem 403"></a><a href="https://projecteuler.net/problem=403">Problem 403</a></h1><hr>
<p><strong>Lattice points enclosed by parabola and line</strong></p>
<p>For integers a and b, we define D(a, b) as the domain enclosed by the parabola y = x<sup>2</sup> and the line y = a·x + b:<br>D(a, b) = { (x, y) | x<sup>2</sup> ≤ y ≤ a·x + b }.</p>
<p>L(a, b) is defined as the number of lattice points contained in D(a, b).<br>For example, L(1, 2) = 8 and L(2, -1) = 1.</p>
<p>We also define S(N) as the sum of L(a, b) for all the pairs (a, b) such that the area of D(a, b) is a rational number and |a|,|b| ≤ N.<br>We can verify that S(5) = 344 and S(100) = 26709528.</p>
<p>Find S(10<sup>12</sup>). Give your answer mod 10<sup>8</sup>.</p>
<hr>
<p><strong>被双曲线和直线包围的格点</strong></p>
<p>对于正整数a和b，我们用D(a, b)表示被双曲线y = x<sup>2</sup>和直线y = a·x + b包围的区域：<br>D(a, b) = { (x, y) | x<sup>2</sup> ≤ y ≤ a·x + b }.</p>
<p>定义L(a, b)为D(a, b)内的格点数目。<br>例如，L(1, 2) = 8，以及L(2, -1) = 1。</p>
<p>若整数对(a, b)满足D(a, b)的面积是有理数，且|a|,|b| ≤ N，我们定义所有相应的L(a, b)的和为S(N)。<br>我们可以验证S(5) = 344以及S(100) = 26709528。</p>
<p>求S(10<sup>12</sup>)。将你的答案模10<sup>8</sup>取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 404</title>
    <url>/404/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-404"><a href="#Problem-404" class="headerlink" title="Problem 404"></a><a href="https://projecteuler.net/problem=404">Problem 404</a></h1><hr>
<p><strong>Crisscross Ellipses</strong></p>
<p>E<sub>a</sub> is an ellipse with an equation of the form x<sup>2</sup> + 4y<sup>2</sup> = 4a<sup>2</sup>.<br>E<sub>a</sub>‘ is the rotated image of E<sub>a</sub> by θ degrees counterclockwise around the origin O(0, 0) for 0° &lt; θ &lt; 90°.</p>
<center><img src="/resources/images/0404_c_ellipse.gif"></center>

<p>b is the distance to the origin of the two intersection points closest to the origin and c is the distance of the two other intersection points.<br>We call an ordered triplet (a, b, c) a canonical ellipsoidal triplet if a, b and c are positive integers.<br>For example, (209, 247, 286) is a canonical ellipsoidal triplet.</p>
<p>Let C(N) be the number of distinct canonical ellipsoidal triplets (a, b, c) for a ≤ N.<br>It can be verified that C(10<sup>3</sup>) = 7, C(10<sup>4</sup>) = 106 and C(10<sup>6</sup>) = 11845.</p>
<p>Find C(10<sup>17</sup>).</p>
<hr>
<p><strong>交错的椭圆</strong></p>
<p>E<sub>a</sub>是一个椭圆，其方程为x<sup>2</sup> + 4y<sup>2</sup> = 4a<sup>2</sup>。<br>E<sub>a</sub>‘是将E<sub>a</sub>绕原点O(0, 0)逆时针旋转角θ得到的图形，其中0° &lt; θ &lt; 90°。</p>
<center><img src="/resources/images/0404_c_ellipse.gif"></center>

<p>b是两个椭圆离原点较近的两个交点到原点的距离，而c是另外两个较远的交点到远点的距离。<br>如果有序三元组(a, b, c)中a、b和c均为正整数，我们称之为规范椭圆三元组。<br>例如，(209, 247, 286)就是一个规范椭圆三元组。</p>
<p>记C(N)为所有满足a ≤ N的规范椭圆三元组(a, b, c)的数目。<br>可以验证C(10<sup>3</sup>) = 7，C(10<sup>4</sup>) = 106，以及C(10<sup>6</sup>) = 11845。</p>
<p>求C(10<sup>17</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 405</title>
    <url>/405/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-405"><a href="#Problem-405" class="headerlink" title="Problem 405"></a><a href="https://projecteuler.net/problem=405">Problem 405</a></h1><hr>
<p><strong>A rectangular tiling</strong></p>
<p>We wish to tile a rectangle whose length is twice its width.<br>Let T(0) be the tiling consisting of a single rectangle.<br>For n &gt; 0, let T(n) be obtained from T(n-1) by replacing all tiles in the following manner:</p>
<center><img src="/resources/images/0405_tile1.png"></center>

<p>The following animation demonstrates the tilings T(n) for n from 0 to 5:</p>
<center><img src="/resources/images/0405_tile2.gif"></center>

<p>Let f(n) be the number of points where four tiles meet in T(n).<br>For example, f(1) = 0, f(4) = 82 and f(10<sup>9</sup>) mod 17<sup>7</sup> = 126897180.</p>
<p>Find f(10<sup>k</sup>) for k = 10<sup>18</sup>, give your answer modulo 17<sup>7</sup>.</p>
<hr>
<p><strong>给长方形铺地砖</strong></p>
<p>我们希望给一个长是宽的两倍的长方形铺上地砖。<br>T(0)表示只用一个长方形的铺法。<br>对于n &gt; 0，T(n)表示以T(n-1)为基础，将后者的每一块地砖作如下替换得到的新铺法：</p>
<center><img src="/resources/images/0405_tile1.png"></center>

<p>以下动画演示了n从0到5时的T(n)：</p>
<center><img src="/resources/images/0405_tile2.gif"></center>

<p>记f(n)是T(n)中有四块地砖相遇的点的数目。<br>已知f(1) = 0，f(4) = 82，以及f(10<sup>9</sup>) mod 17<sup>7</sup> = 126897180。</p>
<p>当k = 10<sup>18</sup>时，求f(10<sup>k</sup>)，并将其模17<sup>7</sup>取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 406</title>
    <url>/406/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-406"><a href="#Problem-406" class="headerlink" title="Problem 406"></a><a href="https://projecteuler.net/problem=406">Problem 406</a></h1><hr>
<p><strong>Guessing Game</strong></p>
<p>We are trying to find a hidden number selected from the set of integers {1, 2, …, n} by asking questions. Each number (question) we ask, we get one of three possible answers:</p>
<ul>
<li>“Your guess is lower than the hidden number” (and you incur a cost of a), or</li>
<li>“Your guess is higher than the hidden number” (and you incur a cost of b), or</li>
<li>“Yes, that’s it!” (and the game ends).</li>
</ul>
<p>Given the value of n, a, and b, an <em>optimal strategy</em> minimizes the total cost <u>for the worst possible case</u>.</p>
<p>For example, if n = 5, a = 2, and b = 3, then we may begin by asking “<strong>2</strong>“ as our first question.</p>
<p>If we are told that 2 is higher than the hidden number (for a cost of b=3), then we are sure that “<strong>1</strong>“ is the hidden number (for a total cost of <span style="color:blue;"><strong>3</strong></span>).<br>If we are told that 2 is lower than the hidden number (for a cost of a=2), then our next question will be “<strong>4</strong>“.<br>If we are told that 4 is higher than the hidden number (for a cost of b=3), then we are sure that “<strong>3</strong>“ is the hidden number (for a total cost of 2+3=<span style="color:blue;"><strong>5</strong></span>).<br>If we are told that 4 is lower than the hidden number (for a cost of a=2), then we are sure that “<strong>5</strong>“ is the hidden number (for a total cost of 2+2=<span style="color:blue;"><strong>4</strong></span>).<br>Thus, the worst-case cost achieved by this strategy is <span style="color:red;"><strong>5</strong></span>. It can also be shown that this is the lowest worst-case cost that can be achieved. So, in fact, we have just described an optimal strategy for the given values of n, a, and b.</p>
<p>Let C(n, a, b) be the worst-case cost achieved by an optimal strategy for the given values of n, a, and b.</p>
<p>Here are a few examples:<br>C(5, 2, 3) = 5<br>C(500, √2, √3) = 13.22073197…<br>C(20000, 5, 7) = 82<br>C(2000000, √5, √7) = 49.63755955…</p>
<p>Let F<sub>k</sub> be the Fibonacci numbers: F<sub>k</sub> = F<sub>k-1</sub> + F<sub>k-2</sub> with base cases F<sub>1</sub> = F<sub>2</sub> = 1.<br>Find ∑<sub>1≤k≤30</sub>&nbsp;C(10<sup>12</sup>, √k, √F<sub>k</sub>), and give your answer rounded to 8 decimal places behind the decimal point.</p>
<hr>
<p><strong>猜数游戏</strong></p>
<p>我们尝试通过提问来确定整数集合{1, 2, …, n}中的某个特定数。每次提问时我们说一个数，可能会得到下面三个回答中的一个：</p>
<ul>
<li>“你的猜测比准确数要小。”（同时你需要付出成本a），或者</li>
<li>“你的猜测比准确数要大。”（同时你需要付出成本b），或者</li>
<li>“你猜对了！”（游戏结束）。</li>
</ul>
<p>给定n, a和b的值，可以找到<em>最优策略</em>最小化<u>在最差的可能情况下</u>的总成本。</p>
<p>例如，如果n = 5, a = 2，以及b = 3，那么我们第一次提问应该猜“<strong>2</strong>”。</p>
<p>如果2比准确数要大（付出成本b=3），我们就知道“<strong>1</strong>”是准确数（总成本为<span style="color:blue;"><strong>3</strong></span>）。<br>如果2比准确数要小（付出成本a=2），我们下一次提问猜“<strong>4</strong>”。<br>如果4比准确数要大（付出成本b=3），我们确信“<strong>3</strong>”是准确数（总成本为2+3=<span style="color:blue;"><strong>5</strong></span>）。<br>如果4比准确数要小（付出成本a=2），我们确信“<strong>5</strong>”是准确数（总成本为2+2=<span style="color:blue;"><strong>4</strong></span>）。<br>因此，这个策略的最差情况总成本是<span style="color:red;"><strong>5</strong></span>。可以证明这也是最小的最差情况总成本。事实上，以上描述的就是在一个给定的n, a和b值下的最优策略。</p>
<p>记C(n, a, b)是在给定n, a和b值下最优策略的最差情况总成本。</p>
<p>如下是其中一些例子：<br>C(5, 2, 3) = 5<br>C(500, √2, √3) = 13.22073197…<br>C(20000, 5, 7) = 82<br>C(2000000, √5, √7) = 49.63755955…</p>
<p>记F<sub>k</sub>是斐波那契数：F<sub>k</sub> = F<sub>k-1</sub> + F<sub>k-2</sub>，起始条件为F<sub>1</sub> = F<sub>2</sub> = 1。<br>求∑<sub>1≤k≤30</sub>&nbsp;C(10<sup>12</sup>, √k, √F<sub>k</sub>)，并将答案四舍五入到小数点后八位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 407</title>
    <url>/407/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-407"><a href="#Problem-407" class="headerlink" title="Problem 407"></a><a href="https://projecteuler.net/problem=407">Problem 407</a></h1><hr>
<p><strong>Idempotents</strong></p>
<p>If we calculate a<sup>2</sup> mod 6 for 0 ≤ a ≤ 5 we get: 0,1,4,3,4,1.</p>
<p>The largest value of a such that a<sup>2</sup> ≡ a mod 6 is 4.<br>Let’s call M(n) the largest value of a &lt; n such that a<sup>2</sup> ≡ a (mod n).<br>So M(6) = 4.</p>
<p>Find ∑M(n) for 1 ≤ n ≤ 10<sup>7</sup>.</p>
<hr>
<p><strong>幂等元</strong></p>
<p>对于0 ≤ a ≤ 5，分别计算a<sup>2</sup> mod 6，我们得到： 0,1,4,3,4,1。</p>
<p>使得a<sup>2</sup> ≡ a mod 6的最大a值为4。<br>我们用M(n)表示使得a<sup>2</sup> ≡ a (mod n)的最大的a &lt; n。<br>因此M(6) = 4。</p>
<p>对于1 ≤ n ≤ 10<sup>7</sup>，求∑M(n)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 408</title>
    <url>/408/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-408"><a href="#Problem-408" class="headerlink" title="Problem 408"></a><a href="https://projecteuler.net/problem=408">Problem 408</a></h1><hr>
<p><strong>Admissible paths through a grid</strong></p>
<p>Let’s call a lattice point (x, y) <em>inadmissible</em> if x, y and x&nbsp;+&nbsp;y are all positive perfect squares.<br>For example, (9, 16) is inadmissible, while (0, 4), (3, 1) and (9, 4) are not.</p>
<p>Consider a path from point (x<sub>1</sub>, y<sub>1</sub>) to point (x<sub>2</sub>, y<sub>2</sub>) using only unit steps north or east.<br>Let’s call such a path <em>admissible</em> if none of its intermediate points are inadmissible.</p>
<p>Let P(n) be the number of admissible paths from (0, 0) to (n, n).<br>It can be verified that P(5) = 252, P(16) = 596994440 and P(1000) mod 1&nbsp;000&nbsp;000&nbsp;007 = 341920854.</p>
<p>Find P(10&nbsp;000&nbsp;000) mod 1&nbsp;000&nbsp;000&nbsp;007.</p>
<hr>
<p><strong>穿越方格的容许路径</strong></p>
<p>我们称格点(x, y) <em>不容许的</em>，如果x, y和x&nbsp;+&nbsp;y均为正平方数。<br>例如，(9, 16)是不容许的， 而(0, 4), (3, 1)和(9, 4)都不是。</p>
<p>考虑从点(x<sub>1</sub>, y<sub>1</sub>)到点(x<sub>2</sub>, y<sub>2</sub>)的路径，路径上每次只能往北或往东走一步。<br>我们称路径是<em>容许的</em>，如果路径经过的点都不是不容许的。</p>
<p>记P(n)为从(0, 0)到(n, n)的容许路径总数。<br>可以验证P(5) = 252, P(16) = 596994440以及P(1000) mod 1&nbsp;000&nbsp;000&nbsp;007 = 341920854。</p>
<p>求P(10&nbsp;000&nbsp;000) mod 1&nbsp;000&nbsp;000&nbsp;007。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 409</title>
    <url>/409/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-409"><a href="#Problem-409" class="headerlink" title="Problem 409"></a><a href="https://projecteuler.net/problem=409">Problem 409</a></h1><hr>
<p><strong>Nim Extreme</strong></p>
<p>Let n be a positive integer. Consider <strong>nim</strong> positions where:</p>
<ul>
<li>There are n non-empty piles.</li>
<li>Each pile has size less than 2<sup>n</sup>.</li>
<li>No two piles have the same size.</li>
</ul>
<p>Let W(n) be the number of winning nim positions satisfying the above conditions (a position is winning if the first player has a winning strategy). For example, W(1) = 1, W(2) = 6, W(3) = 168, W(5) = 19764360 and W(100) mod 1&nbsp;000&nbsp;000&nbsp;007 = 384777056.</p>
<p>Find W(10&nbsp;000&nbsp;000) mod 1&nbsp;000&nbsp;000&nbsp;007.</p>
<hr>
<p><strong>极限取石子游戏</strong></p>
<p>记 n为正整数。考虑如下的<strong>取石子游戏</strong>设计：</p>
<ul>
<li>有n个非空的堆。</li>
<li>每个堆的石子数小于2<sup>n</sup>。</li>
<li>没有两堆的石子数相同。</li>
</ul>
<p>记W(n)是所有设计中必胜态的数目（必胜态是指先手玩家有必胜策略的状态）。例如，W(1) = 1, W(2) = 6, W(3) = 168, W(5) = 19764360，以及W(100) mod 1&nbsp;000&nbsp;000&nbsp;007 = 384777056。</p>
<p>求W(10&nbsp;000&nbsp;000) mod 1&nbsp;000&nbsp;000&nbsp;007。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 41</title>
    <url>/41/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-41"><a href="#Problem-41" class="headerlink" title="Problem 41"></a><a href="https://projecteuler.net/problem=41">Problem 41</a></h1><hr>
<h2 id="Pandigital-Prime"><a href="#Pandigital-Prime" class="headerlink" title="Pandigital Prime"></a><strong>Pandigital Prime</strong></h2><p>We shall say that an $n$-digit number is pandigital if it makes use of all the digits $1$ to $n$ exactly once. For example, $2143$ is a $4$-digit pandigital and is also prime.</p>
<p>What is the largest $n$-digit pandigital prime that exists?</p>
<hr>
<h2 id="全数字素数"><a href="#全数字素数" class="headerlink" title="全数字素数"></a><strong>全数字素数</strong></h2><p>如果一个$n$位数恰好使用了$1$至$n$每个数字各一次，则称为全数字数。例如，$2143$就是一个$4$位全数字数，同时它也是一个素数。</p>
<p>最大的全数字素数是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 410</title>
    <url>/410/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-410"><a href="#Problem-410" class="headerlink" title="Problem 410"></a><a href="https://projecteuler.net/problem=410">Problem 410</a></h1><hr>
<p><strong>Circle and tangent line</strong></p>
<p>Let C be the circle with radius r, x<sup>2</sup> + y<sup>2</sup> = r<sup>2</sup>. We choose two points P(a, b) and Q(-a, c) so that the line passing through P and Q is tangent to C.</p>
<p>For example, the quadruplet (r, a, b, c) = (2, 6, 2, -7) satisfies this property.</p>
<p>Let F(R, X) be the number of the integer quadruplets (r, a, b, c) with this property, and with 0 &lt; r ≤ R and 0 &lt; a ≤ X.</p>
<p>We can verify that F(1, 5) = 10, F(2, 10) = 52 and F(10, 100) = 3384.<br>Find F(10<sup>8</sup>, 10<sup>9</sup>) + F(10<sup>9</sup>, 10<sup>8</sup>).</p>
<hr>
<p><strong>圆与切线</strong></p>
<p>记C为半径为r的圆，其方程为x<sup>2</sup> + y<sup>2</sup> = r<sup>2</sup>。我们选取两个点P(a, b)和Q(-a, c)，使得过PQ的直线与圆C相切。</p>
<p>例如，四元组(r, a, b, c) = (2, 6, 2, -7)就满足上述性质。</p>
<p>记F(R, X)是满足上述性质的整数四元组(r, a, b, c)的数目，要求0 &lt; r ≤ R且0 &lt; a ≤ X。</p>
<p>可以验证F(1, 5) = 10, F(2, 10) = 52以及F(10, 100) = 3384。<br>求F(10<sup>8</sup>, 10<sup>9</sup>) + F(10<sup>9</sup>, 10<sup>8</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 411</title>
    <url>/411/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-411"><a href="#Problem-411" class="headerlink" title="Problem 411"></a><a href="https://projecteuler.net/problem=411">Problem 411</a></h1><hr>
<p><strong>Uphill paths</strong></p>
<p>Let n be a positive integer. Suppose there are stations at the coordinates (x, y) = (2<sup>i</sup> mod n, 3<sup>i</sup> mod n) for 0 ≤ i ≤ 2n. We will consider stations with the same coordinates as the same station.</p>
<p>We wish to form a path from (0, 0) to (n, n) such that the x and y coordinates never decrease.<br>Let S(n) be the maximum number of stations such a path can pass through.</p>
<p>For example, if n = 22, there are 11 distinct stations, and a valid path can pass through at most 5 stations. Therefore, S(22) = 5. The case is illustrated below, with an example of an optimal path:</p>
<center><img src="/resources/images/0411_longpath.png"></center>

<p>It can also be verified that S(123) = 14 and S(10000) = 48.</p>
<p>Find ∑ S(k<sup>5</sup>) for 1 ≤ k ≤ 30.</p>
<hr>
<p><strong>上行路径</strong></p>
<p>记n为正整数。在所有坐标为(x, y) = (2<sup>i</sup> mod n, 3<sup>i</sup> mod n)的位置安设站点，其中0 ≤ i ≤ 2n。如果多个站点有相同坐标，我们就合并为同一个站点。</p>
<p>我们希望找到一条从(0, 0)到(n, n)的路径，路径上x和y坐标单调不减。<br>记S(n)是这样一条路径最多能够穿过的站点数目。</p>
<p>例如，当n = 22时，一共有11个不同的站点，一条可行路径最多能穿过5个站点，因此S(22) = 5。如下图所示是其中一条最优的可行路径：</p>
<center><img src="/resources/images/0411_longpath.png"></center>

<p>同样可以验证S(123) = 14以及S(10000) = 48。</p>
<p>对于1 ≤ k ≤ 30，求∑ S(k<sup>5</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 412</title>
    <url>/412/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-412"><a href="#Problem-412" class="headerlink" title="Problem 412"></a><a href="https://projecteuler.net/problem=412">Problem 412</a></h1><hr>
<p><strong>Gnomon numbering</strong></p>
<p>For integers m, n (0&nbsp;≤&nbsp;n&nbsp;&lt;&nbsp;m), let L(m,&nbsp;n) be an m×m grid with the top-right n×n grid removed.</p>
<p>For example, L(5, 3) looks like this:</p>
<center><img src="/resources/images/0412_table53.png"></center>

<p>We want to number each cell of L(m,&nbsp;n) with consecutive integers 1, 2, 3, … such that the number in every cell is smaller than the number below it and to the left of it.</p>
<p>For example, here are two valid numberings of L(5,&nbsp;3):</p>
<center><img src="/resources/images/0412_tablenums.png"></center>

<p>Let LC(m, n) be the number of valid numberings of L(m, n).<br>It can be verified that LC(3,&nbsp;0) = 42, LC(5,&nbsp;3) = 250250, LC(6,&nbsp;3) = 406029023400 and LC(10,&nbsp;5) mod 76543217 = 61251715.</p>
<p>Find LC(10000,&nbsp;5000) mod 76543217.</p>
<hr>
<p><strong>圭表填数</strong></p>
<p>对于整数m，n（0&nbsp;≤&nbsp;n&nbsp;&lt;&nbsp;m），L(m,&nbsp;n)表示一个m×m的方格被挖去了右上角n×n的方格后留下的L型部分。</p>
<p>例如，L(5, 3)如下图所示：</p>
<center><img src="/resources/images/0412_table53.png"></center>

<p>我们给L(m,&nbsp;n)的每一格填上连续整数1, 2, 3, …，并要求每个格子中的数要小于它左侧和下方格子中的数。</p>
<p>例如，下图是L(5,&nbsp;3)两种可行的填法：</p>
<center><img src="/resources/images/0412_tablenums.png"></center>

<p>记LC(m, n)是L(m, n)所有可行填法的数目。<br>可以验证LC(3,&nbsp;0) = 42, LC(5,&nbsp;3) = 250250, LC(6,&nbsp;3) = 406029023400以及LC(10,&nbsp;5) mod 76543217 = 61251715。</p>
<p>求LC(10000,&nbsp;5000) mod 76543217。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 413</title>
    <url>/413/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-413"><a href="#Problem-413" class="headerlink" title="Problem 413"></a><a href="https://projecteuler.net/problem=413">Problem 413</a></h1><hr>
<p><strong>One-child Numbers</strong></p>
<p>We say that a d-digit positive number (no leading zeros) is a one-child number if exactly one of its sub-strings is divisible by d.</p>
<p>For example, 5671 is a 4-digit one-child number. Among all its sub-strings 5, 6, 7, 1, 56, 67, 71, 567, 671 and 5671, only 56 is divisible by 4.<br>Similarly, 104 is a 3-digit one-child number because only 0 is divisible by 3.<br>1132451 is a 7-digit one-child number because only 245 is divisible by 7.</p>
<p>Let F(N) be the number of the one-child numbers less than N.<br>We can verify that F(10) = 9, F(10<sup>3</sup>) = 389 and F(10<sup>7</sup>) = 277674.</p>
<p>Find F(10<sup>19</sup>).</p>
<hr>
<p><strong>独子数</strong></p>
<p>我们称一个d位正整数（没有前导零）为独子数，如果它恰好只有一个子串能够被d整除。</p>
<p>例如，5671是一个四位独子数。它的所有子串5, 6, 7, 1, 56, 67, 71, 567, 671和5671中，只有56能够被4整除。<br>同样的，104是一个三位独子数，因为只有0能够被3整除。<br>1132451是一个七位独子数，因为只有245能够被7整除。</p>
<p>记F(N)是小于N的独子数的数目。<br>可以验证F(10) = 9, F(10<sup>3</sup>) = 389以及F(10<sup>7</sup>) = 277674。</p>
<p>求F(10<sup>19</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 414</title>
    <url>/414/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-414"><a href="#Problem-414" class="headerlink" title="Problem 414"></a><a href="https://projecteuler.net/problem=414">Problem 414</a></h1><hr>
<p><strong>Kaprekar constant</strong></p>
<p>6174 is a remarkable number; if we sort its digits in increasing order and subtract that number from the number you get when you sort the digits in decreasing order, we get 7641-1467=6174.<br>Even more remarkable is that if we start from any 4 digit number and repeat this process of sorting and subtracting, we’ll eventually end up with 6174 or immediately with 0 if all digits are equal.<br>This also works with numbers that have less than 4 digits if we pad the number with leading zeroes until we have 4 digits.<br>E.g. let’s start with the number 0837:<br>8730-0378=8352<br>8532-2358=6174</p>
<p>6174 is called the <strong>Kaprekar constant</strong>. The process of sorting and subtracting and repeating this until either 0 or the Kaprekar constant is reached is called the <strong>Kaprekar routine</strong>.</p>
<p>We can consider the Kaprekar routine for other bases and number of digits.<br>Unfortunately, it is not guaranteed a Kaprekar constant exists in all cases; either the routine can end up in a cycle for some input numbers or the constant the routine arrives at can be different for different input numbers.<br>However, it can be shown that for 5 digits and a base b = 6t+3≠9, a Kaprekar constant exists.<br>E.g. base 15: (10,4,14,9,5)<sub>15</sub><br>base 21: (14,6,20,13,7)<sub>21</sub></p>
<p>Define C<sub>b</sub> to be the Kaprekar constant in base b for 5 digits. Define the function sb(i) to be</p>
<ul>
<li>0 if i = C<sub>b</sub> or if i written in base b consists of 5 identical digits</li>
<li>the number of iterations it takes the Kaprekar routine in base b to arrive at C<sub>b</sub>, otherwise</li>
</ul>
<p>Note that we can define sb(i) for all integers i &lt; b<sup>5</sup>. If i written in base b takes less than 5 digits, the number is padded with leading zero digits until we have 5 digits before applying the Kaprekar routine.</p>
<p>Define S(b) as the sum of sb(i) for 0 &lt; i &lt; b<sup>5</sup>.<br>E.g. S(15) = 5274369<br>S(111) = 400668930299</p>
<p>Find the sum of S(6k+3) for 2 ≤ k ≤ 300.<br>Give the last 18 digits as your answer.</p>
<hr>
<p><strong>卡布列克常数</strong></p>
<p>6174是个神奇的数；如果我们用将它的数字按降序排列组成的数减去将它的数字按升序排列组成的数，我们得到7641-1467=6174。<br>更神奇的是，如果我们从任意四位数出发，重复这个排列和相减的过程，最终我们都会得到6174，或者当每一位数字都相同时得0。<br>即使这个数没有4位，我们可以将其补上前导零凑足四位，上述结论同样成立。<br>例如，我们从数0837开始：<br>8730-0378=8352<br>8532-2358=6174</p>
<p>6174被称为<strong>卡布列克常数</strong>。这个排序和相减直至到达0或卡布列克常数的过程称为<strong>卡布列克路径</strong>。</p>
<p>对于其他进制和位数，我们也可以考察相应的卡布列克路径。<br>不幸的是，并不能保证在所有情况下都存在卡布列克常数；有时这个路径会最终进入一个循环，或者从不同的数出发最后会到达不同的常数。<br>然而，可以证明，对于5位数，以及b = 6t+3≠9 进制，存在卡布列克常数。<br>例如，在15进制下为： (10,4,14,9,5)<sub>15</sub><br>在21进制下为： (14,6,20,13,7)<sub>21</sub></p>
<p>记C<sub>b</sub>是b进制5位数的卡布列克常数。定义函数sb(i)为</p>
<ul>
<li>0，如果i = C<sub>b</sub>，或者i在b进制下5个数字全部相同。</li>
<li>否则为在b进制下从这个数出发经过卡布列克路径到达C<sub>b</sub>的迭代次数。</li>
</ul>
<p>注意sb(i)定义在所有整数i &lt; b<sup>5</sup>上。即使i在b进制下不足5位，我们都可以在开始卡布列克路径之前给它加上前导零补足5位。</p>
<p>定义S(b)是所有0 &lt; i &lt; b<sup>5</sup>的函数sb(i)的和。<br>例如，S(15) = 5274369<br>S(111) = 400668930299</p>
<p>对于2 ≤ k ≤ 300，求S(6k+3)的和。<br>给出这个数的最后18位作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 415</title>
    <url>/415/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-415"><a href="#Problem-415" class="headerlink" title="Problem 415"></a><a href="https://projecteuler.net/problem=415">Problem 415</a></h1><hr>
<p><strong>Titanic sets</strong></p>
<p>A set of lattice points S is called a titanic set if there exists a line passing through exactly two points in S.</p>
<p>An example of a titanic set is S = {(0, 0), (0, 1), (0, 2), (1, 1), (2, 0), (1, 0)}, where the line passing through (0, 1) and (2, 0) does not pass through any other point in S.</p>
<p>On the other hand, the set {(0, 0), (1, 1), (2, 2), (4, 4)} is not a titanic set since the line passing through any two points in the set also passes through the other two.</p>
<p>For any positive integer N, let T(N) be the number of titanic sets S whose every point (x, y) satisfies 0 ≤ x, y ≤ N. It can be verified that T(1) = 11, T(2) = 494, T(4) = 33554178, T(111) mod 10<sup>8</sup> = 13500401 and T(10<sup>5</sup>)&nbsp;mod&nbsp;10<sup>8</sup> = 63259062.</p>
<p>Find T(10<sup>11</sup>)&nbsp;mod&nbsp;10<sup>8</sup>.</p>
<hr>
<p><strong>泰坦尼克集</strong></p>
<p>格点集S被称为泰坦尼克集，如果存在一条直线恰好只穿过S中的两个点。</p>
<p>泰坦尼克集的一个例子是S = {(0, 0), (0, 1), (0, 2), (1, 1), (2, 0), (1, 0)}，存在直线穿过点(0, 1)和点(2, 0)，而不穿过S中其它的点。</p>
<p>相反的，集合{(0, 0), (1, 1), (2, 2), (4, 4)}不是泰坦尼克集，因为穿过集合中任意两点的直线也穿过集合中另外的两个点。</p>
<p>对于任意正整数N，记T(N)为所有可能的泰坦尼克集S的数目，要求S中所有的点(x, y)满足0 ≤ x, y ≤ N。可以验证T(1) = 11, T(2) = 494, T(4) = 33554178, T(111) mod 10<sup>8</sup> = 13500401以及T(10<sup>5</sup>)&nbsp;mod&nbsp;10<sup>8</sup> = 63259062。</p>
<p>求T(10<sup>11</sup>)&nbsp;mod&nbsp;10<sup>8</sup>。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 416</title>
    <url>/416/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-416"><a href="#Problem-416" class="headerlink" title="Problem 416"></a><a href="https://projecteuler.net/problem=416">Problem 416</a></h1><hr>
<p><strong>A frog’s trip</strong></p>
<p>A row of n squares contains a frog in the leftmost square. By successive jumps the frog goes to the rightmost square and then back to the leftmost square. On the outward trip he jumps one, two or three squares to the right, and on the homeward trip he jumps to the left in a similar manner. He cannot jump outside the squares. He repeats the round-trip travel m times.</p>
<p>Let $F(m, n)$ be the number of the ways the frog can travel so that at most one square remains unvisited.<br>For example, $F(1, 3) = 4$, $F(1, 4) = 15$, $F(1, 5) = 46$, $F(2, 3) = 16$ and $F(2, 100) \bmod 10^9 = 429619151$.</p>
<p>Find the last $9$ digits of $F(10, 10^{12})$.</p>
<hr>
<p><strong>青蛙的旅途</strong></p>
<p>在一行n个方块的最左边一个上有一只青蛙。青蛙通过连续不断的跳跃，先跳到最右边的方块，然后再跳回最左边的方块。它向右跳的时候每次可以跳一个、两个或三个方块，跳回来时也同理。它不能跳出这些方块。这样的往返它一共进行了m次。</p>
<p>记 $F(m, n)$ 为青蛙在旅途中至多有一个方块从未被跳到过的方式总数。<br>例如，$F(1, 3) = 4$, $F(1, 4) = 15$, $F(1, 5) = 46$, $F(2, 3) = 16$，而$F(2, 100) \bmod 10^9 = 429619151$。</p>
<p>求 $F(10, 10^{12})$ 的最后 $9$ 位数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 417</title>
    <url>/417/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-417"><a href="#Problem-417" class="headerlink" title="Problem 417"></a><a href="https://projecteuler.net/problem=417">Problem 417</a></h1><hr>
<p><strong>Reciprocal cycles II</strong></p>
<p>A unit fraction contains 1 in the numerator. The decimal representation of the unit fractions with denominators 2 to 10 are given:</p>
<p><sup>1</sup>/<sub>2</sub>=&nbsp;0.5<br><sup>1</sup>/<sub>3</sub>=&nbsp;0.(3)<br><sup>1</sup>/<sub>4</sub>=&nbsp;0.25<br><sup>1</sup>/<sub>5</sub>=&nbsp;0.2<br><sup>1</sup>/<sub>6</sub>=&nbsp;0.1(6)<br><sup>1</sup>/<sub>7</sub>=&nbsp;0.(142857)<br><sup>1</sup>/<sub>8</sub>=&nbsp;0.125<br><sup>1</sup>/<sub>9</sub>=&nbsp;0.(1)<br><sup>1</sup>/<sub>10</sub>=&nbsp;0.1</p>
<p>Where 0.1(6) means 0.166666…, and has a 1-digit recurring cycle. It can be seen that <sup>1</sup>/<sub>7</sub> has a 6-digit recurring cycle.</p>
<p>Unit fractions whose denominator has no other prime factors than 2 and/or 5 are not considered to have a recurring cycle.<br>We define the length of the recurring cycle of those unit fractions as 0. </p>
<p>Let L(n) denote the length of the recurring cycle of 1/n. You are given that ∑L(n) for 3 ≤ n ≤ 1 000 000 equals 55535191115.</p>
<p>Find ∑L(n) for 3 ≤ n ≤ 100 000 000.</p>
<hr>
<p><strong>倒数循环节 II</strong></p>
<p>单位分数指分子为1的分数。分母为2至10的单位分数的十进制表示如下所示：</p>
<p><sup>1</sup>/<sub>2</sub>=&nbsp;0.5<br><sup>1</sup>/<sub>3</sub>=&nbsp;0.(3)<br><sup>1</sup>/<sub>4</sub>=&nbsp;0.25<br><sup>1</sup>/<sub>5</sub>=&nbsp;0.2<br><sup>1</sup>/<sub>6</sub>=&nbsp;0.1(6)<br><sup>1</sup>/<sub>7</sub>=&nbsp;0.(142857)<br><sup>1</sup>/<sub>8</sub>=&nbsp;0.125<br><sup>1</sup>/<sub>9</sub>=&nbsp;0.(1)<br><sup>1</sup>/<sub>10</sub>=&nbsp;0.1</p>
<p>这里0.1(6)表示0.166666…，括号内表示有一位循环节。可以看出，<sup>1</sup>/<sub>7</sub>有六位循环节。</p>
<p>如果单位分数的分母的质因数只包含2和5，就不存在循环节。<br>我们记这些单位分数的循环节长度为0。</p>
<p>记L(n)为单位分数1/n的循环节长度。已知对于3 ≤ n ≤ 1 000 000，∑L(n)等于55535191115。</p>
<p>对于3 ≤ n ≤ 100 000 000，求∑L(n)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 418</title>
    <url>/418/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-418"><a href="#Problem-418" class="headerlink" title="Problem 418"></a><a href="https://projecteuler.net/problem=418">Problem 418</a></h1><hr>
<p><strong>Factorisation triples</strong></p>
<p>Let n be a positive integer. An integer triple (a, b, c) is called a factorisation triple of n if:</p>
<ul>
<li>1 ≤ a ≤ b ≤ c</li>
<li>a·b·c = n.</li>
</ul>
<p>Define f(n) to be a + b + c for the factorisation triple (a, b, c) of n which minimises c / a. One can show that this triple is unique.</p>
<p>For example, f(165) = 19, f(100100) = 142 and f(20!) = 4034872.</p>
<p>Find f(43!).</p>
<hr>
<p><strong>因数三元组</strong></p>
<p>记n是一个正整数。一个整数三元组(a, b, c)被称为n的因数三元组，当满足一下条件：</p>
<ul>
<li>1 ≤ a ≤ b ≤ c</li>
<li>a·b·c = n.</li>
</ul>
<p>在n因数三元组(a, b, c)中，取使得c / a最小化的一组，记f(n)是这三个数的和a + b + c。可以验证这样的三元组总是唯一的。</p>
<p>例如f(165) = 19，f(100100) = 142，而f(20!) = 4034872。</p>
<p>求f(43!)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 419</title>
    <url>/419/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-419"><a href="#Problem-419" class="headerlink" title="Problem 419"></a><a href="https://projecteuler.net/problem=419">Problem 419</a></h1><hr>
<p><strong>Look and say sequence</strong></p>
<p>The <strong>look and say</strong> sequence goes 1, 11, 21, 1211, 111221, 312211, 13112221, 1113213211, …<br>The sequence starts with 1 and all other members are obtained by describing the previous member in terms of consecutive digits.<br>It helps to do this out loud:<br>1 is ‘one one’ → 11<br>11 is ‘two ones’ → 21<br>21 is ‘one two and one one’ → 1211<br>1211 is ‘one one, one two and two ones’ → 111221<br>111221 is ‘three ones, two twos and one one’ → 312211<br>…</p>
<p>Define A(n), B(n) and C(n) as the number of ones, twos and threes in the n’th element of the sequence respectively.<br>One can verify that A(40) = 31254, B(40) = 20259 and C(40) = 11625.</p>
<p>Find A(n), B(n) and C(n) for n = 10<sup>12</sup>.<br>Give your answer modulo 2<sup>30</sup> and separate your values for A, B and C by a comma.<br>E.g. for n = 40 the answer would be 31254,20259,11625</p>
<hr>
<p><strong>看图说话序列</strong></p>
<p><strong>看图说话</strong>序列是这样一个序列：1, 11, 21, 1211, 111221, 312211, 13112221, 1113213211, …<br>这个序列从1开始，之后所有的项都是通过描述前一项的连续数字得到的。<br>把过程详细地说明一下有助于对这个序列的理解：<br>1是“1个1 → 11<br>11是“2个1” → 21<br>21是“1个2和1个1” → 1211<br>1211是“1个1，1个2和2个1” → 111221<br>111221是“3个1，2个2，1个1” → 312211<br>…</p>
<p>记A(n)，B(n)和C(n)分别表示第n项元素中数字1、2、3的数目。<br>可以验证A(40) = 31254，B(40) = 20259，而C(40) = 11625。</p>
<p>对于n = 10<sup>12</sup>，求A(n)，B(n)和C(n)。<br>将你的答案模2<sup>30</sup>取同余，并用逗号分隔开A，B和C。<br>例如，对于n = 40，答案应当是31254,20259,11625。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 42</title>
    <url>/42/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-42"><a href="#Problem-42" class="headerlink" title="Problem 42"></a><a href="https://projecteuler.net/problem=42">Problem 42</a></h1><hr>
<h2 id="Coded-Triangle-Numbers"><a href="#Coded-Triangle-Numbers" class="headerlink" title="Coded Triangle Numbers"></a><strong>Coded Triangle Numbers</strong></h2><p>The $n$<sup>th</sup> term of the sequence of triangle numbers is given by, $t_n=n (n+1)/2$; so the first ten triangle numbers are:</p>
<p>$$1, 3, 6, 10, 15, 21, 28, 36, 45, 55, \ldots$$</p>
<p>By converting each letter in a word to a number corresponding to its alphabetical position and adding these values we form a word value. For example, the word value for SKY is $19 + 11 + 25 = 55 = t_{10}$. If the word value is a triangle number then we shall call the word a triangle word.</p>
<p>Using <a href="https://projecteuler.net/project/resources/p042_words.txt">words.txt</a>(right click and ‘Save Link/Target As…’), a 16K text file containing nearly two-thousand common English words, how many are triangle words?</p>
<hr>
<h2 id="编码三角形数"><a href="#编码三角形数" class="headerlink" title="编码三角形数"></a><strong>编码三角形数</strong></h2><p>三角形数序列的第$n$项由公式$t_n=n (n+1)/2$给出。前十个三角形数是：</p>
<p>$$1, 3, 6, 10, 15, 21, 28, 36, 45, 55, \ldots$$</p>
<p>将一个单词的每个字母分别转化为其在字母表中的顺序并相加，所得结果即为这个单词的价值。例如，单词SKY的价值是$19 + 11 + 25 = 55 = t_{10}$。如果一个单词的价值是一个三角形数，称这个单词为三角形单词。</p>
<p>在文本文件<a href="https://projecteuler.net/project/resources/p042_words.txt">words.txt</a>中包含有将近两千个常用英文单词，其中有多少个三角形单词？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 420</title>
    <url>/420/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-420"><a href="#Problem-420" class="headerlink" title="Problem 420"></a><a href="https://projecteuler.net/problem=420">Problem 420</a></h1><hr>
<p><strong>2x2 positive integer matrix</strong></p>
<p>A <em>positive integer matrix</em> is a matrix whose elements are all positive integers.<br>Some positive integer matrices can be expressed as a square of a positive integer matrix in two different ways. Here is an example:</p>
<center><img src="https://projecteuler.net/project/images/p420_matrix.gif"></center>

<p>We define F(N) as the number of the 2x2 positive integer matrices which have a <dfn title="the sum of the elements on the main diagonal">trace</dfn> less than N and which can be expressed as a square of a positive integer matrix in two different ways.<br>We can verify that F(50) = 7 and F(1000) = 1019.</p>
<p>Find F(10<sup>7</sup>).</p>
<hr>
<p><strong>2x2正整数矩阵</strong></p>
<p><em>正整数矩阵</em>是元素均为正整数的矩阵。<br>有些正整数矩阵可以有多种方式表达为另一个正整数矩阵的平方，下面是一个例子：</p>
<center><img src="https://projecteuler.net/project/images/p420_matrix.gif"></center>

<p>定义F(N)为<dfn title="主对角线元素和">迹</dfn>小于N，且能够表示成两个不同正整数矩阵平方的正整数矩阵数目。<br>可以验证F(50) = 7以及F(1000) = 1019。</p>
<p>求F(10<sup>7</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 421</title>
    <url>/421/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-421"><a href="#Problem-421" class="headerlink" title="Problem 421"></a><a href="https://projecteuler.net/problem=421">Problem 421</a></h1><hr>
<p><strong>Prime factors of n<sup>15</sup>+1</strong></p>
<p>Numbers of the form n<sup>15</sup>+1 are composite for every integer n &gt; 1.<br>For positive integers n and m let s(n,m) be defined as the sum of the distinct prime factors of n<sup>15</sup>+1 not exceeding m.</p>
<p>E.g. 2<sup>15</sup>+1 = 3×3×11×331.<br>So s(2,10) = 3 and s(2,1000) = 3+11+331 = 345.</p>
<p>Also 10<sup>15</sup>+1 = 7×11×13×211×241×2161×9091.<br>So s(10,100) = 31 and s(10,1000) = 483.</p>
<p>Find ∑ s(n,10<sup>8</sup>) for 1 ≤ n ≤ 10<sup>11</sup>.</p>
<hr>
<p><strong>n<sup>15</sup>+1的质因数</strong></p>
<p>可以表示为n<sup>15</sup>+1的数，对于任意n &gt; 1都是合数。<br>对于正整数n和m，记s(n,m)为n<sup>15</sup>+1所有不超过m的不同质因数之和。</p>
<p>例如，2<sup>15</sup>+1 = 3×3×11×331。<br>因此s(2,10) = 3，而s(2,1000) = 3+11+331 = 345。</p>
<p>同样地，10<sup>15</sup>+1 = 7×11×13×211×241×2161×9091。<br>因此s(10,100) = 31而s(10,1000) = 483。</p>
<p>对于1 ≤ n ≤ 10<sup>11</sup>，求∑ s(n,10<sup>8</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 422</title>
    <url>/422/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-422"><a href="#Problem-422" class="headerlink" title="Problem 422"></a><a href="https://projecteuler.net/problem=422">Problem 422</a></h1><hr>
<p><strong>Sequence of points on a hyperbola</strong></p>
<p>Let H be the hyperbola defined by the equation 12x<sup>2</sup> + 7xy - 12y<sup>2</sup> = 625.</p>
<p>Next, define X as the point (7, 1). It can be seen that X is in H.<br>Now we define a sequence of points in H, {P<sub>i</sub> : i ≥ 1}, as:</p>
<ul>
<li>P<sub>1</sub> = (13, 61/4).</li>
<li>P<sub>2</sub> = (-43/6, -4).</li>
<li>For i &gt; 2, P<sub>i</sub> is the unique point in H that is different from P<sub>i-1</sub> and such that line P<sub>i</sub>P<sub>i-1</sub> is parallel to line P<sub>i-2</sub>X. It can be shown that P<sub>i</sub> is well-defined, and that its coordinates are always rational.</li>
</ul>
<img src="/resources/images/0422_hyperbola.gif">

<p>You are given that P<sub>3</sub>  = (-19/2, -229/24), P<sub>4</sub> = (1267/144, -37/12) and P<sub>7</sub> = (17194218091/143327232, 274748766781/1719926784).</p>
<p>Find P<sub>n</sub> for n = 11<sup>14</sup> in the following format:<br>If P<sub>n</sub> = (a/b, c/d) where the fractions are in lowest terms and the denominators are positive, then the answer is (a + b + c + d) mod 1&nbsp;000&nbsp;000&nbsp;007.</p>
<p>For n = 7, the answer would have been: 806236837.</p>
<hr>
<p><strong>双曲线上的点序列</strong></p>
<p>双曲线H由方程12x<sup>2</sup> + 7xy - 12y<sup>2</sup> = 625给出。</p>
<p>取点X的坐标为(7, 1)，可以看出点X在H上。</p>
<p>接下来我们定义H上的一个点序列{P<sub>i</sub> : i ≥ 1}如下：</p>
<ul>
<li>P<sub>1</sub> = (13, 61/4)。</li>
<li>P<sub>2</sub> = (-43/6, -4)。</li>
<li>对于i &gt; 2，P<sub>i</sub>是在H上异于P<sub>i-1</sub>的一点，且满足直线 P<sub>i</sub>P<sub>i-1</sub>与直线 P<sub>i-2</sub>X平行。可以验证P<sub>i</sub>是存在的，且它的坐标总是有理数。</li>
</ul>
<img src="/resources/images/0422_hyperbola.gif">

<p>已知P<sub>3</sub>  = (-19/2, -229/24)，P<sub>4</sub> = (1267/144, -37/12)以及P<sub>7</sub> = (17194218091/143327232, 274748766781/1719926784)。</p>
<p>当n = 11<sup>14</sup>时，求P<sub>n</sub>，并以如下形式给出：<br>如果P<sub>n</sub> = (a/b, c/d)，其中的分数均为最简分数且分母为正整数，那么给出的答案应当是(a + b + c + d) mod 1&nbsp;000&nbsp;000&nbsp;007。</p>
<p>例如，当n = 7时，答案应当是：806236837。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 423</title>
    <url>/423/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-423"><a href="#Problem-423" class="headerlink" title="Problem 423"></a><a href="https://projecteuler.net/problem=423">Problem 423</a></h1><hr>
<p><strong>Consecutive die throws</strong></p>
<p>Let n be a positive integer.<br>A 6-sided die is thrown n times. Let c be the number of pairs of consecutive throws that give the same value.</p>
<p>For example, if n = 7 and the values of the die throws are (1,1,5,6,6,6,3), then the following pairs of consecutive throws give the same value:<br>(<u>1,1</u>,5,6,6,6,3)<br>(1,1,5,<u>6,6</u>,6,3)<br>(1,1,5,6,<u>6,6</u>,3)<br>Therefore, c = 3 for (1,1,5,6,6,6,3).</p>
<p>Define C(n) as the number of outcomes of throwing a 6-sided die n times such that c does not exceed π(n).<sup>1</sup><br>For example, C(3) = 216, C(4) = 1290, C(11) = 361912500 and C(24) = 4727547363281250000.</p>
<p>Define S(L) as ∑ C(n) for 1 ≤ n ≤ L.<br>For example, S(50) mod 1&nbsp;000&nbsp;000&nbsp;007 = 832833871.</p>
<p>Find S(50&nbsp;000&nbsp;000) mod 1&nbsp;000&nbsp;000&nbsp;007.</p>
<p><sup>1</sup> π denotes the <strong>prime-counting function</strong>, i.e. π(n) is the number of primes ≤ n.</p>
<hr>
<p><strong>连续扔骰子</strong></p>
<p>取正整数n。<br>连续掷一个六面骰子n次，记c是连续两次掷出同样点数的次数。</p>
<p>例如，如果n = 7，掷出的点数分别是(1,1,5,6,6,6,3)，那么如下几组是连续两次掷出同样的点数：<br>(<u>1,1</u>,5,6,6,6,3)<br>(1,1,5,<u>6,6</u>,6,3)<br>(1,1,5,6,<u>6,6</u>,3)<br>因此，对于(1,1,5,6,6,6,3)来说，c = 3。</p>
<p>记C(n)是当连续掷一个六面骰子n次时，连续两次掷出同样点数的次数c不超过π(n)的结果数。<sup>1</sup><br>例如，C(3) = 216，C(4) = 1290，C(11) = 361912500，而C(24) = 4727547363281250000。</p>
<p>对于1 ≤ n ≤ L，定义S(L)为∑ C(n)。<br>例如，S(50) mod 1&nbsp;000&nbsp;000&nbsp;007 = 832833871。</p>
<p>求S(50&nbsp;000&nbsp;000) mod 1&nbsp;000&nbsp;000&nbsp;007。</p>
<p><sup>1</sup> π表示的是<strong>素数计数函数</strong>，也就是说，π(n)表示 ≤ n的素数个数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 424</title>
    <url>/424/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-424"><a href="#Problem-424" class="headerlink" title="Problem 424"></a><a href="https://projecteuler.net/problem=424">Problem 424</a></h1><hr>
<p><strong>Kakuro</strong></p>
<center><img src="/resources/images/0424_kakuro1.gif"></center>

<p>The above is an example of a cryptic kakuro (also known as cross sums, or even sums cross) puzzle, with its final solution on the right. (The common rules of kakuro puzzles can be found easily on numerous internet sites. Other related information can also be currently found at <a href="http://krazydad.com/" target="_blank">krazydad.com</a> whose author has provided the puzzle data for this challenge.)</p>
<p>The downloadable text file (<a href="https://projecteuler.net/project/resources/p424_kakuro200.txt">kakuro200.txt</a>) contains the description of 200 such puzzles, a mix of 5x5 and 6x6 types. The first puzzle in the file is the above example which is coded as follows:</p>
<p>6,X,X,(vCC),(vI),X,X,X,(hH),B,O,(vCA),(vJE),X,(hFE,vD),O,O,O,O,(hA),O,I,(hJC,vB),O,O,(hJC),H,O,O,O,X,X,X,(hJE),O,O,X</p>
<p>The first character is a numerical digit indicating the size of the information grid. It would be either a 6 (for a 5x5 kakuro puzzle) or a 7 (for a 6x6 puzzle) followed by a comma (,). The extra top line and left column are needed to insert information.</p>
<p>The content of each cell is then described and followed by a comma, going left to right and starting with the top line.<br>X = Gray cell, not required to be filled by a digit.<br>O (upper case letter)= White empty cell to be filled by a digit.<br>A = Or any one of the upper case letters from A to J to be replaced by its equivalent digit in the solved puzzle.<br>( ) = Location of the encrypted sums. Horizontal sums are preceded by a lower case “h” and vertical sums are preceded by a lower case “v”. Those are followed by one or two upper case letters depending if the sum is a single digit or double digit one. For double digit sums, the first letter would be for the “tens” and the second one for the “units”. When the cell must contain information for both a horizontal and a vertical sum, the first one is always for the horizontal sum and the two are separated by a comma within the same set of brackets, ex.: (hFE,vD). Each set of brackets is also immediately followed by a comma.</p>
<p>The description of the last cell is followed by a Carriage Return/Line Feed (CRLF) instead of a comma.</p>
<p>The required answer to each puzzle is based on the value of each letter necessary to arrive at the solution and according to the alphabetical order. As indicated under the example puzzle, its answer would be 8426039571. At least 9 out of the 10 encrypting letters are always part of the problem description. When only 9 are given, the missing one must be assigned the remaining digit.</p>
<p>You are given that the sum of the answers for the first 10 puzzles in the file is 64414157580.</p>
<p>Find the sum of the answers for the 200 puzzles.</p>
<hr>
<p><strong>数和</strong></p>
<center><img src="/resources/images/0424_kakuro1.gif"></center>

<p>上述是一个数和游戏的题板，右侧是它的解答。（数和游戏的规则可以在很多网站上找到，其它相关的信息也可以在<a href="http://krazydad.com/" target="_blank">krazydad.com</a>上找到，这个网站的作者提供了这道谜题。）</p>
<p>文本文件<a href="https://projecteuler.net/project/resources/p424_kakuro200.txt">kakuro200.txt</a>中包含了200个这样的谜题的描述，其中有5x5和6x6两种大小。文件中的第一个谜题就是上面给出的这个样例，它的代码如下所示：</p>
<p>6,X,X,(vCC),(vI),X,X,X,(hH),B,O,(vCA),(vJE),X,(hFE,vD),O,O,O,O,(hA),O,I,(hJC,vB),O,O,(hJC),H,O,O,O,X,X,X,(hJE),O,O,X</p>
<p>第一个字符是一个数字，表示了这个谜题题版的大小，要么是6（表示5x5题板）要么是7（表示6x6题板），随后跟着一个逗号（,）。多余的最上行和最下列是用来提供信息的。</p>
<p>每一个的信息随后逐个被表示出来，并用逗号分割，按照从上往下，从左往右的顺序。<br>X = 灰色方格，不要求填数字。<br>O（大写字母） = 空白方格，要求填一个数字。<br>A = 大写字母A至J，等待用对应的数字进行替换。<br>( ) = 加密过的和的位置。横行的和用小写字母“h”开头，竖列的和用小写字母“v”开头，随后是一个或两个大写字母，表示这一行或一列的和是一位或两位数。对于两位数，第一个大写字母是十位数而第二个大写字母是个位。如果一个方格既要指示横行的和又要指示竖列的和，第一个永远是横行的和，而且两者必然在同一个括号内用逗号分开，例如(hFE,vD)。每一组这样的括号也必然跟随着一个逗号。</p>
<p>最后一格的描述之后跟随的是一个回车加换行（CRLF）而非逗号。</p>
<p>最后给出的答案是将各个大写字母按顺序替换成对应的数字组成的字符串，如上述样例题板的答案将是8426039571，根据题目的描述，至少可以确定其中9个数字和对应的字母，如果只给出了9个数字，则剩下的数字和剩下的字母必然对应。</p>
<p>已知文件中前10个题板的答案和是64414157580。</p>
<p>求这200个题板的答案和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 425</title>
    <url>/425/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-425"><a href="#Problem-425" class="headerlink" title="Problem 425"></a><a href="https://projecteuler.net/problem=425">Problem 425</a></h1><hr>
<p><strong>Prime connection</strong></p>
<p>Two positive numbers A and B are said to be <em>connected</em> (denoted by “A ↔ B”) if one of these conditions holds:<br>(1) A and B have the same length and differ in exactly one digit; for example, 123 ↔ 173.<br>(2) Adding one digit to the left of A (or B) makes B (or A); for example, 23 ↔ 223 and 123 ↔ 23.</p>
<p>We call a prime P a <em>2’s relative</em> if there exists a chain of connected primes between 2 and P and no prime in the chain exceeds P.</p>
<p>For example, 127 is a 2’s relative. One of the possible chains is shown below:<br>2 ↔ 3 ↔ 13 ↔ 113 ↔ 103 ↔ 107 ↔ 127<br>However, 11 and 103 are not 2’s relatives.</p>
<p>Let F(N) be the sum of the primes ≤ N which are not 2’s relatives.<br>We can verify that F(10<sup>3</sup>) = 431 and F(10<sup>4</sup>) = 78728.</p>
<p>Find F(10<sup>7</sup>).</p>
<hr>
<p><strong>素数连接</strong></p>
<p>两个正整数A和B被称为<em>相连的</em>（用”A ↔ B”表示）如果以下条件之一成立：<br>（1）A和B的位数相同，且只有一位数字不同，例如123 ↔ 173。<br>（2）在A（或B）的左侧加一位数字即得到B（或A），例如23 ↔ 223和123 ↔ 23。</p>
<p>我们称素数P是<em>2的亲戚</em>，如果能用相连的素数组成的链连接2和P，且这些素数都不超过P。</p>
<p>例如，127是2的亲戚。其中一种素数串如下所示：<br>2 ↔ 3 ↔ 13 ↔ 113 ↔ 103 ↔ 107 ↔ 127<br>然而，11和103不是2的亲戚。</p>
<p>记F(N)是所有≤ N且不是2的亲戚的素数和。<br>可以验证F(10<sup>3</sup>) = 431以及F(10<sup>4</sup>) = 78728。</p>
<p>求F(10<sup>7</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 426</title>
    <url>/426/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-426"><a href="#Problem-426" class="headerlink" title="Problem 426"></a><a href="https://projecteuler.net/problem=426">Problem 426</a></h1><hr>
<p><strong>Box-ball system</strong></p>
<p>Consider an infinite row of boxes. Some of the boxes contain a ball. For example, an initial configuration of 2 consecutive occupied boxes followed by 2 empty boxes, 2 occupied boxes, 1 empty box, and 2 occupied boxes can be denoted by the sequence (2, 2, 2, 1, 2), in which the number of consecutive occupied and empty boxes appear alternately.</p>
<p>A turn consists of moving each ball exactly once according to the following rule: Transfer the leftmost ball which has not been moved to the nearest empty box to its right.</p>
<p>After one turn the sequence (2, 2, 2, 1, 2) becomes (2, 2, 1, 2, 3) as can be seen below; note that we begin the new sequence starting at the first occupied box.</p>
<center><img src="/resources/images/0426_baxball1.gif"></center>

<p>A system like this is called a <strong>Box-Ball System</strong> or <strong>BBS</strong> for short.</p>
<p>It can be shown that after a sufficient number of turns, the system evolves to a state where the consecutive numbers of occupied boxes is invariant. In the example below, the consecutive numbers of <strong>occupied boxes</strong> evolves to [1, 2, 3]; we shall call this the final state.</p>
<center><img src="/resources/images/0426_baxball2.gif"></center>

<p>We define the sequence {t<sub>i</sub>}:</p>
<ul>
<li>s<sub>0</sub> = 290797</li>
<li>s<sub>k+1</sub> = s<sub>k</sub><sup>2</sup> mod 50515093</li>
<li>t<sub>k</sub> = (s<sub>k</sub> mod 64) + 1</li>
</ul>
<p>Starting from the initial configuration (t<sub>0</sub>, t<sub>1</sub>, …, t<sub>10</sub>), the final state becomes [1, 3, 10, 24, 51, 75].<br>Starting from the initial configuration (t<sub>0</sub>, t<sub>1</sub>, …, t<sub>10 000 000</sub>), find the final state.<br>Give as your answer the sum of the squares of the elements of the final state. For example, if the final state is [1, 2, 3] then 14 ( = 1<sup>2</sup> + 2<sup>2</sup> + 3<sup>2</sup>) is your answer.</p>
<hr>
<p><strong>盒子与球系统</strong></p>
<p>考虑一行无限多个盒子，其中一些盒子放了球。其中一种放置方法是，前两个放球，然后紧跟着两个空箱子，然后再两个放球，再一个空箱子，再两个放球，这样的放置方法可以表示为序列(2, 2, 2, 1, 2)，连续的数轮流表示放球和不放球。</p>
<p>每一轮，按照下面所述的规则，移动每一个球恰好一次：将最左侧的没有移动过的球移动到右边最近的空格。</p>
<p>经过一轮后，序列(2, 2, 2, 1, 2)将会变成(2, 2, 1, 2, 3)，如下图所示。注意新序列将从第一个放了球的盒子开始计数。</p>
<center><img src="/resources/images/0426_baxball1.gif"></center>

<p>一个这样的系统被称为<strong>盒子与球系统</strong>或者简称<strong>BBS</strong>。</p>
<p>可以看出，经过足够多轮之后，这个系统将会进化到一个不变的状态。在下面的例子中，所有<strong>放球的盒子</strong>的序列最终将会进化成[1, 2, 3]；我们称之为最终状态。</p>
<center><img src="/resources/images/0426_baxball2.gif"></center>

<p>我们按如下方式定义序列{t<sub>i</sub>}：</p>
<ul>
<li>s<sub>0</sub> = 290797</li>
<li>s<sub>k+1</sub> = s<sub>k</sub><sup>2</sup> mod 50515093</li>
<li>t<sub>k</sub> = (s<sub>k</sub> mod 64) + 1</li>
</ul>
<p>从初始状态(t<sub>0</sub>, t<sub>1</sub>, …, t<sub>10</sub>)开始，最终状态将是[1, 3, 10, 24, 51, 75]。<br>从初始状态(t<sub>0</sub>, t<sub>1</sub>, …, t<sub>10 000 000</sub>)开始，求最终状态。<br>你的答案将以最终状态各元素的平方和的形式给出，例如，如果最终状态是[1, 2, 3]，那么你的答案应当是14 ( = 1<sup>2</sup> + 2<sup>2</sup> + 3<sup>2</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 427</title>
    <url>/427/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-427"><a href="#Problem-427" class="headerlink" title="Problem 427"></a><a href="https://projecteuler.net/problem=427">Problem 427</a></h1><hr>
<p><strong>n-sequences</strong></p>
<p>A sequence of integers S = {s<sub>i</sub>} is called an <em>n-sequence</em> if it has n elements and each element s<sub>i</sub> satisfies 1 ≤ s<sub>i</sub> ≤ n. Thus there are n<sup>n</sup> distinct n-sequences in total. For example, the sequence S = {1, 5, 5, 10, 7, 7, 7, 2, 3, 7} is a 10-sequence.</p>
<p>For any sequence S, let L(S) be the length of the longest contiguous subsequence of S with the same value. For example, for the given sequence S above, L(S) = 3, because of the three consecutive 7’s.</p>
<p>Let f(n) = ∑ L(S) for all n-sequences S.</p>
<p>For example, f(3) = 45, f(7) = 1403689 and f(11) = 481496895121.</p>
<p>Find f(7&nbsp;500&nbsp;000) mod 1&nbsp;000&nbsp;000&nbsp;009.</p>
<hr>
<p><strong>n-序列</strong></p>
<p>整数序列S = {s<sub>i</sub>}被称为<em>n-序列</em>，如果它有n个元素，而且每个元素s<sub>i</sub>满足1 ≤ s<sub>i</sub> ≤ n。因此，一共有n<sup>n</sup>个不同的n-序列。例如，序列S = {1, 5, 5, 10, 7, 7, 7, 2, 3, 7}就是一个10-序列。</p>
<p>对于任意序列S，记L(S)是其中相同元素连续出现的最大次数。例如，对于上述序列S，L(S) = 3，因为其中有连续出现的3个7。</p>
<p>对于所有的n-序列S，记f(n) = ∑ L(S)。</p>
<p>例如，f(3) = 45，f(7) = 1403689，f(11) = 481496895121。</p>
<p>求f(7&nbsp;500&nbsp;000) mod 1&nbsp;000&nbsp;000&nbsp;009。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 428</title>
    <url>/428/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-428"><a href="#Problem-428" class="headerlink" title="Problem 428"></a><a href="https://projecteuler.net/problem=428">Problem 428</a></h1><hr>
<p><strong>Necklace of circles</strong></p>
<p>Let a, b and c be positive numbers.<br>Let W, X, Y, Z be four collinear points where |WX| = a, |XY| = b, |YZ| = c and |WZ| = a + b + c.<br>Let C<sub>in</sub> be the circle having the diameter XY.<br>Let C<sub>out</sub> be the circle having the diameter WZ.</p>
<p>The triplet (a, b, c) is called a <em>necklace triplet</em> if you can place k ≥ 3 distinct circles C<sub>1</sub>, C<sub>2</sub>, …, C<sub>k</sub> such that:</p>
<ul>
<li>C<sub>i</sub> has no common interior points with any C<sub>j</sub> for 1 ≤ i, j ≤ k and i ≠ j,</li>
<li>C<sub>i</sub> is tangent to both C<sub>in</sub> and C<sub>out</sub> for 1 ≤ i ≤ k,</li>
<li>C<sub>i</sub> is tangent to C<sub>i+1</sub> for 1 ≤ i &lt; k, and</li>
<li>C<sub>k</sub> is tangent to C<sub>1</sub>.</li>
</ul>
<p>For example, (5, 5, 5) and (4, 3, 21) are necklace triplets, while it can be shown that (2, 2, 5) is not.</p>
<center><img src="/resources/images/0428_necklace.png"></center>

<p>Let T(n) be the number of necklace triplets (a, b, c) such that a, b and c are positive integers, and b ≤ n. For example, T(1)&nbsp;=&nbsp;9, T(20)&nbsp;=&nbsp;732 and T(3000)&nbsp;=&nbsp;438106.</p>
<p>Find T(1&nbsp;000&nbsp;000&nbsp;000).</p>
<hr>
<p><strong>圆圈项链</strong><br>取a，b，c均为正整数。<br>取共线的四点W，X，Y，Z，满足|WX| = a，|XY| = b，|YZ| = c而|WZ| = a + b + c。<br>圆C<sub>in</sub>是以XY为直径的圆。<br>圆C<sub>out</sub>是以WZ为直径的圆。</p>
<p>三元组(a, b, c)被称为<em>项链三元组</em>，如果存在k ≥ 3个不同的圆C<sub>1</sub>，C<sub>2</sub>，……，C<sub>k</sub>满足：</p>
<ul>
<li>对于任意1 ≤ i, j ≤ k且i ≠ j，C<sub>i</sub>和C<sub>j</sub>没有公共内部点。</li>
<li>对于任意1 ≤ i ≤ k，C<sub>i</sub>和C<sub>in</sub>与C<sub>out</sub>均相切。</li>
<li>对于任意1 ≤ i &lt; k，C<sub>i</sub>和C<sub>i+1</sub>相切。</li>
<li>C<sub>k</sub>和C<sub>1</sub>相切。</li>
</ul>
<p>例如，(5, 5, 5)和(4, 3, 21)都是项链三元组，而(2, 2, 5)则不是。</p>
<center><img src="/resources/images/0428_necklace.png"></center>

<p>记T(n)是项链三元组(a, b, c)的数量，其中a，b，c均为正整数，且b ≤ n。例如，T(1)&nbsp;=&nbsp;9，T(20)&nbsp;=&nbsp;732以及T(3000)&nbsp;=&nbsp;438106。</p>
<p>求T(1&nbsp;000&nbsp;000&nbsp;000)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 429</title>
    <url>/429/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-429"><a href="#Problem-429" class="headerlink" title="Problem 429"></a><a href="https://projecteuler.net/problem=429">Problem 429</a></h1><hr>
<p><strong>Sum of squares of unitary divisors</strong></p>
<p>A unitary divisor d of a number n is a divisor of n that has the property gcd(d, n/d) = 1.<br>The unitary divisors of 4! = 24 are 1, 3, 8 and 24.<br>The sum of their squares is 1<sup>2</sup> + 3<sup>2</sup> + 8<sup>2</sup> + 24<sup>2</sup> = 650.</p>
<p>Let S(n) represent the sum of the squares of the unitary divisors of n. Thus S(4!)=650.</p>
<p>Find S(100 000 000!) modulo 1 000 000 009.</p>
<hr>
<p><strong>元因数的平方和</strong></p>
<p>n的元因数d指的是满足如下性质的n的因数：gcd(d, n/d) = 1。<br>4! = 24的元因数为1，3，8和24。<br>这些数的平方和是1<sup>2</sup> + 3<sup>2</sup> + 8<sup>2</sup> + 24<sup>2</sup> = 650。</p>
<p>记S(n)是n的元因子的平方和。因此S(4!)=650。</p>
<p>求S(100 000 000!) modulo 1 000 000 009。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 43</title>
    <url>/43/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-43"><a href="#Problem-43" class="headerlink" title="Problem 43"></a><a href="https://projecteuler.net/problem=43">Problem 43</a></h1><hr>
<h2 id="Sub-string-Divisibility"><a href="#Sub-string-Divisibility" class="headerlink" title="Sub-string Divisibility"></a><strong>Sub-string Divisibility</strong></h2><p>The number, $1406357289$, is a $0$ to $9$ pandigital number because it is made up of each of the digits $0$ to $9$ in some order, but it also has a rather interesting sub-string divisibility property.</p>
<p>Let $d_1$ be the $1$<sup>st</sup> digit, $d_2$ be the $2$<sup>nd</sup> digit, and so on. In this way, we note the following:</p>
<ul>
<li>$d_2d_3d_4=406$ is divisible by $2$</li>
<li>$d_3d_4d_5=063$ is divisible by $3$</li>
<li>$d_4d_5d_6=635$ is divisible by $5$</li>
<li>$d_5d_6d_7=357$ is divisible by $7$</li>
<li>$d_6d_7d_8=572$ is divisible by $11$</li>
<li>$d_7d_8d_9=728$ is divisible by $13$</li>
<li>$d_8d_9d_{10}=289$ is divisible by $17$</li>
</ul>
<p>Find the sum of all $0$ to $9$ pandigital numbers with this property.</p>
<hr>
<h2 id="子串的可整除性"><a href="#子串的可整除性" class="headerlink" title="子串的可整除性"></a><strong>子串的可整除性</strong></h2><p>$1406357289$是一个$0$至$9$全数字数，因为它由$0$到$9$这十个数字排列而成；但除此之外，它还有一个有趣的性质：子串的可整除性。</p>
<p>记$d_1$是它的第$1$个数字，$d_2$是第$2$个数字，依此类推，注意到：</p>
<ul>
<li>$d_2d_3d_4=406$能被$2$整除</li>
<li>$d_3d_4d_5=063$能被$3$整除</li>
<li>$d_4d_5d_6=635$能被$5$整除</li>
<li>$d_5d_6d_7=357$能被$7$整除</li>
<li>$d_6d_7d_8=572$能被$11$整除</li>
<li>$d_7d_8d_9=728$能被$13$整除</li>
<li>$d_8d_9d_{10}=289$能被$17$整除</li>
</ul>
<p>找出所有满足同样性质的$0$至$9$全数字数，并求它们的和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 430</title>
    <url>/430/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-430"><a href="#Problem-430" class="headerlink" title="Problem 430"></a><a href="https://projecteuler.net/problem=430">Problem 430</a></h1><hr>
<p><strong>Range flips</strong></p>
<p>N disks are placed in a row, indexed 1 to N from left to right.<br>Each disk has a black side and white side. Initially all disks show their white side.</p>
<p>At each turn, two, not necessarily distinct, integers A and B between 1 and N (inclusive) are chosen uniformly at random.<br>All disks with an index from A to B (inclusive) are flipped.</p>
<p>The following example shows the case N = 8. At the first turn A = 5 and B = 2, and at the second turn A = 4 and B = 6.</p>
<center><img src="/resources/images/0430_flips.gif"></center>

<p>Let E(N, M) be the expected number of disks that show their white side after M turns.<br>We can verify that E(3, 1) = 10/9, E(3, 2) = 5/3, E(10, 4) ≈ 5.157 and E(100, 10) ≈ 51.893.</p>
<p>Find E(10<sup>10</sup>, 4000).<br>Give your answer rounded to 2 decimal places behind the decimal point.</p>
<hr>
<p><strong>区域翻转</strong></p>
<p>N个盘子放置成一排，从左至右分别标记为1至N。<br>每个盘子都是一面黑一面白，初始时所有的盘子都是白面朝上。</p>
<p>每一轮,从1至N（包含）中随机等概率选出两个数A和B，这两个数可以相同。<br>所有标记从A至B（包含）的盘子都要翻转。</p>
<p>下面的例子是N = 8时可能的情景。第一轮A = 5而B = 2，第二轮A = 4而B = 6。</p>
<center><img src="/resources/images/0430_flips.gif"></center>

<p>记E(N, M)是在M轮后白面向上的盘子数目的期望值。<br>可以验证，E(3, 1) = 10/9，E(3, 2) = 5/3，E(10, 4) ≈ 5.157以及E(100, 10) ≈ 51.893。</p>
<p>求E(10<sup>10</sup>, 4000)。<br>保留小数点后2位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 431</title>
    <url>/431/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-431"><a href="#Problem-431" class="headerlink" title="Problem 431"></a><a href="https://projecteuler.net/problem=431">Problem 431</a></h1><hr>
<p><strong>Square Space Silo</strong></p>
<p>Fred the farmer arranges to have a new storage silo installed on his farm and having an obsession for all things square he is absolutely devastated when he discovers that it is circular. Quentin, the representative from the company that installed the silo, explains that they only manufacture cylindrical silos, but he points out that it is resting on a square base. Fred is not amused and insists that it is removed from his property.</p>
<p>Quick thinking Quentin explains that when granular materials are delivered from above a conical slope is formed and the natural angle made with the horizontal is called the angle of repose. For example if the angle of repose, α=30 degrees, and grain is delivered at the centre of the silo then a perfect cone will form towards the top of the cylinder. In the case of this silo, which has a diameter of 6m, the amount of space wasted would be approximately 32.648388556 m<sup>3</sup>. However, if grain is delivered at a point on the top which has a horizontal distance of x metres from the centre then a cone with a strangely curved and sloping base is formed. He shows Fred a picture.</p>
<center><img src="/resources/images/0431_grain_silo.png"></center>

<p>We shall let the amount of space wasted in cubic metres be given by V(x). If x=1.114785284, which happens to have three squared decimal places, then the amount of space wasted, V(1.114785284)≈36. Given the range of possible solutions to this problem there is exactly one other option: V(2.511167869)≈49. It would be like knowing that the square is king of the silo, sitting in splendid glory on top of your grain.</p>
<p>Fred’s eyes light up with delight at this elegant resolution, but on closer inspection of Quentin’s drawings and calculations his happiness turns to despondency once more. Fred points out to Quentin that it’s the radius of the silo that is 6 metres, not the diameter, and the angle of repose for his grain is 40 degrees. However, if Quentin can find a set of solutions for this particular silo then he will be more than happy to keep it.</p>
<p>If Quick thinking Quentin is to satisfy frustratingly fussy Fred the farmer’s appetite for all things square then determine the values of x for all possible square space wastage options and calculate ∑x correct to 9 decimal places.</p>
<hr>
<p><strong>浪费了平方数空间的谷仓</strong></p>
<p>农夫弗雷德在他的农场上造了一个新谷仓，当他发现这个谷仓竟然是圆柱形时，这个有着对正方形狂热的喜好的农夫非常愤怒。谷仓制造商的代表昆廷解释道，他们公司从来都只制造圆柱形的谷仓，同时他指出，这个谷仓的地基是正方形的。弗雷德并没有因此而释然，仍然坚持要拆掉这个谷仓。</p>
<p>机灵鬼昆廷脑子一转，解释道，当谷物从谷仓的上面往下倒时，顶部会形成一个锥形，锥顶与水平面的角度称为静止角。例如，当静止角α=30，且锥顶位于谷仓的中央时，顶部将是一个标准的圆锥形，而谷仓的直径是6米，所以谷仓中浪费的空间是约32.648388556 m<sup>3</sup>。然而，如果锥顶的位置距离谷仓的中央为x米时，将会形成一个奇特的弯曲斜面。他给弗雷德画了一张示意图。</p>
<center><img src="/resources/images/0431_grain_silo.png"></center>

<p>我们用V(x)来表示浪费的空间，单位是立方米。如果x=1.114785284，保留到3的平方位小数，则浪费的空间V(1.114785284)≈36。在可行的范围内，恰好还有另外一个选择V(2.511167869)≈49。这就好比平方数，也就是正方形数，是谷仓之王，高高地站在你的谷物的顶上。</p>
<p>弗雷德对于这个优雅的解释眼前一亮，但是当他更仔细地观察昆廷的示意图和计算后，他的笑容马上无影无踪了。弗雷德向昆廷指出，谷物的半径而非直径是6米，而且谷物所形成的静止角是40度。然而，如果昆廷仍然能够找到合适的解，弗雷德将会愿意保留这个谷仓。</p>
<p>帮助机灵鬼昆廷满足弗雷德折腾人的正方形狂热，找出所有使得浪费的空间为平方数的x值，并计算出∑x，保留9位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 432</title>
    <url>/432/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-432"><a href="#Problem-432" class="headerlink" title="Problem 432"></a><a href="https://projecteuler.net/problem=432">Problem 432</a></h1><hr>
<p><strong>Totient sum</strong></p>
<p>Let S(n,m) = ∑φ(n × i) for 1 ≤ i ≤ m. (φ is Euler’s totient function)<br>You are given that S(510510,10<sup>6</sup> )= 45480596821125120. </p>
<p>Find S(510510,10<sup>11</sup>).<br>Give the last 9 digits of your answer.</p>
<hr>
<p><strong>欧拉总计函数和</strong></p>
<p>对于1 ≤ i ≤ m，记S(n,m) = ∑φ(n × i)。（其中φ指的是欧拉总计函数）<br>已知S(510510,10<sup>6</sup> )= 45480596821125120。 </p>
<p>求S(510510,10<sup>11</sup>)。<br>给出答案的最后9位数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 433</title>
    <url>/433/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-433"><a href="#Problem-433" class="headerlink" title="Problem 433"></a><a href="https://projecteuler.net/problem=433">Problem 433</a></h1><hr>
<p><strong>Steps in Euclid’s algorithm</strong></p>
<p>Let E(x<sub>0</sub>, y<sub>0</sub>) be the number of steps it takes to determine the greatest common divisor of x<sub>0</sub> and y<sub>0</sub> with <strong>Euclid’s algorithm</strong>. More formally:<br>x<sub>1</sub> = y<sub>0</sub>, y<sub>1</sub> = x<sub>0</sub> mod y<sub>0</sub><br>x<sub>n</sub> = y<sub>n-1</sub>, y<sub>n</sub> = x<sub>n-1</sub> mod y<sub>n-1</sub><br>E(x<sub>0</sub>, y<sub>0</sub>) is the smallest n such that y<sub>n</sub> = 0.</p>
<p>We have E(1,1) = 1, E(10,6) = 3 and E(6,10) = 4.</p>
<p>Define S(N) as the sum of E(x,y) for 1 ≤ x,y ≤ N.<br>We have S(1) = 1, S(10) = 221 and S(100) = 39826.</p>
<p>Find S(5·10<sup>6</sup>).</p>
<hr>
<p><strong>欧几里德算法的步数</strong></p>
<p>记E(x<sub>0</sub>, y<sub>0</sub>)为运用<strong>欧几里德算法</strong>求x<sub>0</sub>和y<sub>0</sub>的最大公约数的步数。更加正式的说：<br>x<sub>1</sub> = y<sub>0</sub>, y<sub>1</sub> = x<sub>0</sub> mod y<sub>0</sub><br>x<sub>n</sub> = y<sub>n-1</sub>, y<sub>n</sub> = x<sub>n-1</sub> mod y<sub>n-1</sub><br>E(x<sub>0</sub>, y<sub>0</sub>)是使得y<sub>n</sub> = 0的最小的n。</p>
<p>已知E(1,1) = 1，E(10,6) = 3以及E(6,10) = 4。</p>
<p>对于1 ≤ x,y ≤ N，定义S(N)为所有E(x,y)的和。<br>已知S(1) = 1，S(10) = 221以及S(100) = 39826。</p>
<p>求S(5·10<sup>6</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 434</title>
    <url>/434/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-434"><a href="#Problem-434" class="headerlink" title="Problem 434"></a><a href="https://projecteuler.net/problem=434">Problem 434</a></h1><hr>
<p><strong>Rigid graphs</strong></p>
<p>Recall that a graph is a collection of vertices and edges connecting the vertices, and that two vertices connected by an edge are called adjacent.<br>Graphs can be embedded in Euclidean space by associating each vertex with a point in the Euclidean space.<br>A <strong>flexible</strong> graph is an embedding of a graph where it is possible to move one or more vertices continuously so that the distance between at least two nonadjacent vertices is altered while the distances between each pair of adjacent vertices is kept constant.<br>A <strong>rigid</strong> graph is an embedding of a graph which is not flexible.<br>Informally, a graph is rigid if by replacing the vertices with fully rotating hinges and the edges with rods that are unbending and inelastic, no parts of the graph can be moved independently from the rest of the graph.</p>
<p>The <strong>grid graphs</strong> embedded in the Euclidean plane are not rigid, as the following animation demonstrates:</p>
<center><img src="/resources/images/0434_rigid.gif"></center>

<p>However, one can make them rigid by adding diagonal edges to the cells. For example, for the 2x3 grid graph, there are 19 ways to make the graph rigid:</p>
<center><img src="/resources/images/0434_rigid23.png"></center>

<p>Note that for the purposes of this problem, we do not consider changing the orientation of a diagonal edge or adding both diagonal edges to a cell as a different way of making a grid graph rigid.</p>
<p>Let R(m,n) be the number of ways to make the m × n grid graph rigid.<br>E.g. R(2,3) = 19 and R(5,5) = 23679901</p>
<p>Define S(N) as ∑R(i,j) for 1 ≤ i, j ≤ N.<br>E.g. S(5) = 25021721.<br>Find S(100), give your answer modulo 1000000033</p>
<hr>
<p><strong>不可弯折图</strong></p>
<p>图是一系列点和连接点的边的集合，由边连接的两个点称为邻接点。<br>将图的每个顶点和欧氏空间的一个店相对应，总是可以将图投影到欧氏空间中。<br>我们称一个图为<strong>可弯折</strong>图，如果其在欧氏空间中的投影中的一个或多个顶点可以连续地改变位置，使得至少两个非邻接的顶点的距离发生变化，而任意两个邻接的顶点的距离保持不变。<br>相应地，我们称一个图为<strong>不可弯折</strong>图，如果其不是可弯折图。<br>一种不太正式的表述是，如果一个图是不可弯折的，那么当我们将图中的顶点换成铰链，将边换成不可弯折且无弹性的木棒，则图的任意部分都不能独立于其它部分发生移动。</p>
<p><strong>方格图</strong>在欧氏空间中的投影是可弯折的，如下面的动画所示：</p>
<center><img src="/resources/images/0434_rigid.gif"></center>

<p>然而，只要在其中一些方格内加上对角线，就可以将它变成不可弯折图。例如，对于2x3的方格图，一共有19种方法把它变为不可弯折图：</p>
<center><img src="/resources/images/0434_rigid23.png"></center>

<p>在本题中，更换对角线的方向或是同时加上一个方格内的两条对角线不被认为是一种不同的方法。</p>
<p>记R(m,n)是将m × n方格图变为不可弯折图的方法数。<br>例如，R(2,3) = 19，以及R(5,5) = 23679901</p>
<p>定义S(N)为∑R(i,j)，其中1 ≤ i, j ≤ N。<br>例如，S(5) = 25021721。<br>求S(100)，并将答案模1000000033求余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 435</title>
    <url>/435/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-435"><a href="#Problem-435" class="headerlink" title="Problem 435"></a><a href="https://projecteuler.net/problem=435">Problem 435</a></h1><hr>
<p><strong>Polynomials of Fibonacci numbers</strong></p>
<p>The <strong>Fibonacci numbers</strong> {f<sub>n</sub>, n ≥ 0} are defined recursively as f<sub>n</sub> = f<sub>n-1</sub> + f<sub>n-2</sub> with base cases f<sub>0</sub> = 0 and f<sub>1</sub> = 1.</p>
<p>Define the polynomials {F<sub>n</sub>, n ≥ 0} as F<sub>n</sub>(x) = ∑f<sub>i</sub>x<sup>i</sup> for 0 ≤ i ≤ n.</p>
<p>For example, F<sub>7</sub>(x) = x + x<sup>2</sup> + 2x<sup>3</sup> + 3x<sup>4</sup> + 5x<sup>5</sup> + 8x<sup>6</sup> + 13x<sup>7</sup>, and F<sub>7</sub>(11) = 268357683.</p>
<p>Let n = 10<sup>15</sup>. Find the sum [∑<sub>0≤x≤100</sub> F<sub>n</sub>(x)] mod 1307674368000 (= 15!).</p>
<hr>
<p><strong>斐波那契数多项式</strong></p>
<p><strong>斐波那契数</strong>{f<sub>n</sub>, n ≥ 0}由递归式f<sub>n</sub> = f<sub>n-1</sub> + f<sub>n-2</sub>给出，初值是f<sub>0</sub> = 0和f<sub>1</sub> = 1。</p>
<p>定义多项式{F<sub>n</sub>, n ≥ 0}为F<sub>n</sub>(x) = ∑f<sub>i</sub>x<sup>i</sup>，其中0 ≤ i ≤ n。</p>
<p>例如，F<sub>7</sub>(x) = x + x<sup>2</sup> + 2x<sup>3</sup> + 3x<sup>4</sup> + 5x<sup>5</sup> + 8x<sup>6</sup> + 13x<sup>7</sup>，而F<sub>7</sub>(11) = 268357683.</p>
<p>取n = 10<sup>15</sup>。求[∑<sub>0≤x≤100</sub> F<sub>n</sub>(x)] mod 1307674368000 (= 15!)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 436</title>
    <url>/436/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-436"><a href="#Problem-436" class="headerlink" title="Problem 436"></a><a href="https://projecteuler.net/problem=436">Problem 436</a></h1><hr>
<p><strong>Unfair wager</strong></p>
<p>Julie proposes the following wager to her sister Louise.<br>She suggests they play a game of chance to determine who will wash the dishes.<br>For this game, they shall use a generator of independent random numbers uniformly distributed between 0 and 1.<br>The game starts with S = 0.<br>The first player, Louise, adds to S different random numbers from the generator until S &gt; 1 and records her last random number ‘x’.<br>The second player, Julie, continues adding to S different random numbers from the generator until S &gt; 2 and records her last random number ‘y’.<br>The player with the highest number wins and the loser washes the dishes, i.e. if y &gt; x the second player wins.</p>
<p>For example, if the first player draws 0.62 and 0.44, the first player turn ends since 0.62+0.44 &gt; 1 and x = 0.44.<br>If the second players draws 0.1, 0.27 and 0.91, the second player turn ends since 0.62+0.44+0.1+0.27+0.91 &gt; 2 and y = 0.91.<br>Since y &gt; x, the second player wins.</p>
<p>Louise thinks about it for a second, and objects: “That’s not fair”.<br>What is the probability that the second player wins?<br>Give your answer rounded to 10 places behind the decimal point in the form 0.abcdefghij</p>
<hr>
<p><strong>不公平的打赌</strong></p>
<p>朱莉和她的妹妹露易丝打了个赌。<br>她建议来玩一个几率游戏，来决定谁去洗盘子。<br>在这个游戏中，她们将使用一个独立随机数生成器，这些随机数等概率地分布在0到1之间。<br>游戏开始时S = 0。<br>先手玩家露易丝向S中不断加入生成器生成的随机数，直到S &gt; 1，并记下她最后得到的随机数’x’。<br>后手玩家朱莉继续向S中不断加入生成器生成的随机数，知道S &gt; 2，并也记下她最后得到的随机数’y’。<br>得到较大数的玩家获胜，而输掉的一方要去洗盘子，例如，如果y &gt; x，则后手玩家获胜。</p>
<p>例如，如果先手玩家得到的随机数是0.62和0.44，先手玩家结束操作，因为0.62+0.44 &gt; 1，而她得到的随机数是x = 0.44。<br>如果后手玩家随后得到0.1，0.27和0.91，后手玩家结束操作，因为0.62+0.44+0.1+0.27+0.91 &gt; 2，而她得到的随机数是y = 0.91。<br>因为y &gt; x，后手玩家获胜。</p>
<p>露易丝考虑了一会儿然后表示反对：“这不公平！”<br>请问后手玩家获胜的概率是多少？<br>将你的答案保留10位小数，即用0.abcdefghij的形式提交。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 437</title>
    <url>/437/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-437"><a href="#Problem-437" class="headerlink" title="Problem 437"></a><a href="https://projecteuler.net/problem=437">Problem 437</a></h1><hr>
<p><strong>Fibonacci primitive roots</strong></p>
<p>When we calculate 8<sup>n</sup> modulo 11 for n=0 to 9 we get: 1, 8, 9, 6, 4, 10, 3, 2, 5, 7.<br>As we see all possible values from 1 to 10 occur. So 8 is a <strong>primitive root</strong> of 11.<br>But there is more:<br>If we take a closer look we see:<br>1+8=9<br>8+9=17≡6 mod 11<br>9+6=15≡4 mod 11<br>6+4=10<br>4+10=14≡3 mod 11<br>10+3=13≡2 mod 11<br>3+2=5<br>2+5=7<br>5+7=12≡1 mod 11.</p>
<p>So the powers of 8 mod 11 are cyclic with period 10, and 8<sup>n</sup> + 8<sup>n+1</sup> ≡ 8<sup>n+2</sup> (mod 11).<br>8 is called a <strong>Fibonacci primitive root</strong> of 11.<br>Not every prime has a Fibonacci primitive root.<br>There are 323 primes less than 10000 with one or more Fibonacci primitive roots and the sum of these primes is 1480491.<br>Find the sum of the primes less than 100,000,000 with at least one Fibonacci primitive root.</p>
<hr>
<p><strong>斐波那契原根</strong></p>
<p>对于n=0至9分别计算8<sup>n</sup>模11的余数，我们得到：1, 8, 9, 6, 4, 10, 3, 2, 5, 7。<br>可以看出，1至10在这些余数中都出现了，因此8被称为11的一个<strong>原根</strong>。<br>但不仅如此：<br>如果我们更加仔细地观察：<br>1+8=9<br>8+9=17≡6 mod 11<br>9+6=15≡4 mod 11<br>6+4=10<br>4+10=14≡3 mod 11<br>10+3=13≡2 mod 11<br>3+2=5<br>2+5=7<br>5+7=12≡1 mod 11.</p>
<p>因此8的幂模11不仅是以10为周期重复，而且8<sup>n</sup> + 8<sup>n+1</sup> ≡ 8<sup>n+2</sup> (mod 11)。<br>因此，8被称为11的一个<strong>斐波那契原根</strong>。<br>不是所有的素数都有一个斐波那契原根。<br>在小于10000的数中，有323个质数有至少一个斐波那契原根，这些质数的和为1480491。<br>求在小于100,000,000的数中，至少有一个斐波那契原根的素数的和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 438</title>
    <url>/438/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-438"><a href="#Problem-438" class="headerlink" title="Problem 438"></a><a href="https://projecteuler.net/problem=438">Problem 438</a></h1><hr>
<p><strong>Integer part of polynomial equation’s solutions</strong></p>
<p>For an n-tuple of integers t = (a<sub>1</sub>, …, a<sub>n</sub>), let (x<sub>1</sub>, …, x<sub>n</sub>) be the solutions of the polynomial equation x<sup>n</sup> + a<sub>1</sub>x<sup>n-1</sup> + a<sub>2</sub>x<sup>n-2</sup> + … + a<sub>n-1</sub>x + a<sub>n</sub> = 0.</p>
<p>Consider the following two conditions:</p>
<ul>
<li>x<sub>1</sub>, …, x<sub>n</sub> are all real.</li>
<li>If x<sub>1</sub>, …, x<sub>n</sub> are sorted, [x<sub>i</sub>] = i for 1 ≤ i ≤ n. ([·]: floor function.)</li>
</ul>
<p>In the case of n = 4, there are 12 n-tuples of integers which satisfy both conditions.<br>We define S(t) as the sum of the absolute values of the integers in t.<br>For n = 4 we can verify that ∑S(t) = 2087 for all n-tuples t which satisfy both conditions.</p>
<p>Find ∑S(t) for n = 7.</p>
<hr>
<p><strong>多项式方程式解的整数部分</strong></p>
<p>对于整数n元组t = (a<sub>1</sub>, …, a<sub>n</sub>)，记(x<sub>1</sub>, …, x<sub>n</sub>)是多项式方程x<sup>n</sup> + a<sub>1</sub>x<sup>n-1</sup> + a<sub>2</sub>x<sup>n-2</sup> + … + a<sub>n-1</sub>x + a<sub>n</sub> = 0的解集。</p>
<p>考虑下面两个条件：</p>
<ul>
<li>x<sub>1</sub>, …, x<sub>n</sub>均为实数。</li>
<li>如果 x<sub>1</sub>, …, x<sub>n</sub>是从小到大排序的，则[x<sub>i</sub>] = i对1 ≤ i ≤ n恒成立。（[·]指向下取整函数。）</li>
</ul>
<p>当n = 4时，有12个整数n元组同时满足这两个条件。<br>记S(t)是t中整数的绝对值的和。<br>当n = 4时，对于所有同时满足这两个条件的整数n元组t，可以验证∑S(t) = 2087。</p>
<p>当n = 7时，求∑S(t)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 439</title>
    <url>/439/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-439"><a href="#Problem-439" class="headerlink" title="Problem 439"></a><a href="https://projecteuler.net/problem=439">Problem 439</a></h1><hr>
<p><strong>Sum of sum of divisors</strong></p>
<p>Let d(k) be the sum of all divisors of k.<br>We define the function S(N) = ∑<sub>1≤i≤N</sub> ∑<sub>1≤j≤N</sub> d(i·j).<br>For example, S(3) = d(1) + d(2) + d(3) + d(2) + d(4) + d(6) + d(3) + d(6) + d(9) = 59.</p>
<p>You are given that S(10<sup>3</sup>) = 563576517282 and S(10<sup>5</sup>) mod 10<sup>9</sup> = 215766508.<br>Find S(10<sup>11</sup>) mod 10<sup>9</sup>.</p>
<hr>
<p><strong>因数之和之和</strong></p>
<p>记d(k)是k的所有因数之和。<br>定义函数S(N) = ∑<sub>1≤i≤N</sub> ∑<sub>1≤j≤N</sub> d(i·j)。<br>例如，S(3) = d(1) + d(2) + d(3) + d(2) + d(4) + d(6) + d(3) + d(6) + d(9) = 59。</p>
<p>已知S(10<sup>3</sup>) = 563576517282以及S(10<sup>5</sup>) mod 10<sup>9</sup> = 215766508。<br>求S(10<sup>11</sup>) mod 10<sup>9</sup>。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 440</title>
    <url>/440/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-440"><a href="#Problem-440" class="headerlink" title="Problem 440"></a><a href="https://projecteuler.net/problem=440">Problem 440</a></h1><hr>
<p><strong>GCD and Tiling</strong></p>
<p>We want to tile a board of length n and height 1 completely, with either 1 × 2 blocks or 1 × 1 blocks with a single decimal digit on top:</p>
<center><img src="/resources/images/0440_tiles.png"></center>

<p>For example, here are some of the ways to tile a board of length n = 8:</p>
<center><img src="/resources/images/0440_some8.png"></center>

<p>Let T(n) be the number of ways to tile a board of length n as described above.</p>
<p>For example, T(1) = 10 and T(2) = 101.</p>
<p>Let S(L) be the triple sum ∑<sub>a,b,c</sub> gcd(T(c<sup>a</sup>), T(c<sup>b</sup>)) for 1 ≤ a, b, c ≤ L.<br>For example:<br>S(2) = 10444<br>S(3) = 1292115238446807016106539989<br>S(4) mod 987&nbsp;898&nbsp;789 = 670616280.</p>
<p>Find S(2000) mod 987&nbsp;898&nbsp;789.</p>
<hr>
<p><strong>最大公约数与摆方格</strong></p>
<p>我们想要用1 × 2的空白方格或是1 × 1写有一个十进制数字的方格（如下所示）铺满长为n高为1的版面：</p>
<center><img src="/resources/images/0440_tiles.png"></center>

<p>例如，下面是铺满长为n = 8的版面的一些方式：</p>
<center><img src="/resources/images/0440_some8.png"></center>

<p>记铺满长为n的版面的方式数为T(n)。</p>
<p>例如，T(1) = 10，T(2) = 101。</p>
<p>对于1 ≤ a, b, c ≤ L，记S(L)是三重求和∑<sub>a,b,c</sub> gcd(T(c<sup>a</sup>), T(c<sup>b</sup>)) 。<br>例如：<br>S(2) = 10444<br>S(3) = 1292115238446807016106539989<br>S(4) mod 987&nbsp;898&nbsp;789 = 670616280.</p>
<p>求 S(2000) mod 987&nbsp;898&nbsp;789。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 44</title>
    <url>/44/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-44"><a href="#Problem-44" class="headerlink" title="Problem 44"></a><a href="https://projecteuler.net/problem=44">Problem 44</a></h1><hr>
<h2 id="Pentagon-Numbers"><a href="#Pentagon-Numbers" class="headerlink" title="Pentagon Numbers"></a><strong>Pentagon Numbers</strong></h2><p>Pentagonal numbers are generated by the formula, $P_n=n(3n−1)/2$. The first ten pentagonal numbers are:</p>
<p>$$1, 5, 12, 22, 35, 51, 70, 92, 117, 145, \ldots $$</p>
<p>It can be seen that $P_4 + P_7 = 22 + 70 = 92 = P_8$. However, their difference, $70 − 22 = 48$, is not pentagonal.</p>
<p>Find the pair of pentagonal numbers, $P_j$ and $P_k$, for which their sum and difference are pentagonal and $D = |P_k − P_j|$ is minimised; what is the value of $D$?</p>
<hr>
<h2 id="五边形数"><a href="#五边形数" class="headerlink" title="五边形数"></a><strong>五边形数</strong></h2><p>五边形数由公式$P_n=n(3n−1)/2$给出。前十个五边形数是：</p>
<p>$$1, 5, 12, 22, 35, 51, 70, 92, 117, 145, \ldots $$</p>
<p>可以看出$P_4 + P_7 = 22 + 70 = 92 = P_8$。然而，它们的差$70 − 22 = 48$并不是五边形数。</p>
<p>在所有和差均为五边形数的五边形数对$P_j$和$P_k$中，找出使$D = |P_k − P_j|$最小的一对；此时$D$的值是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 441</title>
    <url>/441/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-441"><a href="#Problem-441" class="headerlink" title="Problem 441"></a><a href="https://projecteuler.net/problem=441">Problem 441</a></h1><hr>
<p><strong>The inverse summation of coprime couples</strong></p>
<p>For an integer M, we define R(M) as the sum of 1/(p·q) for all the integer pairs p and q which satisfy all of these conditions:</p>
<ul>
<li>1 ≤ p &lt; q ≤ M</li>
<li>p + q ≥ M</li>
<li>p and q are coprime.</li>
</ul>
<p>We also define S(N) as the sum of R(i) for 2 ≤ i ≤ N.<br>We can verify that S(2) = R(2) = 1/2, S(10) ≈ 6.9147 and S(100) ≈ 58.2962.</p>
<p>Find S(10<sup>7</sup>). Give your answer rounded to four decimal places.</p>
<hr>
<p><strong>互质数对的倒数和</strong></p>
<p>对于整数M，定义R(M)是所有1/(p·q) 之和，其中整数对p和q满足如下条件：</p>
<ul>
<li>1 ≤ p &lt; q ≤ M</li>
<li>p + q ≥ M</li>
<li>p和q互质。</li>
</ul>
<p>对于2 ≤ i ≤ N，定义S(N)是所有R(i)的和。<br>可以验证S(2) = R(2) = 1/2，S(10) ≈ 6.9147以及S(100) ≈ 58.2962。</p>
<p>求S(10<sup>7</sup>)，并保留4位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 442</title>
    <url>/442/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-442"><a href="#Problem-442" class="headerlink" title="Problem 442"></a><a href="https://projecteuler.net/problem=442">Problem 442</a></h1><hr>
<p><strong>Eleven-free integers</strong></p>
<p>An integer is called <em>eleven-free</em> if its decimal expansion does not contain any substring representing a power of 11 except 1.</p>
<p>For example, 2404 and 13431 are eleven-free, while 911 and 4121331 are not.</p>
<p>Let E(n) be the nth positive eleven-free integer. For example, E(3) = 3, E(200) = 213 and E(500&nbsp;000) = 531563.</p>
<p>Find E(10<sup>18</sup>).</p>
<hr>
<p><strong>无11整数</strong></p>
<p><em>无11</em>整数指的是十进制表达式中不包含有除了1之外11的幂的整数。</p>
<p>例如，2404和13431都是无11整数，而911和4121331不是。</p>
<p>记E(n)是第n个无11正整数。例如，E(3) = 3，E(200) = 213，以及E(500&nbsp;000) = 531563。</p>
<p>求E(10<sup>18</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 443</title>
    <url>/443/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-443"><a href="#Problem-443" class="headerlink" title="Problem 443"></a><a href="https://projecteuler.net/problem=443">Problem 443</a></h1><hr>
<p><strong>GCD sequence</strong></p>
<p>Let g(n) be a sequence defined as follows:<br>g(4) = 13,<br>g(n) = g(n-1) + gcd(n, g(n-1)), for n &gt; 4.</p>
<p>The first few values are:</p>
<table>
<thead>
<tr>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
</tr>
</thead>
<tbody><tr>
<td>n&nbsp;&nbsp;&nbsp;</td>
<td>4&nbsp;</td>
<td>5&nbsp;</td>
<td>6&nbsp;</td>
<td>7&nbsp;</td>
<td>8&nbsp;</td>
<td>9&nbsp;</td>
<td>10</td>
<td>11</td>
<td>12</td>
<td>13</td>
<td>14</td>
<td>15</td>
<td>16</td>
<td>17</td>
<td>18</td>
<td>19</td>
<td>20</td>
<td>…</td>
</tr>
<tr>
<td>g(n)</td>
<td>13</td>
<td>14</td>
<td>16</td>
<td>17</td>
<td>18</td>
<td>27</td>
<td>28</td>
<td>29</td>
<td>30</td>
<td>31</td>
<td>32</td>
<td>33</td>
<td>34</td>
<td>51</td>
<td>54</td>
<td>55</td>
<td>60</td>
<td>…</td>
</tr>
</tbody></table>
<p>You are given that g(1&nbsp;000) = 2524 and g(1&nbsp;000&nbsp;000) = 2624152.</p>
<p>Find g(10<sup>15</sup>).</p>
<hr>
<p><strong>最大公约数序列</strong></p>
<p>序列g(n)按如下方式定义：<br>g(4) = 13，<br>g(n) = g(n-1) + gcd(n, g(n-1))，若n &gt; 4。</p>
<p>序列最初始的一些项是：</p>
<table>
<thead>
<tr>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
</tr>
</thead>
<tbody><tr>
<td>n&nbsp;&nbsp;&nbsp;</td>
<td>4&nbsp;</td>
<td>5&nbsp;</td>
<td>6&nbsp;</td>
<td>7&nbsp;</td>
<td>8&nbsp;</td>
<td>9&nbsp;</td>
<td>10</td>
<td>11</td>
<td>12</td>
<td>13</td>
<td>14</td>
<td>15</td>
<td>16</td>
<td>17</td>
<td>18</td>
<td>19</td>
<td>20</td>
<td>…</td>
</tr>
<tr>
<td>g(n)</td>
<td>13</td>
<td>14</td>
<td>16</td>
<td>17</td>
<td>18</td>
<td>27</td>
<td>28</td>
<td>29</td>
<td>30</td>
<td>31</td>
<td>32</td>
<td>33</td>
<td>34</td>
<td>51</td>
<td>54</td>
<td>55</td>
<td>60</td>
<td>…</td>
</tr>
</tbody></table>
<p>已知g(1&nbsp;000) = 2524以及g(1&nbsp;000&nbsp;000) = 2624152。</p>
<p>求g(10<sup>15</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 444</title>
    <url>/444/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-444"><a href="#Problem-444" class="headerlink" title="Problem 444"></a><a href="https://projecteuler.net/problem=444">Problem 444</a></h1><hr>
<p><strong>The Roundtable Lottery</strong></p>
<p>A group of p people decide to sit down at a round table and play a lottery-ticket trading game. Each person starts off with a randomly-assigned, unscratched lottery ticket. Each ticket, when scratched, reveals a whole-pound prize ranging anywhere from £1 to £p, with no two tickets alike. The goal of the game is for each person to maximize his ticket winnings upon leaving the game.</p>
<p>An arbitrary person is chosen to be the first player. Going around the table, each player has only one of two options:</p>
<ol>
<li>The player can scratch his ticket and reveal its worth to everyone at the table.</li>
<li>The player can trade his unscratched ticket for a previous player’s scratched ticket, and then leave the game with that ticket. The previous player then scratches his newly-acquired ticket and reveals its worth to everyone at the table.</li>
</ol>
<p>The game ends once all tickets have been scratched. All players still remaining at the table must leave with their currently-held tickets.</p>
<p>Assume that each player uses the optimal strategy for maximizing the expected value of his ticket winnings. </p>
<p>Let E(p) represent the expected number of players left at the table when the game ends in a game consisting of p players (e.g. E(111)&nbsp;=&nbsp;5.2912 when rounded to 5 significant digits).</p>
<p>Let S<sub>1</sub>(N) = <img style="vertical-align:middle" src="https://projecteuler.net/project/images/p444_sum.png"> E(p)<br>Let S<sub>k</sub>(N) = <img style="vertical-align:middle" src="https://projecteuler.net/project/images/p444_sum.png"> S<sub>k-1</sub>(p) for k &gt; 1</p>
<p>Find S<sub>20</sub>(10<sup>14</sup>) and write the answer in scientific notation rounded to 10 significant digits. Use a lowercase e to separate mantissa and exponent (e.g. S<sub>3</sub>(100) = 5.983679014e5).</p>
<hr>
<p><strong>圆桌彩票</strong></p>
<p>一群共p个人决定围绕圆桌坐下玩一个彩票交易游戏。每个人在开始游戏时有一张随机分配的、未刮开的彩票，彩票刮开之后就会显示从£1至£p的一个随机整数数额，但没有两张彩票的数额相同。每个玩家进行游戏的目标是在离开游戏时最大化他的彩票收益。</p>
<p>随机选择一个人作为第一个玩家，然后游戏绕着圆桌一次进行，每个玩家有两个选项：</p>
<ol>
<li>玩家可以刮开他的彩票，把彩票上的数额展示给所有人看。</li>
<li>玩家可以将自己未刮开的彩票和之前的玩家已经刮开的一张彩票进行交易，然后拿着已刮开的彩票离开游戏。拿到未刮开彩票的玩家将彩票刮开并展示给所有人看。</li>
</ol>
<p>当所有彩票都已经刮开时，游戏结束。所有仍在场上的玩家必须拿着目前持有的彩票离开游戏。</p>
<p>假定所有玩家使用最优策略以最大化他的彩票收益。</p>
<p>对于由p个玩家进行的游戏，记E(p)是当游戏结束时还在圆桌上的人数期望值（例如E(111)&nbsp;=&nbsp;5.2912，保留5位小数）。</p>
<p>记S<sub>1</sub>(N) = <img style="vertical-align:middle" src="https://projecteuler.net/project/images/p444_sum.png"> E(p)<br>记S<sub>k</sub>(N) = <img style="vertical-align:middle" src="https://projecteuler.net/project/images/p444_sum.png"> S<sub>k-1</sub>(p)对于k &gt; 1</p>
<p>求S<sub>20</sub>(10<sup>14</sup>)，并保留10位有效数字，用小写字母e分隔尾数和指数（例如，S<sub>3</sub>(100) = 5.983679014e5）。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 445</title>
    <url>/445/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-445"><a href="#Problem-445" class="headerlink" title="Problem 445"></a><a href="https://projecteuler.net/problem=445">Problem 445</a></h1><hr>
<p><strong>Retractions A</strong></p>
<p>For every integer n&gt;1, the family of functions f<sub>n,a,b</sub>  is defined by f<sub>n,a,b</sub>(x)≡ax+b mod n for a,b,x integer and  0&lt;a&lt;n, 0≤b&lt;n, 0≤x&lt;n.<br>We will call f<sub>n,a,b</sub> a retraction if f<sub>n,a,b</sub>(f<sub>n,a,b</sub>(x))≡f<sub>n,a,b</sub>(x) mod n for every 0≤x&lt;n.<br>Let R(n) be the number of retractions for n.</p>
<p>You are given that<br>∑ R(c) for c=C(100 000,k), and 1 ≤ k ≤99 999 ≡628701600 (mod 1 000 000 007).<br>(C(n,k) is the binomial coefficient).</p>
<p>Find ∑ R(c) for c=C(10 000 000,k), and 1 ≤k≤ 9 999 999.<br>Give your answer modulo 1 000 000 007.</p>
<hr>
<p><strong>撤销函数 A</strong></p>
<p>对于任意整数n&gt;1，函数族f<sub>n,a,b</sub>按如下方式定义：f<sub>n,a,b</sub>(x)≡ax+b mod n，其中a,b,x都是整数，且0&lt;a&lt;n，0≤b&lt;n，0≤x&lt;n。<br>我们称f<sub>n,a,b</sub>为撤销函数，当对于0≤x&lt;n均有在模n意义下f<sub>n,a,b</sub>(f<sub>n,a,b</sub>(x))≡f<sub>n,a,b</sub>(x)。<br>记R(n)是给定n下撤销函数的数目。</p>
<p>已知<br>对于c=C(100 000,k)且1 ≤ k ≤99 999，∑ R(c)≡628701600 (mod 1 000 000 007)。<br>（C(n,k)是二项式系数）。</p>
<p>对于c=C(100 000,k)且1 ≤ k ≤9 999 999，求∑ R(c)。<br>给出其对1 000 000 007取模的余数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 446</title>
    <url>/446/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-446"><a href="#Problem-446" class="headerlink" title="Problem 446"></a><a href="https://projecteuler.net/problem=446">Problem 446</a></h1><hr>
<p><strong>Retractions B</strong></p>
<p>For every integer n&gt;1, the family of functions f<sub>n,a,b</sub>  is defined by f<sub>n,a,b</sub>(x)≡ax+b mod n for a,b,x integer and  0&lt;a&lt;n, 0≤b&lt;n, 0≤x&lt;n.<br>We will call f<sub>n,a,b</sub> a retraction if f<sub>n,a,b</sub>(f<sub>n,a,b</sub>(x))≡f<sub>n,a,b</sub>(x) mod n for every 0≤x&lt;n.<br>Let R(n) be the number of retractions for n.</p>
<p>F(N)=∑R(n<sup>4</sup>+4) for 1≤n≤N.<br>F(1024)=77532377300600.</p>
<p>Find F(10<sup>7</sup>) (mod 1 000 000 007).</p>
<hr>
<p><strong>撤销函数 B</strong></p>
<p>对于任意整数n&gt;1，函数族f<sub>n,a,b</sub>按如下方式定义：f<sub>n,a,b</sub>(x)≡ax+b mod n，其中a,b,x都是整数，且0&lt;a&lt;n，0≤b&lt;n，0≤x&lt;n。<br>我们称f<sub>n,a,b</sub>为撤销函数，当对于0≤x&lt;n均有在模n意义下f<sub>n,a,b</sub>(f<sub>n,a,b</sub>(x))≡f<sub>n,a,b</sub>(x)。<br>记R(n)是给定n下撤销函数的数目。</p>
<p>记F(N)=∑R(n<sup>4</sup>+4)，其中1≤n≤N。<br>已知F(1024)=77532377300600。</p>
<p>求F(10<sup>7</sup>) (mod 1 000 000 007)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 447</title>
    <url>/447/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-447"><a href="#Problem-447" class="headerlink" title="Problem 447"></a><a href="https://projecteuler.net/problem=447">Problem 447</a></h1><hr>
<p><strong>Retractions C</strong></p>
<p>For every integer n&gt;1, the family of functions f<sub>n,a,b</sub>  is defined by f<sub>n,a,b</sub>(x)≡ax+b mod n for a,b,x integer and  0&lt;a&lt;n, 0≤b&lt;n, 0≤x&lt;n.<br>We will call f<sub>n,a,b</sub> a retraction if f<sub>n,a,b</sub>(f<sub>n,a,b</sub>(x))≡f<sub>n,a,b</sub>(x) mod n for every 0≤x&lt;n.<br>Let R(n) be the number of retractions for n.</p>
<p>F(N)=∑R(n) for 2≤n≤N.<br>F(10<sup>7</sup>)≡638042271 (mod 1 000 000 007).</p>
<p>Find F(10<sup>14</sup>) (mod 1 000 000 007).</p>
<hr>
<p><strong>撤销函数 C</strong></p>
<p>对于任意整数n&gt;1，函数族f<sub>n,a,b</sub>按如下方式定义：f<sub>n,a,b</sub>(x)≡ax+b mod n，其中a,b,x都是整数，且0&lt;a&lt;n，0≤b&lt;n，0≤x&lt;n。<br>我们称f<sub>n,a,b</sub>为撤销函数，当对于0≤x&lt;n均有在模n意义下f<sub>n,a,b</sub>(f<sub>n,a,b</sub>(x))≡f<sub>n,a,b</sub>(x)。<br>记R(n)是给定n下撤销函数的数目。</p>
<p>记F(N)=∑R(n)，其中2≤n≤N。<br>已知F(10<sup>7</sup>)≡638042271 (mod 1 000 000 007)。</p>
<p>求F(10<sup>14</sup>) (mod 1 000 000 007)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 448</title>
    <url>/448/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-448"><a href="#Problem-448" class="headerlink" title="Problem 448"></a><a href="https://projecteuler.net/problem=448">Problem 448</a></h1><hr>
<p><strong>Average least common multiple</strong></p>
<p>The function <strong>lcm</strong>(a,b) denotes the least common multiple of a and b.<br>Let A(n) be the average of the values of lcm(n,i) for 1≤i≤n.<br>E.g: A(2)=(2+2)/2=2 and A(10)=(10+10+30+20+10+30+70+40+90+10)/10=32. </p>
<p>Let S(n)=∑A(k) for 1≤k≤n.<br>S(100)=122726.</p>
<p>Find S(99999999019) mod 999999017.</p>
<hr>
<p><strong>平均最小公倍数</strong></p>
<p>函数<strong>lcm</strong>(a,b)给出了a和b的最小公倍数<br>对于1≤i≤n，记A(n)是lcm(n,i)的平均值。<br>例如，A(2)=(2+2)/2=2，A(10)=(10+10+30+20+10+30+70+40+90+10)/10=32。 </p>
<p>记S(n)=∑A(k)，其中1≤k≤n。<br>已知S(100)=122726。</p>
<p>求S(99999999019) mod 999999017。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 449</title>
    <url>/449/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-449"><a href="#Problem-449" class="headerlink" title="Problem 449"></a><a href="https://projecteuler.net/problem=449">Problem 449</a></h1><hr>
<p><strong>Chocolate covered candy</strong></p>
<p>Phil the confectioner is making a new batch of chocolate covered candy. Each candy centre is shaped like an ellipsoid of revolution defined by the equation: b<sup>2</sup>x<sup>2</sup> + b<sup>2</sup>y<sup>2</sup> + a<sup>2</sup>z<sup>2</sup> = a<sup>2</sup>b<sup>2</sup>.</p>
<p>Phil wants to know how much chocolate is needed to cover one candy centre with a uniform coat of chocolate one millimeter thick.</p>
<p>If a=1 mm and b=1 mm, the amount of chocolate required is $\frac{28}{3}$π mm<sup>3</sup>.</p>
<p>If a=2 mm and b=1 mm, the amount of chocolate required is approximately 60.35475635 mm<sup>3</sup>.</p>
<p>Find the amount of chocolate in mm<sup>3</sup> required if a=3 mm and b=1 mm. Give your answer as the number rounded to 8 decimal places behind the decimal point.</p>
<hr>
<p><strong>巧克力糖衣</strong></p>
<p>糖果师傅菲尔正在制造一种用巧克力做糖衣的新型糖果，每块糖的中心是一个椭球体，由如下方程给出：b<sup>2</sup>x<sup>2</sup> + b<sup>2</sup>y<sup>2</sup> + a<sup>2</sup>z<sup>2</sup> = a<sup>2</sup>b<sup>2</sup>。</p>
<p>菲尔想知道，给这样一个糖果裹上一毫米厚的巧克力糖衣需要多少巧克力。</p>
<p>如果a=1 mm且b=1 mm，需要的巧克力是$\frac{28}{3}$π mm<sup>3</sup>。</p>
<p>如果a=2 mm且b=1 mm，需要的巧克力大概是60.35475635 mm<sup>3</sup>。</p>
<p>当a=3 mm且b=1 mm时，求需要多少巧克力（单位是mm<sup>3</sup>），并保留小数点后8位数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 450</title>
    <url>/450/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-450"><a href="#Problem-450" class="headerlink" title="Problem 450"></a><a href="https://projecteuler.net/problem=450">Problem 450</a></h1><hr>
<p><strong>Hypocycloid and Lattice points</strong></p>
<p>A hypocycloid is the curve drawn by a point on a small circle rolling inside a larger circle. The parametric equations of a hypocycloid centered at the origin, and starting at the right most point is given by:</p>
<p>$$x(t)=(R-r)\cos(t)+r \cos(\frac{R-r}{r}t)$$ $$y(t)=(R-r)\sin(t)-r \sin(\frac{R-r}{r}t)$$</p>
<p>Where R is the radius of the large circle and r the radius of the small circle.</p>
<p>Let $C(R,r)$ be the set of distinct points with integer coordinates on the hypocycloid with radius R and r and for which there is a corresponding value of t such that $\sin(t)$ and $\cos(t)$ are rational numbers.</p>
<p>Let $S(R,r)=\sum_{(x,y) \in C(R,r)}|x|+|y|$ be the sum of the absolute values of the x and y coordinates of the points in $C(R,r)$.</p>
<p>Let $T(N)=\sum_{R=3}^{N} \sum_{r=1}^{\lfloor \frac{R-1}{2} \rfloor}S(R,r)$ be the sum of $S(R,r)$ for R and r positive integers, $R \le N$ and $2r \lt R$.</p>
<p>You are given:<br>C(3, 1) = {(3, 0), (-1, 2), (-1,0), (-1,-2)}</p>
<p>C(2500, 1000) =</p>
<p>{(2500, 0), (772, 2376), (772, -2376), (516, 1792),(516, -1792), (500, 0), (68, 504), (68, -504),(-1356, 1088), (-1356, -1088), (-1500, 1000), (-1500, -1000)}</p>
<p><em>Note: (-625, 0) is not an element of C(2500, 1000) because $\sin(t)$ is not a rational number for the corresponding values of t.</em></p>
<p>S(3, 1) = (|3| + |0|) + (|-1| + |2|) + (|-1| + |0|) + (|-1| + |-2|) = 10</p>
<p>T(3) = 10; T(10) = 524; T(100) = 580442; T(10<sup>3</sup>) = 583108600.</p>
<p>Find T(10<sup>6</sup>).</p>
<hr>
<p><strong>圆内旋轮线与格点</strong></p>
<p>在大圆内部有一小圆与其相切并不断滚动，由小圆上一点所构成的曲线称为圆内旋轮线。以原点为圆心，以最右侧的点为起点的圆内旋轮线，其参数方程如下所示：</p>
<p>$$x(t)=(R-r)\cos(t)+r \cos(\frac{R-r}{r}t)$$ $$y(t)=(R-r)\sin(t)-r \sin(\frac{R-r}{r}t)$$</p>
<p>其中R是大圆的半径，而r是小圆的半径。</p>
<p>记$C(R,r)$是大小圆半径分别为R和r时落在圆内旋轮线上的格点的集合，且此时对应的t值满足$\sin(t)$和$\cos(t)$都是有理数。</p>
<p>记$S(R,r)=\sum_{(x,y) \in C(R,r)}|x|+|y|$是$C(R,r)$中所有点的坐标绝对值之和。</p>
<p>记$T(N)=\sum_{R=3}^{N} \sum_{r=1}^{\lfloor \frac{R-1}{2} \rfloor}S(R,r)$是满足R和r均为正整数，$R \le N$以及$2r \lt R$的所有$S(R,r)$的和。</p>
<p>已知：<br>C(3, 1) = {(3, 0), (-1, 2), (-1,0), (-1,-2)}</p>
<p>C(2500, 1000) =</p>
<p>{(2500, 0), (772, 2376), (772, -2376), (516, 1792),(516, -1792), (500, 0), (68, 504), (68, -504),(-1356, 1088), (-1356, -1088), (-1500, 1000), (-1500, -1000)}</p>
<p><em class="zh">注意：(-625, 0)不是C(2500, 1000)中的元素，此时对应的t值不满足$\sin(t)$为有理数。</em></p>
<p>因此S(3, 1) = (|3| + |0|) + (|-1| + |2|) + (|-1| + |0|) + (|-1| + |-2|) = 10</p>
<p>且已知T(3) = 10；T(10) = 524；T(100) = 580442；T(10<sup>3</sup>) = 583108600。</p>
<p>求T(10<sup>6</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 45</title>
    <url>/45/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-45"><a href="#Problem-45" class="headerlink" title="Problem 45"></a><a href="https://projecteuler.net/problem=45">Problem 45</a></h1><hr>
<h2 id="Triangular-Pentagonal-and-Hexagonal"><a href="#Triangular-Pentagonal-and-Hexagonal" class="headerlink" title="Triangular, Pentagonal, and Hexagonal"></a><strong>Triangular, Pentagonal, and Hexagonal</strong></h2><p>Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:</p>
<p>$$<br>\begin{aligned}<br>&amp;\text{Triangle}   &amp;&amp;  T_n=n(n+1)/2  &amp;&amp; 1, 3, 6,  10, 15, \ldots \\<br>&amp;\text{Pentagonal} &amp;&amp;  P_n=n(3n−1)/2 &amp;&amp; 1, 5, 12, 22, 35, \ldots \\<br>&amp;\text{Hexagonal}  &amp;&amp;  H_n=n(2n−1)   &amp;&amp; 1, 6, 15, 28, 45, \ldots<br>\end{aligned}<br>$$</p>
<p>It can be verified that $T_{285} = P_{165} = H_{143} = 40755$.</p>
<p>Find the next triangle number that is also pentagonal and hexagonal.</p>
<hr>
<h2 id="三角形数、五边形数和六边形数"><a href="#三角形数、五边形数和六边形数" class="headerlink" title="三角形数、五边形数和六边形数"></a><strong>三角形数、五边形数和六边形数</strong></h2><p>三角形数、五边形数和六边形数分别由以下公式给出：</p>
<p>$$<br>\begin{aligned}<br>&amp;\text{三角形数} &amp;&amp;  T_n=n(n+1)/2  &amp;&amp; 1, 3, 6,  10, 15, \ldots \\<br>&amp;\text{五边形数} &amp;&amp;  P_n=n(3n−1)/2 &amp;&amp; 1, 5, 12, 22, 35, \ldots \\<br>&amp;\text{六边形数} &amp;&amp;  H_n=n(2n−1)   &amp;&amp; 1, 6, 15, 28, 45, \ldots<br>\end{aligned}<br>$$</p>
<p>可以验证，$T_{285} = P_{165} = H_{143} = 40755$。</p>
<p>找出下一个同时是三角形数、五边形数和六边形数的数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 451</title>
    <url>/451/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-451"><a href="#Problem-451" class="headerlink" title="Problem 451"></a><a href="https://projecteuler.net/problem=451">Problem 451</a></h1><hr>
<p><strong>Modular inverses</strong></p>
<p>Consider the number 15.<br>There are eight positive numbers less than 15 which are coprime to 15: 1, 2, 4, 7, 8, 11, 13, 14.<br>The modular inverses of these numbers modulo 15 are: 1, 8, 4, 13, 2, 11, 7, 14<br>because<br>1*1 mod 15=1<br>2*8=16 mod 15=1<br>4*4=16 mod 15=1<br>7*13=91 mod 15=1<br>11*11=121 mod 15=1<br>14*14=196 mod 15=1</p>
<p>Let I(n) be the largest positive number m smaller than n-1 such that the modular inverse of m modulo n equals m itself.<br>So I(15)=11.<br>Also I(100)=51 and I(7)=1.</p>
<p>Find ∑I(n) for 3≤n≤2·10<sup>7</sup></p>
<hr>
<p><strong>同余逆</strong></p>
<p>考虑数15。<br>有8个小于15的正整数与15互质，分别是：1，2，4，7，8，11，13，14。<br>这些数在模15意义下的同余逆是：1, 8, 4, 13, 2, 11, 7, 14<br>因为<br>1*1 mod 15=1<br>2*8=16 mod 15=1<br>4*4=16 mod 15=1<br>7*13=91 mod 15=1<br>11*11=121 mod 15=1<br>14*14=196 mod 15=1</p>
<p>若小于n-1的正整数m满足其同余逆等于本身，记最大的m为I(n)。<br>所以I(15)=11。<br>同理有I(100)=51以及I(7)=1。</p>
<p>对于3≤n≤2·10<sup>7</sup>求∑I(n)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 452</title>
    <url>/452/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-452"><a href="#Problem-452" class="headerlink" title="Problem 452"></a><a href="https://projecteuler.net/problem=452">Problem 452</a></h1><hr>
<p><strong>Long Products</strong></p>
<p>Define F(m,n) as the number of n-tuples of positive integers for which the product of the elements doesn’t exceed m.</p>
<p>F(10, 10) = 571.</p>
<p>F(10<sup>6</sup>, 10<sup>6</sup>) mod 1&nbsp;234&nbsp;567&nbsp;891 = 252903833.</p>
<p>Find F(10<sup>9</sup>, 10<sup>9</sup>) mod 1&nbsp;234&nbsp;567&nbsp;891.</p>
<hr>
<p><strong>长乘积</strong></p>
<p>记F(m,n)是所有乘积不超过m的n元正整数组的数目。</p>
<p>F(10, 10) = 571.</p>
<p>F(10<sup>6</sup>, 10<sup>6</sup>) mod 1&nbsp;234&nbsp;567&nbsp;891 = 252903833.</p>
<p>求F(10<sup>9</sup>, 10<sup>9</sup>) mod 1&nbsp;234&nbsp;567&nbsp;891。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 454</title>
    <url>/454/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-454"><a href="#Problem-454" class="headerlink" title="Problem 454"></a><a href="https://projecteuler.net/problem=454">Problem 454</a></h1><hr>
<p><strong>Diophantine reciprocals III</strong></p>
<p>In the following equation x, y, and n are positive integers.</p>
<p>$$\frac{1}{x}+\frac{1}{y}=\frac{1}{n}$$</p>
<p>For a limit L we define F(L) as the number of solutions which satisfy x &lt; y ≤ L.</p>
<p>We can verify that F(15) = 4 and F(1000) = 1069.<br>Find F(10<sup>12</sup>).</p>
<hr>
<p><strong>丢番图倒数III</strong></p>
<p>在如下方程中，x、y、n均为正整数。</p>
<p>$$\frac{1}{x}+\frac{1}{y}=\frac{1}{n}$$</p>
<p>我们记上述方程满足x &lt; y ≤ L的解的数目为F(L)。</p>
<p>可以验证F(15) = 4以及F(1000) = 1069。<br>求F(10<sup>12</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 453</title>
    <url>/453/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-453"><a href="#Problem-453" class="headerlink" title="Problem 453"></a><a href="https://projecteuler.net/problem=453">Problem 453</a></h1><hr>
<p><strong>Lattice Quadrilaterals</strong></p>
<p>A <strong>simple quadrilateral</strong> is a polygon that has four distinct vertices, has no straight angles and does not self-intersect.</p>
<p>Let Q(m, n) be the number of simple quadrilaterals whose vertices are lattice points with coordinates (x,y) satisfying 0 ≤ x ≤ m and 0 ≤ y ≤ n.</p>
<p>For example, Q(2, 2) = 94 as can be seen below:</p>
<center><img src="/resources/images/0453_quad.png"></center>

<p>It can also be verified that Q(3, 7) = 39590, Q(12, 3) = 309000 and Q(123, 45) = 70542215894646.</p>
<p>Find Q(12345, 6789) mod 135707531.</p>
<hr>
<p><strong>格点四边形</strong></p>
<p>一个<strong>简单四边形</strong>是指有四个顶点、没有任意三个顶点共线且不自交的多边形。</p>
<p>记坐标在格点上，且格点坐标满足0 ≤ x ≤ m以及0 ≤ y ≤ n的简单四边形数目为Q(m, n)。</p>
<p>例如，Q(2, 2) = 94，如下图所示：</p>
<center><img src="/resources/images/0453_quad.png"></center>

<p>可以验证，Q(3, 7) = 39590，Q(12, 3) = 309000以及Q(123, 45) = 70542215894646.</p>
<p>求Q(12345, 6789) mod 135707531。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 455</title>
    <url>/455/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-455"><a href="#Problem-455" class="headerlink" title="Problem 455"></a><a href="https://projecteuler.net/problem=455">Problem 455</a></h1><hr>
<p><strong>Powers With Trailing Digits</strong></p>
<p>Let f(n) be the largest positive integer x less than 10<sup>9</sup> such that the last 9 digits of n<sup>x</sup> form the number x (including leading zeros), or zero if no such integer exists.</p>
<p>For example:</p>
<ul>
<li>f(4) = 411728896 (4<sup>411728896</sup> = …490<u>411728896</u>) </li>
<li>f(10) = 0</li>
<li>f(157) = 743757 (157<sup>743757</sup> = …567<u>000743757</u>)</li>
<li>Σf(n), 2 ≤ n ≤ 10<sup>3</sup> = 442530011399</li>
</ul>
<p>Find Σf(n), 2 ≤ n ≤ 10<sup>6</sup>.</p>
<hr>
<p><strong>尾数与指数相同的幂</strong></p>
<p>对于任意整数n，记f(n)是小于10<sup>9</sup>且满足n<sup>x</sup>的最后9位数字恰好等于x的最大的数。如果这样的数不存在，则f(n)等于0。</p>
<p>例如：</p>
<ul>
<li>f(4) = 411728896 (4<sup>411728896</sup> = …490<u>411728896</u>) </li>
<li>f(10) = 0</li>
<li>f(157) = 743757 (157<sup>743757</sup> = …567<u>000743757</u>)</li>
<li>Σf(n), 2 ≤ n ≤ 10<sup>3</sup> = 442530011399</li>
</ul>
<p>求Σf(n), 2 ≤ n ≤ 10<sup>6</sup>。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 456</title>
    <url>/456/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-456"><a href="#Problem-456" class="headerlink" title="Problem 456"></a><a href="https://projecteuler.net/problem=456">Problem 456</a></h1><hr>
<p><strong>Triangles containing the origin II</strong></p>
<p>Define:<br>x<sub>n</sub> = (1248<sup>n</sup> mod 32323) - 16161<br>y<sub>n</sub> = (8421<sup>n</sup> mod 30103) - 15051<br>P<sub>n</sub> = {(x<sub>1</sub>, y<sub>1</sub>), (x<sub>2</sub>, y<sub>2</sub>), …, (x<sub>n</sub>, y<sub>n</sub>)}</p>
<p>For example, P<sub>8</sub> = {(-14913, -6630), (-10161, 5625), (5226, 11896), (8340, -10778), (15852, -5203), (-15165, 11295), (-1427, -14495), (12407, 1060)}.</p>
<p>Let C(n) be the number of triangles whose vertices are in P<sub>n</sub> which contain the origin in the interior.</p>
<p>Examples:<br>C(8) = 20<br>C(600) = 8950634<br>C(40&nbsp;000) = 2666610948988</p>
<p>Find C(2&nbsp;000&nbsp;000).</p>
<hr>
<p><strong>包含原点的三角形II</strong></p>
<p>我们定义：<br>x<sub>n</sub> = (1248<sup>n</sup> mod 32323) - 16161<br>y<sub>n</sub> = (8421<sup>n</sup> mod 30103) - 15051<br>P<sub>n</sub> = {(x<sub>1</sub>, y<sub>1</sub>), (x<sub>2</sub>, y<sub>2</sub>), …, (x<sub>n</sub>, y<sub>n</sub>)}</p>
<p>例如，P<sub>8</sub> = {(-14913, -6630), (-10161, 5625), (5226, 11896), (8340, -10778), (15852, -5203), (-15165, 11295), (-1427, -14495), (12407, 1060)}.</p>
<p>以P<sub>n</sub>中元素为顶点的三角形中，包含有原点在其内部的三角形数目记为C(n)。</p>
<p>例如：<br>C(8) = 20<br>C(600) = 8950634<br>C(40&nbsp;000) = 2666610948988</p>
<p>求C(2&nbsp;000&nbsp;000)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 457</title>
    <url>/457/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-457"><a href="#Problem-457" class="headerlink" title="Problem 457"></a><a href="https://projecteuler.net/problem=457">Problem 457</a></h1><hr>
<p><strong>A polynomial modulo the square of a prime</strong></p>
<p>Let f(n) = n<sup>2</sup> - 3n - 1.<br>Let p be a prime.<br>Let R(p) be the smallest positive integer n such that f(n) mod p<sup>2</sup> = 0 if such an integer n exists, otherwise R(p) = 0.</p>
<p>Let SR(L) be ∑R(p) for all primes not exceeding L.</p>
<p>Find SR(10<sup>7</sup>).</p>
<hr>
<p><strong>多项式对素数平方取模</strong></p>
<p>记f(n) = n<sup>2</sup> - 3n - 1。<br>记p为任意素数。<br>记R(p)是使得f(n) mod p<sup>2</sup> = 0的最小正整数n；若这样的数不存在，则R(p) = 0。</p>
<p>对于所有不超过L的素数p，记SR(L)为∑R(p)。</p>
<p>求SR(10<sup>7</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 458</title>
    <url>/458/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-458"><a href="#Problem-458" class="headerlink" title="Problem 458"></a><a href="https://projecteuler.net/problem=458">Problem 458</a></h1><hr>
<p><strong>Permutations of Project</strong></p>
<p>Consider the alphabet A made out of the letters of the word “project”: A={c,e,j,o,p,r,t}.<br>Let T(n) be the number of strings of length n consisting of letters from A that do not have a substring that is one of the 5040 permutations of “project”.</p>
<p>T(7)=7<sup>7</sup>-7!=818503.</p>
<p>Find T(10<sup>12</sup>). Give the last 9 digits of your answer.</p>
<hr>
<p><strong>Project的重排</strong></p>
<p>考虑单词“Project”中的字母构成的字符集A={c,e,j,o,p,r,t}。<br>记T(n)是由A中的字符构成的长度为n且不包含有“project”的5040种重排中任何一个为其子串的字符串数目。</p>
<p>已知T(7)=7<sup>7</sup>-7!=818503。</p>
<p>求T(10<sup>12</sup>)，并给出其最后9位数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 459</title>
    <url>/459/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-459"><a href="#Problem-459" class="headerlink" title="Problem 459"></a><a href="https://projecteuler.net/problem=459">Problem 459</a></h1><hr>
<p><strong>Flipping game</strong></p>
<p>The flipping game is a two player game played on a N by N square board.<br>Each square contains a disk with one side white and one side black.<br>The game starts with all disks showing their white side.</p>
<p>A turn consists of flipping all disks in a rectangle with the following properties:</p>
<ul>
<li>the upper right corner of the rectangle contains a white disk</li>
<li>the rectangle width is a perfect square (1, 4, 9, 16, …)</li>
<li>the rectangle height is a <dfn title="The triangular numbers are defined as ½&nbsp;n(n + 1) for positive integer n.">triangular number</dfn> (1, 3, 6, 10, …)</li>
</ul>
<center><img src="/resources/images/0459-flipping-game-0.png"></center>

<p>Players alternate turns. A player wins by turning the grid all black.</p>
<p>Let W(N) be the number of <dfn title="The first move of a strategy that ensures a win no matter what the opponent plays.">winning moves</dfn> for the first player on a N by N board with all disks white, assuming perfect play.<br>W(1) = 1, W(2) = 0, W(5) = 8 and W(10<sup>2</sup>) = 31395.</p>
<p>For N=5, the first player’s eight winning first moves are:</p>
<center><img src="/resources/images/0459-flipping-game-1.png"></center>

<p>Find W(10<sup>6</sup>).</p>
<hr>
<p><strong>翻转游戏</strong></p>
<p>翻转游戏需要两名玩家和一块N乘N大小的方格板。<br>每一个方格上放置着一个一面黑一面白的圆盘。<br>游戏开始时，所有的圆盘都是白面朝上。</p>
<p>每一轮玩家可以选择满足如下条件的一个长方形，并翻转其中的所有圆盘：</p>
<ul>
<li>长方形的右上角是一个白色圆盘。</li>
<li>长方形的宽度是一个平方数，如(1, 4, 9, 16, …)。</li>
<li>长方形的高度是一个<dfn title="三角形数是指可以表示为½&nbsp;n(n + 1)的整数，其中n是正整数。">三角形数</dfn> ，如(1, 3, 6, 10, …)。</li>
</ul>
<center><img src="/resources/images/0459-flipping-game-0.png"></center>

<p>玩家轮流进行游戏。当玩家将所有的方格都翻转成黑色圆盘时，该玩家获胜。</p>
<p>记W(N)是先手玩家在一个N乘N大小的方格上进行游戏时<dfn title="无论对方如何应对总能获胜的第一步操作">致胜操作</dfn> 的数目。<br>已知W(1) = 1，W(2) = 0，W(5) = 8，以及W(10<sup>2</sup>) = 31395。</p>
<p>当N=5时，先手玩家的8种致胜操作分别是：</p>
<center><img src="/resources/images/0459-flipping-game-1.png"></center>

<p>求W(10<sup>6</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 46</title>
    <url>/46/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-46"><a href="#Problem-46" class="headerlink" title="Problem 46"></a><a href="https://projecteuler.net/problem=46">Problem 46</a></h1><hr>
<h2 id="Goldbach’s-Other-Conjecture"><a href="#Goldbach’s-Other-Conjecture" class="headerlink" title="Goldbach’s Other Conjecture"></a><strong>Goldbach’s Other Conjecture</strong></h2><p>It was proposed by Christian Goldbach that every odd composite number can be written as the sum of a prime and twice a square.</p>
<blockquote>
<p>$9  = 7  + 2\times 1^2$ <br /><br>$15 = 7  + 2\times 2^2$ <br /><br>$21 = 3  + 2\times 3^2$ <br /><br>$25 = 7  + 2\times 3^2$ <br /><br>$27 = 19 + 2\times 2^2$ <br /><br>$33 = 31 + 2\times 1^2$ <br /></p>
</blockquote>
<p>It turns out that the conjecture was false.</p>
<p>What is the smallest odd composite that cannot be written as the sum of a prime and twice a square?</p>
<hr>
<h2 id="哥德巴赫的另一个猜想"><a href="#哥德巴赫的另一个猜想" class="headerlink" title="哥德巴赫的另一个猜想"></a><strong>哥德巴赫的另一个猜想</strong></h2><p>克里斯蒂安·哥德巴赫曾经猜想，每个奇合数都可以写成一个素数和一个平方的两倍之和。</p>
<blockquote>
<p>$9  = 7  + 2\times 1^2$ <br /><br>$15 = 7  + 2\times 2^2$ <br /><br>$21 = 3  + 2\times 3^2$ <br /><br>$25 = 7  + 2\times 3^2$ <br /><br>$27 = 19 + 2\times 2^2$ <br /><br>$33 = 31 + 2\times 1^2$ <br /></p>
</blockquote>
<p>最终这个猜想被推翻了。</p>
<p>不能写成一个素数和一个平方的两倍之和的最小奇合数是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 460</title>
    <url>/460/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-460"><a href="#Problem-460" class="headerlink" title="Problem 460"></a><a href="https://projecteuler.net/problem=460">Problem 460</a></h1><hr>
<p><strong>An ant on the move</strong></p>
<p>On the Euclidean plane, an ant travels from point A(0, 1) to point B(d, 1) for an integer d.</p>
<p>In each step, the ant at point (x<sub>0</sub>, y<sub>0</sub>) chooses one of the lattice points (x<sub>1</sub>, y<sub>1</sub>) which satisfy x<sub>1</sub> ≥ 0 and y<sub>1</sub> ≥ 1 and goes straight to (x<sub>1</sub>, y<sub>1</sub>) at a constant velocity v. The value of v depends on y<sub>0</sub> and y<sub>1</sub> as follows:</p>
<ul>
<li>If y<sub>0</sub> = y<sub>1</sub>, the value of v equals y<sub>0</sub>.</li>
<li>If y<sub>0</sub> ≠ y<sub>1</sub>, the value of v equals (y<sub>1</sub> - y<sub>0</sub>) / (ln(y<sub>1</sub>) - ln(y<sub>0</sub>)).</li>
</ul>
<p>The left image is one of the possible paths for d = 4. First the ant goes from A(0, 1) to P<sub>1</sub>(1, 3) at velocity (3 - 1) / (ln(3) - ln(1)) ≈ 1.8205. Then the required time is sqrt(5) / 1.8205 ≈ 1.2283.<br>From P<sub>1</sub>(1, 3) to P<sub>2</sub>(3, 3) the ant travels at velocity 3 so the required time is 2 / 3 ≈ 0.6667. From P<sub>2</sub>(3, 3) to B(4, 1) the ant travels at velocity (1 - 3) / (ln(1) - ln(3)) ≈ 1.8205 so the required time is sqrt(5) / 1.8205 ≈ 1.2283.<br>Thus the total required time is 1.2283 + 0.6667 + 1.2283 = 3.1233.</p>
<p>The right image is another path. The total required time is calculated as 0.98026 + 1 + 0.98026 = 2.96052. It can be shown that this is the quickest path for d = 4.</p>
<center><img src="/resources/images/0460_ant.jpg"></center>

<p>Let F(d) be the total required time if the ant chooses the quickest path. For example, F(4) ≈ 2.960516287.<br>We can verify that F(10) ≈ 4.668187834 and F(100) ≈ 9.217221972.</p>
<p>Find F(10000). Give your answer rounded to nine decimal places.</p>
<hr>
<p><strong>蚂蚁旅行</strong></p>
<p>在欧几里德平面上，一只蚂蚁打算从点A(0, 1)运动到点B(d, 1)，其中d是一个整数。</p>
<p>每一步，位于点(x<sub>0</sub>, y<sub>0</sub>)的蚂蚁会选择一个格点(x<sub>1</sub>, y<sub>1</sub>)，满足x<sub>1</sub> ≥ 0及y<sub>1</sub> ≥ 1，然后以恒定速率v径直移动过去。v的值取决于y<sub>0</sub>和y<sub>1</sub>，如下所示：</p>
<ul>
<li>若y<sub>0</sub> = y<sub>1</sub>，则v的值为y<sub>0</sub>。</li>
<li>若y<sub>0</sub> ≠ y<sub>1</sub>，则v的值为(y<sub>1</sub> - y<sub>0</sub>) / (ln(y<sub>1</sub>) - ln(y<sub>0</sub>))。</li>
</ul>
<p>左图是当d = 4时的其中一条路径。首先蚂蚁从点A(0, 1)移动到点P<sub>1</sub>(1, 3)，速率为(3 - 1) / (ln(3) - ln(1)) ≈ 1.8205，所需时间为sqrt(5) / 1.8205 ≈ 1.2283。<br>再从点P<sub>1</sub>(1, 3)移动到点P<sub>2</sub>(3, 3)，蚂蚁的速率为3，所需时间为2 / 3 ≈ 0.6667。从点P<sub>2</sub>(3, 3)移动到点B(4, 1)，蚂蚁的速率是(1 - 3) / (ln(1) - ln(3)) ≈ 1.8205，所需时间为sqrt(5) / 1.8205 ≈ 1.2283。<br>因此，总耗时为1.2283 + 0.6667 + 1.2283 = 3.1233。</p>
<p>右图是另一条可行路径，总耗时为0.98026 + 1 + 0.98026 = 2.96052，可以看出这是d = 4时的最快路径。</p>
<center><img src="/resources/images/0460_ant.jpg"></center>

<p>记F(d)是蚂蚁选择最快路径时所需的耗时，例如F(4) ≈ 2.960516287。<br>我们可以验证F(10) ≈ 4.668187834以及F(100) ≈ 9.217221972。</p>
<p>求F(10000)，保留9位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 461</title>
    <url>/461/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-461"><a href="#Problem-461" class="headerlink" title="Problem 461"></a><a href="https://projecteuler.net/problem=461">Problem 461</a></h1><hr>
<p><strong>Almost Pi</strong></p>
<p>Let f<sub>n</sub>(k)&nbsp;=&nbsp;e<sup>k/n</sup>&nbsp;-&nbsp;1, for all non-negative integers k.</p>
<p>Remarkably, f<sub>200</sub>(6)&nbsp;+&nbsp;f<sub>200</sub>(75)&nbsp;+&nbsp;f<sub>200</sub>(89)&nbsp;+&nbsp;f<sub>200</sub>(226)&nbsp;= <u>3.1415926</u>44529…&nbsp;≈&nbsp;π.</p>
<p>In fact, it is the best approximation of π of the form f<sub>n</sub>(a)&nbsp;+&nbsp;f<sub>n</sub>(b)&nbsp;+&nbsp;f<sub>n</sub>(c)&nbsp;+&nbsp;f<sub>n</sub>(d) for n&nbsp;=&nbsp;200.</p>
<p>Let g(n)&nbsp;=&nbsp;a<sup>2</sup>&nbsp;+&nbsp;b<sup>2</sup>&nbsp;+&nbsp;c<sup>2</sup>&nbsp;+&nbsp;d<sup>&thinsp;2</sup> for a, b, c, d that minimize the error: |&nbsp;f<sub>n</sub>(a)&nbsp;+&nbsp;f<sub>n</sub>(b)&nbsp;+&nbsp;f<sub>n</sub>(c)&nbsp;+&nbsp;f<sub>n</sub>(d)&nbsp;-&nbsp;π|<br>(where |x| denotes the absolute value of x).</p>
<p>You are given g(200)&nbsp;=&nbsp;6<sup>2</sup>&nbsp;+&nbsp;75<sup>2</sup>&nbsp;+&nbsp;89<sup>2</sup>&nbsp;+&nbsp;226<sup>2</sup>&nbsp;=&nbsp;64658.</p>
<p>Find g(10000).</p>
<hr>
<p><strong>几乎是π</strong></p>
<p>对于所有非负整数k，记f<sub>n</sub>(k)&nbsp;=&nbsp;e<sup>k/n</sup>&nbsp;-&nbsp;1。</p>
<p>令人惊讶的是，f<sub>200</sub>(6)&nbsp;+&nbsp;f<sub>200</sub>(75)&nbsp;+&nbsp;f<sub>200</sub>(89)&nbsp;+&nbsp;f<sub>200</sub>(226)&nbsp;= <u>3.1415926</u>44529…&nbsp;≈&nbsp;π.</p>
<p>事实上，这是当n&nbsp;=&nbsp;200时，形如f<sub>n</sub>(a)&nbsp;+&nbsp;f<sub>n</sub>(b)&nbsp;+&nbsp;f<sub>n</sub>(c)&nbsp;+&nbsp;f<sub>n</sub>(d)的式子对π的最好近似值。</p>
<p>当a，b，c，d使得误差|&nbsp;f<sub>n</sub>(a)&nbsp;+&nbsp;f<sub>n</sub>(b)&nbsp;+&nbsp;f<sub>n</sub>(c)&nbsp;+&nbsp;f<sub>n</sub>(d)&nbsp;-&nbsp;π|取最小值时，记g(n)&nbsp;=&nbsp;a<sup>2</sup>&nbsp;+&nbsp;b<sup>2</sup>&nbsp;+&nbsp;c<sup>2</sup>&nbsp;+&nbsp;d<sup>&thinsp;2</sup><br>（其中|x|指的是x的绝对值）。</p>
<p>已知g(200)&nbsp;=&nbsp;6<sup>2</sup>&nbsp;+&nbsp;75<sup>2</sup>&nbsp;+&nbsp;89<sup>2</sup>&nbsp;+&nbsp;226<sup>2</sup>&nbsp;=&nbsp;64658。</p>
<p>求g(10000)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 462</title>
    <url>/462/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-462"><a href="#Problem-462" class="headerlink" title="Problem 462"></a><a href="https://projecteuler.net/problem=462">Problem 462</a></h1><hr>
<p><strong>Permutation of 3-smooth numbers</strong></p>
<p>A <strong>3-smooth number</strong> is an integer which has no prime factor larger than 3. For an integer N, we define S(N) as the set of 3-smooth numbers less than or equal to N . For example, S(20) = { 1, 2, 3, 4, 6, 8, 9, 12, 16, 18 }.</p>
<p>We define F(N) as the number of permutations of S(N) in which each element comes after all of its proper divisors.</p>
<p>This is one of the possible permutations for N = 20.<br>1, 2, 4, 3, 9, 8, 16, 6, 18, 12.<br>This is not a valid permutation because 12 comes before its divisor 6.<br>1, 2, 4, 3, 9, 8, <strong>12</strong>, 16, <strong>6</strong>, 18.</p>
<p>We can verify that F(6) = 5, F(8) = 9, F(20) = 450 and F(1000) ≈ 8.8521816557e21.<br>Find F(10<sup>18</sup>). Give as your answer its scientific notation rounded to ten digits after the decimal point.<br>When giving your answer, use a lowercase e to separate mantissa and exponent. E.g. if the answer is 112,233,445,566,778,899 then the answer format would be 1.1223344557e17.</p>
<hr>
<p><strong>3-光滑数重排</strong></p>
<p><strong>3-光滑数</strong>是指所含质因数不大于3的整数。对于整数N，我们定义S(N)是所有小于等于N的3-光滑数所构成的集合，例如，S(20) = { 1, 2, 3, 4, 6, 8, 9, 12, 16, 18 }。</p>
<p>对集合S(N)的元素进行排列使得每个元素都排在其所有真因数之后，记这样的重排数为F(N)。</p>
<p>如下是N = 20时一个有效的重排。<br>1, 2, 4, 3, 9, 8, 16, 6, 18, 12.<br>如下不是一个有效的重排，因为12排在其真因数6之前。<br>1, 2, 4, 3, 9, 8, <strong>12</strong>, 16, <strong>6</strong>, 18.</p>
<p>可以验证F(6) = 5，F(8) = 9，F(20) = 450，以及F(1000) ≈ 8.8521816557e21。<br>求F(10<sup>18</sup>)，并用保留10位小数的科学计数法表示。<br>用小写字母e分割尾数和指数，例如，如果答案是112,233,445,566,778,899，则应写成1.1223344557e17。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 463</title>
    <url>/463/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-463"><a href="#Problem-463" class="headerlink" title="Problem 463"></a><a href="https://projecteuler.net/problem=463">Problem 463</a></h1><hr>
<p><strong>A weird recurrence relation</strong></p>
<p>The function f is defined for all positive integers as follows:</p>
<ul>
<li>f(1)=1</li>
<li>f(3)=3</li>
<li>f(2n)=f(n)</li>
<li>f(4n+1)=2f(2n+1)−f(n)</li>
<li>f(4n+3)=3f(2n+1)−2f(n)</li>
</ul>
<p>The function S(n) is defined as ∑<sub>i=1</sub><sup>n</sup>f(i).</p>
<p>S(8)=22 and S(100)=3604.</p>
<p>Find S(337). Give the last 9 digits of your answer.</p>
<hr>
<p><strong>奇怪的递归关系</strong></p>
<p>定义在全体正整数上的函数f如下所示：</p>
<ul>
<li>f(1)=1</li>
<li>f(3)=3</li>
<li>f(2n)=f(n)</li>
<li>f(4n+1)=2f(2n+1)−f(n)</li>
<li>f(4n+3)=3f(2n+1)−2f(n)</li>
</ul>
<p>函数S(n)的定义是∑<sub>i=1</sub><sup>n</sup>f(i)。</p>
<p>已知S(8)=22以及S(100)=3604。</p>
<p>求S(337)并给出其最后9位数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 464</title>
    <url>/464/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-464"><a href="#Problem-464" class="headerlink" title="Problem 464"></a><a href="https://projecteuler.net/problem=464">Problem 464</a></h1><hr>
<p><strong>Möbius function and intervals</strong></p>
<p>The <strong>Möbius function</strong>, denoted μ(n), is defined as:</p>
<ul>
<li>μ(n) = (-1)<sup>ω(n)</sup> if n is squarefree (where ω(n) is the number of distinct prime factors of n)</li>
<li>μ(n) = 0 if n is not squarefree.</li>
</ul>
<p>Let P(a,b) be the number of integers n in the interval [a,b] such that μ(n) = 1.<br>Let N(a,b) be the number of integers n in the interval [a,b] such that μ(n) = -1.<br>For example, P(2,10) = 2 and N(2,10) = 4.</p>
<p>Let C(n) be the number of integer pairs (a,b) such that:</p>
<ul>
<li>1&nbsp;≤&nbsp;a&nbsp;≤&nbsp;b&nbsp;≤&nbsp;n,</li>
<li>99·N(a,b)&nbsp;≤&nbsp;100·P(a,b),</li>
<li>99·P(a,b)&nbsp;≤&nbsp;100·N(a,b).</li>
</ul>
<p>For example, C(10)&nbsp;=&nbsp;13, C(500)&nbsp;=&nbsp;16676 and C(10&nbsp;000)&nbsp;=&nbsp;20155319.</p>
<p>Find C(20&nbsp;000&nbsp;000).</p>
<hr>
<p><strong>莫比乌斯函数和区间</strong></p>
<p><strong>莫比乌斯函数</strong>μ(n)按照如下方式定义：</p>
<ul>
<li>μ(n) = (-1)<sup>ω(n)</sup>，如果n是无平方因子的（其中ω(n)是n的不同质因数的个数）</li>
<li>μ(n) = 0 如果n不是无平方因子的。</li>
</ul>
<p>记P(a,b)是在区间[a,b]中使得μ(n) = 1的整数n的个数。<br>记N(a,b)是在区间[a,b]中使得μ(n) = -1的整数n的个数。<br>举例而言，P(2,10) = 2，N(2,10) = 4.</p>
<p>记C(n)是满足如下条件的整数对(a,b)的数目：</p>
<ul>
<li>1&nbsp;≤&nbsp;a&nbsp;≤&nbsp;b&nbsp;≤&nbsp;n,</li>
<li>99·N(a,b)&nbsp;≤&nbsp;100·P(a,b),</li>
<li>99·P(a,b)&nbsp;≤&nbsp;100·N(a,b).</li>
</ul>
<p>例如，C(10)&nbsp;=&nbsp;13，C(500)&nbsp;=&nbsp;16676，而C(10&nbsp;000)&nbsp;=&nbsp;20155319.</p>
<p>求C(20&nbsp;000&nbsp;000)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 465</title>
    <url>/465/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-465"><a href="#Problem-465" class="headerlink" title="Problem 465"></a><a href="https://projecteuler.net/problem=465">Problem 465</a></h1><hr>
<p><strong>Polar polygons</strong></p>
<p>The <em>kernel</em> of a polygon is defined by the set of points from which the entire polygon’s boundary is visible. We define a <em>polar polygon</em> as a polygon for which the origin is <u>strictly</u> contained inside its kernel.</p>
<p>For this problem, a polygon can have collinear consecutive vertices. However, a polygon still cannot have self-intersection and cannot have zero area.</p>
<p>For example, only the first of the following is a polar polygon (the kernels of the second, third, and fourth do not strictly contain the origin, and the fifth does not have a kernel at all):</p>
<center><img src="/resources/images/0465_polygons.png"></center>

<p>Notice that the first polygon has three consecutive collinear vertices.</p>
<p>Let P(n) be the number of polar polygons such that the vertices (x, y) have integer coordinates whose absolute values are not greater than n.</p>
<p>Note that polygons should be counted as different if they have different set of edges, even if they enclose the same area. For example, the polygon with vertices [(0,0),(0,3),(1,1),(3,0)] is distinct from the polygon with vertices [(0,0),(0,3),(1,1),(3,0),(1,0)].</p>
<p>For example, P(1) = 131, P(2) = 1648531, P(3) = 1099461296175 and P(343) mod 1&nbsp;000&nbsp;000&nbsp;007 = 937293740.</p>
<p>Find P(7<sup>13</sup>) mod 1&nbsp;000&nbsp;000&nbsp;007.</p>
<hr>
<p><strong>极点多边形</strong></p>
<p>多边形的<em class="zh">核心</em>指的是多边形内能够观察到多边形的所有边界的点集。如果一个多边形的核心<u>严格</u>包含原点，这个多边形被称为<em class="zh">极点多边形</em>。</p>
<p>在这个问题中，一个多边形允许包含连续的共线顶点，但是多边形不允许自交，面积也不能为零。</p>
<p>例如，以下的图形中只有第一个是极点多边形（第二、三、四个多边形的核心不严格包含原点，第五个多边形没有核心）：</p>
<center><img src="/resources/images/0465_polygons.png"></center>

<p>可以注意到第一个多边形中有三个连续的共线顶点。</p>
<p>记P(n)是满足以下条件的极点多边形的数目：多边形的顶点坐标(x, y)均为整数，且绝对值不大于n。</p>
<p>注意即使多边形围住的区域相同，如果它们的边不相同，也被认为是不同的多边形。例如，顶点坐标分别为[(0,0),(0,3),(1,1),(3,0)]的多边形被认为不同于顶点坐标分别为[(0,0),(0,3),(1,1),(3,0),(1,0)]的多边形。</p>
<p>举例而言，P(1) = 131，P(2) = 1648531，P(3) = 1099461296175，而P(343) mod 1&nbsp;000&nbsp;000&nbsp;007 = 937293740。</p>
<p>求P(7<sup>13</sup>) mod 1&nbsp;000&nbsp;000&nbsp;007。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 466</title>
    <url>/466/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-466"><a href="#Problem-466" class="headerlink" title="Problem 466"></a><a href="https://projecteuler.net/problem=466">Problem 466</a></h1><hr>
<p><strong>Distinct terms in a multiplication table</strong></p>
<p>Let P(m,n) be the number of <em>distinct</em> terms in an m×n multiplication table.</p>
<p>For example, a 3×4 multiplication table looks like this:</p>
<table>
<thead>
<tr>
<th align="center">×&nbsp;</th>
<th align="center">1&nbsp;</th>
<th align="center">2&nbsp;</th>
<th align="center">3&nbsp;</th>
<th align="center">4&nbsp;</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1&nbsp;</td>
<td align="center">1&nbsp;</td>
<td align="center">2&nbsp;</td>
<td align="center">3&nbsp;</td>
<td align="center">4&nbsp;</td>
</tr>
<tr>
<td align="center">2&nbsp;</td>
<td align="center">2&nbsp;</td>
<td align="center">4&nbsp;</td>
<td align="center">6&nbsp;</td>
<td align="center">8&nbsp;</td>
</tr>
<tr>
<td align="center">3&nbsp;</td>
<td align="center">3&nbsp;</td>
<td align="center">6&nbsp;</td>
<td align="center">9&nbsp;</td>
<td align="center">12</td>
</tr>
</tbody></table>
<p>There are 8 distinct terms {1,2,3,4,6,8,9,12}, therefore P(3,4) = 8.</p>
<p>You are given that:<br>P(64,64) = 1263,<br>P(12,345) = 1998, and<br>P(32,10<sup>15</sup>) = 13826382602124302.</p>
<p>Find P(64,10<sup>16</sup>).</p>
<hr>
<p><strong>乘法表中的不同项</strong></p>
<p>记P(m,n)是m×n乘法表中<em class="zh">不同</em>的项的个数。</p>
<p>下图是一个3×4的乘法表：</p>
<table>
<thead>
<tr>
<th align="center">×&nbsp;</th>
<th align="center">1&nbsp;</th>
<th align="center">2&nbsp;</th>
<th align="center">3&nbsp;</th>
<th align="center">4&nbsp;</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1&nbsp;</td>
<td align="center">1&nbsp;</td>
<td align="center">2&nbsp;</td>
<td align="center">3&nbsp;</td>
<td align="center">4&nbsp;</td>
</tr>
<tr>
<td align="center">2&nbsp;</td>
<td align="center">2&nbsp;</td>
<td align="center">4&nbsp;</td>
<td align="center">6&nbsp;</td>
<td align="center">8&nbsp;</td>
</tr>
<tr>
<td align="center">3&nbsp;</td>
<td align="center">3&nbsp;</td>
<td align="center">6&nbsp;</td>
<td align="center">9&nbsp;</td>
<td align="center">12</td>
</tr>
</tbody></table>
<p>在这个乘法表中有8个不同的项{1,2,3,4,6,8,9,12}，因此P(3,4) = 8。</p>
<p>已知：<br>P(64,64) = 1263，<br>P(12,345) = 1998，以及<br>P(32,10<sup>15</sup>) = 13826382602124302。</p>
<p>求P(64,10<sup>16</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 467</title>
    <url>/467/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-467"><a href="#Problem-467" class="headerlink" title="Problem 467"></a><a href="https://projecteuler.net/problem=467">Problem 467</a></h1><hr>
<p><strong>Superinteger</strong></p>
<p>An integer s is called a <em>superinteger</em> of another integer n if the digits of n form a <dfn title="A subsequence is a sequence that can be derived from another sequence by deleting some elements without changing the order of the remaining elements.">subsequence</dfn> of the digits of s.<br>For example, 2718281828 is a superinteger of 18828, while 314159 is not a superinteger of 151.</p>
<p>Let p(n) be the nth prime number, and let c(n) be the nth composite number. For example, p(1) = 2, p(10) = 29, c(1) = 4 and c(10) = 18.<br>{p(i) : i ≥ 1} = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, …}<br>{c(i) : i ≥ 1} = {4, 6, 8, 9, 10, 12, 14, 15, 16, 18, …}</p>
<p>Let P<sup>D</sup> the sequence of the <strong>digital roots</strong> of {p(i)} (C<sup>D</sup> is defined similarly for {c(i)}):<br>P<sup>D</sup> = {2, 3, 5, 7, 2, 4, 8, 1, 5, 2, …}<br>C<sup>D</sup> = {4, 6, 8, 9, 1, 3, 5, 6, 7, 9, …}</p>
<p>Let P<sub>n</sub> be the integer formed by concatenating the first n elements of P<sup>D</sup> (C<sub>n</sub> is defined similarly for C<sup>D</sup>).<br>P<sub>10</sub> = 2357248152<br>C<sub>10</sub> = 4689135679</p>
<p>Let f(n) be the smallest positive integer that is a common superinteger of P<sub>n</sub> and C<sub>n</sub>.<br>For example, f(10) = 2357246891352679, and f(100) mod 1&nbsp;000&nbsp;000&nbsp;007 = 771661825.</p>
<p>Find f(10&nbsp;000) mod 1&nbsp;000&nbsp;000&nbsp;007.</p>
<hr>
<p><strong>超级整数</strong></p>
<p>整数s被称为是另一个整数n的<em class="zh">超级整数</em>，当且仅当n的数字串是s的数字串的<dfn title="从一个串中去掉一部分元素而不改变剩下元素顺序，所得的称为子序列。">子序列</dfn>。<br>例如2718281828是18828的超级整数，而314159不是151的超级整数。</p>
<p>记p(n)是第n个质数，而c(n) 是第n个合数。例如p(1) = 2，p(10) = 29，c(1) = 4，而c(10) = 18。<br>{p(i) : i ≥ 1} = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, …}<br>{c(i) : i ≥ 1} = {4, 6, 8, 9, 10, 12, 14, 15, 16, 18, …}</p>
<p>记P<sup>D</sup> 是{p(i)}中各项的<strong>数字根</strong>组成的序列（C<sup>D</sup>同理）：<br>P<sup>D</sup> = {2, 3, 5, 7, 2, 4, 8, 1, 5, 2, …}<br>C<sup>D</sup> = {4, 6, 8, 9, 1, 3, 5, 6, 7, 9, …}</p>
<p>记P<sub>n</sub>是将P<sup>D</sup>的前n项连接起来所得的整数（C<sub>n</sub>同理）。<br>P<sub>10</sub> = 2357248152<br>C<sub>10</sub> = 4689135679</p>
<p>记f(n)是P<sub>n</sub>和C<sub>n</sub>的最小公共超级整数。<br>例如，f(10) = 2357246891352679，而f(100) mod 1&nbsp;000&nbsp;000&nbsp;007 = 771661825。</p>
<p>求f(10&nbsp;000) mod 1&nbsp;000&nbsp;000&nbsp;007。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 469</title>
    <url>/469/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-469"><a href="#Problem-469" class="headerlink" title="Problem 469"></a><a href="https://projecteuler.net/problem=469">Problem 469</a></h1><hr>
<p><strong>Empty chairs</strong></p>
<p>In a room N chairs are placed around a round table.<br>Knights enter the room one by one and choose at random an available empty chair.<br>To have enough elbow room the knights always leave at least one empty chair between each other.</p>
<p>When there aren’t any suitable chairs left, the fraction C of empty chairs is determined.<br>We also define E(N) as the expected value of C.<br>We can verify that E(4) = 1/2 and E(6) = 5/9.</p>
<p>Find E(10<sup>18</sup>). Give your answer rounded to fourteen decimal places in the form 0.abcdefghijklmn.</p>
<hr>
<p><strong>空椅子</strong></p>
<p>在一间屋子中，围绕圆桌摆了N把椅子。<br>骑士们依次进入屋子，并且随机选择一把空椅子坐下。<br>为了保证手肘不相互撞击，相邻的骑士之间至少要空出一张空椅子。</p>
<p>当剩下的空椅子都不能坐时，可以计算出空椅子的比例C。<br>记E(N)是C的期望值。<br>可以验证，E(4) = 1/2，而E(6) = 5/9。</p>
<p>求E(10<sup>18</sup>)，给出其小数点后14位数字，即0.abcdefghijklmn。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 468</title>
    <url>/468/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-468"><a href="#Problem-468" class="headerlink" title="Problem 468"></a><a href="https://projecteuler.net/problem=468">Problem 468</a></h1><hr>
<p><strong>Smooth divisors of binomial coefficients</strong></p>
<p>An integer is called <strong>B-smooth</strong> if none of its prime factors is greater than B.</p>
<p>Let S<sub>B</sub>(n) be the largest B-smooth divisor of n.<br>Examples:</p>
<p>S<sub>1</sub>(10) = 1<br>S<sub>4</sub>(2100) = 12<br>S<sub>17</sub>(2496144) = 5712</p>
<p>Define F(n) = ∑<sub>1≤B≤n</sub> ∑<sub>0≤r≤n</sub> S<sub>B</sub>(C(n,r)). Here, C(n,r) denotes the binomial coefficient.<br>Examples:</p>
<p>F(11) = 3132<br>F(1&nbsp;111) mod 1&nbsp;000&nbsp;000&nbsp;993 = 706036312<br>F(111&nbsp;111) mod 1&nbsp;000&nbsp;000&nbsp;993 = 22156169</p>
<p>Find F(11&nbsp;111&nbsp;111) mod 1&nbsp;000&nbsp;000&nbsp;993.</p>
<hr>
<p><strong>二项式系数的光滑因数</strong></p>
<p>当一个正整数的所有质因数都不大于 B时，这个整数被称为<strong>B-光滑数</strong>。</p>
<p>记S<sub>B</sub>(n)是n的最大的B-光滑因数。<br>例如：</p>
<p>S<sub>1</sub>(10) = 1<br>S<sub>4</sub>(2100) = 12<br>S<sub>17</sub>(2496144) = 5712</p>
<p>记F(n) = ∑<sub>1≤B≤n</sub> ∑<sub>0≤r≤n</sub> S<sub>B</sub>(C(n,r))，其中C(n,r)表示二项式系数。<br>例如:</p>
<p>F(11) = 3132<br>F(1&nbsp;111) mod 1&nbsp;000&nbsp;000&nbsp;993 = 706036312<br>F(111&nbsp;111) mod 1&nbsp;000&nbsp;000&nbsp;993 = 22156169</p>
<p>求F(11&nbsp;111&nbsp;111) mod 1&nbsp;000&nbsp;000&nbsp;993。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 47</title>
    <url>/47/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-47"><a href="#Problem-47" class="headerlink" title="Problem 47"></a><a href="https://projecteuler.net/problem=47">Problem 47</a></h1><hr>
<h2 id="Distinct-Primes-Factors"><a href="#Distinct-Primes-Factors" class="headerlink" title="Distinct Primes Factors"></a><strong>Distinct Primes Factors</strong></h2><p>The first two consecutive numbers to have two distinct prime factors are:<br>$$<br>\begin{aligned}<br>14 &amp;= 2 × 7 \\<br>15 &amp;= 3 × 5<br>\end{aligned}<br>$$</p>
<p>The first three consecutive numbers to have three distinct prime factors are:<br>$$<br>\begin{aligned}<br>644 &amp;= 2^2 × 7 × 23 \\<br>645 &amp;= 3 × 5 × 43   \\<br>646 &amp;= 2 × 17 × 19<br>\end{aligned}<br>$$</p>
<p>Find the first four consecutive integers to have four distinct prime factors. What is the first of these numbers?</p>
<hr>
<h2 id="不同的质因数"><a href="#不同的质因数" class="headerlink" title="不同的质因数"></a><strong>不同的质因数</strong></h2><p>首次出现连续两个数均有两个不同的质因数是在：<br>$$<br>\begin{aligned}<br>14 &amp;= 2 × 7 \\<br>15 &amp;= 3 × 5<br>\end{aligned}<br>$$</p>
<p>首次出现连续三个数均有三个不同的质因数是在：<br>$$<br>\begin{aligned}<br>644 &amp;= 2^2 × 7 × 23 \\<br>645 &amp;= 3 × 5 × 43   \\<br>646 &amp;= 2 × 17 × 19<br>\end{aligned}<br>$$</p>
<p>首次出现连续四个数均有四个不同的质因数时，其中的第一个数是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 470</title>
    <url>/470/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-470"><a href="#Problem-470" class="headerlink" title="Problem 470"></a><a href="https://projecteuler.net/problem=470">Problem 470</a></h1><hr>
<p><strong>Super Ramvok</strong></p>
<p>Consider a single game of Ramvok:</p>
<p>Let t represent the maximum number of turns the game lasts. If t = 0, then the game ends immediately. Otherwise, on each turn i, the player rolls a die. After rolling, if i &lt; t the player can either stop the game and receive a prize equal to the value of the current roll, or discard the roll and try again next turn. If i = t, then the roll cannot be discarded and the prize must be accepted. Before the game begins, t is chosen by the player, who must then pay an up-front cost ct for some constant c. For c = 0, t can be chosen to be infinite (with an up-front cost of 0). Let R(d, c) be the expected profit (i.e. net gain) that the player receives from a single game of optimally-played Ramvok, given a fair d-sided die and cost constant c. For example, R(4, 0.2) = 2.65. Assume that the player has sufficient funds for paying any/all up-front costs.</p>
<p>Now consider a game of Super Ramvok:</p>
<p>In Super Ramvok, the game of Ramvok is played repeatedly, but with a slight modification. After each game, the die is altered. The alteration process is as follows: The die is rolled once, and if the resulting face has its pips visible, then that face is altered to be blank instead. If the face is already blank, then it is changed back to its original value. After the alteration is made, another game of Ramvok can begin (and during such a game, at each turn, the die is rolled until a face with a value on it appears). The player knows which faces are blank and which are not at all times. The game of Super Ramvok ends once all faces of the die are blank.</p>
<p>Let S(d, c) be the expected profit that the player receives from an optimally-played game of Super Ramvok, given a fair d-sided die to start (with all sides visible), and cost constant c. For example, S(6, 1) = 208.3.</p>
<p>Let F(n) = ∑<sub>4≤d≤n</sub> ∑<sub>0≤c≤n</sub> S(d, c).</p>
<p>Calculate F(20), rounded to the nearest integer.</p>
<hr>
<p><strong>超级Ramvok</strong></p>
<p>Ramvok是这样一个游戏：</p>
<p>t表示这个游戏最多进行的轮数，如果t = 0，那么游戏立刻停止。如果游戏没有停止，在第i轮时，玩家需要掷一个骰子，当i &lt; t时，玩家要么停止游戏并获得当前掷出的点数，要么放弃点数进入下一轮；当i = t时，玩家将不能放弃点数。游戏进行的轮数t由玩家在游戏开始前选定，并且玩家必须为此付出ct，其中c是某个给定的常数。如果c = 0，那么t可以选择为无穷，此时付出视为0。对于一个公平的d面骰子以及给定的常数c，记R(d, c)是玩家在Ramvok游戏中始终选择最优策略时的期望收益，例如R(4, 0.2) = 2.65。假定玩家有足够的钱来付出进行游戏的开销ct。</p>
<p>现在我们再来看另一个游戏，超级Ramvok：</p>
<p>在超级Ramvok游戏中，玩家要重复的玩Ramvok，但在每次Ramvok结束后，骰子会被做如下的改动：再掷出一次骰子，如果朝上的面仍然有点数，那就把这个点数改成空白；如果这个面已经是空白了，那就恢复其原来的点数。改动之后，游戏继续（注意在游戏中，玩家如果掷出空白的面将可以接着掷，直至朝上的面有点数为止）。玩家始终知道哪些面上有点数，而哪些面是空白。当所有的面都是空白的时候，超级Ramvok游戏结束。</p>
<p>对于一个公平的d面骰子以及给定的常数c，记S(d, c)是玩家在超级Ramvok游戏中始终选择最优策略时的期望收益，例如S(6, 1) = 208.3。</p>
<p>记F(n) = ∑<sub>4≤d≤n</sub> ∑<sub>0≤c≤n</sub> S(d, c)。</p>
<p>求F(20)并四舍五入到整数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 471</title>
    <url>/471/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-471"><a href="#Problem-471" class="headerlink" title="Problem 471"></a><a href="https://projecteuler.net/problem=471">Problem 471</a></h1><hr>
<p><strong>Triangle inscribed in ellipse</strong></p>
<p>The triangle ΔABC is inscribed in an ellipse with equation $\frac{x^2}{a^2}+\frac{y^2}{b^2}=1$, 0 &lt; 2b &lt; a, a and b integers.</p>
<p>Let r(a,b) be the radius of the incircle of ΔABC when the incircle has center (2b, 0) and A has coordinates $(\frac{a}{2}, \frac{\sqrt{3}}{2}b)$.</p>
<p>For example, r(3,1) = ½, r(6,2) = 1, r(12,3) = 2.</p>
<center><img src="/resources/images/0471-triangle-inscribed-in-ellipse-1.png"></center>
<center><img src="/resources/images/0471-triangle-inscribed-in-ellipse-2.png"></center>

<p>Let $G(n)=\sum_{a=3}^{n}\sum_{b=1}^{\lfloor \frac{a-1}{2} \rfloor}r(a,b)$</p>
<p>You are given G(10) = 20.59722222, G(100) = 19223.60980 (rounded to 10 significant digits).</p>
<p>Find G(1011).</p>
<p>Give your answer in scientific notation rounded to 10 significant digits. Use a lowercase e to separate mantissa and exponent.</p>
<p>For G(10) the answer would have been 2.059722222e1.</p>
<hr>
<p><strong>椭圆内接三角形</strong></p>
<p>三角形ΔABC内接于椭圆$\frac{x^2}{a^2}+\frac{y^2}{b^2}=1$，其中0 &lt; 2b &lt; a，a和b均为整数。</p>
<p>当三角形ΔABC的内接圆圆心是(2b, 0)，且A点坐标是$(\frac{a}{2}, \frac{\sqrt{3}}{2}b)$时，记r(a,b)是三角形ΔABC内接圆的半径。</p>
<p>例如，r(3,1) = ½，r(6,2) = 1，r(12,3) = 2。</p>
<center><img src="/resources/images/0471-triangle-inscribed-in-ellipse-1.png"></center>
<center><img src="/resources/images/0471-triangle-inscribed-in-ellipse-2.png"></center>

<p>记$G(n)=\sum_{a=3}^{n}\sum_{b=1}^{\lfloor \frac{a-1}{2} \rfloor}r(a,b)$</p>
<p>已知G(10) = 20.59722222，G(100) = 19223.60980（保留10位有效数字）</p>
<p>求G(1011)。</p>
<p>答案应当用10位有效数字的科学计数法表示，用小写字母e来分割尾数和指数。</p>
<p>例如，G(10)应当写成2.059722222e1。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 472</title>
    <url>/472/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-472"><a href="#Problem-472" class="headerlink" title="Problem 472"></a><a href="https://projecteuler.net/problem=472">Problem 472</a></h1><hr>
<p><strong>Comfortable Distance II</strong></p>
<p>There are N seats in a row. N people come one after another to fill the seats according to the following rules:</p>
<ol>
<li>No person sits beside another.</li>
<li>The first person chooses any seat.</li>
<li>Each subsequent person chooses the seat furthest from anyone else already seated, as long as it does not violate rule 1. If there is more than one choice satisfying this condition, then the person chooses the leftmost choice.</li>
</ol>
<p>Note that due to rule 1, some seats will surely be left unoccupied, and the maximum number of people that can be seated is less than N (for N &gt; 1).</p>
<p>Here are the possible seating arrangements for N = 15:</p>
<center><img src="/resources/images/0472_n15.png"></center>

<p>We see that if the first person chooses correctly, the 15 seats can seat up to 7 people.<br>We can also see that the first person has 9 choices to maximize the number of people that may be seated.</p>
<p>Let f(N) be the number of choices the first person has to maximize the number of occupants for N seats in a row. Thus, f(1)&nbsp;=&nbsp;1, f(15)&nbsp;=&nbsp;9, f(20)&nbsp;=&nbsp;6, and f(500)&nbsp;=&nbsp;16.</p>
<p>Also, ∑f(N) = 83 for 1&nbsp;≤&nbsp;N&nbsp;≤&nbsp;20 and  ∑f(N) = 13343 for 1&nbsp;≤&nbsp;N&nbsp;≤&nbsp;500.</p>
<p>Find ∑f(N) for 1&nbsp;≤&nbsp;N&nbsp;≤&nbsp;10<sup>12</sup>. Give the last 8 digits of your answer.</p>
<hr>
<p><strong>舒适距离 II</strong></p>
<p>有一排N个座位，N个人根据下列规则依次坐到座位上：</p>
<ol>
<li>没有人坐在别人边上。</li>
<li>第一个人可以坐在任意位置。</li>
<li>接下来的每个人在不违背第一条规则的情况下，选择距离已经坐下的人最远的座位。如果有多于一个选择满足这个条件，选择最左边的座位。</li>
</ol>
<p>注意到由于有第一条规则的存在，有些座位一定会被空着，因此最多能坐下的人数一定比N要小（如果N &gt; 1）。</p>
<p>对于N = 15，下图表示了所有可能的座位安排：</p>
<center><img src="/resources/images/0472_n15.png"></center>

<p>可以看出如果第一个人选对了位置，那15个座位最多可以坐下7个人。<br>我们也能看出第一个人有9种方式来达到这个最大值。</p>
<p>记f(N)是第一个人使得N个座位能坐下最多的人的方法数，所以f(1)&nbsp;=&nbsp;1，f(15)&nbsp;=&nbsp;9，f(20)&nbsp;=&nbsp;6，f(500)&nbsp;=&nbsp;16。</p>
<p>同时，对于1&nbsp;≤&nbsp;N&nbsp;≤&nbsp;20，我们有∑f(N) = 83；对于1&nbsp;≤&nbsp;N&nbsp;≤&nbsp;500，我们有∑f(N) = 13343。</p>
<p>对于1&nbsp;≤&nbsp;N&nbsp;≤&nbsp;10<sup>12</sup>，求∑f(N)，并给出其最后八位数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 473</title>
    <url>/473/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-473"><a href="#Problem-473" class="headerlink" title="Problem 473"></a><a href="https://projecteuler.net/problem=473">Problem 473</a></h1><hr>
<p><strong>Phigital number base</strong></p>
<p>Let φ be the golden ratio: φ=(1+√5)/2.<br>Remarkably it is possible to write every positive integer as a sum of powers of φ even if we require that every power of φ is used at most once in this sum.<br>Even then this representation is not unique.<br>We can make it unique by requiring that no powers with consecutive exponents are used and that the representation is finite.<br>E.g: 2=φ+φ<sup>−2</sup> and 3=φ<sup>2</sup>+φ<sup>−2</sup></p>
<p>To represent this sum of powers of φ we use a string of 0’s and 1’s with a point to indicate where the negative exponents start.<br>We call this the representation in the phigital numberbase.<br>So 1=1<sub>φ</sub>, 2=10.01<sub>φ</sub>, 3=100.01<sub>φ</sub> and 14=100100.001001<sub>φ</sub>.<br>The strings representing 1, 2 and 14 in the phigital number base are palindromic, while the string representating 3 is not.<br>(the phigital point is not the middle character).</p>
<p>The sum of the positive integers not exceeding 1000 whose phigital representation is palindromic is 4345.</p>
<p>Find the sum of the positive integers not exceeding 1010 whose phigital representation is palindromic.</p>
<hr>
<p><strong>φ进制</strong></p>
<p>记φ为黄金分割：φ=(1+√5)/2。<br>神奇的是，我们可以把所有的正整数用一系列φ的幂之和来表示，即使我们要求每个幂最多只能使用一次。<br>同时，这样的表达方式并不是唯一的。<br>为了使得这种表达方式变得唯一，我们可以要求不能使用两个相邻的幂，且使用的幂必须是有限个。<br>例如，我们有2=φ+φ<sup>−2</sup>，3=φ<sup>2</sup>+φ<sup>−2</sup></p>
<p>我们可以用一个只包含0、1和小数点的字符串来对应用φ的幂之和表示的数字。<br>我们把这个字符串表示法称为φ进制。<br>因此 1=1<sub>φ</sub>，2=10.01<sub>φ</sub>，3=100.01<sub>φ</sub>，14=100100.001001<sub>φ</sub>。<br>表示1，2和14的φ进制字符串是回文的，但表示3的字符串并不是。<br>（因为小数点并不在数字的中间）。</p>
<p>所有不超过1000的正整数中，φ进制表示为回文字符串的数之和为4345。</p>
<p>求所有不超过1010的正整数中，φ进制表示为回文字符串的数之和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 475</title>
    <url>/475/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-475"><a href="#Problem-475" class="headerlink" title="Problem 475"></a><a href="https://projecteuler.net/problem=475">Problem 475</a></h1><hr>
<p><strong>Music festival</strong></p>
<p>12n musicians participate at a music festival. On the first day, they form 3n quartets and practice all day.</p>
<p>It is a disaster. At the end of the day, all musicians decide they will never again agree to play with any member of their quartet.</p>
<p>On the second day, they form 4n trios, each musician avoiding his previous quartet partners.</p>
<p>Let f(12n) be the number of ways to organize the trios amongst the 12n musicians.</p>
<p>You are given f(12) = 576 and f(24) mod 1 000 000 007 = 509089824.</p>
<p>Find f(600) mod 1 000 000 007.</p>
<hr>
<p><strong>音乐节</strong></p>
<p>12n个音乐家参加了一场音乐节。第一天，他们组成了3n个四重奏，演奏了一整天。</p>
<p>这一天的演奏简直是场灾难，总之，在当天结束的时候，所有的音乐家都决定不再和这一天一同演奏四重奏的其它音乐家合作。</p>
<p>第二天，他们组成了4n个三重奏，每位音乐家都避开了第一天的合作者。</p>
<p>记f(12n)为这12n位音乐家组成三重奏的方法数。</p>
<p>已知f(12) = 576，f(24) mod 1 000 000 007 = 509089824。</p>
<p>求f(600) mod 1 000 000 007。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 474</title>
    <url>/474/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-474"><a href="#Problem-474" class="headerlink" title="Problem 474"></a><a href="https://projecteuler.net/problem=474">Problem 474</a></h1><hr>
<p><strong>Last digits of divisors</strong></p>
<p>For a positive integer n and digits d, we define F(n, d) as the number of the divisors of n whose last digits equal d.<br>For example, F(84, 4) = 3. Among the divisors of 84 (1, 2, 3, 4, 6, 7, 12, 14, 21, 28, 42, 84), three of them (4, 14, 84) have the last digit 4.</p>
<p>We can also verify that F(12!, 12) = 11 and F(50!, 123) = 17888.</p>
<p>Find F(10<sup>6</sup>!, 65432) modulo (10<sup>16</sup> + 61).</p>
<hr>
<p><strong>因数的尾数</strong></p>
<p>对于一个正整数n和数字d，我们记F(n, d)为n的尾数是d的因数数目。<br>例如F(84, 4) = 3，因为在84的因数(1, 2, 3, 4, 6, 7, 12, 14, 21, 28, 42, 84)中，有三个因数(4, 14, 84)的尾数是4。</p>
<p>可以验证，F(12!, 12) = 11，F(50!, 123) = 17888。</p>
<p>求F(10<sup>6</sup>!, 65432) modulo (10<sup>16</sup> + 61)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 476</title>
    <url>/476/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-476"><a href="#Problem-476" class="headerlink" title="Problem 476"></a><a href="https://projecteuler.net/problem=476">Problem 476</a></h1><hr>
<p><strong>Circle Packing II</strong></p>
<p>Let R(a, b, c) be the maximum area covered by three non-overlapping circles inside a triangle with edge lengths a, b and c.</p>
<p>Let S(n) be the average value of R(a, b, c) over all integer triplets (a, b, c) such that 1&nbsp;≤&nbsp;a&nbsp;≤&nbsp;b&nbsp;≤&nbsp;c&nbsp;&lt;&nbsp;a&nbsp;+&nbsp;b&nbsp;≤&nbsp;n</p>
<p>You are given S(2) = R(1, 1, 1) ≈ 0.31998, S(5) ≈ 1.25899.</p>
<p>Find S(1803) rounded to 5 decimal places behind the decimal point.</p>
<hr>
<p><strong>圆圈打包II</strong></p>
<p>记R(a, b, c)是三边长分别为a，b，c的三角形内部三个互不重叠的圆覆盖的最大面积。</p>
<p>对于所有满足1&nbsp;≤&nbsp;a&nbsp;≤&nbsp;b&nbsp;≤&nbsp;c&nbsp;&lt;&nbsp;a&nbsp;+&nbsp;b&nbsp;≤&nbsp;n的整数三元组(a, b, c)，记S(n)为所有R(a, b, c)的平均值。</p>
<p>已知S(2) = R(1, 1, 1) ≈ 0.31998，S(5) ≈ 1.25899。</p>
<p>求S(1803)并保留小数点后5位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 477</title>
    <url>/477/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-477"><a href="#Problem-477" class="headerlink" title="Problem 477"></a><a href="https://projecteuler.net/problem=477">Problem 477</a></h1><hr>
<p><strong>Number Sequence Game</strong></p>
<p>The number sequence game starts with a sequence S of N numbers written on a line.</p>
<p>Two players alternate turns. At his turn, a player must select and remove either the first or the last number remaining in the sequence.</p>
<p>The player score is the sum of all the numbers he has taken. Each player attempts to maximize his own sum.</p>
<p>If N = 4 and S = {1, 2, 10, 3}, then each player maximizes his score as follows:</p>
<ul>
<li>Player 1: removes the first number (1)</li>
<li>Player 2: removes the last number from the remaining sequence (3)</li>
<li>Player 1: removes the last number from the remaining sequence (10)</li>
<li>Player 2: removes the remaining number (2)</li>
</ul>
<p>Player 1 score is 1 + 10 = 11.</p>
<p>Let F(N) be the score of player 1 if both players follow the optimal strategy for the sequence S = {s<sub>1</sub>, s<sub>2</sub>,&nbsp;…,&nbsp;s<sub>N</sub>} defined as:</p>
<ul>
<li>s<sub>1</sub> = 0</li>
<li>s<sub>i+1</sub> = (s<sub>i</sub><sup>2</sup> + 45) modulo 1 000 000 007</li>
</ul>
<p>The sequence begins with S&nbsp;=&nbsp;{0,&nbsp;45,&nbsp;2070,&nbsp;4284945,&nbsp;753524550,&nbsp;478107844,&nbsp;894218625,&nbsp;……}.</p>
<p>You are given F(2)&nbsp;=&nbsp;45, F(4)&nbsp;=&nbsp;4284990, F(100)&nbsp;=&nbsp;26365463243, F(10<sup>4</sup>)&nbsp;=&nbsp;2495838522951.</p>
<p>Find F(10<sup>8</sup>).</p>
<hr>
<p><strong>数列游戏</strong></p>
<p>数列游戏从写成一行的N个数组成的序列S开始进行。</p>
<p>两名玩家轮流进行游戏，每名玩家需要在自己的回合选择并擦去剩余数列的第一个或最后一个数。</p>
<p>玩家的得分是他选择的所有数的和。每个玩家都试图最大化自己的得分。</p>
<p>如果N = 4，序列S = {1, 2, 10, 3}，那么每个玩家最大化自己得分的过程如下所示：</p>
<ul>
<li>玩家1：擦去第一个数（1）</li>
<li>玩家2：擦去剩余数列的最后一个数（3）</li>
<li>玩家1：擦去剩余数列的最后一个数（10）</li>
<li>玩家2：擦去最后剩下的数（2）</li>
</ul>
<p>玩家1的得分是1 + 10 = 11。</p>
<p>当玩家以按如下方式定义的序列S = {s<sub>1</sub>, s<sub>2</sub>,&nbsp;…,&nbsp;s<sub>N</sub>}开始游戏时，记玩家1的得分为F(N)：</p>
<ul>
<li>s<sub>1</sub> = 0</li>
<li>s<sub>i+1</sub> = (s<sub>i</sub><sup>2</sup> + 45) modulo 1 000 000 007</li>
</ul>
<p>序列的开头几项分别为S&nbsp;=&nbsp;{0,&nbsp;45,&nbsp;2070,&nbsp;4284945,&nbsp;753524550,&nbsp;478107844,&nbsp;894218625,&nbsp;……}.</p>
<p>已知F(2)&nbsp;=&nbsp;45，F(4)&nbsp;=&nbsp;4284990，F(100)&nbsp;=&nbsp;26365463243，F(10<sup>4</sup>)&nbsp;=&nbsp;2495838522951。</p>
<p>求F(10<sup>8</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 479</title>
    <url>/479/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-479"><a href="#Problem-479" class="headerlink" title="Problem 479"></a><a href="https://projecteuler.net/problem=479">Problem 479</a></h1><hr>
<p><strong>Roots on the Rise</strong></p>
<p>Let a<sub>k</sub>, b<sub>k</sub>, and c<sub>k</sub> represent the three solutions (real or complex numbers) to the expression 1/x = (k/x)<sup>2</sup>(k+x<sup>2</sup>) - kx.</p>
<p>For instance, for k = 5, we see that {a<sub>5</sub>, b<sub>5</sub>, c<sub>5</sub>} is approximately {5.727244, -0.363622+2.057397i, -0.363622-2.057397i}.</p>
<p>Let S(n) = Σ (a<sub>k</sub>+b<sub>k</sub>)<sup>p</sup>(b<sub>k</sub>+c<sub>k</sub>)<sup>p</sup>(c<sub>k</sub>+a<sub>k</sub>)<sup>p</sup> for all integers p, k such that 1 ≤ p, k ≤ n. </p>
<p>Interestingly, S(n) is always an integer. For example, S(4) = 51160.</p>
<p>Find S(10<sup>6</sup>) modulo 1 000 000 007.</p>
<hr>
<p><strong>逐渐增长的根</strong></p>
<p>记a<sub>k</sub>，b<sub>k</sub>，c<sub>k</sub>分别是方程1/x = (k/x)<sup>2</sup>(k+x<sup>2</sup>) - kx在复数域内的三个根。</p>
<p>例如，对于k = 5，{a<sub>5</sub>, b<sub>5</sub>, c<sub>5</sub>}的近似值为{5.727244, -0.363622+2.057397i, -0.363622-2.057397i}。</p>
<p>对于任意整数p，k满足1 ≤ p, k ≤ n，记S(n) = Σ (a<sub>k</sub>+b<sub>k</sub>)<sup>p</sup>(b<sub>k</sub>+c<sub>k</sub>)<sup>p</sup>(c<sub>k</sub>+a<sub>k</sub>)<sup>p</sup>。</p>
<p>有趣的是，S(n)永远是个整数。例如，S(4) = 51160。</p>
<p>求S(10<sup>6</sup>) modulo 1 000 000 007。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 478</title>
    <url>/478/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-478"><a href="#Problem-478" class="headerlink" title="Problem 478"></a><a href="https://projecteuler.net/problem=478">Problem 478</a></h1><hr>
<p><strong>Mixtures</strong></p>
<p>Let us consider <strong>mixtures</strong> of three substances: <strong>A</strong>, <strong>B</strong> and <strong>C</strong>. A mixture can be described by a ratio of the amounts of <strong>A</strong>, <strong>B</strong>, and <strong>C</strong> in it, i.e., (a&nbsp;:&nbsp;b&nbsp;:&nbsp;c). For example, a mixture described by the ratio (2&nbsp;:&nbsp;3&nbsp;:&nbsp;5) contains 20% <strong>A</strong>, 30% <strong>B</strong> and 50% <strong>C</strong>.</p>
<p>For the purposes of this problem, we cannot separate the individual components from a mixture. However, we can combine different amounts of different mixtures to form mixtures with new ratios.</p>
<p>For example, say we have three mixtures with ratios (3&nbsp;:&nbsp;0&nbsp;:&nbsp;2), (3&nbsp;:&nbsp;6&nbsp;:&nbsp;11) and (3&nbsp;:&nbsp;3&nbsp;:&nbsp;4). By mixing 10 units of the first, 20 units of the second and 30 units of the third, we get a new mixture with ratio (6&nbsp;:&nbsp;5&nbsp;:&nbsp;9), since:</p>
<p>(10·<sup>3</sup>/<sub>5</sub>&nbsp;+&nbsp;20·<sup>3</sup>/<sub>20</sub>&nbsp;+&nbsp;30·<sup>3</sup>/<sub>10</sub>&nbsp;:&nbsp;10·<sup>0</sup>/<sub>5</sub>&nbsp;+&nbsp;20·<sup>6</sup>/<sub>20</sub>&nbsp;+&nbsp;30·<sup>3</sup>/<sub>10</sub>&nbsp;:&nbsp;10·<sup>2</sup>/<sub>5</sub>&nbsp;+&nbsp;20·<sup>11</sup>/<sub>20</sub>&nbsp;+&nbsp;30·<sup>4</sup>/<sub>10</sub>) = (18&nbsp;:&nbsp;15&nbsp;:&nbsp;27) = (6&nbsp;:&nbsp;5&nbsp;:&nbsp;9)</p>
<p>However, with the same three mixtures, it is impossible to form the ratio (3&nbsp;:&nbsp;2&nbsp;:&nbsp;1), since the amount of <strong>B</strong> is always less than the amount of <strong>C</strong>.</p>
<p>Let n be a positive integer. Suppose that for every triple of integers (a, b, c) with 0 ≤ a, b, c ≤ n and gcd(a, b, c) = 1, we have a mixture with ratio (a&nbsp;:&nbsp;b&nbsp;:&nbsp;c). Let M(n) be the set of all such mixtures.</p>
<p>For example, M(2) contains the 19 mixtures with the following ratios:</p>
<p>{(0&nbsp;:&nbsp;0&nbsp;:&nbsp;1), (0&nbsp;:&nbsp;1&nbsp;:&nbsp;0), (0&nbsp;:&nbsp;1&nbsp;:&nbsp;1), (0&nbsp;:&nbsp;1&nbsp;:&nbsp;2), (0&nbsp;:&nbsp;2&nbsp;:&nbsp;1),<br>(1&nbsp;:&nbsp;0&nbsp;:&nbsp;0), (1&nbsp;:&nbsp;0&nbsp;:&nbsp;1), (1&nbsp;:&nbsp;0&nbsp;:&nbsp;2), (1&nbsp;:&nbsp;1&nbsp;:&nbsp;0), (1&nbsp;:&nbsp;1&nbsp;:&nbsp;1),<br>(1&nbsp;:&nbsp;1&nbsp;:&nbsp;2), (1&nbsp;:&nbsp;2&nbsp;:&nbsp;0), (1&nbsp;:&nbsp;2&nbsp;:&nbsp;1), (1&nbsp;:&nbsp;2&nbsp;:&nbsp;2), (2&nbsp;:&nbsp;0&nbsp;:&nbsp;1),<br>(2&nbsp;:&nbsp;1&nbsp;:&nbsp;0), (2&nbsp;:&nbsp;1&nbsp;:&nbsp;1), (2&nbsp;:&nbsp;1&nbsp;:&nbsp;2), (2&nbsp;:&nbsp;2&nbsp;:&nbsp;1)}.</p>
<p>Let E(n) be the number of subsets of M(n) which can produce the mixture with ratio (1 : 1 : 1), i.e., the mixture with equal parts <strong>A</strong>, <strong>B</strong> and <strong>C</strong>.<br>We can verify that E(1) = 103, E(2) = 520447, E(10)&nbsp;mod&nbsp;11<sup>8</sup> = 82608406 and E(500)&nbsp;mod&nbsp;11<sup>8</sup> = 13801403.<br>Find E(10&nbsp;000&nbsp;000)&nbsp;mod&nbsp;11<sup>8</sup>.</p>
<hr>
<p><strong>混合物</strong></p>
<p>考虑由三种成份<strong>A</strong>，<strong>B</strong>和<strong>C</strong>组成的<strong>混合物</strong>。每种混合物可以用所含<strong>A</strong>，<strong>B</strong>，<strong>C</strong>三种成份的比例来表示，也就是说(a&nbsp;:&nbsp;b&nbsp;:&nbsp;c)。例如，一种比例是(2&nbsp;:&nbsp;3&nbsp;:&nbsp;5)的混合物包含有20% <strong>A</strong>，30% <strong>B</strong>和50% <strong>C</strong>。</p>
<p>我们不能从混合物中分理处不同的成分，但是我们可以组合不同数量的不同混合物来组成有新的比例的混合物。</p>
<p>例如，我们现在有三种比例分别是(3&nbsp;:&nbsp;0&nbsp;:&nbsp;2)，(3&nbsp;:&nbsp;6&nbsp;:&nbsp;11)和(3&nbsp;:&nbsp;3&nbsp;:&nbsp;4)的混合物。将10单位的第一种混合物，20单位的第二种混合物和30单位第三种混合物，我们得到一种新的混合物，比例是(6&nbsp;:&nbsp;5&nbsp;:&nbsp;9)，因为：</p>
<p>(10·<sup>3</sup>/<sub>5</sub>&nbsp;+&nbsp;20·<sup>3</sup>/<sub>20</sub>&nbsp;+&nbsp;30·<sup>3</sup>/<sub>10</sub>&nbsp;:&nbsp;10·<sup>0</sup>/<sub>5</sub>&nbsp;+&nbsp;20·<sup>6</sup>/<sub>20</sub>&nbsp;+&nbsp;30·<sup>3</sup>/<sub>10</sub>&nbsp;:&nbsp;10·<sup>2</sup>/<sub>5</sub>&nbsp;+&nbsp;20·<sup>11</sup>/<sub>20</sub>&nbsp;+&nbsp;30·<sup>4</sup>/<sub>10</sub>) = (18&nbsp;:&nbsp;15&nbsp;:&nbsp;27) = (6&nbsp;:&nbsp;5&nbsp;:&nbsp;9)</p>
<p>然而，用同样的三种混合物，永远无法配置出比例为(3&nbsp;:&nbsp;2&nbsp;:&nbsp;1)的混合物，因为成分<strong>B</strong>的量永远比成分<strong>C</strong>要少。</p>
<p>记n是一个正整数。假设对于任意整数a，b，c满足0 ≤ a, b, c ≤ n且gcd(a, b, c) = 1，我们都有一种比例是(a, b, c)的混合物。记M(n)是所有这些混合物的集合。</p>
<p>例如，M(2)包含有下列19种不同比例的混合物：</p>
<p>{(0&nbsp;:&nbsp;0&nbsp;:&nbsp;1), (0&nbsp;:&nbsp;1&nbsp;:&nbsp;0), (0&nbsp;:&nbsp;1&nbsp;:&nbsp;1), (0&nbsp;:&nbsp;1&nbsp;:&nbsp;2), (0&nbsp;:&nbsp;2&nbsp;:&nbsp;1),<br>(1&nbsp;:&nbsp;0&nbsp;:&nbsp;0), (1&nbsp;:&nbsp;0&nbsp;:&nbsp;1), (1&nbsp;:&nbsp;0&nbsp;:&nbsp;2), (1&nbsp;:&nbsp;1&nbsp;:&nbsp;0), (1&nbsp;:&nbsp;1&nbsp;:&nbsp;1),<br>(1&nbsp;:&nbsp;1&nbsp;:&nbsp;2), (1&nbsp;:&nbsp;2&nbsp;:&nbsp;0), (1&nbsp;:&nbsp;2&nbsp;:&nbsp;1), (1&nbsp;:&nbsp;2&nbsp;:&nbsp;2), (2&nbsp;:&nbsp;0&nbsp;:&nbsp;1),<br>(2&nbsp;:&nbsp;1&nbsp;:&nbsp;0), (2&nbsp;:&nbsp;1&nbsp;:&nbsp;1), (2&nbsp;:&nbsp;1&nbsp;:&nbsp;2), (2&nbsp;:&nbsp;2&nbsp;:&nbsp;1)}.</p>
<p>记E(n)是能够构成混合物比例(1 : 1 : 1)的M(n)的子集数目。<br>可以验证E(1) = 103，E(2) = 520447，E(10)&nbsp;mod&nbsp;11<sup>8</sup> = 82608406，E(500)&nbsp;mod&nbsp;11<sup>8</sup> = 13801403。<br>求E(10&nbsp;000&nbsp;000)&nbsp;mod&nbsp;11<sup>8</sup>。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 48</title>
    <url>/48/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-48"><a href="#Problem-48" class="headerlink" title="Problem 48"></a><a href="https://projecteuler.net/problem=48">Problem 48</a></h1><hr>
<h2 id="Self-Powers"><a href="#Self-Powers" class="headerlink" title="Self Powers"></a><strong>Self Powers</strong></h2><p>The series, $1^1+2^2+3^3 +\ldots + 10^{10} = 10405071317$.</p>
<p>Find the last ten digits of the series, $1^1+2^2+3^3 +\ldots + 1000^{1000}$.</p>
<hr>
<h2 id="自幂"><a href="#自幂" class="headerlink" title="自幂"></a><strong>自幂</strong></h2><p>自幂级数的前十项求和为$1^1+2^2+3^3 +\ldots + 10^{10} = 10405071317$。</p>
<p>求自幂级数的前一千项求和，即$1^1+2^2+3^3 +\ldots + 1000^{1000}$，并给出其最后十个数字作为答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 480</title>
    <url>/480/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-480"><a href="#Problem-480" class="headerlink" title="Problem 480"></a><a href="https://projecteuler.net/problem=480">Problem 480</a></h1><hr>
<p><strong>The Last Question</strong></p>
<p>Consider all the words which can be formed by selecting letters, in any order, from the phrase:</p>
<center>**thereisasyetinsufficientdataforameaningfulanswer**</center>

<p>Suppose those with 15 letters or less are listed in <strong>alphabetical order</strong> and numbered sequentially starting at 1.<br>The list would include:</p>
<p>1 : a<br>2 : aa<br>3 : aaa<br>4 : aaaa<br>5 : aaaaa<br>6 : aaaaaa<br>7 : aaaaaac<br>8 : aaaaaacd<br>9 : aaaaaacde<br>10 : aaaaaacdee<br>11 : aaaaaacdeee<br>12 : aaaaaacdeeee<br>13 : aaaaaacdeeeee<br>14 : aaaaaacdeeeeee<br>15 : aaaaaacdeeeeeef<br>16 : aaaaaacdeeeeeeg<br>17 : aaaaaacdeeeeeeh<br>…<br>28 : aaaaaacdeeeeeey<br>29 : aaaaaacdeeeeef<br>30 : aaaaaacdeeeeefe<br>…<br>115246685191495242: euleoywuttttsss<br>115246685191495243: euler<br>115246685191495244: eulera<br>…<br>525069350231428029: ywuuttttssssrrr</p>
<p>Define P(w) as the position of the word w.<br>Define W(p) as the word in position p.<br>We can see that P(w) and W(p) are inverses: P(W(p)) = p and W(P(w)) = w.</p>
<p>Examples:</p>
<p>W(10) = aaaaaacdee<br>P(aaaaaacdee) = 10<br>W(115246685191495243) = euler<br>P(euler) = 115246685191495243</p>
<p>Find W(P(legionary) + P(calorimeters) - P(annihilate) + P(orchestrated) - P(fluttering)).<br>Give your answer using lowercase characters (no punctuation or space).</p>
<hr>
<p><strong>最后一问</strong></p>
<p>考虑所有从下面这个词组中选取字母并任意排列所能构成的词汇：</p>
<center>**thereisasyetinsufficientdataforameaningfulanswer**</center>

<p>将其中包括少于或等于15个字母的单词按照<strong>字典序</strong>排列，并且从1开始逐个编号。<br>这个列表大致如下所示：</p>
<p>1 : a<br>2 : aa<br>3 : aaa<br>4 : aaaa<br>5 : aaaaa<br>6 : aaaaaa<br>7 : aaaaaac<br>8 : aaaaaacd<br>9 : aaaaaacde<br>10 : aaaaaacdee<br>11 : aaaaaacdeee<br>12 : aaaaaacdeeee<br>13 : aaaaaacdeeeee<br>14 : aaaaaacdeeeeee<br>15 : aaaaaacdeeeeeef<br>16 : aaaaaacdeeeeeeg<br>17 : aaaaaacdeeeeeeh<br>…<br>28 : aaaaaacdeeeeeey<br>29 : aaaaaacdeeeeef<br>30 : aaaaaacdeeeeefe<br>…<br>115246685191495242: euleoywuttttsss<br>115246685191495243: euler<br>115246685191495244: eulera<br>…<br>525069350231428029: ywuuttttssssrrr</p>
<p>记P(w)是单词w在列表中的位置。<br>记W(p)是列表中位置p上的单词。<br>可以看出P(w)和W(p)互为反函数：P(W(p)) = p且W(P(w)) = w。</p>
<p>举例如下：</p>
<p>W(10) = aaaaaacdee<br>P(aaaaaacdee) = 10<br>W(115246685191495243) = euler<br>P(euler) = 115246685191495243</p>
<p>求W(P(legionary) + P(calorimeters) - P(annihilate) + P(orchestrated) - P(fluttering))。<br>你的答案中应只包含小写字母，没有空格和标点符号。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 481</title>
    <url>/481/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-481"><a href="#Problem-481" class="headerlink" title="Problem 481"></a><a href="https://projecteuler.net/problem=481">Problem 481</a></h1><hr>
<p><strong>Chef Showdown</strong></p>
<p>A group of chefs (numbered #1, #2, etc) participate in a turn-based strategic cooking competition. On each chef’s turn, he/she cooks up a dish to the best of his/her ability and gives it to a separate panel of judges for taste-testing. Let S(k) represent chef #k’s skill level (which is publicly known). More specifically, S(k) is the probability that chef #k’s dish will be assessed favorably by the judges (on any/all turns). If the dish receives a favorable rating, then the chef must choose one other chef to be eliminated from the competition. The last chef remaining in the competition is the winner.</p>
<p>The game always begins with chef #1, with the turn order iterating sequentially over the rest of the chefs still in play. Then the cycle repeats from the lowest-numbered chef. All chefs aim to optimize their chances of winning within the rules as stated, assuming that the other chefs behave in the same manner. In the event that a chef has more than one equally-optimal elimination choice, assume that the chosen chef is always the one with the next-closest turn.</p>
<p>Define W<sub>n</sub>(k) as the probability that chef #k wins in a competition with n chefs. If we have S(1) = 0.25, S(2) = 0.5, and S(3) = 1, then W<sub>3</sub>(1) = 0.29375.</p>
<p>Going forward, we assign S(k) = F<sub>k</sub>/F<sub>n+1</sub> over all 1 ≤ k ≤ n, where F<sub>k</sub> is a Fibonacci number: F<sub>k</sub> = F<sub>k-1</sub> + F<sub>k-2</sub> with base cases F<sub>1</sub> = F<sub>2</sub> = 1. Then, for example, when considering a competition with n = 7 chefs, we have W<sub>7</sub>(1) = 0.08965042, W<sub>7</sub>(2) = 0.20775702, W<sub>7</sub>(3) = 0.15291406, W<sub>7</sub>(4) = 0.14554098, W<sub>7</sub>(5) = 0.15905291, W<sub>7</sub>(6) = 0.10261412, and W<sub>7</sub>(7) = 0.14247050, rounded to 8 decimal places each.</p>
<p>Let E(n) represent the expected number of dishes cooked in a competition with n chefs. For instance, E(7) = 42.28176050.</p>
<p>Find E(14) rounded to 8 decimal places.</p>
<hr>
<p><strong>厨师一决胜负</strong></p>
<p>一群厨师分别编号为#1，#2，依此类推，参与了一个轮流进行的策略厨艺大赛。在轮到某个厨师时，他必须做一道展现自己最好水平的菜，并将其交给一个独立评审团进行品尝。我们记S(k)是编号#k厨师的水平（事先给定），更具体地说，S(k)指的是厨师#k的菜被评委们认为好吃的概率。如果一道菜被评委认定为好吃，那么这位厨师可以将另一名厨师从比赛中剔除。比赛中最后剩下的那位厨师就是胜利者。</p>
<p>比赛从厨师#1开始，在场上未被剔除的厨师中轮流进行，直到最后一名厨师后，又回到在场的编号最小的一位厨师。所有厨师根据上述规则最大化自己获胜的概率，同时也假定其它厨师采取同样的策略。如果一个厨师有多个同样好的剔除策略，他总是剔除在他之后最近的那个。</p>
<p>记W<sub>n</sub>(k)是厨师#k在一场有n个厨师参与的比赛中获胜的概率。如果S(1) = 0.25，S(2) = 0.5，S(3) = 1，那么W<sub>3</sub>(1) = 0.29375。</p>
<p>进一步地，如果我们假定对于所有的1 ≤ k ≤ n，S(k) = F<sub>k</sub>/F<sub>n+1</sub>，其中F<sub>k</sub>是以F<sub>1</sub> = F<sub>2</sub> = 1的斐波那契数：F<sub>k</sub> = F<sub>k-1</sub> + F<sub>k-2</sub>。在这种情况下，例如一场有n = 7个厨师参与的比赛，我们有W<sub>7</sub>(1) = 0.08965042，W<sub>7</sub>(2) = 0.20775702，W<sub>7</sub>(3) = 0.15291406，W<sub>7</sub>(4) = 0.14554098，W<sub>7</sub>(5) = 0.15905291，W<sub>7</sub>(6) = 0.10261412，W<sub>7</sub>(7) = 0.14247050，均保留八位小数。</p>
<p>记E(n)为上述假定下一场有n个厨师参与的比赛预期炒制的菜肴数目。例如，E(7) = 42.28176050。</p>
<p>求E(14)，并保留八位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 482</title>
    <url>/482/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-482"><a href="#Problem-482" class="headerlink" title="Problem 482"></a><a href="https://projecteuler.net/problem=482">Problem 482</a></h1><hr>
<p><strong>The incenter of a triangle</strong></p>
<p>ABC is an integer sided triangle with incenter I and perimeter p.<br>The segments IA, IB and IC have integral length as well. </p>
<p>Let L = p + |IA| + |IB| + |IC|. </p>
<p>Let S(P) = ∑L for all such triangles where p ≤ P. For example, S(10<sup>3</sup>) = 3619.</p>
<p>Find S(10<sup>7</sup>).</p>
<hr>
<p><strong>三角形的内心</strong></p>
<p>三角形ABC的三边长都是整数，其内心记为I，周长记为p.<br>连接内心和顶点的线段IA，IB和IC的长度恰好也都是整数。 </p>
<p>记L = p + |IA| + |IB| + |IC|。 </p>
<p>对于所有满足p ≤ P的三角形，记S(P) = ∑L。例如，S(10<sup>3</sup>) = 3619。</p>
<p>求S(10<sup>7</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 483</title>
    <url>/483/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-483"><a href="#Problem-483" class="headerlink" title="Problem 483"></a><a href="https://projecteuler.net/problem=483">Problem 483</a></h1><hr>
<h2 id="Repeated-permutation"><a href="#Repeated-permutation" class="headerlink" title="Repeated permutation"></a><strong>Repeated permutation</strong></h2><p>We define a <i>permutation</i> as an operation that rearranges the order of the elements $\{1, 2, 3, …, n\}$. There are $n!$ such permutations, one of which leaves the elements in their initial order. For $n = 3$ we have $3! = 6$ permutations:</p>
<ul>
<li>$P_1$ = keep the initial order</li>
<li>$P_2$ = exchange the 1<sup>st</sup> and 2<sup>nd</sup> elements</li>
<li>$P_3$ = exchange the 1<sup>st</sup> and 3<sup>rd</sup> elements</li>
<li>$P_4$ = exchange the 2<sup>nd</sup> and 3<sup>rd</sup> elements</li>
<li>$P_5$ = rotate the elements to the right</li>
<li>$P_6$ = rotate the elements to the left</li>
</ul>
<p>If we select one of these permutations, and we re-apply the <u>same</u> permutation repeatedly, we eventually restore the initial order.<br>For a permutation $P_i$, let $f(P_i)$ be the number of steps required to restore the initial order by applying the permutation $P_i$ repeatedly.<br /><br>For $n = 3$, we obtain:</p>
<ul>
<li>$f(P_1) = 1 : (1,2,3) → (1,2,3)$</li>
<li>$f(P_2) = 2 : (1,2,3) → (2,1,3) → (1,2,3)$</li>
<li>$f(P_3) = 2 : (1,2,3) → (3,2,1) → (1,2,3)$</li>
<li>$f(P_4) = 2 : (1,2,3) → (1,3,2) → (1,2,3)$</li>
<li>$f(P_5) = 3 : (1,2,3) → (3,1,2) → (2,3,1) → (1,2,3)$</li>
<li>$f(P_6) = 3 : (1,2,3) → (2,3,1) → (3,1,2) → (1,2,3)$</li>
</ul>
<p>Let $g(n)$ be the average value of $f^2(P_i)$ over all permutations $P_i$ of length $n$.<br /><br>$g(3) = (1^2 + 2^2 + 2^2 + 2^2 + 3^2 + 3^2)/3! = 31/6 ≈ 5.166666667e0$<br /><br>$g(5) = 2081/120 ≈ 1.734166667e1$<br /><br>$g(20) = 12422728886023769167301/2432902008176640000 ≈ 5.106136147e3$</p>
<p>Find $g(350)$ and write the answer in scientific notation rounded to $10$ significant digits, using a lowercase $e$ to separate mantissa and exponent, as in the examples above.</p>
<hr>
<h2 id="重复进行的重排"><a href="#重复进行的重排" class="headerlink" title="重复进行的重排"></a><strong>重复进行的重排</strong></h2><p>将改变序列$\{1, 2, 3, …, n\}$中元素顺序的操作称为<i class=zh>重排</i>。一共有$n!$种重排，其中一种就是保持所有元素的位置不变。对于$n = 3$，有如下$3! = 6$种重排：</p>
<ul>
<li>$P_1$ = 保持顺序不变</li>
<li>$P_2$ = 交换第一个和第二个元素</li>
<li>$P_3$ = 交换第一个和第三个元素</li>
<li>$P_4$ = 交换第二个和第三个元素</li>
<li>$P_5$ = 循环右移一位</li>
<li>$P_6$ = 循环左移一位</li>
</ul>
<p>如果从这些重排中选择一种，并且对重排后的序列重复进行<u>相同</u>的重排，最终元素会回到初始顺序。<br>对于任意重排$P_i$，记$f(P_i)$为回到初始顺序所需要的重复次数。<br /><br>对于$n = 3$可以得到：</p>
<ul>
<li>$f(P_1) = 1 : (1,2,3) → (1,2,3)$</li>
<li>$f(P_2) = 2 : (1,2,3) → (2,1,3) → (1,2,3)$</li>
<li>$f(P_3) = 2 : (1,2,3) → (3,2,1) → (1,2,3)$</li>
<li>$f(P_4) = 2 : (1,2,3) → (1,3,2) → (1,2,3)$</li>
<li>$f(P_5) = 3 : (1,2,3) → (3,1,2) → (2,3,1) → (1,2,3)$</li>
<li>$f(P_6) = 3 : (1,2,3) → (2,3,1) → (3,1,2) → (1,2,3)$</li>
</ul>
<p>对于所有长度为$n$的重排$P_i$，记$g(n)$为$f^2(P_i)$的平均值。<br /><br>$g(3) = (1^2 + 2^2 + 2^2 + 2^2 + 3^2 + 3^2)/3! = 31/6 ≈ 5.166666667e0$<br /><br>$g(5) = 2081/120 ≈ 1.734166667e1$<br /><br>$g(20) = 12422728886023769167301/2432902008176640000 ≈ 5.106136147e3$</p>
<p>求$g(350)$，并用四舍五入至$10$位小数的科学计数法表示，用小写字母$e$来分隔尾数和指数，如上述样例所示。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 484</title>
    <url>/484/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-484"><a href="#Problem-484" class="headerlink" title="Problem 484"></a><a href="https://projecteuler.net/problem=484">Problem 484</a></h1><hr>
<p><strong>Arithmetic Derivative</strong></p>
<p>The <strong>arithmetic derivative</strong> is defined by</p>
<ul>
<li>p’ = 1 for any prime p</li>
<li>(ab)’ = a’b + ab’ for all integers a, b (Leibniz rule)</li>
</ul>
<p>For example, 20’ = 24.</p>
<p>Find ∑ <strong>gcd</strong>(k,k’) for 1 &lt; k ≤ 5·10<sup>15</sup>.</p>
<p>Note: <strong>gcd</strong>(x,y) denotes the greatest common divisor of x and y.</p>
<hr>
<p><strong>算术导数</strong></p>
<p><strong>算术导数</strong>是按如下方式定义的：</p>
<ul>
<li>对任意素数p，p’ = 1 </li>
<li>对任意整数a和b，(ab)’ = a’b + ab’（莱布尼兹法则）</li>
</ul>
<p>例如，20’ = 24。</p>
<p>对于1 &lt; k ≤ 5·10<sup>15</sup>，求∑ <strong>gcd</strong>(k,k’)。</p>
<p>注，<strong>gcd</strong>(x,y)指x和y的最大公约数.</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 485</title>
    <url>/485/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-485"><a href="#Problem-485" class="headerlink" title="Problem 485"></a><a href="https://projecteuler.net/problem=485">Problem 485</a></h1><hr>
<p><strong>Maximum number of divisors</strong></p>
<p>Let d(n) be the number of divisors of n.<br>Let M(n,k) be the maximum value of d(j) for n ≤ j ≤ n+k-1.<br>Let S(u,k) be the sum of M(n,k) for 1 ≤ n ≤ u-k+1.</p>
<p>You are given that S(1000,10)=17176.</p>
<p>Find S(100 000 000,100 000).</p>
<hr>
<p><strong>约数的最大数目</strong></p>
<p>记d(n)是n的约数的数目。<br>记M(n,k)是对于n ≤ j ≤ n+k-1，d(j)的最大值。<br>记S(u,k)是对于1 ≤ n ≤ u-k+1，M(n,k)的和。</p>
<p>已知S(1000,10)=17176。</p>
<p>求S(100 000 000,100 000)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 487</title>
    <url>/487/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-487"><a href="#Problem-487" class="headerlink" title="Problem 487"></a><a href="https://projecteuler.net/problem=487">Problem 487</a></h1><hr>
<p><strong>Sums of power sums</strong></p>
<p>Let f<sub>k</sub>(n) be the sum of the k<sup>th</sup> powers of the first n positive integers.</p>
<p>For example, f<sub>2</sub>(10) = 1<sup>2</sup> + 2<sup>2</sup> + 3<sup>2</sup> + 4<sup>2</sup> + 5<sup>2</sup> + 6<sup>2</sup> + 7<sup>2</sup> + 8<sup>2</sup> + 9<sup>2</sup> + 10<sup>2</sup> = 385.</p>
<p>Let S<sub>k</sub>(n) be the sum of f<sub>k</sub>(i) for 1 ≤ i ≤ n. For example, S<sub>4</sub>(100) = 35375333830.</p>
<p>What is ∑ (S<sub>10000</sub>(10<sup>12</sup>) mod p) over all primes p between 2 ⋅ 10<sup>9</sup> and 2 ⋅ 10<sup>9</sup> + 2000?</p>
<hr>
<p><strong>幂之和之和</strong></p>
<p>记f<sub>k</sub>(n)是前n个正整数的k次方的和。</p>
<p>例如，f<sub>2</sub>(10) = 1<sup>2</sup> + 2<sup>2</sup> + 3<sup>2</sup> + 4<sup>2</sup> + 5<sup>2</sup> + 6<sup>2</sup> + 7<sup>2</sup> + 8<sup>2</sup> + 9<sup>2</sup> + 10<sup>2</sup> = 385。</p>
<p>记S<sub>k</sub>(n)是所有满足1 ≤ i ≤ n的f<sub>k</sub>(i)的和。例如，S<sub>4</sub>(100) = 35375333830。</p>
<p>对于所有在2 ⋅ 10<sup>9</sup>与2 ⋅ 10<sup>9</sup> + 2000之间的素数p，求∑ (S<sub>10000</sub>(10<sup>12</sup>) mod p)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 486</title>
    <url>/486/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-486"><a href="#Problem-486" class="headerlink" title="Problem 486"></a><a href="https://projecteuler.net/problem=486">Problem 486</a></h1><hr>
<p><strong>Palindrome-containing strings</strong></p>
<p>Let F<sub>5</sub>(n) be the number of strings s such that:</p>
<ul>
<li>s consists only of ‘0’s and ‘1’s,</li>
<li>s has length at most n, and</li>
<li>s contains a palindromic substring of length at least 5.</li>
</ul>
<p>For example, F<sub>5</sub>(4)&nbsp;=&nbsp;0, F<sub>5</sub>(5)&nbsp;=&nbsp;8, F<sub>5</sub>(6)&nbsp;=&nbsp;42 and F<sub>5</sub>(11)&nbsp;=&nbsp;3844.</p>
<p>Let D(L) be the number of integers n such that 5&nbsp;≤&nbsp;n&nbsp;≤&nbsp;L and F<sub>5</sub>(n) is divisible by 87654321.</p>
<p>For example, D(10<sup>7</sup>)&nbsp;=&nbsp;0 and D(5·10<sup>9</sup>)&nbsp;=&nbsp;51.</p>
<p>Find D(10<sup>18</sup>).</p>
<hr>
<p><strong>包含回文的数串</strong></p>
<p>记F<sub>5</sub>(n)是满足下列条件的数串s的数目：</p>
<ul>
<li>s仅包含0和1；</li>
<li>s的长度至多为n；</li>
<li>s包含有一个长度至少为5的回文子串。</li>
</ul>
<p>例如，F<sub>5</sub>(4)&nbsp;=&nbsp;0，F<sub>5</sub>(5)&nbsp;=&nbsp;8，F<sub>5</sub>(6)&nbsp;=&nbsp;42，F<sub>5</sub>(11)&nbsp;=&nbsp;3844。</p>
<p>记D(L)是所有满足5&nbsp;≤&nbsp;n&nbsp;≤&nbsp;L且F<sub>5</sub>(n)能被87654321整除的整数n的数目。</p>
<p>例如，D(10<sup>7</sup>)&nbsp;=&nbsp;0，D(5·10<sup>9</sup>)&nbsp;=&nbsp;51。</p>
<p>求D(10<sup>18</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 488</title>
    <url>/488/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-488"><a href="#Problem-488" class="headerlink" title="Problem 488"></a><a href="https://projecteuler.net/problem=488">Problem 488</a></h1><hr>
<p><strong>Unbalanced Nim</strong></p>
<p>Alice and Bob have enjoyed playing <strong>Nim</strong> every day. However, they finally got bored of playing ordinary three-heap Nim.<br>So, they added an extra rule:</p>
<ul>
<li>Must not make two heaps of the same size.</li>
</ul>
<p>The triple (a,b,c) indicates the size of three heaps.<br>Under this extra rule, (2,4,5) is one of the losing positions for the next player.</p>
<p>To illustrate:</p>
<ul>
<li>Alice moves to (2,4,3)</li>
<li>Bob   moves to (0,4,3)</li>
<li>Alice moves to (0,2,3)</li>
<li>Bob   moves to (0,2,1)</li>
</ul>
<p>Unlike ordinary three-heap Nim, (0,1,2) and its permutations are the end states of this game.</p>
<p>For an integer N, we define F(N) as the sum of a+b+c for all the losing positions for the next player, with 0 &lt; a &lt; b &lt; c &lt; N.</p>
<p>For example, F(8) = 42, because there are 4 losing positions for the next player, (1,3,5), (1,4,6), (2,3,6) and (2,4,5).<br>We can also verify that F(128) = 496062.</p>
<p>Find the last 9 digits of F(10<sup>18</sup>).</p>
<hr>
<p><strong>不均衡取石子游戏</strong></p>
<p>爱丽丝和鲍勃每天都玩<strong>取石子游戏</strong>。然而，他们终于还是厌倦了普通的三堆取石子游戏。<br>于是，他们给游戏增加了一条新的规则：</p>
<ul>
<li>禁止让其中两堆大小相同。</li>
</ul>
<p>三元组(a,b,c)仍旧分别表示三个堆的大小。<br>在新规则下，(2,4,5)将成为一个必败的局面。</p>
<p>一种可能的进程演示如下：</p>
<ul>
<li>爱丽丝给对方留下(2,4,3)</li>
<li>鲍勃给对方留下(0,4,3)</li>
<li>爱丽丝给对方留下(0,2,3)</li>
<li>鲍勃给对方留下(0,2,1)</li>
</ul>
<p>与普通的三堆取石子游戏不同，这个游戏中(0,1,2)或者它的任何排列都是游戏结束的状态。</p>
<p>对于一个整数N和所有满足0 &lt; a &lt; b &lt; c &lt; N的必败局面(a,b,c)，记所有a+b+c的和为F(N)。</p>
<p>例如 F(8) = 42，因为满足上述条件的必败局面共有4组，分别是(1,3,5)，(1,4,6)，(2,3,6)和(2,4,5)。<br>我们同样也可以验证 F(128) = 496062。</p>
<p>求F(10<sup>18</sup>)的最后9位数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 489</title>
    <url>/489/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-489"><a href="#Problem-489" class="headerlink" title="Problem 489"></a><a href="https://projecteuler.net/problem=489">Problem 489</a></h1><hr>
<p><strong>Common factors between two sequences</strong></p>
<p>Let G(a, b) be the smallest non-negative integer n for which <dfn title="Greatest common divisor">gcd</dfn>(n<sup>3</sup> + b, (n + a)<sup>3</sup> + b) is maximized.<br>For example, G(1, 1) = 5 because gcd(n<sup>3</sup> + 1, (n + 1)<sup>3</sup> + 1) reaches its maximum value of 7 for n = 5, and is smaller for 0 ≤ n &lt; 5.<br>Let H(m, n) = Σ G(a, b) for 1 ≤ a ≤ m, 1 ≤ b ≤ n.<br>You are given H(5, 5) = 128878 and H(10, 10) = 32936544.</p>
<p>Find H(18, 1900).</p>
<hr>
<p><strong>两个序列的公因数</strong></p>
<p>记使得<dfn title="Greatest common divisor">gcd</dfn>(n<sup>3</sup> + b, (n + a)<sup>3</sup> + b)取最大值的最小非负整数n为G(a, b)。<br>例如，G(1, 1) = 5，因为gcd(n<sup>3</sup> + 1, (n + 1)<sup>3</sup> + 1)在n = 5时取得其最大值7，而且对于0 ≤ n &lt; 5这个公约数更小。<br>记H(m, n) = Σ G(a, b)对于所有1 ≤ a ≤ m, 1 ≤ b ≤ n。<br>已知H(5, 5) = 128878和H(10, 10) = 32936544。</p>
<p>求H(18, 1900)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 490</title>
    <url>/490/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-490"><a href="#Problem-490" class="headerlink" title="Problem 490"></a><a href="https://projecteuler.net/problem=490">Problem 490</a></h1><hr>
<p><strong>Jumping frog</strong></p>
<p>There are n stones in a pond, numbered 1 to n. Consecutive stones are spaced one unit apart.</p>
<p>A frog sits on stone 1. He wishes to visit each stone exactly once, stopping on stone n. However, he can only jump from one stone to another if they are at most 3 units apart. In other words, from stone i, he can reach a stone j if 1 ≤ j ≤ n and j is in the set {i-3, i-2, i-1, i+1, i+2, i+3}.</p>
<p>Let f(n) be the number of ways he can do this. For example, f(6) = 14, as shown below:<br>1 → 2 → 3 → 4 → 5 → 6<br>1 → 2 → 3 → 5 → 4 → 6<br>1 → 2 → 4 → 3 → 5 → 6<br>1 → 2 → 4 → 5 → 3 → 6<br>1 → 2 → 5 → 3 → 4 → 6<br>1 → 2 → 5 → 4 → 3 → 6<br>1 → 3 → 2 → 4 → 5 → 6<br>1 → 3 → 2 → 5 → 4 → 6<br>1 → 3 → 4 → 2 → 5 → 6<br>1 → 3 → 5 → 2 → 4 → 6<br>1 → 4 → 2 → 3 → 5 → 6<br>1 → 4 → 2 → 5 → 3 → 6<br>1 → 4 → 3 → 2 → 5 → 6<br>1 → 4 → 5 → 2 → 3 → 6</p>
<p>Other examples are f(10) = 254 and f(40) = 1439682432976.</p>
<p>Let S(L) = ∑ f(n)<sup>3</sup> for 1 ≤ n ≤ L.<br>Examples:<br>S(10) = 18230635<br>S(20) = 104207881192114219<br>S(1 000) mod 10<sup>9</sup> = 225031475<br>S(1 000 000) mod 10<sup>9</sup> = 363486179</p>
<p>Find S(10<sup>14</sup>) mod 10<sup>9</sup>.</p>
<hr>
<p><strong>青蛙跳</strong></p>
<p>池塘中有n块石头，分别标号为1到n，相邻标号的石头之间的距离是一单位。</p>
<p>一只青蛙坐在石头1上，它希望拜访每个石头恰好一次，并且最后落在石头n上。但是，它每次只能跳到最多三单位距离远的另一块石头上。换句话说，从石头i出发，他能跳到的石头j满足1 ≤ j ≤ n 且 j 属于 {i-3, i-2, i-1, i+1, i+2, i+3}。</p>
<p>用 f(n) 表示这只青蛙所有可行跳法的数量。举例来说，f(6) = 14，这14种方法如下所示：<br>1 → 2 → 3 → 4 → 5 → 6<br>1 → 2 → 3 → 5 → 4 → 6<br>1 → 2 → 4 → 3 → 5 → 6<br>1 → 2 → 4 → 5 → 3 → 6<br>1 → 2 → 5 → 3 → 4 → 6<br>1 → 2 → 5 → 4 → 3 → 6<br>1 → 3 → 2 → 4 → 5 → 6<br>1 → 3 → 2 → 5 → 4 → 6<br>1 → 3 → 4 → 2 → 5 → 6<br>1 → 3 → 5 → 2 → 4 → 6<br>1 → 4 → 2 → 3 → 5 → 6<br>1 → 4 → 2 → 5 → 3 → 6<br>1 → 4 → 3 → 2 → 5 → 6<br>1 → 4 → 5 → 2 → 3 → 6</p>
<p>其它例子还有 f(10) = 254 和 f(40) = 1439682432976。</p>
<p>对于1 ≤ n ≤ L，记S(L) = ∑ f(n)<sup>3</sup>。<br>例如：<br>S(10) = 18230635<br>S(20) = 104207881192114219<br>S(1 000) mod 10<sup>9</sup> = 225031475<br>S(1 000 000) mod 10<sup>9</sup> = 363486179</p>
<p>求S(10<sup>14</sup>) mod 10<sup>9</sup>。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 49</title>
    <url>/49/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-49"><a href="#Problem-49" class="headerlink" title="Problem 49"></a><a href="https://projecteuler.net/problem=49">Problem 49</a></h1><hr>
<h2 id="Prime-Permutations"><a href="#Prime-Permutations" class="headerlink" title="Prime Permutations"></a><strong>Prime Permutations</strong></h2><p>The arithmetic sequence, $1487$, $4817$, $8147$, in which each of the terms increases by $3330$, is unusual in two ways: (i) each of the three terms are prime, and, (ii) each of the $4$-digit numbers are permutations of one another.</p>
<p>There are no arithmetic sequences made up of three $1$-, $2$-, or $3$-digit primes, exhibiting this property, but there is one other $4$-digit increasing sequence.</p>
<p>What $12$-digit number do you form by concatenating the three terms in this sequence?</p>
<hr>
<h2 id="素数重排"><a href="#素数重排" class="headerlink" title="素数重排"></a><strong>素数重排</strong></h2><p>公差为$3330$的三项等差数列$1487$、$4817$、$8147$在两个方面非常特别：其一，每一项都是素数；其二，两两都是重新排列的关系。</p>
<p>不存在由一位、两位或三位素数构成的三项等差数列同时满足上述性质，但存在另一个由四位素数构成的此类递增等差数列。</p>
<p>将这个数列的三项连接起来得到的$12$位数是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 492</title>
    <url>/492/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-492"><a href="#Problem-492" class="headerlink" title="Problem 492"></a><a href="https://projecteuler.net/problem=492">Problem 492</a></h1><hr>
<p><strong>Exploding sequence</strong></p>
<p>Define the sequence a<sub>1</sub>, a<sub>2</sub>, a<sub>3</sub>, … as:</p>
<ul>
<li>a<sub>1</sub> = 1</li>
<li>a<sub>n+1</sub> = 6a<sub>n</sub><sup>2</sup> + 10a<sub>n</sub> + 3 for n ≥ 1.</li>
</ul>
<p>Examples:<br>a<sub>3</sub> = 2359<br>a<sub>6</sub> = 269221280981320216750489044576319<br>a<sub>6</sub> mod 1&nbsp;000&nbsp;000&nbsp;007 = 203064689<br>a<sub>100</sub> mod 1&nbsp;000&nbsp;000&nbsp;007 = 456482974</p>
<p>Define B(x,y,n) as ∑ (a<sub>n</sub> mod p) for every prime p such that x ≤ p ≤ x+y.</p>
<p>Examples:<br>B(10<sup>9</sup>, 10<sup>3</sup>, 10<sup>3</sup>) = 23674718882<br>B(10<sup>9</sup>, 10<sup>3</sup>, 10<sup>15</sup>) = 20731563854</p>
<p>Find B(10<sup>9</sup>, 10<sup>7</sup>, 10<sup>15</sup>).</p>
<hr>
<p><strong>爆炸序列</strong></p>
<p>定义序列 a<sub>1</sub>, a<sub>2</sub>, a<sub>3</sub>, … 如下：</p>
<ul>
<li>a<sub>1</sub> = 1</li>
<li>a<sub>n+1</sub> = 6a<sub>n</sub><sup>2</sup> + 10a<sub>n</sub> + 3 for n ≥ 1.</li>
</ul>
<p>例如：<br>a<sub>3</sub> = 2359<br>a<sub>6</sub> = 269221280981320216750489044576319<br>a<sub>6</sub> mod 1&nbsp;000&nbsp;000&nbsp;007 = 203064689<br>a<sub>100</sub> mod 1&nbsp;000&nbsp;000&nbsp;007 = 456482974</p>
<p>对所有满足x ≤ p ≤ x+y的素数p，定义B(x,y,n)等于∑ (a<sub>n</sub> mod p)。</p>
<p>例如：<br>B(10<sup>9</sup>, 10<sup>3</sup>, 10<sup>3</sup>) = 23674718882<br>B(10<sup>9</sup>, 10<sup>3</sup>, 10<sup>15</sup>) = 20731563854</p>
<p>求B(10<sup>9</sup>, 10<sup>7</sup>, 10<sup>15</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 491</title>
    <url>/491/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-491"><a href="#Problem-491" class="headerlink" title="Problem 491"></a><a href="https://projecteuler.net/problem=491">Problem 491</a></h1><hr>
<p><strong>Double pandigital number divisible by 11</strong></p>
<p>We call a positive integer <em>double pandigital</em> if it uses all the digits 0 to 9 exactly twice (with no leading zero). For example, 40561817703823564929 is one such number.</p>
<p>How many double pandigital numbers are divisible by 11?</p>
<hr>
<p><strong>能被11整除的二重复全数字数</strong></p>
<p>我们称一个正整数是<em>二重复全数字</em>的，如果它使用0~9这十个数字恰好各两次（没有前导0）。例如，40561817703823564929就是一个二重复全数字数。</p>
<p>有多少个能被11整除的二重复全数字数？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 493</title>
    <url>/493/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-493"><a href="#Problem-493" class="headerlink" title="Problem 493"></a><a href="https://projecteuler.net/problem=493">Problem 493</a></h1><hr>
<p><strong>Under The Rainbow</strong></p>
<p>70 colored balls are placed in an urn, 10 for each of the seven rainbow colors.</p>
<p>What is the expected number of distinct colors in 20 randomly picked balls?</p>
<p>Give your answer with nine digits after the decimal point (a.bcdefghij).</p>
<hr>
<p><strong>彩虹之下</strong></p>
<p>在容器中装有70个球，分别染上彩虹的七种颜色，每种颜色各有10个。</p>
<p>从容器中随机取出20个球，这些球中不同颜色的数量的期望值是多少？</p>
<p>你的答案应当保留到小数点后9位小数（a.bcdefghij）。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 494</title>
    <url>/494/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-494"><a href="#Problem-494" class="headerlink" title="Problem 494"></a><a href="https://projecteuler.net/problem=494">Problem 494</a></h1><hr>
<p><strong>Collatz prefix families</strong></p>
<p>The Collatz sequence is defined as: </p>
<p>$$a_{i+1} = \frac{a_i}{2} \text{ if }a_i\text{ is even}$$ $$a_{i+1} = 3a_i+1\text{ if }a_i\text{ is odd}$$</p>
<p>The Collatz conjecture states that starting from any positive integer, the sequence eventually reaches the cycle 1,4,2,1….<br>We shall define the sequence prefix p(n) for the Collatz sequence starting with a<sub>1</sub> = n as the sub-sequence of all numbers not a power of 2 (2<sup>0</sup>=1 is considered a power of 2 for this problem). For example:<br>p(13) = {13, 40, 20, 10, 5}<br>p(8) = {}<br>Any number invalidating the conjecture would have an infinite length sequence prefix.</p>
<p>Let S<sub>m</sub> be the set of all sequence prefixes of length m. Two sequences {a<sub>1</sub>, a<sub>2</sub>, …, a<sub>m</sub>} and {b<sub>1</sub>, b<sub>2</sub>, …, b<sub>m</sub>} in S<sub>m</sub> are said to belong to the same prefix family if a<sub>i</sub> &lt; a<sub>j</sub> if and only if b<sub>i</sub> &lt; b<sub>j</sub> for all 1 ≤ i,j ≤ m.</p>
<p>For example, in S<sub>4</sub>, {6, 3, 10, 5} is in the same family as {454, 227, 682, 341}, but not {113, 340, 170, 85}.<br>Let f(m) be the number of distinct prefix families in S<sub>m</sub>.<br>You are given f(5) = 5, f(10) = 55, f(20) = 6771.</p>
<p>Find f(90).</p>
<hr>
<p><strong>考拉兹前缀族</strong></p>
<p>考拉兹序列是指按如下方式定义的数列：</p>
<p>$$a_{i+1} = \frac{a_i}{2} \text{ 若}a_i\text{是偶数}$$ $$a_{i+1} = 3a_i+1\text{ 若}a_i\text{是奇数}$$</p>
<p>相应地，考拉兹猜想认为，从任何正整数开始，序列最终将进入循环1，4，2，1……<br>我们定义“序列前缀”p(n)为从a<sub>1</sub> = n开始的考拉兹序列的不包含2的幂次的子序列（2<sup>0</sup>=1在此也视为2的幂次）。例如：<br>p(13) = {13, 40, 20, 10, 5}<br>p(8) = {}<br>考拉兹猜想的反例将会有一个无限长的序列前缀。   </p>
<p>记S<sub>m</sub>为所有长度为m的序列前缀构成的集合。S<sub>m</sub>中的两个序列前缀{a<sub>1</sub>, a<sub>2</sub>, …, a<sub>m</sub>}和{b<sub>1</sub>, b<sub>2</sub>, …, b<sub>m</sub>}属于同一个前缀族，如果对于任意1 ≤ i,j ≤ m，a<sub>i</sub> &lt; a<sub>j</sub>当且仅当b<sub>i</sub> &lt; b<sub>j</sub>。</p>
<p>例如，在S<sub>4</sub>中，{6, 3, 10, 5}和{454, 227, 682, 341}在同一前缀族，而{113, 340, 170, 85}不在该前缀族。<br>记f(m)为S<sub>m</sub>中不同前缀族的数量。<br>已知f(5) = 5，f(10) = 55，f(20) = 6771。</p>
<p>求f(90)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 495</title>
    <url>/495/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-495"><a href="#Problem-495" class="headerlink" title="Problem 495"></a><a href="https://projecteuler.net/problem=495">Problem 495</a></h1><hr>
<p><strong>Writing n as the product of k distinct positive integers</strong></p>
<p>Let W(n,k) be the number of ways in which n can be written as the product of k distinct positive integers.</p>
<p>For example, W(144,4) = 7. There are 7 ways in which 144 can be written as a product of 4 distinct positive integers:</p>
<ul>
<li>144 = 1×2×4×18</li>
<li>144 = 1×2×8×9</li>
<li>144 = 1×2×3×24</li>
<li>144 = 1×2×6×12</li>
<li>144 = 1×3×4×12</li>
<li>144 = 1×3×6×8</li>
<li>144 = 2×3×4×6</li>
</ul>
<p>Note that permutations of the integers themselves are not considered distinct.</p>
<p>Furthermore, W(100!,10) modulo 1&nbsp;000&nbsp;000&nbsp;007 = 287549200.</p>
<p>Find W(10000!,30) modulo 1&nbsp;000&nbsp;000&nbsp;007.</p>
<hr>
<p><strong>将n拆分成k个不重复正整数的乘积</strong></p>
<p>用W(n,k)表示将n拆分成k个不重复正整数的乘积的方法数。</p>
<p>例如，W(144,4) = 7，即有7种方法将144拆分成4个不重复正整数的乘积：</p>
<ul>
<li>144 = 1×2×4×18</li>
<li>144 = 1×2×8×9</li>
<li>144 = 1×2×3×24</li>
<li>144 = 1×2×6×12</li>
<li>144 = 1×3×4×12</li>
<li>144 = 1×3×6×8</li>
<li>144 = 2×3×4×6</li>
</ul>
<p>注意正整数的不同排列不视为不同的拆分方法。</p>
<p>进一步的，我们有W(100!,10)除以1&nbsp;000&nbsp;000&nbsp;007的余数为287549200。</p>
<p>求W(10000!,30)除以1&nbsp;000&nbsp;000&nbsp;007的余数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 496</title>
    <url>/496/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-496"><a href="#Problem-496" class="headerlink" title="Problem 496"></a><a href="https://projecteuler.net/problem=496">Problem 496</a></h1><hr>
<p><strong>Incenter and circumcenter of triangle</strong></p>
<p>Given an integer sided triangle ABC:<br>Let I be the incenter of ABC.<br>Let D be the intersection between the line AI and the circumcircle of ABC (A ≠ D).</p>
<p>We define F(L) as the sum of BC for the triangles ABC that satisfy AC = DI and BC ≤ L.</p>
<p>For example, F(15) = 45 because the triangles ABC with (BC,AC,AB) = (6,4,5), (12,8,10), (12,9,7), (15,9,16) satisfy the conditions.</p>
<p>Find F(10<sup>9</sup>).</p>
<hr>
<p><strong>三角形的内心与外心</strong></p>
<p>对于一个三边长都为整数的三角形ABC：<br>记I是三角形ABC的内心。<br>记D是直线AI与三角形ABC的外接圆的交点（异于A）。</p>
<p>记 F(L) 为所有满足AC = DI 且 BC ≤ L 的三角形的BC边边长的和。</p>
<p>例如，F(15) = 45，因为只有三边长(BC,AC,AB) = (6,4,5), (12,8,10), (12,9,7), (15,9,16)的三角形ABC才满足条件。</p>
<p>求F(10<sup>9</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 497</title>
    <url>/497/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-497"><a href="#Problem-497" class="headerlink" title="Problem 497"></a><a href="https://projecteuler.net/problem=497">Problem 497</a></h1><hr>
<p><strong>Drunken Tower of Hanoi</strong></p>
<p>Bob is very familiar with the famous mathematical puzzle/game, “Tower of Hanoi,” which consists of three upright rods and disks of different sizes that can slide onto any of the rods. The game begins with a stack of n disks placed on the leftmost rod in descending order by size. The objective of the game is to move all of the disks from the leftmost rod to the rightmost rod, given the following restrictions:</p>
<ol>
<li>Only one disk can be moved at a time.</li>
<li>A valid move consists of taking the top disk from one stack and placing it onto another stack (or an empty rod).</li>
<li>No disk can be placed on top of a smaller disk.</li>
</ol>
<p>Moving on to a variant of this game, consider a long room k units (square tiles) wide, labeled from 1 to k in ascending order. Three rods are placed at squares a, b, and c, and a stack of n disks is placed on the rod at square a.</p>
<p>Bob begins the game standing at square b. His objective is to play the Tower of Hanoi game by moving all of the disks to the rod at square c. However, Bob can only pick up or set down a disk if he is on the same square as the rod / stack in question.</p>
<p>Unfortunately, Bob is also drunk. On a given move, Bob will either stumble one square to the left or one square to the right with equal probability, unless Bob is at either end of the room, in which case he can only move in one direction. Despite Bob’s inebriated state, he is still capable of following the rules of the game itself, as well as choosing when to pick up or put down a disk.</p>
<p>The following animation depicts a side-view of a sample game for n = 3, k = 7, a = 2, b = 4, and c = 6:</p>
<center><img src="/resources/images/0497_hanoi.gif"></center>

<p>Let E(n,k,a,b,c) be the expected number of squares that Bob travels during a single optimally-played game. A game is played optimally if the number of disk-pickups is minimized.</p>
<p>Interestingly enough, the result is always an integer. For example, E(2,5,1,3,5) = 60 and E(3,20,4,9,17) = 2358.</p>
<p>Find the last nine digits of ∑<sub>1≤n≤10000</sub> E(n,10<sup>n</sup>,3<sup>n</sup>,6<sup>n</sup>,9<sup>n</sup>).</p>
<hr>
<p><strong>醉酒汉诺塔</strong></p>
<p>鲍勃非常熟悉著名的数学谜题汉诺塔：这个游戏包含了三根竖直的柱子和能够串在柱子上的不同大小的盘子。游戏的开始状态是n个盘子按从大到小的顺序依次串在最左边的柱子上；游戏的目标是在以下的限制条件下，把所有的盘子都串到最右边的柱子上：</p>
<ol>
<li>一次只能移动一个盘子。</li>
<li>一个有效的移动包括拿起一堆盘子最顶上的一个以及把它放在另一堆盘子的顶端（或者一个空的柱子上）。</li>
<li>每个盘子都不能放在比它小的盘子上。</li>
</ol>
<p>现在我们来玩这个游戏的一个变种，在一间k单位长并依次标上了1至k的房间里，三根柱子方别被摆在了标有a、b和c的位置，在a位置的柱子上有n个盘子。</p>
<p>鲍勃从位置b开始进行游戏，他的目标是像汉诺塔那样把所有盘子移动到位置c的柱子上，但是他只能在有柱子的地方捡起或放下盘子。</p>
<p>不幸的是，鲍勃喝醉了，每当他要移动的时候，他将以相同的概率向左或向右走一步，除非他是在房间的某个尽头，只能往另一个方向走。不过，Bob即使是在喝醉的状态下，依然能够按照游戏的规则来合理选择何时应该捡起或放下盘子。</p>
<p>下面的动画是一个简单游戏的侧面演示，这个游戏中n = 3，k = 7，a = 2，b = 4，c = 6：</p>
<center><img src="/resources/images/0497_hanoi.gif"></center>

<p>记E(n,k,a,b,c)是Bob按照最优的方式完成游戏所需要走过的路程的期望值，在这里“最优”的衡量标准是捡起盘子的次数最少。</p>
<p>非常有趣的是，计算结果总是一个整数，例如，E(2,5,1,3,5) = 60以及E(3,20,4,9,17) = 2358。</p>
<p>求∑<sub>1≤n≤10000</sub> E(n,10<sup>n</sup>,3<sup>n</sup>,6<sup>n</sup>,9<sup>n</sup>)的最后九位数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 498</title>
    <url>/498/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-498"><a href="#Problem-498" class="headerlink" title="Problem 498"></a><a href="https://projecteuler.net/problem=498">Problem 498</a></h1><hr>
<p><strong>Remainder of polynomial division</strong></p>
<p>For positive integers n and m, we define two polynomials F<sub>n</sub>(x) = x<sup>n</sup> and G<sub>m</sub>(x) = (x-1)<sup>m</sup>.<br>We also define a polynomial R<sub>n,m</sub>(x) as the remainder of the division of F<sub>n</sub>(x) by G<sub>m</sub>(x).<br>For example, R<sub>6,3</sub>(x) = 15x<sup>2</sup> - 24x + 10.</p>
<p>Let C(n, m, d) be the absolute value of the coefficient of the d-th degree term of R<sub>n,m</sub>(x).<br>We can verify that C(6, 3, 1) = 24 and C(100, 10, 4) = 227197811615775.</p>
<p>Find C(10<sup>13</sup>, 10<sup>12</sup>, 10<sup>4</sup>) mod 999999937.</p>
<hr>
<p><strong>多项式相除的余数</strong></p>
<p>对于正整数n和m，我们分别定义多项式 F<sub>n</sub>(x) = x<sup>n</sup>和G<sub>m</sub>(x) = (x-1)<sup>m</sup>。<br>另外，我们再定义多项式R<sub>n,m</sub>(x)为多项式F<sub>n</sub>(x)除以多项式G<sub>m</sub>(x)的余数。<br>例如，R<sub>6,3</sub>(x) = 15x<sup>2</sup> - 24x + 10。</p>
<p>记C(n, m, d)是R<sub>n,m</sub>(x)中d次项系数的绝对值。<br>我们可以验证C(6, 3, 1) = 24，C(100, 10, 4) = 227197811615775。</p>
<p>求C(10<sup>13</sup>, 10<sup>12</sup>, 10<sup>4</sup>) mod 999999937。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 499</title>
    <url>/499/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-499"><a href="#Problem-499" class="headerlink" title="Problem 499"></a><a href="https://projecteuler.net/problem=499">Problem 499</a></h1><hr>
<p><strong>St. Petersburg Lottery</strong></p>
<p>A gambler decides to participate in a special lottery. In this lottery the gambler plays a series of one or more games.<br>Each game costs m pounds to play and starts with an initial pot of 1 pound. The gambler flips an unbiased coin. Every time a head appears, the pot is doubled and the gambler continues. When a tail appears, the game ends and the gambler collects the current value of the pot. The gambler is certain to win at least 1 pound, the starting value of the pot, at the cost of m pounds, the initial fee.</p>
<p>The gambler cannot continue to play if his fortune falls below m pounds.<br>Let p<sub>m</sub>(s) denote the probability that the gambler will never run out of money in this lottery given his initial fortune s and the cost per game m.<br>For example p<sub>2</sub>(2)&nbsp;=&nbsp;0.2522, p<sub>2</sub>(5)&nbsp;=&nbsp;0.6873 and p<sub>6</sub>(10&nbsp;000)&nbsp;=&nbsp;0.9952 (note: p<sub>m</sub>(s)&nbsp;=&nbsp;0 for s&nbsp;&lt;&nbsp;m).</p>
<p>Find p<sub>15</sub>(10<sup>9</sup>) and give your answer in the form 0.abcdefg</p>
<hr>
<p><strong>圣彼得堡彩票</strong></p>
<p>一名赌徒决定去买一种特殊的彩票。这种彩票要求赌徒玩一系列的游戏。<br>每次进行游戏都会花去赌徒m英镑。游戏开始时，赌徒将持有1英镑，然后他将掷出一枚公平的硬币：如果掷出字，持有的钱翻倍，游戏继续；如果掷出花，游戏结束，赌徒得到自己所持有的钱数。也就是说，赌徒每次游戏将花费m英镑，但将确保至少能够得到1英镑。</p>
<p>如果赌徒的财产已经不足m英镑了，他将不能继续进行游戏。<br>当赌徒初始的财产为s，并且每次游戏的花费是m时，记p<sub>m</sub>(s)为赌徒永远不会不够钱继续游戏的概率。<br>例如，p<sub>2</sub>(2)&nbsp;=&nbsp;0.2522，p<sub>2</sub>(5)&nbsp;=&nbsp;0.6873，p<sub>6</sub>(10&nbsp;000)&nbsp;=&nbsp;0.9952（注意：如果s&nbsp;&lt;&nbsp;m，则p<sub>m</sub>(s)&nbsp;=&nbsp;0）。</p>
<p>求p<sub>15</sub>(10<sup>9</sup>)，用0.abcdefg的形式给出你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 5</title>
    <url>/5/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-5"><a href="#Problem-5" class="headerlink" title="Problem 5"></a><a href="https://projecteuler.net/problem=5">Problem 5</a></h1><hr>
<h2 id="Smallest-Multiple"><a href="#Smallest-Multiple" class="headerlink" title="Smallest Multiple"></a><strong>Smallest Multiple</strong></h2><p>$2520$ is the smallest number that can be divided by each of the numbers from $1$ to $10$ without any remainder.</p>
<p>What is the smallest positive number that is evenly divisible by all of the numbers from $1$ to $20$?</p>
<hr>
<h2 id="最小公倍数"><a href="#最小公倍数" class="headerlink" title="最小公倍数"></a><strong>最小公倍数</strong></h2><p>$2520$是最小的能够被$1$到$10$整除的正数。</p>
<p>最小的能够被$1$到$20$整除的正数是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 50</title>
    <url>/50/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-50"><a href="#Problem-50" class="headerlink" title="Problem 50"></a><a href="https://projecteuler.net/problem=50">Problem 50</a></h1><hr>
<h2 id="Consecutive-Prime-Sum"><a href="#Consecutive-Prime-Sum" class="headerlink" title="Consecutive Prime Sum"></a><strong>Consecutive Prime Sum</strong></h2><p>The prime $41$, can be written as the sum of six consecutive primes:</p>
<p>$$41 = 2 + 3 + 5 + 7 + 11 + 13$$</p>
<p>This is the longest sum of consecutive primes that adds to a prime below one-hundred.</p>
<p>The longest sum of consecutive primes below one-thousand that adds to a prime, contains $21$ terms, and is equal to $953$.</p>
<p>Which prime, below one-million, can be written as the sum of the most consecutive primes?</p>
<hr>
<h2 id="连续素数的和"><a href="#连续素数的和" class="headerlink" title="连续素数的和"></a><strong>连续素数的和</strong></h2><p>素数$41$可以写成六个连续素数的和：</p>
<p>$$41 = 2 + 3 + 5 + 7 + 11 + 13$$</p>
<p>在小于一百的素数中，$41$能够被写成最多的连续素数的和。</p>
<p>在小于一千的素数中，$953$能够被写成最多的连续素数的和，共包含连续$21$个素数。</p>
<p>在小于一百万的素数中，哪个素数能够被写成最多的连续素数的和？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 500</title>
    <url>/500/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-500"><a href="#Problem-500" class="headerlink" title="Problem 500"></a><a href="https://projecteuler.net/problem=500">Problem 500</a></h1><hr>
<p><strong>Problem 500!!!</strong></p>
<p>The number of divisors of 120 is 16.<br>In fact 120 is the smallest number having 16 divisors.</p>
<p>Find the smallest number with 2<sup>500500</sup> divisors.<br>Give your answer modulo 500500507.</p>
<hr>
<p><strong>第500题！！！</strong></p>
<p>120的因数数目为16。<br>事实上120是最小的有16个因数的数。</p>
<p>找出最小的有2<sup>500500</sup>个因数的数。<br>给出这个数除以500500507的余数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 501</title>
    <url>/501/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-501"><a href="#Problem-501" class="headerlink" title="Problem 501"></a><a href="https://projecteuler.net/problem=501">Problem 501</a></h1><hr>
<p><strong>Eight Divisors</strong></p>
<p>The eight divisors of 24 are 1, 2, 3, 4, 6, 8, 12 and 24.<br>The ten numbers not exceeding 100 having exactly eight divisors are 24, 30, 40, 42, 54, 56, 66, 70, 78 and 88.<br>Let f(n) be the count of numbers not exceeding n with exactly eight divisors.<br>You are given f(100)&nbsp;=&nbsp;10, f(1000)&nbsp;=&nbsp;180 and f(10<sup>6</sup>)&nbsp;=&nbsp;224427.<br>Find f(10<sup>12</sup>).</p>
<hr>
<p><strong>八个约数</strong></p>
<p>24的八个约数是1、2、3、4、6、8、12和24。<br>在不超过100的数中有十个数恰好有八个约数，分别是24、30、40、42、54、56、66、70、78和88。<br>在不超过n的数中，记有f(n)个数恰好有八个约数。<br>已知f(100)&nbsp;=&nbsp;10，f(1000)&nbsp;=&nbsp;180以及f(10<sup>6</sup>)&nbsp;=&nbsp;224427。<br>求f(10<sup>12</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 502</title>
    <url>/502/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-502"><a href="#Problem-502" class="headerlink" title="Problem 502"></a><a href="https://projecteuler.net/problem=502">Problem 502</a></h1><hr>
<p><strong>Counting Castles</strong></p>
<p>We define a <i>block</i> to be a rectangle with a height of 1 and an integer-valued length. Let a <i>castle</i> be a configuration of stacked blocks.</p>
<p>Given a game grid that is w units wide and h units tall, a castle is generated according to the following rules:</p>
<ol>
<li>Blocks can be placed on top of other blocks as long as nothing sticks out past the edges or hangs out over open space.</li>
<li>All blocks are aligned/snapped to the grid.</li>
<li>Any two neighboring blocks on the same row have at least one unit of space between them.</li>
<li>The bottom row is occupied by a block of length w.</li>
<li>The maximum achieved height of the entire castle is exactly h.</li>
<li>The castle is made from an even number of blocks.</li>
</ol>
<p>The following is a sample castle for w=8 and h=5:</p>
<center><img src="/resources/images/0502_castles.png"></center>

<p>Let F(w,h) represent the number of valid castles, given grid parameters w and h.</p>
<p>For example, F(4,2) = 10, F(13,10) = 3729050610636, F(10,13) = 37959702514, and F(100,100) mod 1 000 000 007 = 841913936.</p>
<p>Find F(10<sup>12</sup>,100) + F(10000,10000) + F(100,10<sup>12</sup>) mod 1 000 000 007.</p>
<hr>
<p><strong>城堡计数</strong></p>
<p>我们将高为1、长为整数值的长方形成为<i>方块</i>，而将一系列按特定方式堆叠在一起的方块称为<i>城堡</i>。</p>
<p>在一个宽度为w、高度为h的方阵上，按照如下方式构造城堡</p>
<ol>
<li>方块堆叠过程中不允许悬空或部分处于方阵之外。</li>
<li>所有方块都与方阵对齐。</li>
<li>在同一行的两个不同方块之间至少有一单位的间隔。</li>
<li>最下方的一行必须包括一个长度为w的方块。</li>
<li>最高高度恰好等于h。</li>
<li>必须由偶数个方块构成。</li>
</ol>
<p>如下是w=8且h=5时的一个城堡：</p>
<center><img src="/resources/images/0502_castles.png"></center>

<p>给定方阵的参数w和h，记所有有效的城堡数目为F(w,h)。</p>
<p>例如，F(4,2) = 10，F(13,10) = 3729050610636，F(10,13) = 37959702514，以及F(100,100) mod 1 000 000 007 = 841913936。</p>
<p>求F(10<sup>12</sup>,100) + F(10000,10000) + F(100,10<sup>12</sup>) mod 1 000 000 007。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 503</title>
    <url>/503/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-503"><a href="#Problem-503" class="headerlink" title="Problem 503"></a><a href="https://projecteuler.net/problem=503">Problem 503</a></h1><hr>
<p><strong>Compromise or persist</strong></p>
<p>Alice is playing a game with n cards numbered 1 to n.</p>
<p>A game consists of iterations of the following steps.<br>(1) Alice picks one of the cards at random.<br>(2) Alice cannot see the number on it. Instead, Bob, one of her friends, sees the number and tells Alice how many previously-seen numbers are bigger than the number which he is seeing.<br>(3) Alice can end or continue the game. If she decides to end, the number becomes her score. If she decides to continue, the card is removed from the game and she returns to (1). If there is no card left, she is forced to end the game.</p>
<p>Let F(n) be the Alice’s expected score if she takes the optimized strategy to <strong>minimize</strong> her score.</p>
<p>For example, F(3) = 5/3. At the first iteration, she should continue the game. At the second iteration, she should end the game if Bob says that one previously-seen number is bigger than the number which he is seeing, otherwise she should continue the game.</p>
<p>We can also verify that F(4) = 15/8 and F(10) ≈ 2.5579365079.</p>
<p>Find F(10<sup>6</sup>). Give your answer rounded to 10 decimal places behind the decimal point.</p>
<hr>
<p><strong>妥协还是坚持</strong></p>
<p>爱丽丝在玩一个用标有1至n的n张卡片进行的游戏。</p>
<p>这个游戏不断重复进行以下步骤：<br>（1）爱丽丝随机地选择一张卡片。<br>（2）爱丽丝看不到这张卡片上的数，而她的一个朋友鲍勃可以看到，并告诉爱丽丝，在他之前看到过的数中，有多少个比这张卡片上的数要大。<br>（3）爱丽丝可以选择结束或继续游戏。如果她选择结束游戏，这个数将成为她的得分。如果她选择继续游戏，这张卡片从游戏中移除，并回到（1）。当游戏中没有卡片时，爱丽丝必须结束游戏。</p>
<p>记F(n)是爱丽丝采取<strong>最小化</strong>得分的最优策略时她的期望得分。</p>
<p>例如，F(3) = 5/3。在第一轮，她应当选择继续游戏，在第二轮，如果鲍勃告诉她前一个数比这一个数要大，她应选择结束游戏，否则她应选择继续游戏。</p>
<p>同样可以验证F(4) = 15/8以及F(10) ≈ 2.5579365079。</p>
<p>求F(10<sup>6</sup>)，并将其四舍五入到小数点后10位小数作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 504</title>
    <url>/504/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-504"><a href="#Problem-504" class="headerlink" title="Problem 504"></a><a href="https://projecteuler.net/problem=504">Problem 504</a></h1><hr>
<p><strong>Square on the Inside</strong></p>
<p>Let ABCD be a quadrilateral whose vertices are lattice points lying on the coordinate axes as follows:</p>
<p>A(a, 0), B(0, b), C(-c, 0), D(0, -d), where 1 ≤ a, b, c, d ≤ m and a, b, c, d, m are integers.</p>
<p>It can be shown that for m = 4 there are exactly 256 valid ways to construct ABCD. Of these 256 quadrilaterals, 42 of them <u>strictly</u> contain a square number of lattice points.</p>
<p>How many quadrilaterals ABCD strictly contain a square number of lattice points for m = 100?</p>
<hr>
<p><strong>平方数个内部格点</strong></p>
<p>四边形ABCD的四个顶点都是坐标轴上的格点，其坐标分别是：</p>
<p>A(a, 0), B(0, b), C(-c, 0), D(0, -d)，其中1 ≤ a, b, c, d ≤ m，且a, b, c, d, m均为整数。</p>
<p>可以验证，对于m = 4，有256种构造ABCD的方式，在这256个四边形中，有42个<u>严格地</u>包含了平方数个格点在其内部。</p>
<p>对于m = 100，有多少个四边形ABCD严格地包含了平方数个格点在其内部？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 505</title>
    <url>/505/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-505"><a href="#Problem-505" class="headerlink" title="Problem 505"></a><a href="https://projecteuler.net/problem=505">Problem 505</a></h1><hr>
<p><strong>Bidirectional Recurrence</strong></p>
<p>Let:<br>$x(0)=0$<br>$x(1)=1$<br>$x(2k)=(3x(k)+2x(\lfloor \frac k 2 \rfloor)) \text{ mod } 2^{60} \text{ for } k \ge 1 \text {, where } \lfloor \text { } \rfloor \text { is the floor function}$<br>$x(2k+1)=(2x(k)+3x(\lfloor \frac k 2 \rfloor)) \text{ mod } 2^{60} \text{ for } k \ge 1$<br>$y_n(k)=x(k) \text{ if } k \ge n$<br>$y_n(k)=2^{60} - 1 - max(y_n(2k),y_n(2k+1)) \text{ if } k &lt; n$<br>$A(n)=y_n(1)$</p>
<p>You are given:<br>$x(2)=3$<br>$x(3)=2$<br>$x(4)=11$<br>$y_4(4)=11$<br>$y_4(3)=2^{60}-9$<br>$y_4(2)=2^{60}-12$<br>$y_4(1)=A(4)=8$<br>$A(10)=2^{60}-34$<br>$A(10^3)=101881$</p>
<p>Find $A(10^{12})$.</p>
<hr>
<p><strong>双向递归</strong></p>
<p>记：<br>$x(0)=0$<br>$x(1)=1$<br>$x(2k)=(3x(k)+2x(\lfloor \frac k 2 \rfloor)) \text{ mod } 2^{60} \text{ 对于 } k \ge 1 \text {，其中} \lfloor \text { } \rfloor \text {是下取整函数}$<br>$x(2k+1)=(2x(k)+3x(\lfloor \frac k 2 \rfloor)) \text{ mod } 2^{60} \text{ 对于 } k \ge 1$<br>$y_n(k)=x(k) \text{ if } k \ge n$<br>$y_n(k)=2^{60} - 1 - max(y_n(2k),y_n(2k+1)) \text{ if } k &lt; n$<br>$A(n)=y_n(1)$</p>
<p>已知：<br>$x(2)=3$<br>$x(3)=2$<br>$x(4)=11$<br>$y_4(4)=11$<br>$y_4(3)=2^{60}-9$<br>$y_4(2)=2^{60}-12$<br>$y_4(1)=A(4)=8$<br>$A(10)=2^{60}-34$<br>$A(10^3)=101881$</p>
<p>求$A(10^{12})$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 506</title>
    <url>/506/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-506"><a href="#Problem-506" class="headerlink" title="Problem 506"></a><a href="https://projecteuler.net/problem=506">Problem 506</a></h1><hr>
<p><strong>Clock sequence</strong></p>
<p>Consider the infinite repeating sequence of digits:</p>
<center>1234321234321234321...</center>

<p>Amazingly, you can break this sequence of digits into a sequence of integers such that the sum of the digits in the n’th value is n.</p>
<p>The sequence goes as follows:</p>
<center>1, 2, 3, 4, 32, 123, 43, 2123, 432, 1234, 32123, ...</center>

<p>Let v<sub>n</sub> be the n’th value in this sequence. For example, v<sub>2</sub>&nbsp;=&nbsp;2, v<sub>5</sub>&nbsp;=&nbsp;32 and v<sub>11</sub>&nbsp;=&nbsp;32123.</p>
<p>Let S(n) be v<sub>1</sub>&nbsp;+&nbsp;v<sub>2</sub>&nbsp;+&nbsp;…&nbsp;+&nbsp;v<sub>n</sub>. For example, S(11)&nbsp;=&nbsp;36120, and S(1000) mod 123454321 = 18232686.</p>
<p>Find S(10<sup>14</sup>)&nbsp;mod&nbsp;123454321.</p>
<hr>
<p><strong>钟摆序列</strong><br>考虑下面这个无限重复的数字序列：</p>
<center>1234321234321234321...</center>

<p>神奇的是，你可以将这个序列分解成一个整数的序列，使得第n个整数的各位数字之和恰好是n。</p>
<p>这个整数序列如下所示：</p>
<center>1, 2, 3, 4, 32, 123, 43, 2123, 432, 1234, 32123, ...</center>

<p>记v<sub>n</sub>是这个整数序列的第n个整数，例如，v<sub>2</sub>&nbsp;=&nbsp;2，v<sub>5</sub>&nbsp;=&nbsp;32，以及v<sub>11</sub>&nbsp;=&nbsp;32123。</p>
<p>记S(n)为v<sub>1</sub>&nbsp;+&nbsp;v<sub>2</sub>&nbsp;+&nbsp;…&nbsp;+&nbsp;v<sub>n</sub>。例如，S(11)&nbsp;=&nbsp;36120，以及S(1000)&nbsp;mod&nbsp;123454321&nbsp;=&nbsp;18232686。</p>
<p>求S(10<sup>14</sup>)&nbsp;mod&nbsp;123454321。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 507</title>
    <url>/507/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-507"><a href="#Problem-507" class="headerlink" title="Problem 507"></a><a href="https://projecteuler.net/problem=507">Problem 507</a></h1><hr>
<p><strong>Shortest Lattice Vector</strong></p>
<p>Let $t_n$ be the tribonacci numbers defined as:<br>$t_0=t_1=0$;<br>$t_2=1$;<br>$t_n=t_{n-1}+t_{n-2}+t_{n-3}$ for $n≥3$<br>and let $r_n=t_n \text{ mod } 10^7$.</p>
<p>For each pair of Vectors $V_n=(v_1,v_2,v_3)$ and $W_n=(w_1,w_2,w_3)$ with<br>$v_1=r_{12n-11}-r_{12n-10},v_2=r_{12n-9}+r_{12n-8},v_3=r_{12n-7}·r_{12n-6}$ and<br>$w_1=r_{12n-5}-r_{12n-4},w_2=r_{12n-3}+r_{12n-2},w_3=r_{12n-1}·r_{12n}$<br>we define $S(n)$ as the minimal value of the manhattan length of the vector $D=k·V_n+l·W_n$ measured as<br>$|k·v_1+l·w_1|+|k·v_2+l·w_2|+|k·v_3+l·w_3|$<br>for any integers $k$ and $l$ with $(k,l)≠(0,0)$.</p>
<p>The first vector pair is (-1, 3, 28), (-11, 125, 40826).<br>You are given that $S(1)=32$ and $\Sigma^{10}_{n=1}S(n)=130762273722$.</p>
<p>Find $\Sigma^{20000000}_{n=1}S(n)$.</p>
<hr>
<p><strong>最短向量</strong></p>
<p>记如下数列$t_n$为<strong>三阶斐波那契</strong>数列：<br>$t_0=t_1=0$；<br>$t_2=1$；<br>$t_n=t_{n-1}+t_{n-2}+t_{n-3}$ for $n≥3$<br>并记$r_n=t_n \text{ mod } 10^7$。</p>
<p>向量$V_n=(v_1,v_2,v_3)$和$W_n=(w_1,w_2,w_3)$分别满足<br>$v_1=r_{12n-11}-r_{12n-10},v_2=r_{12n-9}+r_{12n-8},v_3=r_{12n-7}·r_{12n-6}$和<br>$w_1=r_{12n-5}-r_{12n-4},w_2=r_{12n-3}+r_{12n-2},w_3=r_{12n-1}·r_{12n}$。<br>向量$D=k·V_n+l·W_n$的曼哈顿长度的计算方式为<br>$|k·v_1+l·w_1|+|k·v_2+l·w_2|+|k·v_3+l·w_3|$。<br>对于所有的整数$k$和$l$且$(k,l)≠(0,0)$，我们记$S(n)$为向量$D$的最小曼哈顿长度。</p>
<p>第一对向量$V_1$和$W_1$分别是(-1, 3, 28)和(-11, 125, 40826)。<br>已知$S(1)=32$，以及$\Sigma^{10}_{n=1}S(n)=130762273722$。</p>
<p>求$\Sigma^{20000000}_{n=1}S(n)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 508</title>
    <url>/508/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-508"><a href="#Problem-508" class="headerlink" title="Problem 508"></a><a href="https://projecteuler.net/problem=508">Problem 508</a></h1><hr>
<p><strong>Integers in base i-1</strong></p>
<p>Consider the Gaussian integer i-1. A <strong>base i-1 representation</strong> of a Gaussian integer a+bi is a finite sequence of digits d<sub>n-1</sub>d<sub>n-2</sub>…d<sub>1</sub>d<sub>0</sub> such that:</p>
<ul>
<li>a+bi = d<sub>n-1</sub>(i-1)<sup>n-1</sup> + d<sub>n-2</sub>(i-1)<sup>n-2</sup> + … + d<sub>1</sub>(i-1) + d<sub>0</sub></li>
<li>Each d<sub>k</sub> is in {0,1}</li>
<li>There are no leading zeroes, i.e. d<sub>n-1</sub> ≠ 0, unless a+bi is itself 0</li>
</ul>
<p>Here are base i-1 representations of a few Gaussian integers:</p>
<p>11+24i → 111010110001101<br>24-11i → 110010110011<br>8+0i → 111000000<br>-5+0i → 11001101<br>0+0i → 0</p>
<p>Remarkably, every Gaussian integer has a unique base i-1 representation!</p>
<p>Define f(a+bi) as the number of 1s in the unique base i-1 representation of a+bi. For example, f(11+24i) = 9 and f(24-11i) = 7.</p>
<p>Define B(L) as the sum of f(a+bi) for all integers a, b such that |a| ≤ L and |b| ≤ L. For example, B(500) = 10795060.</p>
<p>Find B(10<sup>15</sup>) mod 1 000 000 007.</p>
<hr>
<p><strong>i-1进制的整数</strong></p>
<p>考虑高斯整数i-1，我们定义任意高斯整数a+bi的<strong>i-1进制表示</strong>为一个有限的数字序列d<sub>n-1</sub>d<sub>n-2</sub>…d<sub>1</sub>d<sub>0</sub>满足：</p>
<ul>
<li>a+bi = d<sub>n-1</sub>(i-1)<sup>n-1</sup> + d<sub>n-2</sub>(i-1)<sup>n-2</sup> + … + d<sub>1</sub>(i-1) + d<sub>0</sub></li>
<li>每个d<sub>k</sub>都在集合{0,1}中</li>
<li>没有前导零，也就是说，除非a+bi本身为0，否则d<sub>n-1</sub> ≠ 0</li>
</ul>
<p>以下是一些高斯整数的i-1进制表示：</p>
<p>11+24i → 111010110001101<br>24-11i → 110010110011<br>8+0i → 111000000<br>-5+0i → 11001101<br>0+0i → 0</p>
<p>值得注意的是，每个高斯整数都有唯一的i-1进制表示！</p>
<p>定义f(a+bi)为高斯整数a+bi的i-1进制表示中1的个数。例如，f(11+24i) = 9，以及f(24-11i) = 7。</p>
<p>对于所有满足|a| ≤ L和|b| ≤ L的整数a和b，定义B(L)为所有f(a+bi)的和。例如，B(500) = 10795060。</p>
<p>求B(10<sup>15</sup>) mod 1 000 000 007。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 509</title>
    <url>/509/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-509"><a href="#Problem-509" class="headerlink" title="Problem 509"></a><a href="https://projecteuler.net/problem=509">Problem 509</a></h1><hr>
<p><strong>Divisor Nim</strong></p>
<p>Anton and Bertrand love to play three pile Nim.<br>However, after a lot of games of Nim they got bored and changed the rules somewhat.<br>They may only take a number of stones from a pile that is a <dfn title="a proper divisor of n is a divisor of n smaller than n">proper divisor</dfn> of the number of stones present in the pile.<br>E.g. if a pile at a certain moment contains 24 stones they may take only 1,2,3,4,6,8 or 12 stones from that pile.<br>So if a pile contains one stone they can’t take the last stone from it as 1 isn’t a proper divisor of 1.<br>The first player that can’t make a valid move loses the game.<br>Of course both Anton and Bertrand play optimally.</p>
<p>The triple (a,b,c) indicates the number of stones in the three piles.<br>Let S(n) be the number of winning positions for the next player for 1 ≤ a, b, c ≤ n.<br>S(10) = 692 and S(100) = 735494.<br>Find S(123456787654321) modulo 1234567890.</p>
<hr>
<p><strong>约数取石子游戏</strong></p>
<p>安东和伯特兰很喜欢玩三堆取石子游戏。<br>然而，在玩了许多次之后，他们觉得过于无聊，打算修改一下游戏规则。<br>他们约定，从一堆中取出的石子数目，必须是这一堆石子数目的<dfn title="n的真约数指所有小于n的约数">真约数</dfn>。<br>例如，如果其中一堆目前有24颗石子，他们就只能从中取出1、2、3、4、6、8或12颗石子。<br>因此，如果一堆中只剩一颗石子，那么他们不能将这颗石子取走，因为1不是1的真约数。<br>谁先无法再取走石子谁就输了。<br>当然，安东和伯特兰两个人都会采取最佳策略。</p>
<p>三元组(a,b,c)表示这三堆石子分别的数目。<br>对于所有1 ≤ a, b, c ≤ n，记S(n)为所有必胜态的数目。<br>已知S(10) = 692以及S(100) = 735494。<br>求S(123456787654321) modulo 1234567890。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 51</title>
    <url>/51/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-51"><a href="#Problem-51" class="headerlink" title="Problem 51"></a><a href="https://projecteuler.net/problem=51">Problem 51</a></h1><hr>
<h2 id="Prime-Digit-Replacements"><a href="#Prime-Digit-Replacements" class="headerlink" title="Prime Digit Replacements"></a><strong>Prime Digit Replacements</strong></h2><p>By replacing the $1$<sup>st</sup> digit of the $2$-digit number $\text{*}3$, it turns out that six of the nine possible values: $13$, $23$, $43$, $53$, $73$, and $83$, are all prime.</p>
<p>By replacing the $3$<sup>rd</sup> and $4$<sup>th</sup> digits of $56\text{**}3$ with the same digit, this $5$-digit number is the first example having seven primes among the ten generated numbers, yielding the family: $56003$, $56113$, $56333$, $56443$, $56663$, $56773$, and $56993$. Consequently $56003$, being the first member of this family, is the smallest prime with this property.</p>
<p>Find the smallest prime which, by replacing part of the number (not necessarily adjacent digits) with the same digit, is part of an eight prime value family.</p>
<hr>
<h2 id="素数数字替换"><a href="#素数数字替换" class="headerlink" title="素数数字替换"></a><strong>素数数字替换</strong></h2><p>将两位数$\text{*}3$的第一位数字替换为任意数字，在九个可能值中有六个是素数：$13$、$23$、$43$、$53$、$73$和$83$。</p>
<p>将五位数$56\text{**}3$的第三和第四位数字替换为相同的任意数字，在十个可能值中有七个是素数，这也是同类例子中最小的一个。这些素数分别是：$56003$、$56113$、$56333$、$56443$、$56663$、$56773$和$56993$。$56003$作为其中最小的数，也就是最小的满足这个性质的素数。</p>
<p>通过将部分数字（不一定相邻）替换为相同的任意数字，有时能够得到八个素数，求满足这一性质的最小素数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 510</title>
    <url>/510/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-510"><a href="#Problem-510" class="headerlink" title="Problem 510"></a><a href="https://projecteuler.net/problem=510">Problem 510</a></h1><hr>
<p><strong>Tangent Circles</strong></p>
<p>Circles A and B are tangent to each other and to line L at three distinct points.<br>Circle C is inside the space between A, B and L, and tangent to all three.</p>
<p>Let r<sub>A</sub>, r<sub>B</sub> and r<sub>C</sub> be the radii of A, B and C respectively.</p>
<center><img src="/resources/images/0510_tangent_circles.png"></center>

<p>Let S(n)&nbsp;=&nbsp;Σ&nbsp;r<sub>A</sub>&nbsp;+&nbsp;r<sub>B</sub>&nbsp;+&nbsp;r<sub>C</sub>, for 0&nbsp;&lt;&nbsp;r<sub>A</sub>&nbsp;≤&nbsp;r<sub>B</sub>&nbsp;≤&nbsp;n where r<sub>A</sub>, r<sub>B</sub> and r<sub>C</sub> are integers.</p>
<p>The only solution for 0&nbsp;&lt;&nbsp;r<sub>A</sub>&nbsp;≤&nbsp;r<sub>B</sub>&nbsp;≤&nbsp;5 is r<sub>A</sub>&nbsp;=&nbsp;4, r<sub>B</sub>&nbsp;=&nbsp;4 and r<sub>C</sub>&nbsp;=&nbsp;1, so S(5)&nbsp;=&nbsp;4&nbsp;+&nbsp;4&nbsp;+&nbsp;1&nbsp;=&nbsp;9.</p>
<p>You are also given S(100)&nbsp;=&nbsp;3072.<br>Find S(10<sup>9</sup>).</p>
<hr>
<p><strong>相切的圆</strong></p>
<p>圆A和圆B彼此相切，同时和直线L也分别相切，三个切点互不相同。<br>圆C在A、B和L之间，且与这三者都相切。</p>
<p>分别记圆A、B和C的半径为r<sub>A</sub>、r<sub>B</sub>和r<sub>C</sub>。</p>
<center><img src="/resources/images/0510_tangent_circles.png"></center>

<p>对于所有满足0&nbsp;&lt;&nbsp;r<sub>A</sub>&nbsp;≤&nbsp;r<sub>B</sub>&nbsp;≤&nbsp;n，且r<sub>A</sub>、r<sub>B</sub>和r<sub>C</sub>均为整数的可行解，我们定义S(n)&nbsp;=&nbsp;Σ&nbsp;r<sub>A</sub>&nbsp;+&nbsp;r<sub>B</sub>&nbsp;+&nbsp;r<sub>C</sub>。</p>
<p>对于0&nbsp;&lt;&nbsp;r<sub>A</sub>&nbsp;≤&nbsp;r<sub>B</sub>&nbsp;≤&nbsp;5，唯一解是r<sub>A</sub>&nbsp;=&nbsp;4，r<sub>B</sub>&nbsp;=&nbsp;4，r<sub>C</sub>&nbsp;=&nbsp;1，所以S(5)&nbsp;=&nbsp;4&nbsp;+&nbsp;4&nbsp;+&nbsp;1&nbsp;=&nbsp;9。</p>
<p>此外还已知S(100)&nbsp;=&nbsp;3072。<br>求S(10<sup>9</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 511</title>
    <url>/511/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-511"><a href="#Problem-511" class="headerlink" title="Problem 511"></a><a href="https://projecteuler.net/problem=511">Problem 511</a></h1><hr>
<p><strong>Sequences with nice divisibility properties</strong></p>
<p>Let Seq(n,k) be the number of positive-integer sequences {a<sub>i</sub>}<sub>1≤i≤n</sub> of length n such that:</p>
<ul>
<li>n is divisible by a<sub>i</sub> for 1&nbsp;≤&nbsp;i&nbsp;≤&nbsp;n, and</li>
<li>n + a<sub>1</sub> + a<sub>2</sub> + … + a<sub>n</sub> is divisible by k.</li>
</ul>
<p>Examples:</p>
<p>Seq(3,4) = 4, and the 4 sequences are:<br>{1, 1, 3}<br>{1, 3, 1}<br>{3, 1, 1}<br>{3, 3, 3}</p>
<p>Seq(4,11) = 8, and the 8 sequences are:<br>{1, 1, 1, 4}<br>{1, 1, 4, 1}<br>{1, 4, 1, 1}<br>{4, 1, 1, 1}<br>{2, 2, 2, 1}<br>{2, 2, 1, 2}<br>{2, 1, 2, 2}<br>{1, 2, 2, 2}</p>
<p>The last nine digits of Seq(1111,24) are 840643584.</p>
<p>Find the last nine digits of Seq(1234567898765,4321).</p>
<hr>
<p><strong>拥有良好可整除性的数列</strong></p>
<p>记Seq(n,k)是所有满足下列条件的长为n的正整数序列{a<sub>i</sub>}<sub>1≤i≤n</sub>的数目：</p>
<ul>
<li>对于所有1&nbsp;≤&nbsp;i&nbsp;≤&nbsp;n，n能够被a<sub>i</sub>整除，且</li>
<li>n + a<sub>1</sub> + a<sub>2</sub> + … + a<sub>n</sub>能被k整除。</li>
</ul>
<p>举例如下：</p>
<p>Seq(3,4) = 4，这4个数列分别是：<br>{1, 1, 3}<br>{1, 3, 1}<br>{3, 1, 1}<br>{3, 3, 3}</p>
<p>Seq(4,11) = 8，这8个数列分别是：<br>{1, 1, 1, 4}<br>{1, 1, 4, 1}<br>{1, 4, 1, 1}<br>{4, 1, 1, 1}<br>{2, 2, 2, 1}<br>{2, 2, 1, 2}<br>{2, 1, 2, 2}<br>{1, 2, 2, 2}</p>
<p>Seq(1111,24)的最后九位数字是840643584。</p>
<p>求Seq(1234567898765,4321)的最后九位数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 512</title>
    <url>/512/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-512"><a href="#Problem-512" class="headerlink" title="Problem 512"></a><a href="https://projecteuler.net/problem=512">Problem 512</a></h1><hr>
<p><strong>Sums of totients of powers</strong><br>Let $\phi(n)$ be Euler’s totient function.</p>
<p>Let $f(n)=(\Sigma^n_{i=1}\phi(n^i)) \text{ mod } (n+1)$.</p>
<p>Let $g(n)=\Sigma^n_{i=1}f(i)$.</p>
<p>$g(100)=2007$.</p>
<p>Find $g(5 \times 10^8)$.</p>
<hr>
<p><strong>幂的欧拉总计函数和</strong></p>
<p>记$\phi(n)$为欧拉总计函数。</p>
<p>记$f(n)=(\Sigma^n_{i=1}\phi(n^i)) \text{ mod } (n+1)$。</p>
<p>记$g(n)=\Sigma^n_{i=1}f(i)$。</p>
<p>已知$g(100)=2007$。</p>
<p>求$g(5 \times 10^8)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 513</title>
    <url>/513/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-513"><a href="#Problem-513" class="headerlink" title="Problem 513"></a><a href="https://projecteuler.net/problem=513">Problem 513</a></h1><hr>
<p><strong>Integral median</strong></p>
<p>ABC is an integral sided triangle with sides a≤b≤c.<br>m<sub>c</sub> is the median connecting C and the midpoint of AB.<br>F(n) is the number of such triangles with  c≤n for which m<sub>c</sub> has integral length as well.<br>F(10)=3 and F(50)=165.</p>
<p>Find F(100000).</p>
<hr>
<p><strong>整数长度的中线</strong></p>
<p>三角形ABC是一个三边长a≤b≤c均为整数的三角形。<br>m<sub>c</sub>是连接C与AB边中点的中线。<br>若同时还满足c≤n且m<sub>c</sub>长度也为整数，记这样的三角形总数为F(n)。<br>已知F(10)=3以及F(50)=165。</p>
<p>求F(100000)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 514</title>
    <url>/514/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-514"><a href="#Problem-514" class="headerlink" title="Problem 514"></a><a href="https://projecteuler.net/problem=514">Problem 514</a></h1><hr>
<p><strong>Geoboard Shapes</strong></p>
<p>A <strong>geoboard</strong> (of order N) is a square board with equally-spaced pins protruding from the surface, representing an integer point lattice for coordinates 0 ≤ x,y ≤ N.</p>
<p>John begins with a pinless geoboard. Each position on the board is a hole that can be filled with a pin. John decides to generate a random number between 1 and N+1 (inclusive) for each hole in the geoboard. If the random number is equal to 1 for a given hole, then a pin is placed in that hole.</p>
<p>After John is finished generating numbers for all (N+1)<sup>2</sup> holes and placing any/all corresponding pins, he wraps a tight rubberband around the entire group of pins protruding from the board. Let S represent the shape that is formed. S can also be defined as the smallest convex shape that contains all the pins.</p>
<center><img src="/resources/images/0514_geoboard.png"></center>

<p>The above image depicts a sample layout for N = 4. The green markers indicate positions where pins have been placed, and the blue lines collectively represent the rubberband. For this particular arrangement, S has an area of 6. If there are fewer than three pins on the board (or if all pins are collinear), S can be assumed to have zero area.</p>
<p>Let E(N) be the expected area of S given a geoboard of order N. For example, E(1) = 0.18750, E(2) = 0.94335, and E(10) = 55.03013 when rounded to five decimal places each.</p>
<p>Calculate E(100) rounded to five decimal places.</p>
<hr>
<p><strong>几何板图形</strong></p>
<p>（N阶）<strong>几何板</strong>是一块方形板，板上等间距地插有大头针，分别代表坐标为0 ≤ x,y ≤ N的格点。</p>
<p>约翰拿出一块没有插大头针的几何板，板上的格点处均留有能够插一根大头针的小孔。对于每一个格点，约翰随机指定一个1至N+1（上下限均包含）的数，如果这个随机数恰好等于1，那么就在这个格点处的小孔内插一根大头针。</p>
<p>当约翰对这(N+1)<sup>2</sup>个位置都指定一个随机数，且把所有应该插上的大头针都插上之后，他拿一根橡皮筋圈住了所有板上的大头针。记S为橡皮筋此时构成的形状，S同时也是包含所有大头针的最小凸多边形。</p>
<center><img src="/resources/images/0514_geoboard.png"></center>

<p>上面这张图描绘了N = 4时的一个布局样例。绿色的标记表示有大头针的位置，蓝色的线表示橡皮筋。在这个布局中，S的面积为6。如果板上的大头针数目少于三个（或者所有的大头针在一条直线上），S的面积就是0。</p>
<p>记E(N)是在N阶几何板上围出的S的期望面积。例如，当四舍五入保留五位小数时，E(1) = 0.18750，E(2) = 0.94335，以及E(10) = 55.03013。</p>
<p>求E(100)并四舍五入保留五位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 515</title>
    <url>/515/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-515"><a href="#Problem-515" class="headerlink" title="Problem 515"></a><a href="https://projecteuler.net/problem=515">Problem 515</a></h1><hr>
<p><strong>Dissonant Numbers</strong></p>
<p>Let d(p,n,0) be the multiplicative inverse of n modulo prime p, defined as n × d(p,n,0) = 1 mod p.</p>
<p>Let d(p,n,k) = $\Sigma^n_{i=1}$d(p,i,k?1) for k ≥ 1.</p>
<p>Let D(a,b,k) = $\Sigma$(d(p,p-1,k) mod p) for all primes a ≤ p &lt; a + b.</p>
<p>You are given:</p>
<ul>
<li>D(101,1,10) = 45</li>
<li>D(10<sup>3</sup>,10<sup>2</sup>,10<sup>2</sup>) = 8334</li>
<li>D(10<sup>6</sup>,10<sup>3</sup>,10<sup>3</sup>) = 38162302</li>
</ul>
<p>Find D(10<sup>9</sup>,10<sup>5</sup>,10<sup>5</sup>).</p>
<hr>
<p><strong>不和谐的数</strong></p>
<p>记d(p,n,0)是n在模素数p同余下的乘法逆元，即n × d(p,n,0) = 1 mod p。</p>
<p>记d(p,n,k) = $\Sigma^n_{i=1}$d(p,i,k?1)，其中k ≥ 1。</p>
<p>记D(a,b,k) = $\Sigma$(d(p,p-1,k) mod p)，对于所有的素数a ≤ p &lt; a + b。</p>
<p>已知：</p>
<ul>
<li>D(101,1,10) = 45</li>
<li>D(10<sup>3</sup>,10<sup>2</sup>,10<sup>2</sup>) = 8334</li>
<li>D(10<sup>6</sup>,10<sup>3</sup>,10<sup>3</sup>) = 38162302</li>
</ul>
<p>求D(10<sup>9</sup>,10<sup>5</sup>,10<sup>5</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 517</title>
    <url>/517/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-517"><a href="#Problem-517" class="headerlink" title="Problem 517"></a><a href="https://projecteuler.net/problem=517">Problem 517</a></h1><hr>
<p><strong>A real recursion</strong></p>
<p>For every real number $a&gt;1$ is given the sequence $g_a$ by:</p>
<p>$g_a(x)=1$ for $x&lt;a$</p>
<p>$g_a(x)=g_a(x-1)+g_a(x-a)$ for $x\ge a$</p>
<p>$G(n)=g_{\sqrt{n}}(n)$</p>
<p>$G(90)=7564511$.</p>
<p>Find $\Sigma G(p)$ for $p$ prime and $10000000&lt;p&lt;10010000$</p>
<p>Give your answer modulo $1000000007$.</p>
<hr>
<p><strong>实数递归</strong></p>
<p>对于任意实数$a&gt;1$，我们可以根据以下规则写出序列$g_a$：</p>
<p>若$x&lt;a$，则$g_a(x)=1$ </p>
<p>若$x\ge a$，则$g_a(x)=g_a(x-1)+g_a(x-a)$</p>
<p>$G(n)=g_{\sqrt{n}}(n)$</p>
<p>已知$G(90)=7564511$。</p>
<p>对于所有素数$10000000&lt;p&lt;10010000$，求$\Sigma G(p)$。</p>
<p>将其模$1000000007$取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 516</title>
    <url>/516/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-516"><a href="#Problem-516" class="headerlink" title="Problem 516"></a><a href="https://projecteuler.net/problem=516">Problem 516</a></h1><hr>
<p><strong>5-smooth totients</strong></p>
<p>5-smooth numbers are numbers whose largest prime factor doesn’t exceed 5.</p>
<p>5-smooth numbers are also called Hamming numbers.</p>
<p>Let S(L) be the sum of the numbers n not exceeding L such that Euler’s totient function φ(n) is a Hamming number.</p>
<p>S(100)=3728.</p>
<p>Find S(10<sup>12</sup>). Give your answer modulo 2<sup>32</sup>.</p>
<hr>
<p><strong>5-光滑总计函数</strong></p>
<p>5-光滑数是指最大质因数不超过5的数。</p>
<p>5-光滑数也被称为汉明数。</p>
<p>若数n不超过L，且欧拉总计函数φ(n)是汉明数，记所有这样的数之和为S(L)。</p>
<p>已知S(100)=3728。</p>
<p>求S(10<sup>12</sup>)，将其模2<sup>32</sup>取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 518</title>
    <url>/518/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-518"><a href="#Problem-518" class="headerlink" title="Problem 518"></a><a href="https://projecteuler.net/problem=518">Problem 518</a></h1><hr>
<p><strong>Prime triples and geometric sequences</strong></p>
<p>Let S(n) = a+b+c over all triples (a,b,c) such that:</p>
<ul>
<li>a, b, and c are prime numbers.</li>
<li>a &lt; b &lt; c &lt; n.</li>
<li>a+1, b+1, and c+1 form a <strong>geometric sequence</strong>.</li>
</ul>
<p>For example, S(100) = 1035 with the following triples: </p>
<p>(2, 5, 11), (2, 11, 47), (5, 11, 23), (5, 17, 53), (7, 11, 17), (7, 23, 71), (11, 23, 47), (17, 23, 31), (17, 41, 97), (31, 47, 71), (71, 83, 97)</p>
<p>Find S(10<sup>8</sup>).</p>
<hr>
<p><strong>素数三元组和等比数列</strong></p>
<p>对于所有满足下列条件的三元组(a,b,c)，记S(n) = a+b+c之和：</p>
<ul>
<li>a、b、c均为素数。</li>
<li>a &lt; b &lt; c &lt; n。</li>
<li>a+1、b+1、c+1构成<strong>等比数列</strong>。</li>
</ul>
<p>例如，由于存在下列三元组，S(100) = 1035：</p>
<p>(2, 5, 11), (2, 11, 47), (5, 11, 23), (5, 17, 53), (7, 11, 17), (7, 23, 71), (11, 23, 47), (17, 23, 31), (17, 41, 97), (31, 47, 71), (71, 83, 97)</p>
<p>求S(10<sup>8</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 519</title>
    <url>/519/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-519"><a href="#Problem-519" class="headerlink" title="Problem 519"></a><a href="https://projecteuler.net/problem=519">Problem 519</a></h1><hr>
<p><strong>Tricolored Coin Fountains</strong></p>
<p>An arrangement of coins in one or more rows with the bottom row being a block without gaps and every coin in a higher row touching exactly two coins in the row below is called a <strong>fountain</strong> of coins. Let f(n) be the number of possible fountains with n coins. For 4 coins there are three possible arrangements:</p>
<center><img src="/resources/images/0519_coin_fountain.png"></center>

<p>Therefore f(4)&nbsp;=&nbsp;3 while f(10)&nbsp;=&nbsp;78.</p>
<p>Let T(n) be the number of all possible colorings with three colors for all f(n) different fountains with n coins, given the condition that no two touching coins have the same color. Below you see the possible colorings for one of the three valid fountains for 4 coins:</p>
<center><img src="/resources/images/0519_tricolored_coin_fountain.png"></center>

<p>You are given that T(4)&nbsp;=&nbsp;48 and T(10)&nbsp;=&nbsp;17760.</p>
<p>Find the last 9 digits of T(20000).</p>
<hr>
<p><strong>三色硬币喷泉</strong></p>
<p>将硬币排成一行或多行，最下面一行为一整块没有间隙，上一行的每一枚硬币恰好和下一行的两枚硬币接触，这样的排列方式称为硬币<strong>喷泉</strong>。记f(n)是用n枚硬币所能组成的喷泉数目。对于4枚硬币，有三种可能的排列方式：</p>
<center><img src="/resources/images/0519_coin_fountain.png"></center>

<p>因此f(4)&nbsp;=&nbsp;3，同时我们已知f(10)&nbsp;=&nbsp;78。</p>
<p>将所有f(n)种不同的喷泉上的n枚硬币都染上三种不同颜色之一，且相邻硬币所染颜色不能相同，所有的染色方法数记为T(n)。下图所示为对4枚硬币组成的三种可行喷泉中的一种进行染色的所有可能结果：</p>
<center><img src="/resources/images/0519_tricolored_coin_fountain.png"></center>

<p>已知T(4)&nbsp;=&nbsp;48以及T(10)&nbsp;=&nbsp;17760。</p>
<p>求T(20000)的最后9位数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 52</title>
    <url>/52/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-52"><a href="#Problem-52" class="headerlink" title="Problem 52"></a><a href="https://projecteuler.net/problem=52">Problem 52</a></h1><hr>
<h2 id="Permuted-Multiples"><a href="#Permuted-Multiples" class="headerlink" title="Permuted Multiples"></a><strong>Permuted Multiples</strong></h2><p>It can be seen that the number, $125874$, and its double, $251748$, contain exactly the same digits, but in a different order.</p>
<p>Find the smallest positive integer, $x$, such that $2x$, $3x$, $4x$, $5x$, and $6x$, contain the same digits.</p>
<hr>
<h2 id="重排的倍数"><a href="#重排的倍数" class="headerlink" title="重排的倍数"></a><strong>重排的倍数</strong></h2><p>可以看出，$125874$和它的两倍$251748$拥有同样的数字，只是排列顺序不同。</p>
<p>有些正整数$x$满足$2x$、$3x$、$4x$、$5x$和$6x$都拥有与$x$相同的数字，求其中最小的正整数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 520</title>
    <url>/520/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-520"><a href="#Problem-520" class="headerlink" title="Problem 520"></a><a href="https://projecteuler.net/problem=520">Problem 520</a></h1><hr>
<p><strong>Simber</strong></p>
<p>We define a <i>simber</i> to be a positive integer in which any odd digit, if present, occurs an odd number of times, and any even digit, if present, occurs an even number of times.</p>
<p>For example, 141221242 is a 9-digit simber because it has three 1’s, four 2’s and two 4’s. </p>
<p>Let Q(n) be the count of all simbers with at most n digits. </p>
<p>You are given Q(7) = 287975 and Q(100) mod 1 000 000 123 = 123864868.</p>
<p>Find (∑<sub>1≤u≤39</sub> Q(2<sup>u</sup>)) mod 1 000 000 123. </p>
<hr>
<p><strong>真诚数</strong></p>
<p>我们定义<i>真诚数</i>为满足如下条件的正整数：任意奇数数字若出现则出现奇数次，任意偶数数字若出现则出现偶数次。</p>
<p>例如，141221242是一个9位真诚数，因为它有3个1、4个2和2个4。</p>
<p>记Q(n)是位数不超过n的真诚数的数目。 </p>
<p>已知Q(7) = 287975以及Q(100) mod 1 000 000 123 = 123864868。</p>
<p>求(∑<sub>1≤u≤39</sub> Q(2<sup>u</sup>)) mod 1 000 000 123。 </p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 521</title>
    <url>/521/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-521"><a href="#Problem-521" class="headerlink" title="Problem 521"></a><a href="https://projecteuler.net/problem=521">Problem 521</a></h1><hr>
<p><strong>Smallest prime factor</strong></p>
<p>Let smpf(n) be the smallest prime factor of n.<br>smpf(91)=7 because 91=7×13 and smpf(45)=3 because 45=3×3×5.<br>Let S(n) be the sum of smpf(i) for 2 ≤ i ≤ n.<br>E.g. S(100)=1257.</p>
<p>Find S(10<sup>12</sup>) mod 10<sup>9</sup>.</p>
<hr>
<p><strong>最小质因数</strong></p>
<p>记smpf(n)为n的最小质因数。<br>例如，smpf(91)=7，因为91=7×13；smpf(45)=3，因为45=3×3×5。<br>对于所有2 ≤ i ≤ n，记S(n)为smpf(i)的和。<br>例如，S(100)=1257。</p>
<p>求S(10<sup>12</sup>) mod 10<sup>9</sup>。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 522</title>
    <url>/522/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-522"><a href="#Problem-522" class="headerlink" title="Problem 522"></a><a href="https://projecteuler.net/problem=522">Problem 522</a></h1><hr>
<p><strong>Hilbert’s Blackout</strong></p>
<p>Despite the popularity of Hilbert’s infinite hotel, Hilbert decided to try managing extremely large finite hotels, instead. </p>
<p>To cut costs, Hilbert wished to power the new hotel with his own special generator. Each floor would send power to the floor above it, with the top floor sending power back down to the bottom floor. That way, Hilbert could have the generator placed on any given floor (as he likes having the option) and have electricity flow freely throughout the entire hotel.</p>
<p>Unfortunately, the contractors misinterpreted the schematics when they built the hotel. They informed Hilbert that each floor sends power to another floor at random, instead. This may compromise Hilbert’s freedom to have the generator placed anywhere, since blackouts could occur on certain floors.</p>
<p>For example, consider a sample flow diagram for a three-story hotel:</p>
<center><img src="/resources/images/0522_hilberts_blackout.png"></center>

<p>If the generator were placed on the first floor, then every floor would receive power. But if it were placed on the second or third floors instead, then there would be a blackout on the first floor. Note that while a given floor can <i>receive</i> power from many other floors at once, it can only <i>send</i> power to one other floor.</p>
<p>To resolve the blackout concerns, Hilbert decided to have a minimal number of floors rewired. To rewire a floor is to change the floor it sends power to. In the sample diagram above, all possible blackouts can be avoided by rewiring the second floor to send power to the first floor instead of the third floor.</p>
<p>Let F(n) be the sum of the minimum number of floor rewirings needed over all possible power-flow arrangements in a hotel of n floors. For example, F(3) = 6, F(8) = 16276736, and F(100) mod 135707531 = 84326147.</p>
<p>Find F(12344321) mod 135707531.</p>
<hr>
<p><strong>希尔伯特的停电</strong></p>
<p>尽管无穷旅馆非常火爆，希尔伯特还是决定尝试经营一些有限但非常庞大的旅馆。</p>
<p>为了节省开支，希尔伯特希望使用他自己的特制发电机为旅馆供电。旅馆的每一层都会向其上一层供电，而最顶层则向最底层供电。这样一来，希尔伯特可以把他的发电机安放在任意一层（他喜欢有这样的选择权）同时保证电流在整个旅馆畅通无阻。</p>
<p>不幸的是，建造商在修建旅馆时误解了他的安排。他们通知希尔伯特，每一层并不是向其上一层供电，而是向随机的另一层供电。这使得希尔伯特可能丧失了部分安放发电机的自由，因为在特定的安排下可能在部分楼层出现停电的情况。</p>
<p>例如，考虑下面这个三层旅馆的一个电线排线布局样例：</p>
<center><img src="/resources/images/0522_hilberts_blackout.png"></center>

<p>如果发电机安放在一层，那么每一层都能够得到供电。但如果发电机被安放在二层或三层，那么第一层将会停电。请注意，尽管每一层可以同时从多个其它楼层<i>接收</i>电力，它只能向某一个其它楼层<i>提供</i>电力。</p>
<p>为了解决停电的顾虑，希尔伯特决定尽可能少地进行重新布线。对某一楼层重新布线意味着改变这个楼层向哪个楼层供电。在上述布局样例中，只需让二层不再向一层而是向三层供电，就能解决所有可能的停电问题。</p>
<p>假定现在旅馆有n层，考虑所有可能的排线布局，记所需的最小重新布线数之和为F(n)。例如，F(3) = 6，F(8) = 16276736，以及F(100) mod 135707531 = 84326147。</p>
<p>求F(12344321) mod 135707531。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 523</title>
    <url>/523/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-523"><a href="#Problem-523" class="headerlink" title="Problem 523"></a><a href="https://projecteuler.net/problem=523">Problem 523</a></h1><hr>
<p><strong>First Sort I</strong></p>
<p>Consider the following algorithm for sorting a list:</p>
<ol>
<li>Starting from the beginning of the list, check each pair of adjacent elements in turn.</li>
<li>If the elements are out of order:<ul>
<li>Move the smallest element of the pair at the beginning of the list.</li>
<li>Restart the process from step 1.</li>
</ul>
</li>
<li>If all pairs are in order, stop.</li>
</ol>
<p>For example, the list { 4 1 3 2 } is sorted as follows:</p>
<ul>
<li><u>4 1</u> 3 2  (4 and 1 are out of order so move 1 to the front of the list)</li>
<li>1 <u>4 3</u> 2  (4 and 3 are out of order so move 3 to the front of the list)</li>
<li><u>3 1</u> 4 2  (3 and 1 are out of order so move 1 to the front of the list)</li>
<li>1 3 <u>4 2</u>  (4 and 2 are out of order so move 2 to the front of the list)</li>
<li><u>2 1</u> 3 4  (2 and 1 are out of order so move 1 to the front of the list)</li>
<li>1 2 3 4  (The list is now sorted)</li>
</ul>
<p>Let F(L) be the number of times step 2a is executed to sort list L. For example, F({ 4 1 3 2 }) = 5.</p>
<p>Let E(n) be the <b>expected value</b> of F(P) over all permutations P of the integers {1, 2, …, n}.<br>You are given E(4) = 3.25 and E(10) = 115.725.</p>
<p>Find E(30). Give your answer rounded to two digits after the decimal point.</p>
<hr>
<p><strong>首位排序 I</strong></p>
<p>考虑如下的数列排序算法：</p>
<ol>
<li>从数列的起始位置开始，逐一比较每一对相邻的数。</li>
<li>如果相邻的数顺序有误：<ul>
<li>将其中较小的数移至数列的首位。</li>
<li>回到第1步。</li>
</ul>
</li>
<li>如果每一对相邻的数均已有序，算法结束。</li>
</ol>
<p>例如，数列{ 4 1 3 2 }的排序过程如下：</p>
<ul>
<li><u>4 1</u> 3 2  （4和1顺序有误，将1移至数列的首位）</li>
<li>1 <u>4 3</u> 2  （4和3顺序有误，将3移至数列的首位）</li>
<li><u>3 1</u> 4 2  （3和1顺序有误，将1移至数列的首位）</li>
<li>1 3 <u>4 2</u>  （4和2顺序有误，将2移至数列的首位）</li>
<li><u>2 1</u> 3 4  （2和1顺序有误，将1移至数列的首位）</li>
<li>1 2 3 4  （数列排序完毕）</li>
</ul>
<p>记F(L)为数列L排序过程中将数移至首位的次数。例如，F({ 4 1 3 2 }) = 5。</p>
<p>记E(n)为数集{1, 2, …, n}的任意排列P进行排序所得F(P)的<b>期望值</b>。<br>已知E(4) = 3.25以及E(10) = 115.725。</p>
<p>求E(30)。将你的答案四舍五入到小数点后两位数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 524</title>
    <url>/524/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-524"><a href="#Problem-524" class="headerlink" title="Problem 524"></a><a href="https://projecteuler.net/problem=524">Problem 524</a></h1><hr>
<p><strong>First Sort II</strong></p>
<p>Consider the following algorithm for sorting a list:</p>
<ol>
<li>Starting from the beginning of the list, check each pair of adjacent elements in turn.</li>
<li>If the elements are out of order:<ul>
<li>Move the smallest element of the pair at the beginning of the list.</li>
<li>Restart the process from step 1.</li>
</ul>
</li>
<li>If all pairs are in order, stop.</li>
</ol>
<p>For example, the list { 4 1 3 2 } is sorted as follows:</p>
<ul>
<li><u>4 1</u> 3 2  (4 and 1 are out of order so move 1 to the front of the list)</li>
<li>1 <u>4 3</u> 2  (4 and 3 are out of order so move 3 to the front of the list)</li>
<li><u>3 1</u> 4 2  (3 and 1 are out of order so move 1 to the front of the list)</li>
<li>1 3 <u>4 2</u>  (4 and 2 are out of order so move 2 to the front of the list)</li>
<li><u>2 1</u> 3 4  (2 and 1 are out of order so move 1 to the front of the list)</li>
<li>1 2 3 4  (The list is now sorted)</li>
</ul>
<p>We can list all permutations P of the integers {1, 2, …, n} in <b>lexicographical order</b>, and assign to each permutation an index I<sub>n</sub>(P) from 1 to n! corresponding to its position in the list.</p>
<p>Let Q(n, k) = min(I<sub>n</sub>(P)) for F(P) = k, the index of the first permutation requiring exactly k steps to sort with First Sort. If there is no permutation for which F(P) = k, then Q(n, k) is undefined.</p>
<p>For n = 4 we have:</p>
<table>
<thead>
<tr>
<th align="center">P</th>
<th align="center">I<sub>4</sub>(P)</th>
<th align="center">F(P)</th>
<th align="center">&nbsp;</th>
</tr>
</thead>
<tbody><tr>
<td align="center">{1, 2, 3, 4}</td>
<td align="center">1</td>
<td align="center">0</td>
<td align="center">Q(4, 0) = 1</td>
</tr>
<tr>
<td align="center">{1, 2, 4, 3}</td>
<td align="center">2</td>
<td align="center">4</td>
<td align="center">Q(4, 4) = 2</td>
</tr>
<tr>
<td align="center">{1, 3, 2, 4}</td>
<td align="center">3</td>
<td align="center">2</td>
<td align="center">Q(4, 2) = 3</td>
</tr>
<tr>
<td align="center">{1, 3, 4, 2}</td>
<td align="center">4</td>
<td align="center">2</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">{1, 4, 2, 3}</td>
<td align="center">5</td>
<td align="center">6</td>
<td align="center">Q(4, 6) = 5</td>
</tr>
<tr>
<td align="center">{1, 4, 3, 2}</td>
<td align="center">6</td>
<td align="center">4</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">{2, 1, 3, 4}</td>
<td align="center">7</td>
<td align="center">1</td>
<td align="center">Q(4, 1) = 7</td>
</tr>
<tr>
<td align="center">{2, 1, 4, 3}</td>
<td align="center">8</td>
<td align="center">5</td>
<td align="center">Q(4, 5) = 8</td>
</tr>
<tr>
<td align="center">{2, 3, 1, 4}</td>
<td align="center">9</td>
<td align="center">1</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">{2, 3, 4, 1}</td>
<td align="center">10</td>
<td align="center">1</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">{2, 4, 1, 3}</td>
<td align="center">11</td>
<td align="center">5</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">{2, 4, 3, 1}</td>
<td align="center">12</td>
<td align="center">3</td>
<td align="center">Q(4, 3) = 12</td>
</tr>
<tr>
<td align="center">{3, 1, 2, 4}</td>
<td align="center">13</td>
<td align="center">3</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">{3, 1, 4, 2}</td>
<td align="center">14</td>
<td align="center">3</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">{3, 2, 1, 4}</td>
<td align="center">15</td>
<td align="center">2</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">{3, 2, 4, 1}</td>
<td align="center">16</td>
<td align="center">2</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">{3, 4, 1, 2}</td>
<td align="center">17</td>
<td align="center">3</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">{3, 4, 2, 1}</td>
<td align="center">18</td>
<td align="center">2</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">{4, 1, 2, 3}</td>
<td align="center">19</td>
<td align="center">7</td>
<td align="center">Q(4, 7) = 19</td>
</tr>
<tr>
<td align="center">{4, 1, 3, 2}</td>
<td align="center">20</td>
<td align="center">5</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">{4, 2, 1, 3}</td>
<td align="center">21</td>
<td align="center">6</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">{4, 2, 3, 1}</td>
<td align="center">22</td>
<td align="center">4</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">{4, 3, 1, 2}</td>
<td align="center">23</td>
<td align="center">4</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">{4, 3, 2, 1}</td>
<td align="center">24</td>
<td align="center">3</td>
<td align="center"></td>
</tr>
</tbody></table>
<p>Let R(k) = min(Q(n, k)) over all n for which Q(n, k) is defined.</p>
<p>Find R(12<sup>12</sup>).</p>
<hr>
<p><strong>首位排序 II</strong></p>
<p>考虑如下的数列排序算法：</p>
<ol>
<li>从数列的起始位置开始，逐一比较每一对相邻的数。</li>
<li>如果相邻的数顺序有误：<ul>
<li>将其中较小的数移至数列的首位。</li>
<li>回到第1步。</li>
</ul>
</li>
<li>如果每一对相邻的数均已有序，算法结束。</li>
</ol>
<p>例如，数列{ 4 1 3 2 }的排序过程如下：</p>
<ul>
<li><u>4 1</u> 3 2  （4和1顺序有误，将1移至数列的首位）</li>
<li>1 <u>4 3</u> 2  （4和3顺序有误，将3移至数列的首位）</li>
<li><u>3 1</u> 4 2  （3和1顺序有误，将1移至数列的首位）</li>
<li>1 3 <u>4 2</u>  （4和2顺序有误，将2移至数列的首位）</li>
<li><u>2 1</u> 3 4  （2和1顺序有误，将1移至数列的首位）</li>
<li>1 2 3 4  （数列排序完毕）</li>
</ul>
<p>我们可以将数集{1, 2, …, n}的所有排列P按照<b>字典序</b>排成一列，并根据该排列在字典序中的位置给每个排列指定一个指数I<sub>n</sub>(P)为1至n!。</p>
<p>对于所有F(P)=k，记Q(n, k) = min(I<sub>n</sub>(P))，也就是首位排序完成时需要将数移至首位k次的第一个排列的指数。如果不存在排列使得F(P) = k，则Q(n, k)记为未定义。</p>
<p>对于n = 4我们有：</p>
<table>
<thead>
<tr>
<th align="center">P</th>
<th align="center">I<sub>4</sub>(P)</th>
<th align="center">F(P)</th>
<th align="center">&nbsp;</th>
</tr>
</thead>
<tbody><tr>
<td align="center">{1, 2, 3, 4}</td>
<td align="center">1</td>
<td align="center">0</td>
<td align="center">Q(4, 0) = 1</td>
</tr>
<tr>
<td align="center">{1, 2, 4, 3}</td>
<td align="center">2</td>
<td align="center">4</td>
<td align="center">Q(4, 4) = 2</td>
</tr>
<tr>
<td align="center">{1, 3, 2, 4}</td>
<td align="center">3</td>
<td align="center">2</td>
<td align="center">Q(4, 2) = 3</td>
</tr>
<tr>
<td align="center">{1, 3, 4, 2}</td>
<td align="center">4</td>
<td align="center">2</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">{1, 4, 2, 3}</td>
<td align="center">5</td>
<td align="center">6</td>
<td align="center">Q(4, 6) = 5</td>
</tr>
<tr>
<td align="center">{1, 4, 3, 2}</td>
<td align="center">6</td>
<td align="center">4</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">{2, 1, 3, 4}</td>
<td align="center">7</td>
<td align="center">1</td>
<td align="center">Q(4, 1) = 7</td>
</tr>
<tr>
<td align="center">{2, 1, 4, 3}</td>
<td align="center">8</td>
<td align="center">5</td>
<td align="center">Q(4, 5) = 8</td>
</tr>
<tr>
<td align="center">{2, 3, 1, 4}</td>
<td align="center">9</td>
<td align="center">1</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">{2, 3, 4, 1}</td>
<td align="center">10</td>
<td align="center">1</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">{2, 4, 1, 3}</td>
<td align="center">11</td>
<td align="center">5</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">{2, 4, 3, 1}</td>
<td align="center">12</td>
<td align="center">3</td>
<td align="center">Q(4, 3) = 12</td>
</tr>
<tr>
<td align="center">{3, 1, 2, 4}</td>
<td align="center">13</td>
<td align="center">3</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">{3, 1, 4, 2}</td>
<td align="center">14</td>
<td align="center">3</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">{3, 2, 1, 4}</td>
<td align="center">15</td>
<td align="center">2</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">{3, 2, 4, 1}</td>
<td align="center">16</td>
<td align="center">2</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">{3, 4, 1, 2}</td>
<td align="center">17</td>
<td align="center">3</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">{3, 4, 2, 1}</td>
<td align="center">18</td>
<td align="center">2</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">{4, 1, 2, 3}</td>
<td align="center">19</td>
<td align="center">7</td>
<td align="center">Q(4, 7) = 19</td>
</tr>
<tr>
<td align="center">{4, 1, 3, 2}</td>
<td align="center">20</td>
<td align="center">5</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">{4, 2, 1, 3}</td>
<td align="center">21</td>
<td align="center">6</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">{4, 2, 3, 1}</td>
<td align="center">22</td>
<td align="center">4</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">{4, 3, 1, 2}</td>
<td align="center">23</td>
<td align="center">4</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">{4, 3, 2, 1}</td>
<td align="center">24</td>
<td align="center">3</td>
<td align="center"></td>
</tr>
</tbody></table>
<p>对于所有Q(n, k)有定义的n，记R(k) = min(Q(n, k))。</p>
<p>求R(12<sup>12</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 525</title>
    <url>/525/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-525"><a href="#Problem-525" class="headerlink" title="Problem 525"></a><a href="https://projecteuler.net/problem=525">Problem 525</a></h1><hr>
<p><strong>Rolling Ellipse</strong></p>
<p>An ellipse E(a, b) is given at its initial position by equation:<br>$\frac{x^2}{a^2}+\frac{(y-b)^2}{b^2}=1$</p>
<p>The ellipse rolls without slipping along the x axis for one complete turn. Interestingly, the length of the curve generated by a focus is independent from the size of the minor axis:<br>$F(a,b)=2\pi max(a,b)$</p>
<center><img src="/resources/images/0525-rolling-ellipse-1.gif" alt="p525-rolling-ellipse-1.gif"></center>

<p>This is not true for the curve generated by the ellipse center. Let C(a,b) be the length of the curve generated by the center of the ellipse as it rolls without slipping for one turn.</p>
<center><img src="/resources/images/0525-rolling-ellipse-2.gif" alt="p525-rolling-ellipse-2.gif"></center>

<p>You are given C(2, 4) ~ 21.38816906.</p>
<p>Find C(1, 4) + C(3, 4). Give your answer rounded to 8 digits behind the decimal point in the form ab.cdefghij.</p>
<hr>
<p><strong>翻滚的椭圆</strong></p>
<p>椭圆E(a, b)的初始位置由以下方程给出：<br>$\frac{x^2}{a^2}+\frac{(y-b)^2}{b^2}=1$</p>
<p>椭圆沿着x轴无滑动地滚动一周。有趣的是，椭圆焦点的运动轨迹长度与椭圆短轴的长度无关：<br>$F(a,b)=2\pi max(a,b)$</p>
<center><img src="/resources/images/0525-rolling-ellipse-1.gif" alt="p525-rolling-ellipse-1.gif"></center>

<p>对于椭圆中心而言则并非如此；记C(a,b)为椭圆无滑动地滚动一周时椭圆中心的运动轨迹长度。</p>
<center><img src="/resources/images/0525-rolling-ellipse-2.gif" alt="p525-rolling-ellipse-2.gif"></center>

<p>已知C(2, 4) ~ 21.38816906。</p>
<p>求C(1, 4) + C(3, 4)。将你的答案四舍五入到小数点后8位小数，即格式为ab.cdefghij。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 527</title>
    <url>/527/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-527"><a href="#Problem-527" class="headerlink" title="Problem 527"></a><a href="https://projecteuler.net/problem=527">Problem 527</a></h1><hr>
<p><strong>Randomized Binary Search</strong></p>
<p>A secret integer t is selected at random within the range 1 ≤ t ≤ n. </p>
<p>The goal is to guess the value of t by making repeated guesses, via integer g. After a guess is made, there are three possible outcomes, in which it will be revealed that either g &lt; t, g = t, or g &gt; t. Then the process can repeat as necessary.</p>
<p>Normally, the number of guesses required on average can be minimized with a binary search: Given a lower bound L and upper bound H (initialized to L = 1 and H = n), let g = ⌊(L+H)/2⌋ where ⌊⋅⌋ is the integer floor function. If g = t, the process ends. Otherwise, if g &lt; t, set L = g+1, but if g &gt; t instead, set H = g−1. After setting the new bounds, the search process repeats, and ultimately ends once t is found. Even if t can be deduced without searching, assume that a search will be required anyway to confirm the value.</p>
<p>Your friend Bob believes that the standard binary search is not that much better than his randomized variant: Instead of setting g = ⌊(L+H)/2⌋, simply let g be a random integer between L and H, inclusive. The rest of the algorithm is the same as the standard binary search. This new search routine will be referred to as a <em>random binary search</em>.</p>
<p>Given that 1 ≤ t ≤ n for random t, let B(n) be the expected number of guesses needed to find t using the standard binary search, and let R(n) be the expected number of guesses needed to find t using the random binary search. For example, B(6) = 2.33333333 and R(6) = 2.71666667 when rounded to 8 decimal places.</p>
<p>Find R(10<sup>10</sup>) − B(10<sup>10</sup>) rounded to 8 decimal places.</p>
<hr>
<p><strong>随机二分查找</strong></p>
<p>在1 ≤ t ≤ n的范围中，随机选择一个整数t作为秘密整数。</p>
<p>我们要通过不断地猜测整数g来得知t的值。每次猜测会有三种可能的反馈，要么g &lt; t，要么g = t，要么g &gt; t。如果没有猜中，则继续进行下一次猜测。</p>
<p>一般而言，二分搜索可以最小化猜测的次数：给定下界为L，上界为H（初始情况下L = 1而H = n），则猜测 g =⌊(L+H)/2⌋，其中⌊⋅⌋为下取整函数。如果g = t，则猜测结束。否则，若g &lt; t，则令L = g+1，若g &gt; t，则令H = g−1。重新设定上下界后，继续进行下一次猜测，直到找出t的值。我们约定，即使不需要再猜一次也已经知道t的值，仍然必须再猜一次进行确认。</p>
<p>你的朋友鲍勃相信标准的二分查找比他的随机方法好不到哪儿去：他并不猜测 g = ⌊(L+H)/2⌋，而是随机地猜测L和H之间的一个整数。算法的剩余部分和标准二分查找并无不同。这种新方法被称为<em class=zh>随机二分查找</em>。</p>
<p>在1 ≤ t ≤ n中任取整数t，记B(n)为使用标准二分查找找出t所需猜测的期望次数，记R(n)为使用随机二分查找找出t所需猜测的期望次数。例如，B(6) = 2.33333333而R(6) = 2.71666667，均四舍五入到8位小数。</p>
<p>求R(10<sup>10</sup>) − B(10<sup>10</sup>)并四舍五入到8位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 526</title>
    <url>/526/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-526"><a href="#Problem-526" class="headerlink" title="Problem 526"></a><a href="https://projecteuler.net/problem=526">Problem 526</a></h1><hr>
<p><strong>Largest prime factors of consecutive numbers</strong></p>
<p>Let f(n) be the largest prime factor of n.</p>
<p>Let g(n) = f(n) + f(n+1) + f(n+2) + f(n+3) + f(n+4) + f(n+5) + f(n+6) + f(n+7) + f(n+8), the sum of the largest prime factor of each of nine consecutive numbers starting with n.</p>
<p>Let h(n) be the maximum value of g(k) for 2 ≤ k ≤ n.</p>
<p>You are given:<br>-f(100) = 5<br>-f(101) = 101<br>-g(100) = 409<br>-h(100) = 417<br>-h(10<sup>9</sup>) = 4896292593</p>
<p>Find h(10<sup>16</sup>).</p>
<hr>
<p><strong>连续数的最大质因数</strong></p>
<p>记f(n)是n的最大质因数。</p>
<p>记g(n) = f(n) + f(n+1) + f(n+2) + f(n+3) + f(n+4) + f(n+5) + f(n+6) + f(n+7) + f(n+8)，即从n开始连续九个数的最大质因数之和。</p>
<p>记h(n)为2 ≤ k ≤ n中g(k)的最大值。</p>
<p>已知：</p>
<ul>
<li>f(100) = 5</li>
<li>f(101) = 101</li>
<li>g(100) = 409</li>
<li>h(100) = 417</li>
<li>h(10<sup>9</sup>) = 4896292593</li>
</ul>
<p>求h(10<sup>16</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 529</title>
    <url>/529/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-529"><a href="#Problem-529" class="headerlink" title="Problem 529"></a><a href="https://projecteuler.net/problem=529">Problem 529</a></h1><hr>
<p><strong>10-substrings</strong></p>
<p>A <em>10-substring</em> of a number is a substring of its digits that sum to 10. For example, the 10-substrings of the number 3523014 are:</p>
<ul>
<li><b><u>352</u></b>3014</li>
<li>3<b><u>523</u></b>014</li>
<li>3<b><u>5230</u></b>14</li>
<li>35<b><u>23014</u></b></li>
</ul>
<p>A number is called <em>10-substring-friendly</em> if every one of its digits belongs to a 10-substring. For example, 3523014 is 10-substring-friendly, but 28546 is not.</p>
<p>Let T(n) be the number of 10-substring-friendly numbers from 1 to 10<sup>n</sup> (inclusive).<br>For example T(2) = 9 and T(5) = 3492.</p>
<p>Find T(10<sup>18</sup>) mod 1 000 000 007.</p>
<hr>
<p><strong>10-子串</strong></p>
<p>一个数的<i class=zh>10-子串</i>指的是其各位数字和为10的子串。例如，数3523014的10-子串包括：</p>
<ul>
<li><b><u>352</u></b>3014</li>
<li>3<b><u>523</u></b>014</li>
<li>3<b><u>5230</u></b>14</li>
<li>35<b><u>23014</u></b></li>
</ul>
<p>如果一个数的每一位数字都包含在一个10-子串当中，那么这个数被称为<i class=zh>10-子串友好数</i>。例如，3523014是10-子串友好数，而28546则不是。</p>
<p>记T(n)是1至10<sup>n</sup>之间（包含1和10<sup>n</sup>）所有10-子串友好数的数目。<br>已知T(2) = 9以及T(5) = 3492。</p>
<p>求T(10<sup>18</sup>) mod 1 000 000 007。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 528</title>
    <url>/528/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-528"><a href="#Problem-528" class="headerlink" title="Problem 528"></a><a href="https://projecteuler.net/problem=528">Problem 528</a></h1><hr>
<p><strong>Constrained Sums</strong></p>
<p>Let S(n,k,b) represent the number of valid solutions to x<sub>1</sub> + x<sub>2</sub> + … + x<sub>k</sub> ≤ n, where 0 ≤ x<sub>m</sub> ≤ b<sup>m</sup> for all 1 ≤ m ≤ k.</p>
<p>For example, S(14,3,2) = 135, S(200,5,3) = 12949440, and S(1000,10,5) mod 1 000 000 007 = 624839075.</p>
<p>Find (∑<sub>10 ≤ k ≤ 15</sub> S(10<sup>k</sup>,k,k)) mod 1 000 000 007.</p>
<hr>
<p><strong>限制性求和</strong></p>
<p>不等式x<sub>1</sub> + x<sub>2</sub> + … + x<sub>k</sub> ≤ n的解中，对于所有1 ≤ m ≤ k均满足0 ≤ x<sub>m</sub> ≤ b<sup>m</sup>的解的数目记为S(n,k,b)。</p>
<p>例如，S(14,3,2) = 135，S(200,5,3) = 12949440，以及S(1000,10,5) mod 1 000 000 007 = 624839075。</p>
<p>求(∑<sub>10 ≤ k ≤ 15</sub> S(10<sup>k</sup>,k,k)) mod 1 000 000 007。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 53</title>
    <url>/53/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-53"><a href="#Problem-53" class="headerlink" title="Problem 53"></a><a href="https://projecteuler.net/problem=53">Problem 53</a></h1><hr>
<h2 id="Combinatoric-Selections"><a href="#Combinatoric-Selections" class="headerlink" title="Combinatoric Selections"></a><strong>Combinatoric Selections</strong></h2><p>There are exactly ten ways of selecting three from five, $12345$:</p>
<p>$$123, 124, 125, 134, 135, 145, 234, 235, 245,\text{ and }345$$</p>
<p>In combinatorics, we use the notation, $\displaystyle \binom 5 3 = 10$.</p>
<p>In general, $\displaystyle \binom n r = \frac{n!}{r!(n-r)!}$, where $r \le n$, $n!=n\times(n-1)\times \ldots \times 3\times 2\times1$, and $0!=1$. </p>
<p>It is not until $n = 23$, that a value exceeds one-million:<br>$\displaystyle \binom{23}{10}=1144066$.</p>
<p>How many, not necessarily distinct, values of $\displaystyle \binom n r$, for $1 \le n \le 100$, are greater than one-million?</p>
<hr>
<h2 id="组合选择"><a href="#组合选择" class="headerlink" title="组合选择"></a><strong>组合选择</strong></h2><p>从五个数$12345$中选择三个恰好有十种方式，分别是：</p>
<p>$$123, 124, 125, 134, 135, 145, 234, 235, 245\text{和}345$$</p>
<p>在组合数学中，我们记作：$\displaystyle \binom 5 3 = 10$。</p>
<p>一般来说，$\displaystyle \binom n r = \frac{n!}{r!(n-r)!}$，其中$r \le n$，$n! = n\times (n−1)\times \ldots \times 3 \times 2 \times 1$，且$0! = 1$。</p>
<p>在$n = 23$时，首次出现超出一百万的组合数：$\displaystyle \binom{23}{10}=1144066$。</p>
<p>对于$1 \le n \le 100$，有多少个不同形式的组合数$\displaystyle \binom n r$超过一百万？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 530</title>
    <url>/530/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-530"><a href="#Problem-530" class="headerlink" title="Problem 530"></a><a href="https://projecteuler.net/problem=530">Problem 530</a></h1><hr>
<p><strong>GCD of Divisors</strong></p>
<p>Every divisor d of a number n has a <b>complementary divisor</b> n/d.</p>
<p>Let f(n) be the sum of the <b>greatest common divisor</b> of d and n/d over all positive divisors d of n, that is $f(n)=\displaystyle\sum\limits_{d|n} \text{gcd}(d,\frac n d)$.</p>
<p>Let F be the summatory function of f, that is $F(k)=\displaystyle\sum\limits_{n=1}^k f(n)$.</p>
<p>You are given that F(10)=32 and F(1000)=12776.</p>
<p>Find F(10<sup>15</sup>).</p>
<hr>
<p><strong>约数的最大公约数</strong></p>
<p>数n的每个约数d都有一个<b>互补约数</b>n/d。</p>
<p>对于数n的所有正约数d，记f(n)是d与n/d的<b>最大公约数</b>之和，即$f(n)=\displaystyle\sum\limits_{d|n} \text{gcd}(d,\frac n d)$。</p>
<p>记F是f的和函数，即$F(k)=\displaystyle\sum\limits_{n=1}^k f(n)$。</p>
<p>已知F(10)=32以及F(1000)=12776。</p>
<p>求F(10<sup>15</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 531</title>
    <url>/531/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-531"><a href="#Problem-531" class="headerlink" title="Problem 531"></a><a href="https://projecteuler.net/problem=531">Problem 531</a></h1><hr>
<p><strong>Chinese leftovers</strong></p>
<p>Let g(a,n,b,m) be the smallest non-negative solution x to the system:<br>x = a mod n<br>x = b mod m<br>if such a solution exists, otherwise 0.</p>
<p>E.g. g(2,4,4,6)=10, but g(3,4,4,6)=0.</p>
<p>Let φ(n) be Euler’s totient function.</p>
<p>Let f(n,m)=g(φ(n),n,φ(m),m).</p>
<p>Find ∑f(n,m) for 1000000 ≤ n &lt; m &lt; 1005000.</p>
<hr>
<p><strong>中国剩余定理</strong></p>
<p>记g(a,n,b,m)为以下方程组的最小非负解：<br>x = a mod n<br>x = b mod m<br>如果解不存在，则该函数记为0。</p>
<p>例如，g(2,4,4,6)=10，但g(3,4,4,6)=0。</p>
<p>记φ(n)为欧拉总计函数。</p>
<p>记f(n,m)=g(φ(n),n,φ(m),m)。</p>
<p>对于1000000 ≤ n &lt; m &lt; 1005000，求∑f(n,m)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 532</title>
    <url>/532/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-532"><a href="#Problem-532" class="headerlink" title="Problem 532"></a><a href="https://projecteuler.net/problem=532">Problem 532</a></h1><hr>
<p><strong>Nanobots on Geodesics</strong></p>
<p>Bob is a manufacturer of nanobots and wants to impress his customers by giving them a ball colored by his new nanobots as a present.</p>
<p>His nanobots can be programmed to select and locate exactly one other bot precisely and, after activation, move towards this bot along the shortest possible path and draw a colored line onto the surface while moving. Placed on a plane, the bots will start to move towards their selected bots in a straight line. In contrast, being placed on a ball, they will start to move along a geodesic as the shortest possible path. However, in both cases, whenever their target moves they will adjust their direction instantaneously to the new shortest possible path. All bots will move at the same speed after their simultaneous activation until each bot reaches its goal.</p>
<p>Now Bob places n bots on the ball (with radius 1) equidistantly on a small circle with radius 0.999 and programs each of them to move toward the next nanobot sitting counterclockwise on that small circle. After activation, the bots move in a sort of spiral until they finally meet at one point on the ball.</p>
<p>Using three bots, Bob finds that every bot will draw a line of length 2.84, resulting in a total length of 8.52 for all three bots, each time rounded to two decimal places. The colored ball looks like this:</p>
<center><img src="/resources/images/0532-nanobots.jpg" alt="p532-nanobots.jpg"></center>

<p>In order to show off a little with his presents, Bob decides to use just enough bots to make sure that the line each bot draws is longer than 1000. What is the total length of all lines drawn with this number of bots, rounded to two decimal places?</p>
<hr>
<p><strong>测地线上的纳米机器人</strong></p>
<p>鲍勃是纳米机器人的生产商，他希望送给顾客们一只由他生产的新型纳米机器人上色的球作为礼物，以给他们留下好印象。</p>
<p>纳米机器人内置的程序使得它们能够选定并精确地定位另一只机器人，并在激活时沿着最短路径向它移动，沿途绘制一条彩色的线。如果放在平面上，机器人的移动路径将是直线；如果相反放在球面上，它们将会沿测地线移动，因为此时测地线才是最短路径。无论是哪种情况，当机器人的目标对象也在移动时，机器人将会实时地将自己的方向调整到新的最短路径上。所有纳米机器人将会同时激活，此后保持相同的移动速度，直到每个机器人都与自己的目标相遇。</p>
<p>现在鲍勃在半径为1的球上放置了n个纳米机器人，它们等距地排列在半径为0.999的小圆上，同时设定每只纳米机器人向其逆时针方向的下一个机器人移动。在激活之后，这些机器人的移动轨迹呈螺线形，最后所有机器人都在球上的某一点相遇。</p>
<p>使用三个机器人时，鲍勃发现每个机器人绘制的线长度为2.84，总共的长度为8.52，均保留两位小数。这个上色的球看起来像这样：</p>
<center><img src="/resources/images/0532-nanobots.jpg" alt="p532-nanobots.jpg"></center>

<p>为了让礼物显得更加牛逼，鲍勃决定选择合适数量的机器人，使得每个机器人绘制的线长度恰好超过1000。那么，所有机器人绘制的线的总长度保留两位小数是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 533</title>
    <url>/533/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-533"><a href="#Problem-533" class="headerlink" title="Problem 533"></a><a href="https://projecteuler.net/problem=533">Problem 533</a></h1><hr>
<p><strong>Minimum values of the Carmichael function</strong></p>
<p>The <b>Carmichael function</b> λ(n) is defined as the smallest positive integer m such that a<sup>m</sup> = 1 modulo n for all integers a coprime with n.<br>For example λ(8) = 2 and λ(240) = 4.</p>
<p>Define L(n) as the smallest positive integer m such that λ(k)&nbsp;≥&nbsp;n for all k&nbsp;≥&nbsp;m.<br>For example, L(6) = 241 and L(100) = 20 174 525 281.</p>
<p>Find L(20 000 000). Give the last 9 digits of your answer.</p>
<hr>
<p><strong>卡迈克尔函数的最小值</strong></p>
<p><b>卡迈克尔函数</b> λ(n)被定义为使得所有与n互质的整数a都满足在同余意义下a<sup>m</sup> = 1的最小正整数m。<br>例如，λ(8) = 2，而λ(240) = 4。</p>
<p>记L(n)是最小的满足下列条件的正整数m：对于所有k&nbsp;≥&nbsp;m都有λ(k)&nbsp;≥&nbsp;n。<br>例如，L(6) = 241，而L(100) = 20 174 525 281。</p>
<p>求L(20 000 000)。给出其最后9位数字作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 535</title>
    <url>/535/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-535"><a href="#Problem-535" class="headerlink" title="Problem 535"></a><a href="https://projecteuler.net/problem=535">Problem 535</a></h1><hr>
<p><strong>Fractal Sequence</strong></p>
<p>Consider the infinite integer sequence S starting with:<br>S = 1, 1, 2, 1, 3, 2, 4, 1, 5, 3, 6, 2, 7, 8, 4, 9, 1, 10, 11, 5, …</p>
<p>Circle the first occurrence of each integer.<br>S = ①, 1, ②, 1, ③, 2, ④, 1, ⑤, 3, ⑥, 2, ⑦, ⑧, 4, ⑨, 1, ⑩, ⑪, 5, …</p>
<p>The sequence is characterized by the following properties:</p>
<ul>
<li>The circled numbers are consecutive integers starting with 1.</li>
<li>Immediately preceding each non-circled numbers a<sub>i</sub>, there are exactly ⌊√a<sub>i</sub>⌋ adjacent circled numbers, where ⌊⌋ is the floor function.</li>
<li>If we remove all circled numbers, the remaining numbers form a sequence identical to S, so S is a <b>fractal sequence</b>.</li>
</ul>
<p>Let T(n) be the sum of the first n elements of the sequence.<br>You are given T(1)&nbsp;=&nbsp;1, T(20)&nbsp;=&nbsp;86, T(10<sup>3</sup>)&nbsp;=&nbsp;364089 and T(10<sup>9</sup>)&nbsp;=&nbsp;498676527978348241.</p>
<p>Find T(10<sup>18</sup>). Give the last 9 digits of your answer.</p>
<hr>
<p><strong>分形序列</strong></p>
<p>考虑以下无穷整数序列S，其开头部分是：<br>S = 1, 1, 2, 1, 3, 2, 4, 1, 5, 3, 6, 2, 7, 8, 4, 9, 1, 10, 11, 5, …</p>
<p>圈出序列中每个第一次出现的整数。<br>S = ①, 1, ②, 1, ③, 2, ④, 1, ⑤, 3, ⑥, 2, ⑦, ⑧, 4, ⑨, 1, ⑩, ⑪, 5, …</p>
<p>这个序列有以下一些特性：</p>
<ul>
<li>被圈出的数构成从1开始的连续整数。</li>
<li>在每个没有被圈出的数a<sub>i</sub>之前，都恰好有⌊√a<sub>i</sub>⌋个连续的被圈出的数，其中⌊⌋表示下取整函数。</li>
<li>如果我们去掉所有被圈出的数，剩下的数构成的序列与S完全相同，因此S是一个<b>分形序列</b>。</li>
</ul>
<p>记T(n)是该序列前n项元素的和。<br>已知T(1)&nbsp;=&nbsp;1，T(20)&nbsp;=&nbsp;86，T(10<sup>3</sup>)&nbsp;=&nbsp;364089以及T(10<sup>9</sup>)&nbsp;=&nbsp;498676527978348241。</p>
<p>求T(10<sup>18</sup>)，给出其后9位作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 534</title>
    <url>/534/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-534"><a href="#Problem-534" class="headerlink" title="Problem 534"></a><a href="https://projecteuler.net/problem=534">Problem 534</a></h1><hr>
<p><strong>Weak Queens</strong></p>
<p>The classical <b>eight queens puzzle</b> is the well known problem of placing eight chess queens on a 8×8 chessboard so that no two queens threaten each other. Allowing configurations to reappear in rotated or mirrored form, a total of 92 distinct configurations can be found for eight queens. The general case asks for the number of distinct ways of placing n queens on a n×n board, e.g. you can find 2 distinct configurations for n=4.</p>
<p>Lets define a <i>weak queen</i> on a n×n board to be a piece which can move any number of squares if moved horizontally, but a maximum of n−1−w squares if moved vertically or diagonally, 0≤w&lt;n being the “weakness factor”. For example, a weak queen on a n×n board with a weakness factor of w=1 located in the bottom row will not be able to threaten any square in the top row as the weak queen would need to move n−1 squares vertically or diagonally to get there, but may only move n−2 squares in these directions. In contrast, the weak queen is not handicapped horizontally, thus threatening every square in its own row, independently from its current position in that row.</p>
<p>Let Q(n,w) be the number of ways n weak queens with weakness factor w can be placed on a n×n board so that no two queens threaten each other. It can be shown, for example, that Q(4,0)=2, Q(4,2)=16 and Q(4,3)=256.</p>
<p>Let $S(n)=\displaystyle\sum_{w=0}^{n-1} Q(n,w)$.</p>
<p>You are given that S(4)=276 and S(5)=3347.</p>
<p>Find S(14).</p>
<hr>
<p><strong>弱皇后问题</strong></p>
<p><b>八皇后问题</b>是一个著名的经典问题：将八枚皇后棋子摆放在8×8的国际象棋棋盘上，且它们两两之间均不构成威胁。考虑旋转和翻转，八皇后问题一共有92种不同的摆放方式。将八皇后问题一般化，也即将n枚皇后棋子摆放在n×n的棋盘上的不同摆放方式数，例如，当n=4时只存在2种不同的摆放方式。</p>
<p>我们在n×n棋盘上定义一种<i class=zh>弱皇后</i>棋子，当横向移动时它能够移动任意步数，但在纵向移动或沿对角线移动时至多只能移动n-1-w步，其中0≤w&lt;n称为“弱系数”。例如，在n×n棋盘上，如果将弱系数为w=1的弱皇后摆放在最下一行，无法威胁到任何最上一行的方格，因为它需要在纵向或沿对角线移动n-1步才可能到达最上一行，但是它只能纵向或沿对角线移动至多n-2步。相反地，由于弱皇后的横向移动不受限制，无论它处在这一行的哪个位置，都能够威胁到同一行的所有方格。</p>
<p>将n枚弱系数为w的弱皇后棋子摆放在n×n的棋盘上，且它们两两之间均不构成威胁，考虑旋转和翻转，不同的摆放方式数目记为Q(n,w)。我们可以计算得出Q(4,0)=2，Q(4,2)=16以及Q(4,3)=256。</p>
<p>记$S(n)=\displaystyle\sum_{w=0}^{n-1} Q(n,w)$。</p>
<p>已知S(4)=276以及S(5)=3347。</p>
<p>求S(14)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 536</title>
    <url>/536/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-536"><a href="#Problem-536" class="headerlink" title="Problem 536"></a><a href="https://projecteuler.net/problem=536">Problem 536</a></h1><hr>
<p><strong>Modulo power identity</strong></p>
<p>Let S(n) be the sum of all positive integers m not exceeding n having the following property:<br>a <sup>m+4</sup> ≡ a (mod m) for all integers a.</p>
<p>The values of m ≤ 100 that satisfy this property are 1, 2, 3, 5 and 21, thus S(100) = 1+2+3+5+21 = 32.<br>You are given S(10<sup>6</sup>) = 22868117.</p>
<p>Find S(10<sup>12</sup>).</p>
<hr>
<p><strong>幂同余恒等式</strong></p>
<p>将所有不超过n且满足下列性质的正整数m的和记为S(n):<br>对于所有整数a，a <sup>m+4</sup> ≡ a (mod m)。</p>
<p>在所有m ≤ 100中满足这一性质的有1，2，3，5和21，因此S(100) = 1+2+3+5+21 = 32。<br>已知S(10<sup>6</sup>) = 22868117。</p>
<p>求S(10<sup>12</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 538</title>
    <url>/538/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-538"><a href="#Problem-538" class="headerlink" title="Problem 538"></a><a href="https://projecteuler.net/problem=538">Problem 538</a></h1><hr>
<p><strong>Maximum quadrilaterals</strong></p>
<p>Consider a positive integer sequence S=(s<sub>1</sub>,s<sub>2</sub>,…,s<sub>n</sub>).</p>
<p>Let f(S) be the perimeter of the maximum-area quadrilateral whose side lengths are 4 elements (s<sub>i</sub>, s<sub>j</sub>, s<sub>k</sub>, s<sub>l</sub>) of S (all i, j, k, l distinct). If there are many quadrilaterals with the same maximum area, then choose the one with the largest perimeter.</p>
<p>For example, if S=(8,9,14,9,27), then we can take the elements (9,14,9,27) and form an <dfn title="An isosceles trapezium (US: trapezoid) is a quadrilateral where one pair of opposite sides are parallel and of different lengths, and the other pair has the same length."><b>isosceles trapezium</b></dfn> with parallel side lengths 14 and 27 and both leg lengths 9. The area of this quadrilateral is 127.611470879… It can be shown that this is the largest area for any quadrilateral that can be formed using side lengths from S. Therefore, f(S)=9+14+9+27=59.</p>
<p>Let u<sub>n</sub>=2<sup>B(3n)</sup>+3<sup>B(2n)</sup>+B(n+1), where B(k) is the number of 1 bits of k in base 2.<br>For example, B(6)=2, B(10)=2 and B(15)=4, and u<sub>5</sub>=2<sup>4</sup>+3<sup>2</sup>+2=27.</p>
<p>Also, let U<sub>n</sub> be the sequence (u<sub>1</sub>,u<sub>2</sub>,…,u<sub>n</sub>).<br>For example, U<sub>10</sub>=(8,9,14,9,27,16,36,9,27,28).</p>
<p>It can be shown that f(U<sub>5</sub>)=59, f(U<sub>10</sub>)=118, f(U<sub>150</sub>)=3223.<br>It can also be shown that Σf(U<sub>n</sub>)=234761 for 4≤n≤150.<br>Find Σf(U<sub>n</sub>) for 4≤n≤3000000.</p>
<hr>
<p><strong>最大四边形</strong></p>
<p>考虑一个正整数序列S=(s<sub>1</sub>,s<sub>2</sub>,…,s<sub>n</sub>)。</p>
<p>在S中取4个元素(s<sub>i</sub>, s<sub>j</sub>, s<sub>k</sub>, s<sub>l</sub>)（其中i、j、k、l互不相同）构成四边形，记所有这样的四边形中面积最大的四边形的周长为f(S)。若面积最大的四边形有多个，则选择其中周长最长的一个。</p>
<p>举例而言，如果S=(8,9,14,9,27)，我们可以选择其中的元素(9,14,9,27)，组成一个<dfn title="等腰梯形是一组对边平行，另一组对边等长的四边形。"><b>等腰梯形</b></dfn> ，底边长为14和27，两腰长为9。这样一个四边形的面积是127.611470879… 通过计算可知这是所有使用S中元素作为边长构成的四边形的最大面积，因此f(S)=9+14+9+27=59。</p>
<p>令u<sub>n</sub>=2<sup>B(3n)</sup>+3<sup>B(2n)</sup>+B(n+1)，其中B(k)是数k的二进制表示中数字1的个数。<br>例如，B(6)=2，B(10)=2，B(15)=4，因此u<sub>5</sub>=2<sup>4</sup>+3<sup>2</sup>+2=27。</p>
<p>再令U<sub>n</sub>为数列(u<sub>1</sub>,u<sub>2</sub>,…,u<sub>n</sub>)。<br>例如，U<sub>10</sub>=(8,9,14,9,27,16,36,9,27,28)。</p>
<p>已知f(U<sub>5</sub>)=59，f(U<sub>10</sub>)=118，f(U<sub>150</sub>)=3223。<br>还已知对于4≤n≤150有Σf(U<sub>n</sub>)=234761。<br>对于4≤n≤3000000，求Σf(U<sub>n</sub>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 537</title>
    <url>/537/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-537"><a href="#Problem-537" class="headerlink" title="Problem 537"></a><a href="https://projecteuler.net/problem=537">Problem 537</a></h1><hr>
<p><strong>Counting tuples</strong></p>
<p>Let π(x) be the prime counting function, i.e. the number of prime numbers less than or equal to x.<br>For example, π(1)=0, π(2)=1, π(100)=25.</p>
<p>Let T(n,k) be the number of k-tuples (x<sub>1</sub>,…,x<sub>k</sub>) which satisfy:</p>
<ol>
<li>every x<sub>i</sub> is a positive integer;</li>
<li>$\displaystyle \sum_{i=1}^k \pi(x_i)=n$</li>
</ol>
<p>For example T(3,3)=19.<br>The 19 tuples are (1,1,5), (1,5,1), (5,1,1), (1,1,6), (1,6,1), (6,1,1), (1,2,3), (1,3,2), (2,1,3), (2,3,1), (3,1,2), (3,2,1), (1,2,4), (1,4,2), (2,1,4), (2,4,1), (4,1,2), (4,2,1), (2,2,2).</p>
<p>You are given T(10,10) = 869 985 and T(10<sup>3</sup>,10<sup>3</sup>) ≡ 578 270 566 (mod 1 004 535 809).</p>
<p>Find T(20 000, 20 000) mod 1 004 535 809.</p>
<hr>
<p><strong>元组计数</strong></p>
<p>记π(x)为素数计数函数，即小于等于x的素数的数目。<br>例如，π(1)=0，π(2)=1，π(100)=25。</p>
<p>记T(n,k)为满足以下条件的k元组(x<sub>1</sub>,…,x<sub>k</sub>)的数目：</p>
<ol>
<li>任意x<sub>i</sub>都是正整数；</li>
<li>$\displaystyle \sum_{i=1}^k \pi(x_i)=n$</li>
</ol>
<p>举例来说，T(3,3)=19。<br>这19个三元组是(1,1,5)、(1,5,1)、(5,1,1)、(1,1,6)、(1,6,1)、(6,1,1)、(1,2,3)、(1,3,2)、(2,1,3)、(2,3,1)、(3,1,2)、(3,2,1)、(1,2,4)、(1,4,2)、(2,1,4)、(2,4,1)、(4,1,2)、(4,2,1)、(2,2,2)。</p>
<p>已知T(10,10) = 869 985和T(10<sup>3</sup>,10<sup>3</sup>) ≡ 578 270 566 (mod 1 004 535 809)。</p>
<p>求T(20 000, 20 000) mod 1 004 535 809。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 539</title>
    <url>/539/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-539"><a href="#Problem-539" class="headerlink" title="Problem 539"></a><a href="https://projecteuler.net/problem=539">Problem 539</a></h1><hr>
<h2 id="Odd-elimination"><a href="#Odd-elimination" class="headerlink" title="Odd elimination"></a><strong>Odd elimination</strong></h2><p>Start from an ordered list of all integers from $1$ to $n$. Going from left to right, remove the first number and every other number afterward until the end of the list. Repeat the procedure from right to left, removing the right most number and every other number from the numbers left. Continue removing every other numbers, alternating left to right and right to left, until a single number remains.</p>
<p>Starting with $n = 9$, we have:</p>
<p>$\underline{1}\ 2\ \underline{3}\ 4\ \underline{5}\ 6\ \underline{7}\ 8\ \underline{9}$</p>
<p>$2\ \underline{4}\ 6\ \underline{8}$</p>
<p>$\underline{2}\ 6$</p>
<p>$6$</p>
<p>Let $P(n)$ be the last number left starting with a list of length $n$.</p>
<p>Let $\displaystyle S(n) = \sum_{k=1}^n P(k)$.</p>
<p>You are given $P(1)=1$, $P(9) = 6$, $P(1000)=510$, $S(1000)=268271$.</p>
<p>Find $S(10^{18})\bmod{987654321}$.</p>
<hr>
<h2 id="奇数位消除"><a href="#奇数位消除" class="headerlink" title="奇数位消除"></a><strong>奇数位消除</strong></h2><p>考虑由$1$至$n$之间全体整数组成的有序数列。先从左往右，消除所有从左数起奇数位上的数，再从右往左，消除所有从右数起奇数位上的数；不断重复这一过程，直到只剩下一个数。</p>
<p>例如，若一开始$n = 9$，则有：</p>
<p>$\underline{1}\ 2\ \underline{3}\ 4\ \underline{5}\ 6\ \underline{7}\ 8\ \underline{9}$</p>
<p>$2\ \underline{4}\ 6\ \underline{8}$</p>
<p>$\underline{2}\ 6$</p>
<p>$6$</p>
<p>记$P(n)$为初始数列长度为$n$时最后剩下的数。</p>
<p>令$\displaystyle S(n) = \sum_{k=1}^n P(k)$。</p>
<p>已知$P(1)=1$，$P(9) = 6$，$P(1000)=510$，$S(1000)=268271$。</p>
<p>求$S(10^{18}) \bmod{987654321}$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 54</title>
    <url>/54/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-54"><a href="#Problem-54" class="headerlink" title="Problem 54"></a><a href="https://projecteuler.net/problem=54">Problem 54</a></h1><hr>
<h2 id="Poker-Hands"><a href="#Poker-Hands" class="headerlink" title="Poker Hands"></a><strong>Poker Hands</strong></h2><p>In the card game poker, a hand consists of five cards and are ranked, from lowest to highest, in the following way:</p>
<ul>
<li><strong>High Card</strong>: Highest value card.</li>
<li><strong>One Pair</strong>: Two cards of the same value.</li>
<li><strong>Two Pairs</strong>: Two different pairs.</li>
<li><strong>Three of a Kind</strong>: Three cards of the same value.</li>
<li><strong>Straight</strong>: All cards are consecutive values.</li>
<li><strong>Flush</strong>: All cards of the same suit.</li>
<li><strong>Full House</strong>: Three of a kind and a pair.</li>
<li><strong>Four of a Kind</strong>: Four cards of the same value.</li>
<li><strong>Straight Flush</strong>: All cards are consecutive values of same suit.</li>
<li><strong>Royal Flush</strong>: Ten, Jack, Queen, King, Ace, in same suit.</li>
</ul>
<p>The cards are valued in the order:2, 3, 4, 5, 6, 7, 8, 9, 10, Jack, Queen, King, Ace.</p>
<p>If two players have the same ranked hands then the rank made up of the highest value wins; for example, a pair of eights beats a pair of fives (see example 1 below). But if two ranks tie, for example, both players have a pair of queens, then highest cards in each hand are compared (see example 4 below); if the highest cards tie then the next highest cards are compared, and so on.</p>
<p>Consider the following five hands dealt to two players:</p>
<table>
<thead>
<tr>
<th align="center"><strong>Hand</strong></th>
<th align="center"><strong>Player 1</strong></th>
<th align="center"><strong>Player 2</strong></th>
<th align="center"><strong>Winner</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="center"><strong>1</strong></td>
<td align="center">5H 5C 6S 7S KD</td>
<td align="center">2C 3S 8S 8D TD</td>
<td align="center">Player 2</td>
</tr>
<tr>
<td align="center">&nbsp;</td>
<td align="center">Pair of Fives</td>
<td align="center">Pair of Eights</td>
<td align="center">&nbsp;</td>
</tr>
<tr>
<td align="center"><strong>2</strong></td>
<td align="center">5D 8C 9S JS AC</td>
<td align="center">2C 5C 7D 8S QH</td>
<td align="center">Player 1</td>
</tr>
<tr>
<td align="center">&nbsp;</td>
<td align="center">Highest card Ace</td>
<td align="center">Highest card Queen</td>
<td align="center">&nbsp;</td>
</tr>
<tr>
<td align="center"><strong>3</strong></td>
<td align="center">2D 9C AS AH AC</td>
<td align="center">3D 6D 7D TD QD</td>
<td align="center">Player 2</td>
</tr>
<tr>
<td align="center">&nbsp;</td>
<td align="center">Three Aces</td>
<td align="center">Flush with Diamonds</td>
<td align="center">&nbsp;</td>
</tr>
<tr>
<td align="center"><strong>4</strong></td>
<td align="center">4D 6S 9H QH QC</td>
<td align="center">3D 6D 7H QD QS</td>
<td align="center">Player 1</td>
</tr>
<tr>
<td align="center">&nbsp;</td>
<td align="center">Pair of Queens</td>
<td align="center">Pair of Queens</td>
<td align="center">&nbsp;</td>
</tr>
<tr>
<td align="center">&nbsp;</td>
<td align="center">Highest card Nine</td>
<td align="center">Highest card Seven</td>
<td align="center">&nbsp;</td>
</tr>
<tr>
<td align="center"><strong>5</strong></td>
<td align="center">2H 2D 4C 4D 4S</td>
<td align="center">3C 3D 3S 9S 9D</td>
<td align="center">Player 1</td>
</tr>
<tr>
<td align="center">&nbsp;</td>
<td align="center">Full House</td>
<td align="center">Full House</td>
<td align="center">&nbsp;</td>
</tr>
<tr>
<td align="center">&nbsp;</td>
<td align="center">with Three Fours</td>
<td align="center">with Three Threes</td>
<td align="center">&nbsp;</td>
</tr>
</tbody></table>
<p>The file, <a href="https://projecteuler.net/project/resources/p054_poker.txt">poker.txt</a>, contains one-thousand random hands dealt to two players. Each line of the file contains ten cards (separated by a single space): the first five are Player 1’s cards and the last five are Player 2’s cards. You can assume that all hands are valid (no invalid characters or repeated cards), each player’s hand is in no specific order, and in each hand there is a clear winner.</p>
<p>How many hands does Player 1 win?</p>
<hr>
<h2 id="扑克手牌"><a href="#扑克手牌" class="headerlink" title="扑克手牌"></a><strong>扑克手牌</strong></h2><p>在扑克游戏中，玩家的手牌由五张牌组成，其等级由低到高分别为：</p>
<ul>
<li><strong>单牌</strong>：牌面最大的一张牌。</li>
<li><strong>对子</strong>：两张牌面一样的牌。</li>
<li><strong>两对</strong>：两个不同的对子。</li>
<li><strong>三条</strong>：三张牌面一样的牌。</li>
<li><strong>顺子</strong>：五张牌的牌面是连续的。</li>
<li><strong>同花</strong>：五张牌是同一花色。</li>
<li><strong>葫芦</strong>：三条带一个对子。</li>
<li><strong>四条</strong>：四张牌面一样的牌。</li>
<li><strong>同花顺</strong>：五张牌的牌面是连续的且为同一花色。</li>
<li><strong>皇家同花顺</strong>：同一花色的10、J、Q、K、A。</li>
</ul>
<p>牌面由小到大的顺序是：2、3、4、5、6、7、8、9、10、J、Q、K、A。</p>
<p>如果两名玩家的手牌处于同一等级，那么组成该等级的牌中牌面较大的一方获胜；例如，一对8胜过一对5（参见例1）；如果这些牌的牌面相同，例如双方各有一对Q，那么就比较玩家手牌中牌面最大的牌（参见例4）；如果最大的牌相同，则比较次大的牌，依此类推。</p>
<p>考虑以下五局游戏中双方的手牌：</p>
<table>
<thead>
<tr>
<th align="center"><strong>手牌</strong></th>
<th align="center"><strong>玩家1</strong></th>
<th align="center"><strong>玩家2</strong></th>
<th align="center"><strong>胜者</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="center"><strong>1</strong></td>
<td align="center">红桃5 草花5 黑桃6 黑桃7 方片K</td>
<td align="center">草花2 黑桃3 黑桃8 方片8 方片10</td>
<td align="center">玩家2</td>
</tr>
<tr>
<td align="center">&nbsp;</td>
<td align="center">一对5</td>
<td align="center">一对8</td>
<td align="center">&nbsp;</td>
</tr>
<tr>
<td align="center"><strong>2</strong></td>
<td align="center">方片5 草花8 黑桃9 黑桃J 草花A</td>
<td align="center">草花2 草花5 方片7 黑桃8 红桃Q</td>
<td align="center">玩家1</td>
</tr>
<tr>
<td align="center">&nbsp;</td>
<td align="center">单牌A</td>
<td align="center">单牌Q</td>
<td align="center">&nbsp;</td>
</tr>
<tr>
<td align="center"><strong>3</strong></td>
<td align="center">方片2 草花9 黑桃A 红桃A 草花A</td>
<td align="center">方片3 方片6 方片7 方片10 方片Q</td>
<td align="center">玩家2</td>
</tr>
<tr>
<td align="center">&nbsp;</td>
<td align="center">三条A</td>
<td align="center">同花方片</td>
<td align="center">&nbsp;</td>
</tr>
<tr>
<td align="center"><strong>4</strong></td>
<td align="center">方片4 黑桃6 红桃9 红桃Q 草花Q</td>
<td align="center">方片3 方片6 红桃7 方片Q 黑桃Q</td>
<td align="center">玩家1</td>
</tr>
<tr>
<td align="center">&nbsp;</td>
<td align="center">一对Q</td>
<td align="center">一对Q</td>
<td align="center">&nbsp;</td>
</tr>
<tr>
<td align="center">&nbsp;</td>
<td align="center">最大单牌9</td>
<td align="center">最大单牌7</td>
<td align="center">&nbsp;</td>
</tr>
<tr>
<td align="center"><strong>5</strong></td>
<td align="center">红桃2 方片2 草花4 方片4 黑桃4</td>
<td align="center">草花3 方片3 黑桃3 黑桃9 方片9</td>
<td align="center">玩家1</td>
</tr>
<tr>
<td align="center">&nbsp;</td>
<td align="center">葫芦</td>
<td align="center">葫芦</td>
<td align="center">&nbsp;</td>
</tr>
<tr>
<td align="center">&nbsp;</td>
<td align="center">（三条4）</td>
<td align="center">（三条3）</td>
<td align="center">&nbsp;</td>
</tr>
</tbody></table>
<p>在文本文件<a href="https://projecteuler.net/project/resources/p054_poker.txt">poker.txt</a>中，包含有两名玩家进行一千局扑克游戏的手牌。每一行包含有10张牌（均用一个空格隔开）：前5张牌属于玩家1，后5张牌属于玩家2。你可以假定所有的手牌都是有效的（没有无效的字符或是重复的牌），每个玩家的手牌不一定按顺序排列，且每一局都有确定的赢家。</p>
<p>其中有多少局玩家1获胜？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 541</title>
    <url>/541/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-541"><a href="#Problem-541" class="headerlink" title="Problem 541"></a><a href="https://projecteuler.net/problem=541">Problem 541</a></h1><hr>
<p><strong>Divisibility of Harmonic Number Denominators</strong></p>
<p>The n<sup>th</sup><b>harmonic number</b> H<sub>n</sub> is defined as the sum of the multiplicative inverses of the first n positive integers, and can be written as a <b>reduced fraction</b> a<sub>n</sub>/b<sub>n</sub>.<br>$H_n = \displaystyle \sum_{k=1}^n \frac{1}{k} = \frac {a_n} {b_n}$, with$\text {gcd}(a_n, b_n)=1$.</p>
<p>Let M(p) be the largest value of n such that b<sub>n</sub> is not divisible by p.</p>
<p>For example, M(3) = 68 because $H_{68} = \frac{a_{68}}{b_{68}} = \frac{14094018321907827923954201611}{2933773379069966367528193600}$,<br>b<sub>68</sub>=2933773379069966367528193600 is not divisible by 3, but all larger harmonic numbers have denominators divisible by 3.</p>
<p>You are given M(7) = 719102.</p>
<p>Find M(137).</p>
<hr>
<p><strong>和谐数分母的整除性</strong></p>
<p>第n个<b>和谐数</b>H<sub>n</sub>被定义为前n个正整数的倒数和，可以写成<b>最简分数</b>a<sub>n</sub>/b<sub>n</sub>的形式。<br>$H_n = \displaystyle \sum_{k=1}^n \frac{1}{k} = \frac {a_n} {b_n}$， 其中$\text {gcd}(a_n, b_n)=1$。</p>
<p>令M(p)为使得b<sub>n</sub>不能被p整除的最大的n。</p>
<p>例如，M(3) = 68，因为$H_{68} = \frac{a_{68}}{b_{68}} = \frac{14094018321907827923954201611}{2933773379069966367528193600}$，b<sub>68</sub>=2933773379069966367528193600不能被3整除，但是所有更大的和谐数的分母都能被3整除。</p>
<p>已知M(7) = 719102。</p>
<p>求M(137)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 540</title>
    <url>/540/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-540"><a href="#Problem-540" class="headerlink" title="Problem 540"></a><a href="https://projecteuler.net/problem=540">Problem 540</a></h1><hr>
<p><strong>Counting primitive Pythagorean triples</strong></p>
<p>A <b>Pythagorean triple</b> consists of three positive integers $a$, $b$ and $c$ satsifying $a^2+b^2=c^2$.<br>The triple is called primitive if $a$, $b$ and $c$ are relatively prime.<br>Let P($n$) be the number of <b>primitive Pythagorean triples</b> with $a&lt;b&lt;c \le n$.<br>For example P(20) = 3, since there are three triples: (3,4,5), (5,12,13) and (8,15,17).</p>
<p>You are given that P(10<sup>6</sup>) = 159139.<br>Find P(3141592653589793).</p>
<hr>
<p><strong>本原毕达哥拉斯三元组计数</strong></p>
<p><b>毕达哥拉斯三元组</b>包含有三个整数$a$、$b$和$c$，满足等式$a^2+b^2=c^2$。<br>当$a$、$b$和$c$互素时，这个三元组被称为本原的。<br>记P($n$)是满足$a&lt;b&lt;c \le n$的<b>本原毕达哥拉斯三元组</b>的数目。<br>例如P(20) = 3，这三个三元组是：(3,4,5)，(5,12,13)和(8,15,17)。</p>
<p>已知P(10<sup>6</sup>) = 159139。<br>求P(3141592653589793)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 542</title>
    <url>/542/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-542"><a href="#Problem-542" class="headerlink" title="Problem 542"></a><a href="https://projecteuler.net/problem=542">Problem 542</a></h1><hr>
<p><strong>Geometric Progression with Maximum Sum</strong></p>
<p>Let S(k) be the sum of three or more distinct positive integers having the following properties:</p>
<ul>
<li>No value exceeds k.</li>
<li>The values form a <b>geometric progression</b>.</li>
<li>The sum is maximal.</li>
</ul>
<p>S(4)=4+2+1=7<br>S(10)=9+6+4=19<br>S(12)=12+6+3=21<br>S(1000)=1000+900+810+729=3439</p>
<p>Let $T(n) = \sum_{k=4}^n (-1)^k S(k)$.<br>T(1000) = 2268</p>
<p>Find T(10<sup>17</sup>).</p>
<hr>
<p><strong>和最大的几何级数</strong></p>
<p>记S(k)为满足以下条件的至少三个不同正整数的和：</p>
<ul>
<li>正整数的值不超过k。</li>
<li>这些数构成<b>几何级数</b>。</li>
<li>是所有可能的和中的最大值。</li>
</ul>
<p>例如：<br>S(4)=4+2+1=7<br>S(10)=9+6+4=19<br>S(12)=12+6+3=21<br>S(1000)=1000+900+810+729=3439</p>
<p>令$T(n) = \sum_{k=4}^n (-1)^k S(k)$。<br>已知T(1000) = 2268</p>
<p>求T(10<sup>17</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 544</title>
    <url>/544/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-544"><a href="#Problem-544" class="headerlink" title="Problem 544"></a><a href="https://projecteuler.net/problem=544">Problem 544</a></h1><hr>
<p><strong>Chromatic Conundrum</strong></p>
<p>Let F(r,c,n) be the number of ways to color a rectangular grid with r rows and c columns using at most n colors such that no two adjacent cells share the same color. Cells that are diagonal to each other are not considered adjacent.</p>
<p>For example, F(2,2,3) = 18, F(2,2,20) = 130340, and F(3,4,6) = 102923670.</p>
<p>Let S(r,c,n) = $\sum_{k=1}^{n} F(r,c,k)$.</p>
<p>For example, S(4,4,15) mod 10<sup>9</sup>+7 = 325951319.</p>
<p>Find S(9,10,1112131415) mod 10<sup>9</sup>+7.</p>
<hr>
<p><strong>彩色谜题</strong></p>
<p>将一个r行c列的长方形格阵用至多n种颜色填色，且相邻两格的颜色互不相同，记总的可行填色数目为F(r,c,n)。对角相接的两格不算作相邻。</p>
<p>例如，F(2,2,3) = 18，F(2,2,20) = 130340， 以及F(3,4,6) = 102923670。</p>
<p>记S(r,c,n) = $\sum_{k=1}^{n} F(r,c,k)$。</p>
<p>例如，S(4,4,15) mod 10<sup>9</sup>+7 = 325951319。</p>
<p>求S(9,10,1112131415) mod 10<sup>9</sup>+7。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 543</title>
    <url>/543/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-543"><a href="#Problem-543" class="headerlink" title="Problem 543"></a><a href="https://projecteuler.net/problem=543">Problem 543</a></h1><hr>
<p><strong>Prime-Sum Numbers</strong></p>
<p>Define function P(n,k) = 1 if n can be written as the sum of k prime numbers (with repetitions allowed), and P(n,k) = 0 otherwise.</p>
<p>For example, P(10,2) = 1 because 10 can be written as either 3 + 7 or 5 + 5, but P(11,2) = 0 because no two primes can sum to 11.</p>
<p>Let S(n) be the sum of all P(i,k) over 1 ≤ i,k ≤ n.</p>
<p>For example, S(10) = 20, S(100) = 2402, and S(1000) = 248838.</p>
<p>Let F(k) be the k<sup>th</sup> Fibonacci number (with F(0) = 0 and F(1) = 1).</p>
<p>Find the sum of all S(F(k)) over 3 ≤ k ≤ 44</p>
<hr>
<p><strong>素和数</strong></p>
<p>定义函数P(n,k)如下，若n能够写成k个可重复素数的和，则值为1，否则值为0。</p>
<p>例如，P(10,2) = 1因为10可以写成3 + 7或者5 + 5，但是P(11,2) = 0因为不存在两个素数的和为11。</p>
<p>记S(n)是所有满足1 ≤ i,k ≤ n的P(i,k)之和。</p>
<p>例如，S(10) = 20，S(100) = 2402，以及S(1000) = 248838。</p>
<p>记F(k)是第k个斐波那契数（初值为F(0) = 0和F(1) = 1）。</p>
<p>对于所有3 ≤ k ≤ 44，求S(F(k))的和。 </p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 545</title>
    <url>/545/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-545"><a href="#Problem-545" class="headerlink" title="Problem 545"></a><a href="https://projecteuler.net/problem=545">Problem 545</a></h1><hr>
<p><strong>Faulhaber’s Formulas</strong></p>
<p>The sum of the k<sup>th</sup> powers of the first n positive integers can be expressed as a polynomial of degree k+1 with rational coefficients, the <b>Faulhaber’s Formulas</b>:<br>$$1^k + 2^k + … + n^k = \sum_{i=1}^n i^k = \sum_{i=1}^{k+1} a_{i} n^i = a_{1} n + a_{2} n^2 + … + a_{k} n^k + a_{k+1} n^{k + 1},$$<br>where a<sub>i</sub>‘s are rational coefficients that can be written as reduced fractions p<sub>i</sub>/q<sub>i</sub> (if a<sub>i</sub>&nbsp;=&nbsp;0, we shall consider q<sub>i</sub>&nbsp;=&nbsp;1).</p>
<p>For example, $1^4 + 2^4 + … + n^4 = -\frac{1}{30}n + \frac{1}{3}n^3 + \frac{1}{2}n^4 + \frac{1}{5}n^5$.</p>
<p>Define D(k) as the value of q<sub>1</sub> for the sum of k<sup>th</sup> powers (i.e. the denominator of the reduced fraction a<sub>1</sub>).<br>Define F(m) as the m<sup>th</sup> value of k&nbsp;≥&nbsp;1 for which D(k)&nbsp;=&nbsp;20010.<br>You are given D(4) = 30 (since a<sub>1</sub>&nbsp;=&nbsp;-1/30), D(308)&nbsp;=&nbsp;20010, F(1)&nbsp;=&nbsp;308, F(10)&nbsp;=&nbsp;96404.</p>
<p>Find F(10<sup>5</sup>).</p>
<hr>
<p><strong>福尔哈贝尔公式</strong></p>
<p>前n个正整数的k次幂的和可以用一个k+1次有理系数多项式来表示，称为<b>福尔哈贝尔公式</b>：<br>$$1^k + 2^k + … + n^k = \sum_{i=1}^n i^k = \sum_{i=1}^{k+1} a_{i} n^i = a_{1} n + a_{2} n^2 + … + a_{k} n^k + a_{k+1} n^{k + 1},$$<br>每个系数a<sub>i</sub>都是有理数，因而可以写成最简形式p<sub>i</sub>/q<sub>i</sub>（如果a<sub>i</sub>&nbsp;=&nbsp;0，我们约定q<sub>i</sub>&nbsp;=&nbsp;1）。</p>
<p>例如，$1^4 + 2^4 + … + n^4 = -\frac{1}{30}n + \frac{1}{3}n^3 + \frac{1}{2}n^4 + \frac{1}{5}n^5$。</p>
<p>记D(k)为k次幂的福尔哈贝尔公式中q<sub>1</sub>的值（也即a<sub>1</sub>化简后的分母）。<br>记F(m)为使得D(k)&nbsp;=&nbsp;20010的第m个k值。<br>已知D(4) = 30（因为a<sub>1</sub>&nbsp;=&nbsp;-1/30），D(308)&nbsp;=&nbsp;20010，F(1)&nbsp;=&nbsp;308，F(10)&nbsp;=&nbsp;96404。</p>
<p>求F(10<sup>5</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 546</title>
    <url>/546/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-546"><a href="#Problem-546" class="headerlink" title="Problem 546"></a><a href="https://projecteuler.net/problem=546">Problem 546</a></h1><hr>
<p><strong>The Floor’s Revenge</strong></p>
<p>Define $f_k(n)=\sum^{n}_{i=0}f_k(\lfloor \frac{i}{k} \rfloor)$ where $f_k(0)=1$ and $\lfloor x \rfloor$ denotes the floor function.</p>
<p>For example, f<sub>5</sub>(10) = 18, f<sub>7</sub>(100) = 1003, and f<sub>2</sub>(10<sup>3</sup>) = 264830889564.</p>
<p>Find $(\sum^{10}_{k=2}f_k(10^{14})) \text{ mod } (10^9+7)$.</p>
<hr>
<p><strong>地板的复仇</strong></p>
<p>记$f_k(n)=\sum^{n}_{i=0}f_k(\lfloor \frac{i}{k} \rfloor)$，其中$f_k(0)=1$ ，$\lfloor x \rfloor$表示地板函数（下取整函数）。</p>
<p>例如，f<sub>5</sub>(10) = 18，f<sub>7</sub>(100) = 1003，以及f<sub>2</sub>(10<sup>3</sup>) = 264830889564。</p>
<p>求$(\sum^{10}_{k=2}f_k(10^{14})) \text{ mod } (10^9+7)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 547</title>
    <url>/547/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-547"><a href="#Problem-547" class="headerlink" title="Problem 547"></a><a href="https://projecteuler.net/problem=547">Problem 547</a></h1><hr>
<p><strong>Distance of random points within hollow square laminae</strong></p>
<p>Assuming that two points are chosen randomly (with <b>uniform distribution</b>) within a rectangle, it is possible to determine the <b>expected value</b> of the distance between these two points.</p>
<p>For example, the expected distance between two random points in a unit square is about 0.521405, while the expected distance between two random points in a rectangle with side lengths 2 and 3 is about 1.317067.</p>
<p>Now we define a <i>hollow square lamina</i> of size n to be an integer sized square with side length n ≥ 3 consisting of n<sup>2</sup> unit squares from which a rectangle consisting of x × y unit squares (1 ≤ x,y ≤ n - 2) within the original square has been removed.</p>
<p>For n = 3 there exits only one hollow square lamina:</p>
<center><img src="/resources/images/0547-holes-1.png" alt="p547-holes-1.png"></center>

<p>For n = 4 you can find 9 distinct hollow square laminae, allowing shapes to reappear in rotated or mirrored form:</p>
<center><img src="/resources/images/0547-holes-2.png" alt="p547-holes-2.png"></center>

<p>Let S(n) be the sum of the expected distance between two points chosen randomly within each of the possible hollow square laminae of size n. The two points have to lie within the area left after removing the inner rectangle, i.e. the gray-colored areas in the illustrations above.</p>
<p>For example, S(3) = 1.6514 and S(4) = 19.6564, rounded to four digits after the decimal point.</p>
<p>Find S(40) rounded to four digits after the decimal point.</p>
<hr>
<p><strong>带洞正方形内任意点间距离</strong></p>
<p>在长方形中（<b>均匀地</b>）随机选择两个点，可以算出两点间距离的<b>期望值</b>。</p>
<p>例如，在单位正方形中任意两点间距离的期望约为0.521405，而在宽为2长为3的长方形中任意两点间距离的期望约为1.317067。</p>
<p>从边长为整数n ≥ 3、含有n<sup>2</sup>个单位正方形的大正方形中，去掉一个由x × y个单位正方形组成的长方形（1 ≤ x,y ≤ n - 2），我们称剩下的图形为边长为n的<i class=zh>带洞正方形</i>。</p>
<p>当n = 3时，只有一种带洞正方形：</p>
<center><img src="/resources/images/0547-holes-1.png" alt="p547-holes-1.png"></center>

<p>当n = 4时，不考虑旋转和翻转，你能找出9种不同的带洞正方形：</p>
<center><img src="/resources/images/0547-holes-2.png" alt="p547-holes-2.png"></center>

<p>记S(n)是所有可能的边长为n的带洞正方形中任意两点间距离的期望之和。这里的任意两点必须在大正方形去除内部长方形后剩下的区域，也即上图中的灰色区域。</p>
<p>例如，S(3) = 1.6514而S(4) = 19.6564，均保留小数点后4位小数。</p>
<p>求S(40)并保留小数点后4位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 548</title>
    <url>/548/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-548"><a href="#Problem-548" class="headerlink" title="Problem 548"></a><a href="https://projecteuler.net/problem=548">Problem 548</a></h1><hr>
<p><strong>Gozinta Chains</strong></p>
<p>A <b>gozinta chain</b> for n is a sequence {1,a,b,…,n} where each element properly divides the next.<br>There are eight gozinta chains for 12:<br>{1,12} ,{1,2,12}, {1,2,4,12}, {1,2,6,12}, {1,3,12}, {1,3,6,12}, {1,4,12} and {1,6,12}.<br>Let g(n) be the number of gozinta chains for n, so g(12)=8.<br>g(48)=48 and g(120)=132.</p>
<p>Find the sum of the numbers n not exceeding 10<sup>16</sup> for which g(n)=n.</p>
<hr>
<p><strong>因子链</strong></p>
<p>n的<b>因子链</b>指的是一个序列{1,a,b,…,n}，其中每个元素都整除后一个元素。<br>12有八条因子链：<br>{1,12}，{1,2,12}，{1,2,4,12}，{1,2,6,12}，{1,3,12}，{1,3,6,12}，{1,4,12}和{1,6,12}。<br>记g(n)为n的因子链的数目，所以g(12)=8。<br>已知g(48)=48以及g(120)=132。</p>
<p>在所有不超过10<sup>16</sup>的数中，求出所有满足g(n)=n的数n之和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 55</title>
    <url>/55/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-55"><a href="#Problem-55" class="headerlink" title="Problem 55"></a><a href="https://projecteuler.net/problem=55">Problem 55</a></h1><hr>
<h2 id="Lychrel-Numbers"><a href="#Lychrel-Numbers" class="headerlink" title="Lychrel Numbers"></a><strong>Lychrel Numbers</strong></h2><p>If we take $47$, reverse and add, $47 + 74 = 121$, which is palindromic.</p>
<p>Not all numbers produce palindromes so quickly. For example,</p>
<p>$$<br>\begin{aligned}<br>&amp;349 + 943 = 1292\\<br>&amp;1292 + 2921 = 4213\\<br>&amp;4213 + 3124 = 7337\\<br>\end{aligned}<br>$$</p>
<p>That is, $349$ took three iterations to arrive at a palindrome.</p>
<p>Although no one has proved it yet, it is thought that some numbers, like $196$, never produce a palindrome. A number that never forms a palindrome through the reverse and add process is called a Lychrel number. Due to the theoretical nature of these numbers, and for the purpose of this problem, we shall assume that a number is Lychrel until proven otherwise. In addition you are given that for every number below ten-thousand, it will either (i) become a palindrome in less than fifty iterations, or, (ii) no one, with all the computing power that exists, has managed so far to map it to a palindrome. In fact, $10677$ is the first number to be shown to require over fifty iterations before producing a palindrome:<br>$4668731596684224866951378664$ ($53$ iterations, $28$-digits).</p>
<p>Surprisingly, there are palindromic numbers that are themselves Lychrel numbers; the first example is $4994$.</p>
<p>How many Lychrel numbers are there below ten-thousand?</p>
<p>NOTE: Wording was modified slightly on 24 April 2007 to emphasise the theoretical nature of Lychrel numbers.</p>
<hr>
<h2 id="利克瑞尔数"><a href="#利克瑞尔数" class="headerlink" title="利克瑞尔数"></a><strong>利克瑞尔数</strong></h2><p>将$47$倒序并相加得到$47 + 74 = 121$，是一个回文数。</p>
<p>不是所有的数都能像这样迅速地变成回文数。例如，</p>
<p>$$<br>\begin{aligned}<br>&amp;349 + 943 = 1292\\<br>&amp;1292 + 2921 = 4213\\<br>&amp;4213 + 3124 = 7337\\<br>\end{aligned}<br>$$</p>
<p>也就是说，$349$需要迭代三次才能变成回文数。</p>
<p>尽管尚未被证实，但有些数，例如$196$，被认为永远不可能变成回文数。如果一个数永远不可能通过倒序并相加变成回文数，就被称为利克瑞尔数。出于理论的限制和问题的要求，我们姑且假设，对于任意一个数，除非已经通过计算证否，否则就是利克瑞尔数。此外，已知对于任意一个小于一万的数，它要么在迭代五十次以内变成回文数，要么就是没有人能够利用现今所有的计算能力将其迭代变成回文数。事实上，$10677$是第一个需要超过五十次迭代变成回文数的数，这个回文数是<br>$4668731596684224866951378664$（$53$次迭代，$28$位数）。</p>
<p>令人惊讶的是，有些回文数本身也是利克瑞尔数；第一个例子是$4994$。</p>
<p>小于一万的数中有多少利克瑞尔数？</p>
<p>注意：2007年4月24日，题目略作修改，以强调目前利克瑞尔数理论的限制。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 549</title>
    <url>/549/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-549"><a href="#Problem-549" class="headerlink" title="Problem 549"></a><a href="https://projecteuler.net/problem=549">Problem 549</a></h1><hr>
<p><strong>Divisibility of factorials</strong></p>
<p>The smallest number m such that 10 divides m! is m=5.<br>The smallest number m such that 25 divides m! is m=10.</p>
<p>Let s(n) be the smallest number m such that n divides m!.<br>So s(10)=5 and s(25)=10.<br>Let S(n) be ∑s(i) for 2 ≤ i ≤ n.<br>S(100)=2012.</p>
<p>Find S(10<sup>8</sup>).</p>
<hr>
<p><strong>阶乘的整除性</strong></p>
<p>使m!能被10整除的最小的m为m=5。<br>使m!能被25整除的最小的m为m=10。</p>
<p>记使m!能被n整除的最小的m为s(n)。<br>因此s(10)=5，s(25)=10。<br>记S(n)为∑s(i)，其中2 ≤ i ≤ n。<br>已知S(100)=2012。</p>
<p>求S(10<sup>8</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 550</title>
    <url>/550/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-550"><a href="#Problem-550" class="headerlink" title="Problem 550"></a><a href="https://projecteuler.net/problem=550">Problem 550</a></h1><hr>
<p><strong>Divisor game</strong></p>
<p>Two players are playing a game. There are k piles of stones. When it is his turn a player has to choose a pile and replace it by two piles of stones under the following two conditions:</p>
<ul>
<li>Both new piles must have a number of stones more than one and less than the number of stones of the original pile.</li>
<li>The number of stones of each of the new piles must be a divisor of the number of stones of the original pile.</li>
</ul>
<p>The first player unable to make a valid move loses.<br>Let f(n,k) be the number of winning positions for the first player, assuming perfect play, when the game is played with k piles each having between 2 and n stones (inclusively).f(10,5)=40085.</p>
<p>Find  f(10<sup>7</sup>,10<sup>12</sup>).Give your answer modulo 987654321.</p>
<hr>
<p><strong>约数游戏</strong></p>
<p>两位玩家正在玩一个游戏：一开始，一共有k堆石子；每位玩家在轮到自己时，根据以下两个条件，选择一个堆，并将其换成两堆石子：</p>
<ul>
<li>新的两堆石子的数目必须大于1且小于原来那一堆石子的数目；</li>
<li>新的两堆石子的数目必须是原来那一堆石子的数目的约数。</li>
</ul>
<p>首先无法进行操作的玩家落败。<br>如果游戏一开始有k个堆，每堆石子的数目在2至n之间（含），记所有可能的游戏初始局面中先手玩家必胜的局面数为f(n,k)。已知f(10,5)=40085。</p>
<p>求f(10<sup>7</sup>,10<sup>12</sup>)，将你的答案对987654321取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 553</title>
    <url>/553/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-553"><a href="#Problem-553" class="headerlink" title="Problem 553"></a><a href="https://projecteuler.net/problem=553">Problem 553</a></h1><hr>
<p><strong>Power sets of power sets</strong></p>
<p>Let P(n) be the set of the first n positive integers {1, 2, …, n}.<br>Let Q(n) be the set of all the non-empty subsets of P(n).<br>Let R(n) be the set of all the non-empty subsets of Q(n).</p>
<p>An element X $\in$ R(n) is a non-empty subset of Q(n), so it is itself a set.<br>From X we can construct a graph as follows:</p>
<ul>
<li>Each element Y $\in$ X corresponds to a vertex and labeled with Y;</li>
<li>Two vertices Y<sub>1</sub> and Y<sub>2</sub> are connected if Y<sub>1</sub>$\cap$Y<sub>2</sub>$\neq \emptyset$.</li>
</ul>
<p>For example, X={ {1},{1,2,3},{3},{5,6},{6,7} } results in the following graph:</p>
<center><img src="/resources/images/0553-power-sets.gif" alt="p553-power-sets.gif"></center>

<p>This graph has two <b>connected components</b>.</p>
<p>Let C(n,k) be the number of elements of R(n) that have exactly k connected components in their graph.<br>You are given C(2,1)=6, C(3,1)=111, C(4,2)=486, C(100,10) mod 1000000007 = 728209718.</p>
<p>Find C(10<sup>4</sup>,10) mod 1000000007.</p>
<hr>
<p><strong>幂集的幂集</strong></p>
<p>记P(n)为前n个正整数的集合{1, 2, …, n}。<br>记Q(n)为P(n)所有非空子集构成的集合。<br>记R(n)为Q(n)所有非空子集构成的集合。</p>
<p>元素X$\in$R(n)是Q(n)的一个非空子集，因此也是一个集合。<br>由X我们可以作出如下的一张图：</p>
<ul>
<li>为每个元素Y$\in$X作一个顶点并标记为Y；</li>
<li>如果Y<sub>1</sub>$\cap$Y<sub>2</sub>$\neq \emptyset$则连接顶点Y<sub>1</sub>和Y<sub>2</sub>。</li>
</ul>
<p>例如，由集合X={ {1},{1,2,3},{3},{5,6},{6,7} }能作出如下一张图：</p>
<center><img src="/resources/images/0553-power-sets.gif" alt="p553-power-sets.gif"></center>

<p>这张图有两个<b>连通分量</b>。</p>
<p>记C(n,k)为R(n)中能绘制出恰好k个连通分量的元素的数目。<br>已知C(2,1)=6，C(3,1)=111，C(4,2)=486，C(100,10) mod 1000000007 = 728209718。</p>
<p>求C(10<sup>4</sup>,10) mod 1000000007。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 551</title>
    <url>/551/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-551"><a href="#Problem-551" class="headerlink" title="Problem 551"></a><a href="https://projecteuler.net/problem=551">Problem 551</a></h1><hr>
<p><strong>Sum of digits sequence</strong></p>
<p>Let a<sub>0</sub>, a<sub>1</sub>, a<sub>2</sub>, … be an integer sequence defined by:</p>
<ul>
<li>a<sub>0</sub> = 1;</li>
<li>for n ≥ 1, a<sub>n</sub> is the sum of the digits of all preceding terms.</li>
</ul>
<p>The sequence starts with 1, 1, 2, 4, 8, 16, 23, 28, 38, 49, …<br>You are given a<sub>10<sup>6</sup></sub>&nbsp;=&nbsp;31054319.</p>
<p>Find a<sub>10<sup>15</sup></sub>.</p>
<hr>
<p><strong>数字和序列</strong></p>
<p>a<sub>0</sub>, a<sub>1</sub>, a<sub>2</sub>, … 是按如下方式定义的整数序列：</p>
<ul>
<li>a<sub>0</sub> = 1；</li>
<li>对于n ≥ 1，a<sub>n</sub>是其之前所有项的数字和。</li>
</ul>
<p>序列一开始的几项是1, 1, 2, 4, 8, 16, 23, 28, 38, 49, …<br>已知a<sub>10<sup>6</sup></sub>&nbsp;=&nbsp;31054319。</p>
<p>求a<sub>10<sup>15</sup></sub>。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 552</title>
    <url>/552/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-552"><a href="#Problem-552" class="headerlink" title="Problem 552"></a><a href="https://projecteuler.net/problem=552">Problem 552</a></h1><hr>
<p><strong>Chinese leftovers II</strong></p>
<p>Let A<sub>n</sub> be the smallest positive integer satisfying  A<sub>n</sub> mod p<sub>i</sub> = i  for all 1 ≤ i ≤ n, where p<sub>i</sub> is the i-th prime.<br>For example A<sub>2</sub> = 5, since this is the smallest positive solution of the system of equations </p>
<ul>
<li>A<sub>2</sub> mod 2 = 1 </li>
<li>A<sub>2</sub> mod 3 = 2</li>
</ul>
<p>The system of equations for A<sub>3</sub> adds another constraint. That is, A<sub>3</sub> is the smallest positive solution of</p>
<ul>
<li>A<sub>3</sub> mod 2 = 1 </li>
<li>A<sub>3</sub> mod 3 = 2</li>
<li>A<sub>3</sub> mod 5 = 3</li>
</ul>
<p>and hence A<sub>3</sub> = 23. Similarly, one gets A<sub>4</sub> = 53 and A<sub>5</sub> = 1523.</p>
<p>Let S(n) be the sum of all primes up to n that divide at least one element in the sequence A.<br>For example, S(50) = 69 = 5 + 23 + 41, since 5 divides A<sub>2</sub>, 23 divides A<sub>3</sub> and 41 divides A<sub>10</sub> = 5765999453. No other prime number up to 50 divides an element in A.</p>
<p>Find S(300000).</p>
<hr>
<p><strong>中国剩余定理II</strong></p>
<p>记A<sub>n</sub>为满足A<sub>n</sub> mod p<sub>i</sub> = i对所有1 ≤ i ≤ n成立的最小正整数，其中p<sub>i</sub>表示第i个素数。<br>例如，A<sub>2</sub> = 5，因为5是如下方程组的最小正整数解</p>
<ul>
<li>A<sub>2</sub> mod 2 = 1 </li>
<li>A<sub>2</sub> mod 3 = 2</li>
</ul>
<p>A<sub>3</sub>需要多满足一个方程，也就是说，A<sub>3</sub>是如下方程组的最小正整数解</p>
<ul>
<li>A<sub>3</sub> mod 2 = 1 </li>
<li>A<sub>3</sub> mod 3 = 2</li>
<li>A<sub>3</sub> mod 5 = 3</li>
</ul>
<p>因此A<sub>3</sub> = 23。同样地我们能够得到A<sub>4</sub> = 53以及A<sub>5</sub> = 1523。</p>
<p>记S(n)为所有小于等于n且至少整除序列A中一个元素的素数之和。<br>例如，S(50) = 69 = 5 + 23 + 41，因为5整除A<sub>2</sub>，23整除A<sub>3</sub>，以及41整除A<sub>10</sub> = 5765999453。其它小于等于50的素数都不能整除A中的任意一个元素。</p>
<p>求S(300000)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 555</title>
    <url>/555/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-555"><a href="#Problem-555" class="headerlink" title="Problem 555"></a><a href="https://projecteuler.net/problem=555">Problem 555</a></h1><hr>
<p><strong>McCarthy 91 function</strong></p>
<p>The McCarthy 91 function is defined as follows:</p>
<p>$M_{91}(n) =  \begin{cases} n - 10 &amp; \text{if } n &gt; 100 \\ M_{91}(M_{91}(n+11)) &amp; \text{if } 0 \leq n \leq 100 \end{cases}$</p>
<p>We can generalize this definition by abstracting away the constants into new variables:</p>
<p>$M_{m,k,s}(n) =  \begin{cases} n - s &amp; \text{if } n &gt; m \\ M_{m,k,s}(M_{m,k,s}(n+k)) &amp; \text{if } 0 \leq n \leq m \end{cases}$</p>
<p>This way, we have $M_{91} = M_{100,11,10}$.</p>
<p>Let $F_{m,k,s}$ be the set of fixed points of $M_{m,k,s}$. That is, </p>
<p>$F_{m,k,s}= \{ n \in \mathbb{N} , | , M_{m,k,s}(n) = n \}$</p>
<p>For example, the only fixed point of $M_{91}$ is $n = 91$. In other words, $F_{100,11,10}= \{91\}$.</p>
<p>Now, define $SF(m,k,s)$ as the sum of the elements in $F_{m,k,s}$ and let $S(p,m) = \displaystyle \sum_{1 \leq s &lt; k \leq p}{SF(m,k,s)}$.</p>
<p>For example, $S(10, 10) = 225$ and $S(1000, 1000)=208724467$.</p>
<p>Find $S(10^6, 10^6)$.</p>
<hr>
<p><strong>麦卡锡91函数</strong></p>
<p>麦卡锡91函数的定义如下：</p>
<p>$M_{91}(n) =  \begin{cases} n - 10 &amp; \text{if } n &gt; 100 \\ M_{91}(M_{91}(n+11)) &amp; \text{if } 0 \leq n \leq 100 \end{cases}$</p>
<p>通过将上述定义中的常数抽象为变量，我们可以将这个定义一般化：</p>
<p>$M_{m,k,s}(n) =  \begin{cases} n - s &amp; \text{if } n &gt; m \\ M_{m,k,s}(M_{m,k,s}(n+k)) &amp; \text{if } 0 \leq n \leq m \end{cases}$</p>
<p>这样一来，我们有$M_{91} = M_{100,11,10}$。</p>
<p>令$F_{m,k,s}$为$M_{m,k,s}$的不动点所构成的集合，也就是说：</p>
<p>$F_{m,k,s}= \{ n \in \mathbb{N} , | , M_{m,k,s}(n) = n \}$</p>
<p>例如，$M_{91}$只有一个不动点$n = 91$，换言之就是$F_{100,11,10}= \{91\}$。</p>
<p>定义$SF(m,k,s)$为$F_{m,k,s}$中元素的和，并记$S(p,m) = \displaystyle \sum_{1 \leq s &lt; k \leq p}{SF(m,k,s)}$。</p>
<p>已知$S(10, 10) = 225$以及$S(1000, 1000)=208724467$。</p>
<p>求$S(10^6, 10^6)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 554</title>
    <url>/554/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-554"><a href="#Problem-554" class="headerlink" title="Problem 554"></a><a href="https://projecteuler.net/problem=554">Problem 554</a></h1><hr>
<p><strong>Centaurs on a chess board</strong></p>
<p>On a chess board, a centaur moves like a king or a knight. The diagram below shows the valid moves of a centaur (represented by an inverted king) on an 8x8 board.</p>
<center><img src="/resources/images/0554-centaurs.png" alt="p554-centaurs.png"></center>

<p>It can be shown that at most n<sup>2</sup> non-attacking centaurs can be placed on a board of size 2n×2n.<br>Let C(n) be the number of ways to place n<sup>2</sup> centaurs on a 2n×2n board so that no centaur attacks another directly.<br>For example C(1)&nbsp;=&nbsp;4, C(2)&nbsp;=&nbsp;25, C(10)&nbsp;=&nbsp;1477721.</p>
<p>Let F<sub>i</sub> be the i<sup>th</sup> Fibonacci number defined as F<sub>1</sub>&nbsp;=&nbsp;F<sub>2</sub>&nbsp;=&nbsp;1 and F<sub>i</sub>&nbsp;=&nbsp;F<sub>i-1</sub>&nbsp;+&nbsp;F<sub>i-2</sub> for i&nbsp;&gt;&nbsp;2.</p>
<p>Find $\displaystyle \left( \sum_{i=2}^{90} C(F_i) \right) \text{mod } (10^8+7)$.</p>
<hr>
<p><strong>棋盘上的半人马</strong></p>
<p>在国际象棋棋盘上，半人马可以像国王或者骑士那样移动。如下的图象说明了半人马（用颠倒的国王表示）在8x8的棋盘上的有效移动范围。</p>
<center><img src="/resources/images/0554-centaurs.png" alt="p554-centaurs.png"></center>

<p>可以证明，在一个2nx2n的棋盘上，最多可以放置n<sup>2</sup>个互不攻击的半人马。<br>记C(n)为在2nx2n的的棋盘上放置n<sup>2</sup>个互不攻击的半人马的方式数。<br>例如，C(1)&nbsp;=&nbsp;4，C(2)&nbsp;=&nbsp;25，C(10)&nbsp;=&nbsp;1477721。</p>
<p>记F<sub>i</sub>为第i个斐波那契数，斐波那契数的定义为F<sub>1</sub>&nbsp;=&nbsp;F<sub>2</sub>&nbsp;=&nbsp;1且当i&nbsp;&gt;&nbsp;2时F<sub>i</sub>&nbsp;=&nbsp;F<sub>i-1</sub>&nbsp;+&nbsp;F<sub>i-2</sub>。</p>
<p>求$\displaystyle \left( \sum_{i=2}^{90} C(F_i) \right) \text{mod } (10^8+7)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 556</title>
    <url>/556/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-556"><a href="#Problem-556" class="headerlink" title="Problem 556"></a><a href="https://projecteuler.net/problem=556">Problem 556</a></h1><hr>
<p><strong>Squarefree Gaussian Integers</strong></p>
<p>A <b>Gaussian integer</b> is a number z = a + bi where a, b are integers and i<sup>2</sup> = -1.<br>Gaussian integers are a subset of the complex numbers, and the integers are the subset of Gaussian integers for which b = 0.</p>
<p>A Gaussian integer <b>unit</b> is one for which a<sup>2</sup> + b<sup>2</sup> = 1, i.e. one of 1, i, -1, -i.<br>Let’s define a <i>proper</i> Gaussian integer as one for which a &gt; 0 and b ≥ 0.</p>
<p>A Gaussian integer z<sub>1</sub> = a<sub>1</sub> + b<sub>1</sub>i is said to be divisible by z<sub>2</sub> = a<sub>2</sub> + b<sub>2</sub>i if z<sub>3</sub> = a<sub>3</sub> + b<sub>3</sub>i = z<sub>1</sub>/z<sub>2</sub> is a Gaussian integer.<br>$$\frac {z_1} {z_2} = \frac {a_1 + b_1 i} {a_2 + b_2 i} = \frac {(a_1 + b_1 i)(a_2 - b_2 i)} {(a_2 + b_2 i)(a_2 - b_2 i)} = \frac {a_1 a_2 + b_1 b_2} {a_2^2 + b_2^2} + \frac  {a_2 b_1 - a_1 b_2}  {a_2^2 + b_2^2}i = a_3 + b_3 i$$<br>So, z<sub>1</sub> is divisible by z<sub>2</sub> if $\frac {a_1 a_2 + b_1 b_2} {a_2^2 + b_2^2}$ and $\frac  {a_2 b_1 - a_1 b_2}  {a_2^2 + b_2^2}$ are integers.<br>For example, 2 is divisible by 1 + i because 2/(1 + i) = 1 - i is a Gaussian integer.</p>
<p>A <b>Gaussian prime</b> is a Gaussian integer that is divisible only by a unit, itself or itself times a unit.<br>For example, 1 + 2i is a Gaussian prime, because it is only divisible by 1, i, -1, -i, 1 + 2i, i(1 + 2i) = i - 2, -(1 + 2i) = -1 - 2i and -i(1 + 2i) = 2 - i.<br>2 is not a Gaussian prime as it is divisible by 1 + i.</p>
<p>A Gaussian integer can be uniquely factored as the product of a unit and proper Gaussian primes.<br>For example 2 = -i(1 + i)<sup>2</sup> and 1 + 3i = (1 + i)(2 + i).<br>A Gaussian integer is said to be squarefree if its prime factorization does not contain repeated proper Gaussian primes.<br>So 2 is not squarefree over the Gaussian integers, but 1 + 3i is.<br>Units and Gaussian primes are squarefree by definition.</p>
<p>Let f(n) be the count of proper squarefree Gaussian integers with a<sup>2</sup> + b<sup>2</sup> ≤ n.<br>For example f(10) = 7 because 1, 1 + i, 1 + 2i, 1 + 3i = (1 + i)(2 + i), 2 + i, 3 and 3 + i = -i(1 + i)(1 + 2i) are squarefree, while 2 = -i(1 + i)<sup>2</sup> and 2 + 2i = -i(1 + i)<sup>3</sup> are not.<br>You are given f(10<sup>2</sup>) = 54, f(10<sup>4</sup>) = 5218 and f(10<sup>8</sup>) = 52126906.</p>
<p>Find f(10<sup>14</sup>).</p>
<hr>
<p><strong>无平方因子的高斯整数</strong></p>
<p><b>高斯整数</b>是指形如z = a + bi的数，其中a, b均为整数，i<sup>2</sup> = -1。<br>高斯整数是复数的一个子集，而一般意义上的整数又是高斯整数取b = 0的一个子集。</p>
<p>高斯整数的<b>单位</b>满足a<sup>2</sup> + b<sup>2</sup> = 1，这样的数包括1, i, -1, -i。<br>我们定义<i class=zh>真</i>高斯整数为满足a &gt; 0且b ≥ 0的高斯整数。</p>
<p>如果z<sub>3</sub> = a<sub>3</sub> + b<sub>3</sub>i = z<sub>1</sub>/z<sub>2</sub>仍然是高斯整数，我们就称高斯整数z<sub>1</sub> = a<sub>1</sub> + b<sub>1</sub>i能够被z<sub>2</sub> = a<sub>2</sub> + b<sub>2</sub>i整除。<br>$$\frac {z_1} {z_2} = \frac {a_1 + b_1 i} {a_2 + b_2 i} = \frac {(a_1 + b_1 i)(a_2 - b_2 i)} {(a_2 + b_2 i)(a_2 - b_2 i)} = \frac {a_1 a_2 + b_1 b_2} {a_2^2 + b_2^2} + \frac  {a_2 b_1 - a_1 b_2}  {a_2^2 + b_2^2}i = a_3 + b_3 i$$<br>因此，z<sub>1</sub>被z<sub>2</sub>整除当且仅当$\frac {a_1 a_2 + b_1 b_2} {a_2^2 + b_2^2}$和$\frac  {a_2 b_1 - a_1 b_2}  {a_2^2 + b_2^2}$都是整数。<br>例如，2被1 + i整除，因为2/(1 + i) = 1 - i是高斯整数。</p>
<p><b>高斯素数</b>是指只能被单位、其本身或其本身乘以单位所整除的高斯整数。<br>例如，1 + 2i是高斯素数，因为它只能被1, i, -1, -i, 1 + 2i, i(1 + 2i) = i - 2, -(1 + 2i) = -1 - 2i和-i(1 + 2i) = 2 - i整除。<br>2不是高斯素数，因为它被1 + i整除。</p>
<p>任意高斯整数可以唯一地分解为一个单位和一系列真高斯素数的乘积。<br>例如，2 = -i(1 + i)<sup>2</sup>，以及1 + 3i = (1 + i)(2 + i)。<br>如果一个高斯整数的素数分解中不包含重复的真高斯素数，我们称这个高斯整数无平方因子。<br>因此在高斯整数中，2不是无平方因子的，而1 + 3i是无平方因子的。<br>根据定义，单位和高斯素数都是无平方因子的。</p>
<p>记f(n)为所有满足a<sup>2</sup> + b<sup>2</sup> ≤ n的无平方因子真高斯整数的数目。<br>例如，f(10) = 7因为1, 1 + i, 1 + 2i, 1 + 3i = (1 + i)(2 + i), 2 + i, 3和3 + i = -i(1 + i)(1 + 2i)是无平方因子的，而2 = -i(1 + i)<sup>2</sup>和2 + 2i = -i(1 + i)<sup>3</sup>不是。<br>已知f(10<sup>2</sup>) = 54，f(10<sup>4</sup>) = 5218以及f(10<sup>8</sup>) = 52126906。</p>
<p>求f(10<sup>14</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 557</title>
    <url>/557/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-557"><a href="#Problem-557" class="headerlink" title="Problem 557"></a><a href="https://projecteuler.net/problem=557">Problem 557</a></h1><hr>
<p><strong>Cutting triangles</strong></p>
<p>A triangle is cut into four pieces by two straight lines, each starting at one vertex and ending on the opposite edge. This results in forming three smaller triangular pieces, and one quadrilateral.  If the original triangle has an integral area, it is often possible to choose cuts such that all of the four pieces also have integral area.  For example, the diagram below shows a triangle of area 55 that has been cut in this way.</p>
<center><img src="/resources/images/0557-triangle.gif" alt="p557-triangle.gif"></center>

<p>Representing the areas as a, b, c and d, in the example above, the individual areas are a = 22, b = 8, c = 11 and d = 14.  It is also possible to cut a triangle of area 55 such that a = 20, b = 2, c = 24, d = 9.</p>
<p>Define a triangle cutting quadruple (a, b, c, d) as a valid integral division of a triangle, where a is the area of the triangle between the two cut vertices, d is the area of the quadrilateral and b and c are the areas of the two other triangles, with the restriction that b ≤ c.  The two solutions described above are (22,8,11,14) and (20,2,24,9).  These are the only two possible quadruples that have a total area of 55.</p>
<p>Define S(n) as the sum of the area of the uncut triangles represented by all valid quadruples with a+b+c+d ≤ n.<br>For example, S(20) = 259.  </p>
<p>Find S(10000).</p>
<hr>
<p><strong>切割三角形</strong></p>
<p>一个三角形可以被两条由顶点引向对边的直线切割成四块，其中包括三个较小的三角形和一个四边形。如果原三角形的面积是整数，通常能够找到一种切割方式，使得切割后的四小块的面积仍然保持整数。例如，下图展示了一个被切割的面积为55的三角形：</p>
<center><img src="/resources/images/0557-triangle.gif" alt="p557-triangle.gif"></center>

<p>将上图中切割后四小块的面积记为a，b，c和d，可知它们分别是a = 22，b = 8，c = 11以及d = 14。此外，也存在一种切割方式，将面积为55的三角形切成a = 20，b = 2，c = 24，d = 9的四小块。</p>
<p>用三角形切割四元组(a, b, c, d)来表示一个合法的三角形整数分割，其中a是包含两条直线所在顶点的三角形的面积，d是四边形的面积，b和c则是另两个三角形的面积并满足b ≤ c。上面两组切割方式可以被描述为(22,8,11,14)和(20,2,24,9)，这也是唯二总面积为55的四元组。</p>
<p>定义S(n)为所有满足a+b+c+d ≤ n的四元组所表示的原三角形的面积和。<br>例如，S(20) = 259。</p>
<p>求S(10000)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 558</title>
    <url>/558/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-558"><a href="#Problem-558" class="headerlink" title="Problem 558"></a><a href="https://projecteuler.net/problem=558">Problem 558</a></h1><hr>
<p><strong>Irrational base</strong></p>
<p>Let r be the real root of the equation x<sup>3</sup>=x<sup>2</sup>+1.<br>Every positive integer can be written as the sum of distinct increasing powers of r.<br>If we require the number of terms to be finite and the difference between any two exponents to be three or more, then the representation is unique.<br>For example, 3=r<sup>-10</sup>+r<sup>-5</sup>+r<sup>-1</sup>+r<sup>2</sup> and 10=r<sup>-10</sup>+r<sup>-7</sup>+r<sup>6</sup>.<br>Interestingly, the relation holds for the complex roots of the equation.</p>
<p>Let w(n) be the number of terms in this unique representation of n. Thus w(3)=4 and w(10)=3.</p>
<p>More formally, for all positive integers n, we have:<br>n = $\displaystyle \sum_{k=-\infty}^{\infty}$ b<sub>k</sub>r<sup>k</sup><br>under the conditions that:<br>b<sub>k</sub> is 0 or 1 for all k;<br>b<sub>k</sub>+b<sub>k+1</sub>+b<sub>k+2</sub>≤1 for all k;<br>w(n) = $\displaystyle \sum_{k=-\infty}^{\infty}$ b<sub>k</sub> is finite.</p>
<p>Let S(m)= $\displaystyle \sum_{j=1}^{m}$w(j<sup>2</sup>).<br>You are given S(10) = 61 and S(1000) = 19403.</p>
<p>Find S(5 000 000).</p>
<hr>
<p><strong>无理数进制</strong></p>
<p>记r为方程x<sup>3</sup>=x<sup>2</sup>+1的实根。<br>每一个正整数都能表示成r的不同幂的和。<br>如果我们要求级数只有有限项，而且任意两项的指数至少相差3，这样的表示是唯一的。<br>例如，3=r<sup>-10</sup>+r<sup>-5</sup>+r<sup>-1</sup>+r<sup>2</sup>，而10=r<sup>-10</sup>+r<sup>-7</sup>+r<sup>6</sup>。<br>有趣的是，这个关系对于上述方程的复根也成立。</p>
<p>记w(n)为n的上述唯一表示中的项数，因此w(3)=4而w(10)=3。</p>
<p>更正式地，对于所有正整数n，我们有：<br>n = $\displaystyle \sum_{k=-\infty}^{\infty}$ b<sub>k</sub>r<sup>k</sup><br>其中：<br>对于所有k，b<sub>k</sub>要么是0要么是1；<br>对于所有k，b<sub>k</sub>+b<sub>k+1</sub>+b<sub>k+2</sub>≤1；<br>w(n) = $\displaystyle \sum_{k=-\infty}^{\infty}$ b<sub>k</sub>是有限的。</p>
<p>记S(m)= $\displaystyle \sum_{j=1}^{m}$w(j<sup>2</sup>)。<br>已知S(10) = 61以及S(1000) = 19403。</p>
<p>求S(5 000 000)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 559</title>
    <url>/559/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-559"><a href="#Problem-559" class="headerlink" title="Problem 559"></a><a href="https://projecteuler.net/problem=559">Problem 559</a></h1><hr>
<p><strong>Permuted Matrices</strong></p>
<p>An <b>ascent</b> of a column j in a matrix occurs if the value of column j is smaller than the value of column j+1 in all rows.</p>
<p>Let P(k, r, n) be the number of r x n matrices with the following properties:</p>
<ul>
<li>The rows are permutations of {1, 2, 3, … , n}.</li>
<li>Numbering the first column as 1, a column ascent occurs at column j&lt;n <b>if and only if</b> j is not a multiple of k.</li>
</ul>
<p>For example, P(1, 2, 3) = 19, P(2, 4, 6) = 65508751 and  P(7, 5, 30) mod 1000000123 = 161858102.</p>
<p>Let Q(n) =$\displaystyle \sum_{k=1}^n$ P(k, n, n).<br>For example, Q(5) = 21879393751 and Q(50) mod 1000000123 = 819573537.</p>
<p>Find Q(50000) mod 1000000123.</p>
<hr>
<p><strong>排列矩阵</strong></p>
<p>如果在矩阵的每一行中，第j列的值都小于第j+1列的值，则称第j列<b>上升</b>。</p>
<p>记P(k, r, n)为拥有以下性质的所有r x n矩阵的数量：</p>
<ul>
<li>每一行都是{1, 2, 3, … , n}的一个排列。</li>
<li>记第一列为1，第j&lt;n列上升<b>当且仅当</b>当且仅当j不是k的倍数。</li>
</ul>
<p>例如，P(1, 2, 3) = 19，P(2, 4, 6) = 65508751以及P(7, 5, 30) mod 1000000123 = 161858102。</p>
<p>记Q(n) =$\displaystyle \sum_{k=1}^n$ P(k, n, n)。<br>例如，Q(5) = 21879393751而Q(50) mod 1000000123 = 819573537。</p>
<p>求Q(50000) mod 1000000123。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 56</title>
    <url>/56/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-56"><a href="#Problem-56" class="headerlink" title="Problem 56"></a><a href="https://projecteuler.net/problem=56">Problem 56</a></h1><hr>
<h2 id="Powerful-Digit-Sum"><a href="#Powerful-Digit-Sum" class="headerlink" title="Powerful Digit Sum"></a><strong>Powerful Digit Sum</strong></h2><p>A googol ($10^{100}$) is a massive number: one followed by one-hundred zeros; $100^{100}$ is almost unimaginably large: one followed by two-hundred zeros. Despite their size, the sum of the digits in each number is only $1$.</p>
<p>Considering natural numbers of the form, $a^b$, where $a, b&lt;100$, what is the maximum digital sum?</p>
<hr>
<h2 id="幂的数字和"><a href="#幂的数字和" class="headerlink" title="幂的数字和"></a><strong>幂的数字和</strong></h2><p>一古戈尔（$10^{100}$）是一个巨大的数字：一后面跟着一百个零。$100^{100}$则更是无法想像地巨大：一后面跟着两百个零。然而，尽管这两个数如此巨大，各位数字和却都只有$1$。</p>
<p>对于$a, b&lt;100$，考虑所有能表示为$a^b$的自然数，其中最大的各位数字和是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 560</title>
    <url>/560/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-560"><a href="#Problem-560" class="headerlink" title="Problem 560"></a><a href="https://projecteuler.net/problem=560">Problem 560</a></h1><hr>
<p><strong>Coprime Nim</strong></p>
<p>Coprime Nim is just like ordinary normal play Nim, but the players may only remove a number of stones from a pile that is <b>coprime</b> with the current size of the pile. Two players remove stones in turn. The player who removes the last stone wins.</p>
<p>Let L(n,k) be the number of <b>losing</b> starting positions for the first player, assuming perfect play, when the game is played with k piles, each having between 1 and n-1 stones inclusively.</p>
<p>For example, L(5,2)=6 since the losing initial positions are (1,1), (2,2), (2,4), (3,3), (4,2) and (4,4).<br>You are also given L(10,5)=9964, L(10,10)=472400303, L(10<sup>3</sup>,10<sup>3</sup>) mod 1000000007=954021836.</p>
<p>Find L(10<sup>7</sup>,10<sup>7</sup>) mod 1000000007.</p>
<hr>
<p><strong>互质取石子游戏</strong></p>
<p>互质取石子游戏和一般的取石子游戏基本相似，唯一的区别是玩家每次只能从一堆中移走和堆的大小<b>互质</b>数目的石子。两名玩家轮流移走石子，移走最后一枚石子的玩家获胜。</p>
<p>假定双方都采取最优策略，游戏开始时有k堆石子，每堆中有最少1枚最多n-1枚石子，记L(n,k)为所有先手玩家<b>必败态</b>的数目。</p>
<p>例如，L(5,2)=6，这些必败态分别是(1,1)，(2,2)，(2,4)，(3,3)，(4,2)和(4,4)。<br>已知L(10,5)=9964，L(10,10)=472400303，L(10<sup>3</sup>,10<sup>3</sup>) mod 1000000007=954021836。</p>
<p>求L(10<sup>7</sup>,10<sup>7</sup>) mod 1000000007。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 561</title>
    <url>/561/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-561"><a href="#Problem-561" class="headerlink" title="Problem 561"></a><a href="https://projecteuler.net/problem=561">Problem 561</a></h1><hr>
<p><strong>Divisor Pairs</strong></p>
<p>Let S(n) be the number of pairs (a,b) of distinct divisors of n such that a divides b.<br>For n=6 we get the following pairs: (1,2), (1,3), (1,6), (2,6) and (3,6). So S(6)=5.<br>Let $p_m\#$ be the product of the first m prime numbers, so $p_2\#$ = 2*3 = 6.<br>Let E(m, n) be the highest integer k such that $2^k$ divides $S((p_m\#)^n)$.<br>E(2,1) = 0 since $2^0$ is the highest power of 2 that divides S(6)=5.<br>Let $Q(n)=\sum_{i=1}^{n} E(904961, i)$.<br>Q(8)=2714886.</p>
<p>Evaluate $Q(10^{12})$.</p>
<hr>
<p><strong>约数对</strong></p>
<p>记S(n)为n的不同约数组成的约数对(a,b)的数目，其中a整除b。<br>对于n=6，我们有如下约数对：(1,2)，(1,3)，(1,6)，(2,6)和(3,6)。因此S(6)=5。<br>记$p_m\#$是前m个素数的乘积，因此$p_2\#$ = 2*3 = 6。<br>记E(m, n)为使得$2^k$整除$S((p_m\#)^n)$的最大整数k。<br>已知E(2,1) = 0，因为$2^0$是能够整除S(6)=5的2的幂中最大的数。<br>记$Q(n)=\sum_{i=1}^{n} E(904961, i)$。<br>已知Q(8)=2714886。</p>
<p>求$Q(10^{12})$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 562</title>
    <url>/562/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-562"><a href="#Problem-562" class="headerlink" title="Problem 562"></a><a href="https://projecteuler.net/problem=562">Problem 562</a></h1><hr>
<p><strong>Maximal perimeter</strong></p>
<p>Construct triangle ABC such that:</p>
<ul>
<li>Vertices A, B and C are lattice points inside or on the circle of radius r centered at the origin;</li>
<li>the triangle contains no other lattice point inside or on its edges;</li>
<li>the perimeter is maximum.</li>
</ul>
<p>Let R be the circumradius of triangle ABC and T(r) = R/r.<br>For r = 5, one possible triangle has vertices (-4,-3), (4,2) and (1,0) with perimeter $\sqrt{13}+\sqrt{34}+\sqrt{89}$ and circumradius R = $\sqrt {\frac {19669} 2 }$, so T(5) =$\sqrt {\frac {19669} {50} }$.<br>You are given T(10) ~ 97.26729 and T(100) ~ 9157.64707.</p>
<p>Find T(10<sup>7</sup>). Give your answer rounded to the nearest integer.</p>
<hr>
<p><strong>最大周长</strong></p>
<p>构造满足如下条件的三角形ABC：</p>
<ul>
<li>顶点A，B和C都是在以原点为圆心，r为半径的圆内或圆周上的格点；</li>
<li>三角形内或边上没有其它的格点；</li>
<li>周长最大。</li>
</ul>
<p>记R是三角形ABC的外接圆半径，并记T(r) = R/r。<br>对于r = 5，一种可能的方案是以(-4,-3)，(4,2)和(1,0)为顶点的三角形，周长为$\sqrt{13}+\sqrt{34}+\sqrt{89}$，外接圆半径为R = $\sqrt {\frac {19669} 2 }$，因此T(5) =$\sqrt {\frac {19669} {50} }$。<br>已知T(10) ~ 97.26729以及T(100) ~ 9157.64707。</p>
<p>求T(10<sup>7</sup>)，将你的答案四舍五入到最接近的整数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 564</title>
    <url>/564/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-564"><a href="#Problem-564" class="headerlink" title="Problem 564"></a><a href="https://projecteuler.net/problem=564">Problem 564</a></h1><hr>
<p><strong>Maximal polygons</strong></p>
<p>A line segment of length 2n-3 is randomly split into n segments of integer length ($n \ge 3$). In the sequence given by this split, the segments are then used as consecutive sides of a convex n-polygon, formed in such a way that its area is maximal. All of the $\binom{2n-4}{n-1}$ possibilities for splitting up the initial line segment occur with the same probability. </p>
<p>Let E(n) be the expected value of the area that is obtained by this procedure.<br>For example, for n=3 the only possible split of the line segment of length 3 results in three line segments with length 1, that form an equilateral triangle with an area of $\frac{1}{4}\sqrt{3}$. Therefore E(3)=0.433013, rounded to 6 decimal places.<br>For n=4 you can find 4 different possible splits, each of which is composed of three line segments with length 1 and one line segment with length 2. All of these splits lead to the same maximal quadrilateral with an area of $\frac{3}{4}\sqrt{3}$, thus E(4)=1.299038, rounded to 6 decimal places.</p>
<p>Let $S(k)=\displaystyle \sum_{n=3}^k E(n)$.<br>For example, S(3)=0.433013, S(4)=1.732051, S(5)=4.604767 and S(10)=66.955511, rounded to 6 decimal places each.</p>
<p>Find S(50), rounded to 6 decimal places.</p>
<hr>
<p><strong>最大多边形</strong></p>
<p>一条长为2n-3的线段被随机分割成n条整数长度的线段（$n \ge 3$），再按照这个分割给出的顺序连接这些线段，构成面积最大的凸n边形。原线段所有共$\binom{2n-4}{n-1}$种可能的分割发生的概率相同。</p>
<p>记上述过程得到的多边形面积的期望值为E(n)。<br>例如，对于n=3，长为3的线段只能唯一地分割成3条长为1的线段，组成一个面积为$\frac{1}{4}\sqrt{3}$的等边三角形。因此E(3)=0.433013，四舍五入到6位小数。<br>对于n=4，共有4种不同的分割，每一种分割都由3条长为1的线段和1条长为2的线段组成。所有这些分割都能得到相同的面积为$\frac{3}{4}\sqrt{3}$的最大四边形，因此E(4)=1.299038，四舍五入到6位小数。</p>
<p>记$S(k)=\displaystyle \sum_{n=3}^k E(n)$。<br>例如，S(3)=0.433013，S(4)=1.732051，S(5)=4.604767以及S(10)=66.955511，都四舍五入到6位小数。</p>
<p>求S(50)，四舍五入到6位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 565</title>
    <url>/565/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-565"><a href="#Problem-565" class="headerlink" title="Problem 565"></a><a href="https://projecteuler.net/problem=565">Problem 565</a></h1><hr>
<p><strong>Divisibility of sum of divisors</strong></p>
<p>Let $\sigma(n)$ be the sum of the divisors of n.<br>E.g. the divisors of 4 are 1, 2 and 4, so $\sigma(4)=7$.</p>
<p>The numbers n not exceeding 20 such that 7 divides $\sigma(n)$ are: 4, 12, 13 and 20, the sum of these numbers being 49.</p>
<p>Let S(n,d) be the sum of the numbers i not exceeding n such that d divides $\sigma(i)$.<br>So S(20,7)=49.</p>
<p>You are given: $S(10^6,2017) = 150850429$ and $S(10^9,2017) = 249652238344557$.</p>
<p>Find $S(10^{11},2017)$.</p>
<hr>
<p><strong>约数和的整除性</strong></p>
<p>记$\sigma(n)$为n的约数的和。<br>例如4的约数为1，2和4，因此$\sigma(4)=7$。</p>
<p>在不超过20的数n中，$\sigma(n)$能被7整除的有4，12，13和20，这些数的和是49。</p>
<p>记S(n,d)是所有不超过n且$\sigma(i)$能被d整除的数i的和。<br>因此S(20,7)=49。</p>
<p>已知$S(10^6,2017) = 150850429$以及$S(10^9,2017) = 249652238344557$。</p>
<p>求$S(10^{11},2017)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 563</title>
    <url>/563/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-563"><a href="#Problem-563" class="headerlink" title="Problem 563"></a><a href="https://projecteuler.net/problem=563">Problem 563</a></h1><hr>
<p><strong>Robot Welders</strong></p>
<p>A company specialises in producing large rectangular metal sheets, starting from unit square metal plates. The welding is performed by a range of robots of increasing size. Unfortunately, the programming options of these robots are rather limited. Each one can only process up to 25 identical rectangles of metal, which they can weld along either edge to produce a larger rectangle. The only programmable variables are the number of rectangles to be processed (up to and including 25), and whether to weld the long or short edge.</p>
<p>For example, the first robot could be programmed to weld together 11 raw unit square plates to make a 11×1 strip. The next could take 10 of these 11×1 strips, and weld them either to make a longer 110×1 strip, or a 11×10 rectangle. Many, but not all, possible dimensions of  metal sheets can be constructed in this way.</p>
<p>One regular customer has a particularly unusual order. He always demands that the finished product should have an exact area, and that the long side must not be more than 10% larger than the short side. If these requirements can be met in more than one way, in terms of the exact dimensions of the two sides, then he demands that all variants are produced. For example, if he were to ask for metal sheet of area 889200, then there are three final dimensions that can be produced: 900×988, 912×975 and 936×950. The target area of 889200 is the smallest area which can be manufactured in three different variants, within the limitations of the robot welders.</p>
<p>Let M(n) be the minimal area that can be manufactured in <u>exactly</u> n variants with the longer edge not greater than 10% bigger than the shorter edge.  Hence M(3) = 889200.</p>
<p>Find $\sum_{n=2}^{100} M(n)$.</p>
<hr>
<p><strong>焊接机器人</strong></p>
<p>有一家专门将单位方形钢板焊接成大长方形钢板的公司，其中所有的焊接操作都由一系列尺寸递增的机器人完成。不幸的是，这些机器人的设置选项很有限，每一台机器人只能同时处理至多25块同样大小的长方形钢板，将其按照长边或短边焊接成一个更大的长方形，这其中可以进行设置的变量只有同时处理的钢板数量（至多25块）和按照长边还是短边进行焊接。</p>
<p>例如，第一台机器人可以设置为同时处理11块单位正方形钢板原材料，将其焊接为一个11×1的长条。第二台机器人可以将10条11×1的长条焊接成一个更长的110×1的长条，或者是一个11×10的长方形。通过这种方式可以构造出许多种钢板，但是并不是每一种钢板都能制造出来。</p>
<p>一位常客的订单总是特别不同寻常。他总是要求最终产品的面积是一个由他给定的值，而且长边不能比短边长超过10%。如果有多种最终产品能够满足他的要求，他希望每一种都被生产出来。例如，如果他想要面积是889200的钢板，一共有三种最终产品符合要求的钢板会被生产出来：900×988，912×975和936×950。在焊接机器人本身的限制下，889200这一目标面积是使得最终产品有三种可能的最小面积。</p>
<p>记M(n)是使得可制造的、长边比短边长不超过10%的最终产品有<u>恰好</u>n种可能的最小面积，已知M(3) = 889200。</p>
<p>求$\sum_{n=2}^{100} M(n)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 566</title>
    <url>/566/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-566"><a href="#Problem-566" class="headerlink" title="Problem 566"></a><a href="https://projecteuler.net/problem=566">Problem 566</a></h1><hr>
<p><strong>Cake Icing Puzzle</strong></p>
<p>Adam plays the following game with his birthday cake.</p>
<p>He cuts a piece forming a circular sector of 60 degrees and flips the piece upside down, with the icing on the bottom.<br>He then rotates the cake by 60 degrees counterclockwise, cuts an adjacent 60 degree piece and flips it upside down.<br>He keeps repeating this, until after a total of twelve steps, all the icing is back on top.</p>
<p>Amazingly, this works for any piece size, even if the cutting angle is an irrational number: all the icing will be back on top after a finite number of steps.</p>
<p>Now, Adam tries something different: he alternates cutting pieces of size $x=\frac{360}{9}$ degrees, $y=\frac{360}{10}$ degrees and $z=\frac{360}{\sqrt{11}}$ degrees. The first piece he cuts has size x and he flips it. The second has size y and he flips it. The third has size z and he flips it. He repeats this with pieces of size x, y and z in that order until all the icing is back on top, and discovers he needs 60 flips altogether.</p>
<center><img src="/resources/images/0566-cakeicingpuzzle.gif" alt="p566-cakeicingpuzzle.gif"></center>

<p>Let F(a, b, c) be the minimum number of piece flips needed to get all the icing back on top for pieces of size $x=\frac{360}{a}$ degrees, $y=\frac{360}{b}$ degrees and $z=\frac{360}{\sqrt{c}}$ degrees.<br>Let $G(n) = \sum_{9 \le a &lt; b &lt; c \le n} F(a,b,c)$, for integers a, b and c.</p>
<p>You are given that F(9,10,11)=60, F(10,14,16)=506, F(15,16,17)=785232.<br>You are also given G(11)=60, G(14)=58020 and G(17)=1269260.</p>
<p>Find G(53).</p>
<hr>
<p><strong>蛋糕糖衣谜题</strong></p>
<p>亚当在拿他的生日蛋糕玩游戏。</p>
<p>他先切下一块圆心角60度的扇形，把这块颠倒过来，糖衣放在下面。<br>然后他将蛋糕逆时针转60度，切下相邻的60度扇形，也颠倒过来。<br>不断重复这一过程，一共重复12次后，所有的糖衣都回到上面了。</p>
<p>令人惊奇的是，对于任意大小的扇形，即使圆心角是一个无理数：经过有限步之后，所有的糖衣都会回到上面。</p>
<p>现在，亚当尝试了一些新花样：他每次交替切割圆心角为$x=\frac{360}{9}$度、$y=\frac{360}{10}$度和$z=\frac{360}{\sqrt{11}}$度的扇形。他先切第一块圆心角为x度的扇形，把这块颠倒过来；再切第二块圆心角为y度的扇形，也颠倒过来；再切第三块圆心角为z度的扇形，也颠倒过来。他按照x，y和z的顺序不断重复这一过程，直到所有糖衣重新回到上面，总共需要60次操作。</p>
<center><img src="/resources/images/0566-cakeicingpuzzle.gif" alt="p566-cakeicingpuzzle.gif"></center>

<p>如果每次交替切割的圆心角为$x=\frac{360}{a}$度，$y=\frac{360}{b}$度和$z=\frac{360}{\sqrt{c}}$度，记F(a, b, c)为将所有糖衣重新翻回上面所需的最小操作数。<br>记$G(n) = \sum_{9 \le a &lt; b &lt; c \le n} F(a,b,c)$，其中a，b和c均为整数。</p>
<p>已知F(9,10,11)=60，F(10,14,16)=506，F(15,16,17)=785232。<br>还已知G(11)=60，G(14)=58020以及G(17)=1269260。</p>
<p>求G(53)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 567</title>
    <url>/567/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-567"><a href="#Problem-567" class="headerlink" title="Problem 567"></a><a href="https://projecteuler.net/problem=567">Problem 567</a></h1><hr>
<p><strong>Reciprocal games I</strong></p>
<p>Tom has built a random generator that is connected to a row of n light bulbs. Whenever the random generator is activated each of the n lights is turned on with the probability of $\frac 1 2$, independently of its former state or the state of the other light bulbs.</p>
<p>While discussing with his friend Jerry how to use his generator, they invent two different games, they call the <i>reciprocal games</i>:<br>Both games consist of n turns. Each turn is started by choosing a number k randomly between (and including) 1 and n, with equal probability of $\frac 1 n$ for each number, while the possible win for that turn is the reciprocal of k, that is $\frac 1 k$.</p>
<p>In game A, Tom activates his random generator once in each turn. If the number of lights turned on is the same as the previously choosen number k, Jerry wins and gets $\frac 1 k$, otherwise he will receive nothing for that turn. Jerry’s expected win after playing the total game A consisting of n turns is called $J_A(n)$. For example $J_A(6)=0.39505208$, rounded to 8 decimal places.</p>
<p>For each turn in game B, after k has been randomly selected, Tom keeps reactivating his random generator until exactly k lights are turned on. After that Jerry takes over and reactivates the random generator until he, too, has generated a pattern with exactly k lights turned on. If this pattern is identical to Tom’s last pattern, Jerry wins and gets $\frac 1 k$, otherwise he will receive nothing. Jerry’s expected win after the total game B consisting of n turns is called $J_B(n)$. For example $J_B(6)=0.43333333$, rounded to 8 decimal places.</p>
<p>Let $\displaystyle S(m)=\sum_{n=1}^m (J_A(n)+J_B(n))$. For example S(6)=7.58932292, rounded to 8 decimal places.</p>
<p>Find S(123456789), rounded to 8 decimal places.</p>
<hr>
<p><strong>倒数游戏I</strong></p>
<p>汤姆制作了一台连接着n个电灯泡的随机发电机。每次启动发电机，n个灯泡就会各自以$\frac 1 2$的概率发光，每个灯泡是否发光与其之前的状态和其它灯泡是否发光均独立。</p>
<p>当他和朋友杰瑞讨论这台发电机时，他们发明了两个不同的游戏，都称为<i class=zh>倒数游戏</i>：这两个游戏都进行n轮，每一轮开始时先随机地在1到n（包括1和n）中等概率地选择一个整数k，这一轮的胜者收益将会是k的倒数，也就是$\frac 1 k$。</p>
<p>在游戏A中，汤姆在每一轮中只启动随机发电机一次。如果发光的灯数和之前选择的数k一致，杰瑞获胜并获得收益$\frac 1 k$，否则他这一轮没有收益。游戏A进行完整的n轮后，杰瑞的预期收益记为$J_A(n)$，已知$J_A(6)=0.39505208$，保留8位小数。</p>
<p>在游戏B中，选定整数k后，汤姆不断地重启随机发电机，直至恰好有k个灯泡发光，然后由杰瑞接手发电机，不断重启直至再次出现有k个灯泡发光。如果杰瑞得到的k个发光灯泡恰好就是汤姆得到的k个发光灯泡，那么杰瑞获胜并获得收益$\frac 1 k$，否则他这一轮没有收益。游戏B进行完整的n轮后，杰瑞的预期收益记为$J_B(n)$，已知$J_B(6)=0.43333333$，保留8位小数。</p>
<p>记$\displaystyle S(m)=\sum_{n=1}^m (J_A(n)+J_B(n))$。已知S(6)=7.58932292，保留8位小数。</p>
<p>求S(123456789)并保留8位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 569</title>
    <url>/569/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-569"><a href="#Problem-569" class="headerlink" title="Problem 569"></a><a href="https://projecteuler.net/problem=569">Problem 569</a></h1><hr>
<p><strong>Prime Mountain Range</strong></p>
<p>A <i>mountain range</i> consists of a line of mountains with slopes of exactly 45°, and heights governed by the prime numbers, p<sub>n</sub>. The up-slope of the k<sup>th</sup> mountain is of height p<sub>2k−1</sub>, and the downslope is p<sub>2k</sub>. The first few foot-hills of this range are illustrated below.</p>
<center><img src="/resources/images/0569-prime-mountain-range.gif" alt="p569-prime-mountain-range.gif"></center>

<p>Tenzing sets out to climb each one in turn, starting from the lowest. At the top of each peak, he looks back and counts how many of the previous peaks he can see. In the example above, the eye-line from the third mountain is drawn in red, showing that he can only see the peak of the second mountain from this viewpoint. Similarly, from the 9<sup>th</sup> mountain, he can see three peaks, those of the 5<sup>th</sup>, 7<sup>th</sup> and 8<sup>th</sup> mountain.</p>
<p>Let P(k) be the number of peaks that are visible looking back from the k<sup>th</sup> mountain.  Hence P(3)=1 and P(9)=3.<br>Also $\displaystyle \sum_{k=1}^{100} P(k) = 227$.</p>
<p>Find $\displaystyle \sum_{k=1}^{2500000} P(k)$.</p>
<hr>
<p><strong>素数山脉</strong></p>
<p>一座<i class=zh>山脉</i>由一系列坡度为45度，高度与素数p<sub>n</sub>有关的山峰组成。第k座山峰的上行部分高度为p<sub>2k−1</sub>，下行部分高度为p<sub>2k</sub>，前几座山峰（准确地说只是山坡）如下图所示。</p>
<center><img src="/resources/images/0569-prime-mountain-range.gif" alt="p569-prime-mountain-range.gif"></center>

<p>丹增打算从最矮的山峰开始攀登每一座山峰。每当他爬到一座山峰的峰顶时，他都会回头数一下此时能够看到多少座之前的山峰的峰顶。如上图，从第三座山峰的峰顶往回看的视线用红色标示，可见在他所处的位置只能看到第二座山峰的峰顶。类似地，从第9座山峰的峰顶往回看，他可以看到三座山峰的峰顶，分别是第5座、第7座和第8座。</p>
<p>记P(k)为从第k座山峰的峰顶往回看能够看见的峰顶数量。因此P(3)=1以及P(9)=3。<br>此外，$\displaystyle \sum_{k=1}^{100} P(k) = 227$。</p>
<p>求$\displaystyle \sum_{k=1}^{2500000} P(k)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 568</title>
    <url>/568/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-568"><a href="#Problem-568" class="headerlink" title="Problem 568"></a><a href="https://projecteuler.net/problem=568">Problem 568</a></h1><hr>
<p><strong>Reciprocal games II</strong></p>
<p>Tom has built a random generator that is connected to a row of n light bulbs. Whenever the random generator is activated each of the n lights is turned on with the probability of $\frac 1 2$, independently of its former state or the state of the other light bulbs.</p>
<p>While discussing with his friend Jerry how to use his generator, they invent two different games, they call the <i>reciprocal games</i>:<br>Both games consist of n turns. Each turn is started by choosing a number k randomly between (and including) 1 and n, with equal probability of $\frac 1 n$ for each number, while the possible win for that turn is the reciprocal of k, that is $\frac 1 k$.</p>
<p>In game A, Tom activates his random generator once in each turn. If the number of lights turned on is the same as the previously choosen number k, Jerry wins and gets $\frac 1 k$, otherwise he will receive nothing for that turn. Jerry’s expected win after playing the total game A consisting of n turns is called $J_A(n)$. For example $J_A(6)=0.39505208$, rounded to 8 decimal places.</p>
<p>For each turn in game B, after k has been randomly selected, Tom keeps reactivating his random generator until exactly k lights are turned on. After that Jerry takes over and reactivates the random generator until he, too, has generated a pattern with exactly k lights turned on. If this pattern is identical to Tom’s last pattern, Jerry wins and gets $\frac 1 k$, otherwise he will receive nothing. Jerry’s expected win after the total game B consisting of n turns is called $J_B(n)$. For example $J_B(6)=0.43333333$, rounded to 8 decimal places.</p>
<p>Let $D(n)=J_B(n)−J_A(n)$. For example, D(6) = 0.03828125.</p>
<p>Find the 7 most significant digits of D(123456789) after removing all leading zeros.<br>(If, for example, we had asked for the 7 most significant digits of D(6), the answer would have been 3828125.)</p>
<hr>
<p><strong>倒数游戏II</strong></p>
<p>汤姆制作了一台连接着n个电灯泡的随机发电机。每次启动发电机，n个灯泡就会各自以$\frac 1 2$的概率发光，每个灯泡是否发光与其之前的状态和其它灯泡是否发光均独立。</p>
<p>当他和朋友杰瑞讨论这台发电机时，他们发明了两个不同的游戏，都称为<i class=zh>倒数游戏</i>：这两个游戏都进行n轮，每一轮开始时先随机地在1到n（包括1和n）中等概率地选择一个整数k，这一轮的胜者收益将会是k的倒数，也就是$\frac 1 k$。</p>
<p>在游戏A中，汤姆在每一轮中只启动随机发电机一次。如果发光的灯数和之前选择的数k一致，杰瑞获胜并获得收益$\frac 1 k$，否则他这一轮没有收益。游戏A进行完整的n轮后，杰瑞的预期收益记为$J_A(n)$，已知$J_A(6)=0.39505208$，保留8位小数。</p>
<p>在游戏B中，选定整数k后，汤姆不断地重启随机发电机，直至恰好有k个灯泡发光，然后由杰瑞接手发电机，不断重启直至再次出现有k个灯泡发光。如果杰瑞得到的k个发光灯泡恰好就是汤姆得到的k个发光灯泡，那么杰瑞获胜并获得收益$\frac 1 k$，否则他这一轮没有收益。游戏B进行完整的n轮后，杰瑞的预期收益记为$J_B(n)$，已知$J_B(6)=0.43333333$，保留8位小数。</p>
<p>记$D(n)=J_B(n)−J_A(n)$。已知D(6) = 0.03828125。</p>
<p>求D(123456789)去掉前导0后的7位有效数字。<br>（例如，如果要求D(6)去掉前导0后的7位有效数字，答案应该是3828125。）</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 57</title>
    <url>/57/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-57"><a href="#Problem-57" class="headerlink" title="Problem 57"></a><a href="https://projecteuler.net/problem=57">Problem 57</a></h1><hr>
<h2 id="Square-Root-Convergents"><a href="#Square-Root-Convergents" class="headerlink" title="Square Root Convergents"></a><strong>Square Root Convergents</strong></h2><p>It is possible to show that the square root of two can be expressed as an infinite continued fraction.</p>
<p>$$\sqrt 2 =1+ \frac 1 {2+ \frac 1 {2 +\frac 1 {2+ \dots}}}$$</p>
<p>By expanding this for the first four iterations, we get:</p>
<p>$1 + \frac 1 2 = \frac  32 = 1.5$<br /><br>$1 + \frac 1 {2 + \frac 1 2} = \frac 7 5 = 1.4$<br /><br>$1 + \frac 1 {2 + \frac 1 {2+\frac 1 2}} = \frac {17}{12} = 1.41666 \dots$<br /><br>$1 + \frac 1 {2 + \frac 1 {2+\frac 1 {2+\frac 1 2}}} = \frac {41}{29} = 1.41379 \dots$</p>
<p>The next three expansions are $\frac{99}{70}$, $\frac{239}{169}$, and $\frac{577}{408}$, but the eighth expansion, $\frac{1393}{985}$, is the first example where the number of digits in the numerator exceeds the number of digits in the denominator.</p>
<p>In the first one-thousand expansions, how many fractions contain a numerator with more digits than denominator?</p>
<hr>
<h2 id="平方根逼近"><a href="#平方根逼近" class="headerlink" title="平方根逼近"></a><strong>平方根逼近</strong></h2><p>$2$的平方根可以表示为如下无限连分数：</p>
<p>$$\sqrt 2 =1+ \frac 1 {2+ \frac 1 {2 +\frac 1 {2+ \dots}}}$$</p>
<p>将这个连分数进行四次迭代展开，分别可以得到：</p>
<p>$1 + \frac 1 2 = \frac  32 = 1.5$<br /><br>$1 + \frac 1 {2 + \frac 1 2} = \frac 7 5 = 1.4$<br /><br>$1 + \frac 1 {2 + \frac 1 {2+\frac 1 2}} = \frac {17}{12} = 1.41666 \dots$<br /><br>$1 + \frac 1 {2 + \frac 1 {2+\frac 1 {2+\frac 1 2}}} = \frac {41}{29} = 1.41379 \dots$</p>
<p>接下来的三次迭代展开得到的分别是$\frac{99}{70}$、$\frac{239}{169}$和$\frac{577}{408}$，直到第八次迭代展开$\frac{1393}{985}$，分子的位数第一次超过分母的位数。</p>
<p>在前一千次迭代展开中，有多少个分数满足分子的位数多于分母的位数？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 570</title>
    <url>/570/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-570"><a href="#Problem-570" class="headerlink" title="Problem 570"></a><a href="https://projecteuler.net/problem=570">Problem 570</a></h1><hr>
<h2 id="Snowflakes"><a href="#Snowflakes" class="headerlink" title="Snowflakes"></a><strong>Snowflakes</strong></h2><p>A snowflake of order n is formed by overlaying an equilateral triangle (rotated by 180 degrees) onto each equilateral triangle of the same size in a snowflake of order n-1. A snowflake of order 1 is a single equilateral triangle.</p>
<center><img src="/resources/images/0570-slowflakes.png" alt="p570-slowflakes.png"></center>

<p>Some areas of the snowflake are overlaid repeatedly. In the above picture, blue represents the areas that are one layer thick, red two layers thick, yellow three layers thick, and so on. </p>
<p>For an order n snowflake, let A(n) be the number of triangles that are one layer thick, and let B(n) be the number of triangles that are three layers thick. Define G(n) = gcd(A(n), B(n)).</p>
<p>E.g. A(3) = 30, B(3) = 6, G(3)=6<br>A(11) = 3027630, B(11) = 19862070, G(11) = 30</p>
<p>Further, G(500) = 186 and  $\sum_{n=3}^{500}G(n)=5124$</p>
<p>Find $\displaystyle \sum_{n=3}^{10^7}G(n)$.</p>
<hr>
<h2 id="雪花"><a href="#雪花" class="headerlink" title="雪花"></a><strong>雪花</strong></h2><p>将n-1阶雪花中每个等边三角形旋转180度，再覆盖到其本身上，就得到了一个n阶雪花；而最初的1阶雪花就是一个等边三角形。</p>
<center><img src="/resources/images/0570-slowflakes.png" alt="p570-slowflakes.png"></center>

<p>雪花中的部分区域会被多次覆盖。在上图中，蓝色的区域的厚度为一，红色的区域为二，黄色的区域为三，依此类推。</p>
<p>对于n阶雪花，记A(n)为厚度为一的三角形的数量，B(n)为厚度为三的三角形的数量。令G(n) = gcd(A(n), B(n))。</p>
<p>例如，A(3) = 30，B(3) = 6，G(3)=6<br>A(11) = 3027630，B(11) = 19862070，G(11) = 30</p>
<p>进一步地，G(500) = 186，而$\sum_{n=3}^{500}G(n)=5124$</p>
<p>求$\displaystyle \sum_{n=3}^{10^7}G(n)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 571</title>
    <url>/571/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-571"><a href="#Problem-571" class="headerlink" title="Problem 571"></a><a href="https://projecteuler.net/problem=571">Problem 571</a></h1><hr>
<h2 id="Super-Pandigital-Numbers"><a href="#Super-Pandigital-Numbers" class="headerlink" title="Super Pandigital Numbers"></a><strong>Super Pandigital Numbers</strong></h2><p>A positive number is <b>pandigital</b> in base $b$ if it contains all digits from 0 to $b$ - 1 at least once when written in base $b$.</p>
<p>A <i>n-super-pandigital</i> number is a number that is simultaneously pandigital in all bases from 2 to $n$ inclusively.<br>For example 978 = 1111010010<sub>2</sub> = 1100020<sub>3</sub> = 33102<sub>4</sub> = 12403<sub>5</sub> is the smallest 5-super-pandigital number.<br>Similarly, 1093265784 is the smallest 10-super-pandigital number.<br>The sum of the 10 smallest 10-super-pandigital numbers is 20319792309.</p>
<p>What is the sum of the 10 smallest 12-super-pandigital numbers?</p>
<hr>
<h2 id="超级全数字数"><a href="#超级全数字数" class="headerlink" title="超级全数字数"></a><strong>超级全数字数</strong></h2><p>如果一个正整数的$b$进制表示中出现数字0到$b$-1每个至少一次，则称其为$b$进制的全数字数。</p>
<p>如果一个正整数同时是从$2$到$n$进制的全数字数，则称其为<i class=zh>n-超级全数字数</i>。<br>例如 978 = 1111010010<sub>2</sub> = 1100020<sub>3</sub> = 33102<sub>4</sub> = 12403<sub>5</sub>是最小的5-超级全数字数。<br>类似地，1093265784是最小的10-超级全数字数。<br>最小的10个10-超级全数字数之和为20319792309。</p>
<p>最小的10个12-超级全数字数之和是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 572</title>
    <url>/572/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-572"><a href="#Problem-572" class="headerlink" title="Problem 572"></a><a href="https://projecteuler.net/problem=572">Problem 572</a></h1><hr>
<h2 id="Idempotent-matrices"><a href="#Idempotent-matrices" class="headerlink" title="Idempotent matrices"></a><strong>Idempotent matrices</strong></h2><p>A matrix $M$ is called idempotent if $M^2 = M$.<br>Let $M$ be a three by three matrix :<br>$M=\begin{pmatrix}<br>  a &amp; b &amp; c\\<br>  d &amp; e &amp; f\<br>  g &amp;h &amp;i\<br>\end{pmatrix}$.<br>Let C($n$) be the number of idempotent three by three matrices $M$ with integer elements such that<br>$ -n \le a,b,c,d,e,f,g,h,i \le n$.</p>
<p>C(1)=164 and C(2)=848.</p>
<p>Find C(200).</p>
<hr>
<h2 id="幂等矩阵"><a href="#幂等矩阵" class="headerlink" title="幂等矩阵"></a><strong>幂等矩阵</strong></h2><p>若矩阵$M$满足$M^2 = M$，则称其为幂等矩阵。<br>令$M$为三阶矩阵：<br>$M=\begin{pmatrix}<br>  a &amp; b &amp; c\<br>  d &amp; e &amp; f\<br>  g &amp;h &amp;i\<br>\end{pmatrix}$。<br>记C($n$)为满足以下条件的三阶幂等矩阵$M$的数目：其元素均为整数且满足<br>$ -n \le a,b,c,d,e,f,g,h,i \le n$.</p>
<p>已知C(1)=164和C(2)=848。</p>
<p>求C(200)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 573</title>
    <url>/573/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-573"><a href="#Problem-573" class="headerlink" title="Problem 573"></a><a href="https://projecteuler.net/problem=573">Problem 573</a></h1><hr>
<h2 id="Unfair-race"><a href="#Unfair-race" class="headerlink" title="Unfair race"></a><strong>Unfair race</strong></h2><p>$n$ runners in very different training states want to compete in a race. Each one of them is given a different starting number $k$ $(1\leq k \leq n)$ according to his (constant) individual racing speed being $v_k=\frac{k}{n}$.<br>In order to give the slower runners a chance to win the race, $n$ different starting positions are chosen randomly (with uniform distribution) and independently from each other within the racing track of length 1. After this, the starting position nearest to the goal is assigned to runner 1, the next nearest starting position to runner 2 and so on, until finally the starting position furthest away from the goal is assigned to runner $n$. The winner of the race is the runner who reaches the goal first.</p>
<p>Interestingly, the expected running time for the winner is $\frac{1}{2}$, independently of the number of runners. Moreover, while it can be shown that all runners will have the same expected running time of $\frac{n}{n+1}$, the race is still unfair, since the winning chances may differ significantly for different starting numbers:</p>
<p>Let $P_{n,k}$ be the probability for runner $k$ to win a race with $n$ runners and $E_n = \sum_{k=1}^n k P_{n,k}$ be the expected starting number of the winner in that race. It can be shown that, for example,<br>$P_{3,1}=\frac{4}{9}$, $P_{3,2}=\frac{2}{9}$, $P_{3,3}=\frac{1}{3}$ and $E_3=\frac{17}{9}$ for a race with 3 runners.<br>You are given that $E_4=2.21875$, $E_5=2.5104$ and $E_{10}=3.66021568$.</p>
<p>Find $E_{1000000}$ rounded to 4 digits after the decimal point.</p>
<hr>
<h2 id="不公平的比赛"><a href="#不公平的比赛" class="headerlink" title="不公平的比赛"></a><strong>不公平的比赛</strong></h2><p>$n$名处于不同训练状态的跑步选手想要进行一场比赛。他们每个人拥有一个不同的初始编号$k$ $(1\leq k \leq n)$，相应地他们各自（固定的）跑步速度为$v_k=\frac{k}{n}$。<br>为了让跑得慢的选手也有获胜的机会，在长度为1的跑道上独立地（遵循均匀分布）随机选择$n$个不同的起跑位置，然后，离终点最近的起跑位置被指派给1号选手，次近的起跑位置被指派给2号选手，依此类推，最远的起跑位置被指派给$n$号选手；最先到达终点的选手获胜。</p>
<p>有趣的是，无论有多少名选手参赛，获胜者的跑步时长的期望总是$\frac{1}{2}$。进一步地，尽管可以计算得出，任意一名选手的跑步时长的期望都是$\frac{n}{n+1}$，比赛仍然是不公平的，表现在不同初始编号的选手获胜的概率仍然有巨大的差别。</p>
<p>记$P_{n,k}$为有$n$名选手参赛时$k$号选手获胜的概率，则$E_n = \sum_{k=1}^n k P_{n,k}$为获胜选手编号的期望值。例如，通过计算可以得出，<br>$P_{3,1}=\frac{4}{9}$，$P_{3,2}=\frac{2}{9}$，$P_{3,3}=\frac{1}{3}$，因此对于有3名选手参加的比赛$E_3=\frac{17}{9}$。<br>已知$E_4=2.21875$，$E_5=2.5104$以及$E_{10}=3.66021568$。</p>
<p>求$E_{1000000}$，保留小数点后4位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 574</title>
    <url>/574/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-574"><a href="#Problem-574" class="headerlink" title="Problem 574"></a><a href="https://projecteuler.net/problem=574">Problem 574</a></h1><hr>
<h2 id="Verifying-Primes"><a href="#Verifying-Primes" class="headerlink" title="Verifying Primes"></a><strong>Verifying Primes</strong></h2><p>Let $q$ be a prime and $A \ge B &gt;0$ be two integers with the following properties:</p>
<ul>
<li>$A$ and $B$ have no prime factor in common, that is $\text{gcd}(A,B)=1$.</li>
<li>The product $AB$ is divisible by every prime less than q.</li>
</ul>
<p>It can be shown that, given these conditions, any sum $A+B&lt;q^2$ and any difference $1&lt;A-B&lt;q^2$ has to be a prime number. Thus you can verify that a number $p$ is prime by showing that either $p=A+B&lt;q^2$ or $p=A-B&lt;q^2$ for some $A,B,q$ fulfilling the conditions listed above.</p>
<p>Let $V(p)$ be the smallest possible value of $A$ in any sum $p=A+B$ and any difference $p=A-B$, that verifies $p$ being prime. Examples:<br>$V(2)=1$, since $2=1+1&lt; 2^2$.<br>$V(37)=22$, since $37=22+15=2 \cdot 11+3 \cdot 5&lt; 7^2$ is the associated sum with the smallest possible $A$.<br>$V(151)=165$ since $151=165-14=3 \cdot 5 \cdot 11 - 2 \cdot 7&lt;13^2$ is the associated difference with the smallest possible $A$. </p>
<p>Let $S(n)$ be the sum of $V(p)$ for all primes $p&lt;n$. For example, $S(10)=10$ and $S(200)=7177$.</p>
<p>Find $S(3800)$.</p>
<hr>
<h2 id="检验素数"><a href="#检验素数" class="headerlink" title="检验素数"></a><strong>检验素数</strong></h2><p>取素数$q$及整数$A \ge B &gt;0$满足以下性质：</p>
<ul>
<li>$A$和$B$没有相同的质因数，也就是说$\text{gcd}(A,B)=1$。</li>
<li>乘积$AB$能被所有小于$q$的素数整除。</li>
</ul>
<p>可以证明，在上述条件下，满足$A+B&lt;q^2$的两数之和，以及满足$1&lt;A-B&lt;q^2$的两数之差，一定是素数。因此你可以寻找满足上述条件的的$A,B,q$，使得$p$能写成$p=A+B&lt;q^2$或$p=A-B&lt;q^2$的形式，以此来验证$p$是素数。</p>
<p>对于任意素数$p$，记$V(P)$为使得$p$能表达为两数之和$p=A+B$或两数之差$p=A-B$的最小整数$A$。例如：<br>$V(2)=1$，因为$2=1+1&lt; 2^2$。<br>$V(37)=22$，因为$37=22+15=2 \cdot 11+3 \cdot 5&lt; 7^2$能表达为两数之和且$A$最小。<br>$V(151)=165$，因为$151=165-14=3 \cdot 5 \cdot 11 - 2 \cdot 7&lt;13^2$能表达为两数之差且$A$最小。 </p>
<p>记$S(n)$为所有素数$p&lt;n$对应的$V(p)$之和。例如，$S(10)=10$，$S(200)=7177$。</p>
<p>求$S(3800)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 575</title>
    <url>/575/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-575"><a href="#Problem-575" class="headerlink" title="Problem 575"></a><a href="https://projecteuler.net/problem=575">Problem 575</a></h1><hr>
<h2 id="Wandering-Robots"><a href="#Wandering-Robots" class="headerlink" title="Wandering Robots"></a><strong>Wandering Robots</strong></h2><p>It was quite an ordinary day when a mysterious alien vessel appeared as if from nowhere. After waiting several hours and receiving no response it is decided to send a team to investigate, of which you are included. Upon entering the vessel you are met by a friendly holographic figure, Katharina, who explains the purpose of the vessel, Eulertopia.</p>
<p>She claims that Eulertopia is almost older than time itself. Its mission was to take advantage of a combination of incredible computational power and vast periods of time to discover the answer to life, the universe, and everything. Hence the resident cleaning robot, Leonhard, along with his housekeeping responsibilities, was built with a powerful computational matrix to ponder the meaning of life as he wanders through a massive 1000 by 1000 square grid of rooms. She goes on to explain that the rooms are numbered sequentially from left to right, row by row. So, for example, if Leonhard was wandering around a 5 by 5 grid then the rooms would be numbered in the following way.</p>
<center><img src="/resources/images/0575_wandering_robot_1_5x5.png" alt="p575_wandering_robot_1_5x5.png"></center>

<p>Many millenia ago Leonhard reported to Katharina to have found the answer and he is willing to share it with any life form who proves to be worthy of such knowledge.</p>
<p>Katharina further explains that the designers of Leonhard were given instructions to program him with equal probability of remaining in the same room or travelling to an adjacent room. However, it was not clear to them if this meant (i) an equal probability being split equally between remaining in the room and the number of available routes, or, (ii) an equal probability (50%) of remaining in the same room and then the other 50% was to be split equally between the number of available routes.</p>
<center><img src="/resources/images/0575_wandering_robot_2_fixed.png" alt="p575_wandering_robot_2_fixed.png"><br>
<i>(i) Probability of remaining related to number of exits</i></center>

<center><img src="/resources/images/0575_wandering_robot_3_dynamic.png" alt="p575_wandering_robot_3_dynamic.png"><br>
<i>(ii) Fixed 50% probability of remaining</i></center>

<p>The records indicate that they decided to flip a coin. Heads would mean that the probability of remaining was dynamically related to the number of exits whereas tails would mean that they program Leonhard with a fixed 50% probability of remaining in a particular room. Unfortunately there is no record of the outcome of the coin, so without further information we would need to assume that there is equal probability of either of the choices being implemented.</p>
<p>Katharina suggests it should not be too challenging to determine that the probability of finding him in a square numbered room in a 5 by 5 grid after unfathomable periods of time would be approximately 0.177976190476 [12 d.p.].</p>
<p>In order to prove yourself worthy of visiting the great oracle you must calculate the probability of finding him in a square numbered room in the 1000 by 1000 lair in which he has been wandering.<br>(Give your answer rounded to 12 decimal places)</p>
<hr>
<h2 id="游荡的机器人"><a href="#游荡的机器人" class="headerlink" title="游荡的机器人"></a><strong>游荡的机器人</strong></h2><p>在一个相当平常的日子里，一艘神秘的外星飞船突然不知从何出现并降临到地球上。在等待了数小时没有收到应答之后，包括你在内的一支调查队被派上外星飞船。进入飞船之后，你碰到了一个友善的全息智能，自称叫“凯瑟琳”，她向你解释了这艘飞船“欧拉邦”号的目的。</p>
<p>她说，欧拉邦号比时间的存在还要久远。它的使命是将一种不可思议的计算能力和漫长的时间相结合，以探求生命、宇宙和一切的答案。飞船上的常驻清洁机器人“莱昂哈德”，除了清洁飞船的职能之外，还内置了一个强大的计算矩阵，使得其在庞大的1000乘1000方形网格房间中四处游荡清扫时能够思考生命的意义。她进一步解释说，这些房间是按照行从上至下，从左至右的顺序进行编号的。举例来说，如果莱昂哈德是在5乘5的方形网格房间中四处游荡，那么这些房间的编号如下所示：</p>
<center><img src="/resources/images/0575_wandering_robot_1_5x5.png" alt="p575_wandering_robot_1_5x5.png"></center>

<p>数百万年前，莱昂哈德曾经向凯瑟琳报告说已经找到了答案，并且他愿意将其分享给能够证明其值得拥有这份知识的任意生命形式。</p>
<p>凯瑟琳又解释道，莱昂哈德的设计者们接受到的指令说，要让他以相等的概率停留在当前房间或移动到相邻的房间。但是，设计者们不知道这句话到底指的是(i)将概率平均分配给停留在当前房间和所有其它可行的路径上，还是(ii)将相等的概率(50%)分配给停留在当前房间，再将剩下的50%平均分给所有其它可行的路径上。</p>
<center><img src="/resources/images/0575_wandering_robot_2_fixed.png" alt="p575_wandering_robot_2_fixed.png"><br>
<i class=zh>(i)停留的概率与出口的数目有关</i></center>

<center><img src="/resources/images/0575_wandering_robot_3_dynamic.png" alt="p575_wandering_robot_3_dynamic.png"><br>
<i class=zh>(ii)总是以50%的概率停留</i></center>

<p>记录显示，设计者们决定用抛硬币的方式决定如何给他编写程序。正面向上意味着停留的概率由出口的数目动态地决定，而反面向上意味着莱昂哈德以固定的50%的概率停留在当前房间。不幸的是，抛掷硬币的结果并没有被记录，因此在缺乏更多信息的情况下，我们只能假设这两种选择以相同的概率被执行。</p>
<p>凯瑟琳表示，很容易计算得出，如果是5乘5的方形网格房间，那么经过充分长的时间后，在编号为平方数的房间中找到莱昂哈德的概率大约为0.177976190476（保留12位小数）。</p>
<p>为了证明你有获取这份神谕的价值，你必须计算出，如果莱昂哈德是在1000乘1000的方形网格中四处游荡，在编号为平方数的房间中找到他的概率。<br>（将你的答案保留12位小数）</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 576</title>
    <url>/576/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-576"><a href="#Problem-576" class="headerlink" title="Problem 576"></a><a href="https://projecteuler.net/problem=576">Problem 576</a></h1><hr>
<h2 id="Irrational-jumps"><a href="#Irrational-jumps" class="headerlink" title="Irrational jumps"></a><strong>Irrational jumps</strong></h2><p>A bouncing point moves counterclockwise along a circle with circumference 1 with jumps of constant length $l&lt;1$, until it hits a gap of length $g&lt;1$, that is placed in a distance $d$ counterclockwise from the starting point. The gap does not include the starting point, that is $g+d&lt;1$.</p>
<p>Let $S(l,g,d)$ be the sum of the length of all jumps, until the point falls into the gap. It can be shown that $S(l,g,d)$ is finite for any irrational jump size $l$, regardless of the values of $g$ and $d$.<br>Examples:<br>$S(\sqrt{\frac 1 2}, 0.06, 0.7)=0.7071 \dots$, $S(\sqrt{\frac 1 2}, 0.06, 0.3543)=1.4142 \dots$ and<br>$S(\sqrt{\frac 1 2}, 0.06, 0.2427)=16.2634 \dots$.</p>
<p>Let $M(n, g)$ be the maximum of $\sum S(\sqrt{\frac 1 p}, g, d)$ for all primes $p \le n$ and any valid value of $d$.<br>Examples:<br>$M(3, 0.06) =29.5425 \dots$, since $S(\sqrt{\frac 1 2}, 0.06, 0.2427)+S(\sqrt{\frac 1 3}, 0.06, 0.2427)=29.5425 \dots$ is the maximal reachable sum for $g=0.06$.<br>$M(10, 0.01)=266.9010 \dots$ </p>
<p>Find $M(100, 0.00002)$, rounded to 4 decimal places.</p>
<hr>
<h2 id="无理数跳跃"><a href="#无理数跳跃" class="headerlink" title="无理数跳跃"></a><strong>无理数跳跃</strong></h2><p>一个点沿着周长为1的圆周逆时针跳跃，每次跳跃的长度为固定值$l&lt;1$，直至其落入一个距离起始位置逆时针距离为$d$、长度为$g&lt;1$的间隙中为止。这段间隙不会包括起始位置，也就是说$g+d&lt;1$。</p>
<p>记$S(l,g,d)$为这个点掉入间隙之前所跳跃的总长度。可以证明,当跳跃的步长$l$是无理数时，无论$g$和$d$取什么值，$S(l,g,d)$都是有限的。<br>例如：<br>$S(\sqrt{\frac 1 2}, 0.06, 0.7)=0.7071 \dots$，$S(\sqrt{\frac 1 2}, 0.06, 0.3543)=1.4142 \dots$以及<br>$S(\sqrt{\frac 1 2}, 0.06, 0.2427)=16.2634 \dots$。</p>
<p>记$M(n, g)$为任取合理的$d$时，对所有素数$p \le n$求$\sum S(\sqrt{\frac 1 p}, g, d)$的最大值。<br>例如：<br>$M(3, 0.06) =29.5425 \dots$，因为$S(\sqrt{\frac 1 2}, 0.06, 0.2427)+S(\sqrt{\frac 1 3}, 0.06, 0.2427)=29.5425 \dots$是$g=0.06$时能达到的最大值。<br>$M(10, 0.01)=266.9010 \dots$ </p>
<p>求$M(100, 0.00002)$，并保留4位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 577</title>
    <url>/577/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-577"><a href="#Problem-577" class="headerlink" title="Problem 577"></a><a href="https://projecteuler.net/problem=577">Problem 577</a></h1><hr>
<h2 id="Counting-hexagons"><a href="#Counting-hexagons" class="headerlink" title="Counting hexagons"></a><strong>Counting hexagons</strong></h2><p>An equilateral triangle with integer side length $n \ge 3$ is divided into $n^2$ equilateral triangles with side length 1 as shown in the diagram below.<br>The vertices of these triangles constitute a triangular lattice with $\frac{(n+1)(n+2)} 2$ lattice points.</p>
<p>Let $H(n)$ be the number of all regular hexagons that can be found by connecting 6 of these points.</p>
<center><img src="/resources/images/0577_counting_hexagons.png" alt="p577_counting_hexagons.png"></center>

<p>For example, $H(3)=1$, $H(6)=12$ and $H(20)=966$.</p>
<p>Find $\displaystyle \sum_{n=3}^{12345} H(n)$.</p>
<hr>
<h2 id="数六边形"><a href="#数六边形" class="headerlink" title="数六边形"></a><strong>数六边形</strong></h2><p>边长为整数$n \ge 3$的等边三角形可以被分成$n^2$个边长为1的小等边三角形，如下图所示。<br>这些小三角形的$\frac{(n+1)(n+2)} 2$个顶点构成了一个三角形的格阵。</p>
<p>记$H(n)$为从这些顶点中取6个点构成的正六边形的数目。</p>
<center><img src="/resources/images/0577_counting_hexagons.png" alt="p577_counting_hexagons.png">
<p>当$n=3$时只有一个六边形</p></center>

<p>例如，$H(3)=1$，$H(6)=12$，而$H(20)=966$。</p>
<p>求$\displaystyle \sum_{n=3}^{12345} H(n)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 578</title>
    <url>/578/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-578"><a href="#Problem-578" class="headerlink" title="Problem 578"></a><a href="https://projecteuler.net/problem=578">Problem 578</a></h1><hr>
<h2 id="Integers-with-decreasing-prime-powers"><a href="#Integers-with-decreasing-prime-powers" class="headerlink" title="Integers with decreasing prime powers"></a><strong>Integers with decreasing prime powers</strong></h2><p>Any positive integer can be written as a product of prime powers: $p_1^{a_1} \times p_2^{a_2} \times \cdots \times p_k^{a_k}$,<br>where $p_i$ are distinct prime integers, $a_i &gt; 0$ and $p_i&lt;p_j$ if $i&lt;j$.</p>
<p>A <i>decreasing prime power</i> positive integer is one for which $a_i \ge a_j$ if $i\lt j$.<br>For example, 1, 2, 15=3×5, 360=2<sup>3</sup>×3<sup>2</sup>×5 and 1000=2<sup>3</sup>×5<sup>3</sup> are decreasing prime power integers.</p>
<p>Let C($n$) be the count of decreasing prime power positive integers not exceeding $n$.<br>C(100) = 94 since all positive integers not exceeding 100 have decreasing prime powers except 18, 50, 54, 75, 90 and 98.<br>You are given C(10<sup>6</sup>) = 922052.</p>
<p>Find C(10<sup>13</sup>).</p>
<hr>
<h2 id="质因数幂次下降的整数"><a href="#质因数幂次下降的整数" class="headerlink" title="质因数幂次下降的整数"></a><strong>质因数幂次下降的整数</strong></h2><p>任意正整数可以写成一系列质数的幂的乘积:$p_1^{a_1} \times p_2^{a_2} \times \cdots \times p_k^{a_k}$,<br>其中$p_i$是不同的质数，$a_i &gt; 0$，且对于任意$i&lt;j$都有$p_i&lt;p_j$。</p>
<p>若一个正整数满足，对于任意$i \lt j$都有$a_i \ge a_j$，则称之为<i class=zh>质因数幂次下降</i>的正整数。<br>例如，1，2，15=3×5，360=2<sup>3</sup>×3<sup>2</sup>×5和1000=2<sup>3</sup>×5<sup>3</sup>都是质因数幂次下降的整数。</p>
<p>记C($n$)为所有不超过$n$且质因数幂次下降的整数的数目。<br>C(100) = 94，因为除了18，50，54，75，90和98外，其它所有不超过100的正整数都是质因数幂次下降的。<br>此外，还已知C(10<sup>6</sup>) = 922052。</p>
<p>求C(10<sup>13</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 579</title>
    <url>/579/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-579"><a href="#Problem-579" class="headerlink" title="Problem 579"></a><a href="https://projecteuler.net/problem=579">Problem 579</a></h1><hr>
<h2 id="Lattice-points-in-lattice-cubes"><a href="#Lattice-points-in-lattice-cubes" class="headerlink" title="Lattice points in lattice cubes"></a><strong>Lattice points in lattice cubes</strong></h2><p>A <b>lattice cube</b> is a cube in which all vertices have integer coordinates. Let C($n$) be the number of different lattice cubes in which the coordinates of all vertices range between (and including) 0 and $n$. Two cubes are hereby considered different if any of their vertices have different coordinates.<br>For example, C(1)=1, C(2)=9, C(4)=100, C(5)=229, C(10)=4469 and C(50)=8154671.</p>
<p>Different cubes may contain different numbers of lattice points.</p>
<p>For example, the cube with the vertices<br>(0, 0, 0), (3, 0, 0), (0, 3, 0), (0, 0, 3), (0, 3, 3), (3, 0, 3), (3, 3, 0), (3, 3, 3) contains 64 lattice points (56 lattice points on the surface including the 8 vertices and 8 points within the cube). </p>
<p>In contrast, the cube with the vertices<br>(0, 2, 2), (1, 4, 4), (2, 0, 3), (2, 3, 0), (3, 2, 5), (3, 5, 2), (4, 1, 1), (5, 3, 3) contains only 40 lattice points (20 points on the surface and 20 points within the cube), although both cubes have the same side length 3.</p>
<p>Let S($n$) be the sum of the lattice points contained in the different lattice cubes in which the coordinates of all vertices range between (and including) 0 and $n$.</p>
<p>For example, S(1)=8, S(2)=91, S(4)=1878, S(5)=5832, S(10)=387003 and S(50)=29948928129.</p>
<p>Find S(5000) mod 10<sup>9</sup>.</p>
<hr>
<h2 id="格点立方体上的格点"><a href="#格点立方体上的格点" class="headerlink" title="格点立方体上的格点"></a><strong>格点立方体上的格点</strong></h2><p><b>格点立方体</b>指的是顶点坐标均为整数的立方体。记C($n$)为顶点坐标在0和$n$（含）之间的不同格点立方体的数目。如果两个格点立方体任一顶点的坐标不同，则认为它们是不同的格点立方体。<br>例如，C(1)=1，C(2)=9，C(4)=100，C(5)=229，C(10)=4469而C(50)=8154671。</p>
<p>不同的格点立方体可能包含有不同数目的格点。</p>
<p>例如，如果立方体的顶点为<br>(0, 0, 0), (3, 0, 0), (0, 3, 0), (0, 0, 3), (0, 3, 3), (3, 0, 3), (3, 3, 0), (3, 3, 3)，则其包含有64个格点（其表面有56个格点，包括8个顶点，其内部有8个顶点）。</p>
<p>相反，如果立方体的顶点为<br>(0, 2, 2), (1, 4, 4), (2, 0, 3), (2, 3, 0), (3, 2, 5), (3, 5, 2), (4, 1, 1), (5, 3, 3)，则其只包含40个格点（其表面有20个顶点，其内部有20个顶点），尽管这两个立方体的边长都是3。</p>
<p>考虑所有顶点坐标在0和$n$（含）之间的不同格点立方体，记S($n$)为这些立方体所包含的格点的总数。</p>
<p>例如，S(1)=8，S(2)=91，S(4)=1878，S(5)=5832，S(10)=387003而S(50)=29948928129。</p>
<p>求S(5000) mod 10<sup>9</sup>。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 58</title>
    <url>/58/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-58"><a href="#Problem-58" class="headerlink" title="Problem 58"></a><a href="https://projecteuler.net/problem=58">Problem 58</a></h1><hr>
<h2 id="Spiral-Primes"><a href="#Spiral-Primes" class="headerlink" title="Spiral Primes"></a><strong>Spiral Primes</strong></h2><p>Starting with $1$ and spiralling anticlockwise in the following way, a square spiral with side length $7$ is formed.</p>
<center style="font-family:'Courier New', monospace;"><span style="color:#ff0000;font-family:courier new;"><b>37</b></span> 36 35 34 33 32 <span style="color:#ff0000;font-family:courier new;"><b>31</b></span><br />
38 <span style="color:#ff0000;font-family:courier new;"><b>17</b></span> 16 15 14 <span style="color:#ff0000;font-family:courier new;"><b>13</b></span> 30<br />
39 18 <span style="color:#ff0000;font-family:courier new;">&nbsp;<b>5</b></span> &nbsp;4 <span style="color:#ff0000;font-family:courier new;">&nbsp;<b>3</b></span> 12 29<br />
40 19 &nbsp;6 &nbsp;1 &nbsp;2 11 28<br />
41 20 <span style="color:#ff0000;font-family:courier new;">&nbsp;<b>7</b></span> &nbsp;8 &nbsp;9 10 27<br />
42 21 22 23 24 25 26<br />
<span style="color:#ff0000;font-family:courier new;"><b>43</b></span> 44 45 46 47 48 49<br />
</center>

<p>It is interesting to note that the odd squares lie along the bottom right diagonal, but what is more interesting is that $8$ out of the $13$ numbers lying along both diagonals are prime; that is, a ratio of $8/13 \approx 62\%$.</p>
<p>If one complete new layer is wrapped around the spiral above, a square spiral with side length $9$ will be formed. If this process is continued, what is the side length of the square spiral for which the ratio of primes along both diagonals first falls below $10\%$?</p>
<hr>
<h2 id="螺旋素数"><a href="#螺旋素数" class="headerlink" title="螺旋素数"></a><strong>螺旋素数</strong></h2><p>从$1$开始按照逆时针方向摆放自然数，可以构造出如下边长为$7$的螺旋数阵。</p>
<center style="font-family:'Courier New', monospace;"><span style="color:#ff0000;font-family:courier new;"><b>37</b></span> 36 35 34 33 32 <span style="color:#ff0000;font-family:courier new;"><b>31</b></span><br />
38 <span style="color:#ff0000;font-family:courier new;"><b>17</b></span> 16 15 14 <span style="color:#ff0000;font-family:courier new;"><b>13</b></span> 30<br />
39 18 <span style="color:#ff0000;font-family:courier new;">&nbsp;<b>5</b></span> &nbsp;4 <span style="color:#ff0000;font-family:courier new;">&nbsp;<b>3</b></span> 12 29<br />
40 19 &nbsp;6 &nbsp;1 &nbsp;2 11 28<br />
41 20 <span style="color:#ff0000;font-family:courier new;">&nbsp;<b>7</b></span> &nbsp;8 &nbsp;9 10 27<br />
42 21 22 23 24 25 26<br />
<span style="color:#ff0000;font-family:courier new;"><b>43</b></span> 44 45 46 47 48 49<br />
</center>

<p>有趣的是，所有的奇数平方都在这个螺旋方阵的右下对角线上，更有趣的是，在两条对角线上的$13$个数中一共有$8$个素数，比例达到$8/13 \approx 62\%$。</p>
<p>在这个方阵外面完整地加上一层，就能构造出一个边长为$9$的螺旋方阵。不断重复这个过程，当对角线上素数的比例第一次低于$10\%$时，螺旋数阵的边长是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 580</title>
    <url>/580/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-580"><a href="#Problem-580" class="headerlink" title="Problem 580"></a><a href="https://projecteuler.net/problem=580">Problem 580</a></h1><hr>
<h2 id="Squarefree-Hilbert-numbers"><a href="#Squarefree-Hilbert-numbers" class="headerlink" title="Squarefree Hilbert numbers"></a><strong>Squarefree Hilbert numbers</strong></h2><p>A <b>Hilbert number</b> is any positive integer of the form $4k+1$ for integer $k\geq 0$. We shall define a <i>squarefree Hilbert number</i> as a Hilbert number which is not divisible by the square of any Hilbert number other than one. For example, $117$ is a squarefree Hilbert number, equaling $9\times13$. However $6237$ is a Hilbert number that is not squarefree in this sense, as it is divisible by $9^2$. The number $3969$ is also not squarefree, as it is divisible by both $9^2$ and $21^2$.  </p>
<p>There are $2327192$ squarefree Hilbert numbers below $10^7$.<br>How many squarefree Hilbert numbers are there below $10^{16}$?</p>
<hr>
<h1 id="无平方因子希尔伯特数"><a href="#无平方因子希尔伯特数" class="headerlink" title="无平方因子希尔伯特数"></a><strong>无平方因子希尔伯特数</strong></h1><p><b>希尔伯特数</b>指的是能表达为$4k+1$的正整数，其中整数$k\geq 0$。 我们定义<i class=zh>无平方因子希尔伯特数</i>为不能被除1之外的其它希尔伯特数的平方整除的希尔伯特数。例如，$117$是一个无平方因子希尔伯特数，它的质因数分解是$9\times13$。 而$6237$则不是无平方因子希尔伯特数，因为它能够被$9^2$整除。$3969$也不是无平方因子希尔伯特数，因为它同时被$9^2$和$21^2$整除。</p>
<p>一共有$2327192$个小于$10^7$的无平方因子希尔伯特数。<br>有多少小于$10^{16}$的无平方因子希尔伯特数？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 581</title>
    <url>/581/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-581"><a href="#Problem-581" class="headerlink" title="Problem 581"></a><a href="https://projecteuler.net/problem=581">Problem 581</a></h1><hr>
<h2 id="47-smooth-triangular-numbers"><a href="#47-smooth-triangular-numbers" class="headerlink" title="47-smooth triangular numbers"></a><strong>47-smooth triangular numbers</strong></h2><p>A number is p-smooth if it has no prime factors larger than p.<br>Let T be the sequence of triangular numbers, ie T($n$)=$n$($n$+1)/2.<br>Find the sum of all indices $n$ such that T($n$) is 47-smooth.</p>
<hr>
<h2 id="47-光滑三角形数"><a href="#47-光滑三角形数" class="headerlink" title="47-光滑三角形数"></a><strong>47-光滑三角形数</strong></h2><p>如果一个数没有大于p的质因数，则称其为p-光滑数。<br>令T表示三角形数数列，也就是说T($n$)=$n$($n$+1)/2。<br>求出所有使得T($n$)为47-光滑的下标$n$的和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 582</title>
    <url>/582/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-582"><a href="#Problem-582" class="headerlink" title="Problem 582"></a><a href="https://projecteuler.net/problem=582">Problem 582</a></h1><hr>
<h2 id="Nearly-isosceles-120-degree-triangles"><a href="#Nearly-isosceles-120-degree-triangles" class="headerlink" title="Nearly isosceles 120 degree triangles"></a><strong>Nearly isosceles 120 degree triangles</strong></h2><p>Let a, b and c be the sides of an integer sided triangle with one angle of 120 degrees, a≤b≤c and b-a≤100.<br>Let T($n$) be the number of such triangles with c≤$n$.<br>T(1000)=235 and T(10<sup>8</sup>)=1245.<br>Find T(10<sup>100</sup>).</p>
<hr>
<h2 id="几乎等腰120度三角形"><a href="#几乎等腰120度三角形" class="headerlink" title="几乎等腰120度三角形"></a><strong>几乎等腰120度三角形</strong></h2><p>记有一个角为120度的整数边长三角形的三边长为a，b和c，且满足a≤b≤c和b-a≤100。<br>记T($n$)为满足c≤$n$的上述三角形的数目。<br>已知T(1000)=235以及T(10<sup>8</sup>)=1245。<br>求T(10<sup>100</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 583</title>
    <url>/583/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-583"><a href="#Problem-583" class="headerlink" title="Problem 583"></a><a href="https://projecteuler.net/problem=583">Problem 583</a></h1><hr>
<h2 id="Heron-Envelopes"><a href="#Heron-Envelopes" class="headerlink" title="Heron Envelopes"></a><strong>Heron Envelopes</strong></h2><p>A standard envelope shape is a convex figure consisting of an isosceles triangle (the flap) placed on top of a rectangle.  An example of an envelope with integral sides is shown below.  Note that to form a sensible envelope, the perpendicular height of the flap (BCD) must be smaller than the height of the rectangle (ABDE).  </p>
<center><img src="/resources/images/0583_heron_envelope.gif" alt="p583_heron_envelope.gif"></center>

<p>In the envelope illustrated, not only are all the sides integral, but also all the diagonals (AC, AD, BD, BE and CE) are integral too. Let us call an envelope with these properties a <i>Heron envelope</i>.</p>
<p>Let S($p$) be the sum of the perimeters of all the Heron envelopes with a perimeter less than or equal to $p$. </p>
<p>You are given that S(10<sup>4</sup>) = 884680. Find S(10<sup>7</sup>).</p>
<hr>
<h2 id="海伦信封"><a href="#海伦信封" class="headerlink" title="海伦信封"></a><strong>海伦信封</strong></h2><p>一个标准信封是由一个在上的等腰三角形（翻折面）和一个在下的长方形组成的凸多边形。 如下所示是一个各边长均为整数的信封。注意，一个合理的信封，其翻折面（BCD）的高应当小于长方形（ABDE）的高。</p>
<center><img src="/resources/images/0583_heron_envelope.gif" alt="p583_heron_envelope.gif"></center>

<p>在展示的这个信封中，不仅各边长均为整数，而且所有对角线（AC，AD，BD，BE和CE）的长度也都是整数。我们将拥有这种性质的信封称为<i class=zh>海伦信封</i>。</p>
<p>令S($p$)表示所有周长小于等于$p$的海伦信封的周长之和。</p>
<p>已知S(10<sup>4</sup>) = 884680。求S(10<sup>7</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 584</title>
    <url>/584/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-584"><a href="#Problem-584" class="headerlink" title="Problem 584"></a><a href="https://projecteuler.net/problem=584">Problem 584</a></h1><hr>
<h2 id="Birthday-Problem-Revisited"><a href="#Birthday-Problem-Revisited" class="headerlink" title="Birthday Problem Revisited"></a><strong>Birthday Problem Revisited</strong></h2><p>A long long time ago in a galaxy far far away, the Wimwians, inhabitants of planet WimWi, discovered an unmanned drone that had landed on their planet. On examining the drone, they uncovered a device that sought the answer for the so called “<b>Birthday Problem</b>“. The description of the problem was as follows:</p>
<p><i>If people on your planet were to enter a very large room one by one, what will be the expected number of people in the room when you first find <b>3 people with Birthdays within 1 day from each other</b>.</i></p>
<p>The description further instructed them to enter the answer into the device and send the drone into space again. Startled by this turn of events, the Wimwians consulted their best mathematicians. Each year on Wimwi has 10 days and the mathematicians assumed equally likely birthdays and ignored leap years (leap years in Wimwi have 11 days), and found 5.78688636 to be the required answer. As such, the Wimwians entered this answer and sent the drone back into space.</p>
<p>After traveling light years away, the drone then landed on planet Joka. The same events ensued except this time, the numbers in the device had changed due to some unknown technical issues. The description read:</p>
<p><i>If people on your planet were to enter a very large room one by one, what will be the expected number of people in the room when you first find <b>3 people with Birthdays within 7 days from each other</b>.</i></p>
<p>With a 100-day year on the planet, the Jokars (inhabitants of Joka) found the answer to be 8.48967364 (rounded to 8 decimal places because the device allowed only 8 places after the decimal point) assuming equally likely birthdays. They too entered the answer into the device and launched the drone into space again.</p>
<p>This time the drone landed on planet Earth. As before the numbers in the problem description had changed. It read:</p>
<p><i>If people on your planet were to enter a very large room one by one, what will be the expected number of people in the room when you first find <b>4 people with Birthdays within 7 days from each other</b>.</i></p>
<p>What would be the answer (rounded to eight places after the decimal point) the people of Earth have to enter into the device for a year with 365 days? Ignore leap years. Also assume that all birthdays are equally likely and independent of each other.</p>
<hr>
<h2 id="生日问题回顾"><a href="#生日问题回顾" class="headerlink" title="生日问题回顾"></a><strong>生日问题回顾</strong></h2><p>很久很久以前，在一个很远很远的星系，温威（WimWi）星球的原住民温威人发现了一台降落在他们星球上的无人机。他们在检查无人机时发现了一台正在寻找所谓“<b>生日问题</b>”的答案的装置。这个问题的描述是这样的：</p>
<p><i class=zh>如果你的星球上的居民一个接一个地走进一间非常大的房间，第一次出现<b>有3个人的生日两两相差不到1天</b>时，房间中人数的期望是多少。</i></p>
<p>他们被要求将答案输入这台装置，并将无人机重新送入宇宙。温威人吃了一惊，他们决定咨询他们最好的数学家。温威星球上每年只有10天，同时数学家假设生日在每一天的概率相同，同时忽略闰年（温威星球上的闰年有11天），最终得出了所要求的结果为5.78688636。随后，温威人将答案输入装置，并将无人机重新送回宇宙。</p>
<p>在又旅行了数光年之后，无人机落在了乔卡（Joka）星球上。同样的事件再次发生了，不过这次，装置上的数字由于一些未知的机械故障而发生了变化。这一次的描述写道：</p>
<p><i class=zh>如果你的星球上的居民一个接一个地走进一间非常大的房间，第一次出现<b>有3个人的生日两两相差不到7天</b>时，房间中人数的期望是多少。</i></p>
<p>乔卡星球的一年有100天，同样假设生日在每一天的概率相同，由此乔卡人（乔卡星球的原住民）得出了答案是8.48967364（保留8位小数，因为装置只给小数点后流出了8个空位）。他们同样地将答案输入装置，并将无人机重新送回宇宙。</p>
<p>这次，无人机落在了地球上。像之前那样，问题中的数字发生了变化。这一回是这样的：</p>
<p><i class=zh>如果你的星球上的居民一个接一个地走进一间非常大的房间，第一次出现<b>有4个人的生日两两相差不到7天</b>时，房间中人数的期望是多少。</i></p>
<p>地球的一年有365天，忽略闰年，并且假设生日落在每一天的概率是相同且独立的，地球人向这个装置输入的答案应该是多少呢（保留小数点后8位小数）？</p>
<p>（译注： WimWi和Joka分别是印度管理学院艾哈迈达巴德分校和加尔各答分校学生对学校的称呼： WIMWI = Well-known Institute of Management in Western India; Joka则是加尔各答分校所在的城市。）</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 585</title>
    <url>/585/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-585"><a href="#Problem-585" class="headerlink" title="Problem 585"></a><a href="https://projecteuler.net/problem=585">Problem 585</a></h1><hr>
<h2 id="Nested-square-roots"><a href="#Nested-square-roots" class="headerlink" title="Nested square roots"></a><strong>Nested square roots</strong></h2><p>Consider the term $\small \sqrt{x+\sqrt{y}+\sqrt{z}}$ that is representing a <b>nested square root</b>. $x$, $y$ and $z$ are positive integers and $y$ and $z$ are not allowed to be perfect squares, so the number below the outer square root is irrational. Still it can be shown that for some combinations of $x$, $y$ and $z$ the given term can be simplified into a sum and/or difference of simple square roots of integers, actually <b>denesting</b> the square roots in the initial expression. </p>
<p>Here are some examples of this denesting:<br>$\small \sqrt{3+\sqrt{2}+\sqrt{2}}=\sqrt{2}+\sqrt{1}=\sqrt{2}+1$<br>$\small \sqrt{8+\sqrt{15}+\sqrt{15}}=\sqrt{5}+\sqrt{3}$<br>$\small \sqrt{20+\sqrt{96}+\sqrt{12}}=\sqrt{9}+\sqrt{6}+\sqrt{3}-\sqrt{2}=3+\sqrt{6}+\sqrt{3}-\sqrt{2}$<br>$\small \sqrt{28+\sqrt{160}+\sqrt{108}}=\sqrt{15}+\sqrt{6}+\sqrt{5}-\sqrt{2}$</p>
<p>As you can see the integers used in the denested expression may also be perfect squares resulting in further simplification.</p>
<p>Let F($n$) be the number of different terms $\small \sqrt{x+\sqrt{y}+\sqrt{z}}$, that can be denested into the sum and/or difference of a finite number of square roots, given the additional condition that $0&lt;x \le n$. That is,<br>$\small \displaystyle \sqrt{x+\sqrt{y}+\sqrt{z}}=\sum_{i=1}^k s_i\sqrt{a_i}$<br>with $k$, $x$, $y$, $z$ and all $a_i$ being positive integers, all $s_i =\pm 1$ and $x\le n$.<br>Furthermore $y$ and $z$  are not allowed to be perfect squares.</p>
<p>Nested roots with the same value are not considered different, for example $\small \sqrt{7+\sqrt{3}+\sqrt{27}}$, $\small \sqrt{7+\sqrt{12}+\sqrt{12}}$ and $\small \sqrt{7+\sqrt{27}+\sqrt{3}}$, that can all three be denested into $\small 2+\sqrt{3}$, would only be counted once.</p>
<p>You are given that F(10)=17, F(15)=46, F(20)=86, F(30)=213 and F(100)=2918 and F(5000)=11134074.<br>Find F(5000000).</p>
<hr>
<h2 id="嵌套平方根"><a href="#嵌套平方根" class="headerlink" title="嵌套平方根"></a><strong>嵌套平方根</strong></h2><p>考虑形如$\small \sqrt{x+\sqrt{y}+\sqrt{z}}$所代表的<b>嵌套平方根</b>。$x$，$y$和$z$都是正整数，且$y$和$z$不能是完全平方数，因此最外层根号下的数是一个无理数。即便如此，可以看出仍然存在一些$x$，$y$和$z$的组合，使得这一式子能进一步简化为一系列简单整数平方根的和或差，或者说将最初的表达式中的平方根<b>解套</b>。</p>
<p>如下是一些解套的例子：<br>$\small \sqrt{3+\sqrt{2}+\sqrt{2}}=\sqrt{2}+\sqrt{1}=\sqrt{2}+1$<br>$\small \sqrt{8+\sqrt{15}+\sqrt{15}}=\sqrt{5}+\sqrt{3}$<br>$\small \sqrt{20+\sqrt{96}+\sqrt{12}}=\sqrt{9}+\sqrt{6}+\sqrt{3}-\sqrt{2}=3+\sqrt{6}+\sqrt{3}-\sqrt{2}$<br>$\small \sqrt{28+\sqrt{160}+\sqrt{108}}=\sqrt{15}+\sqrt{6}+\sqrt{5}-\sqrt{2}$</p>
<p>可以看出，在解套之后的表达式中，根号下的整数可能是完全平方数，因此可以进一步简化。</p>
<p>记F($n$)为满足额外条件$0&lt;x \le n$，且可以解套成有限个平方根的和或差的表达式$\small \sqrt{x+\sqrt{y}+\sqrt{z}}$的数目。也就是说，<br>$\small \displaystyle \sqrt{x+\sqrt{y}+\sqrt{z}}=\sum_{i=1}^k s_i\sqrt{a_i}$<br>其中$k$，$x$，$y$，$z$和所有的$a_i$都是正整数，所有的$s_i =\pm 1$，且$x\le n$。<br>此外，$y$和$z$不能是完全平方数。</p>
<p>值相同的嵌套平方根视为相同的表达式，例如，$\small \sqrt{7+\sqrt{3}+\sqrt{27}}$，$\small \sqrt{7+\sqrt{12}+\sqrt{12}}$和$\small \sqrt{7+\sqrt{27}+\sqrt{3}}$都可以解套成$\small 2+\sqrt{3}$，因此只被算入一次。</p>
<p>已知F(10)=17，F(15)=46，F(20)=86，F(30)=213，F(100)=2918以及F(5000)=11134074。<br>求F(5000000)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 586</title>
    <url>/586/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-586"><a href="#Problem-586" class="headerlink" title="Problem 586"></a><a href="https://projecteuler.net/problem=586">Problem 586</a></h1><hr>
<h2 id="Binary-Quadratic-Form"><a href="#Binary-Quadratic-Form" class="headerlink" title="Binary Quadratic Form"></a><strong>Binary Quadratic Form</strong></h2><p>The number $209$ can be expressed as $a^2 + 3ab + b^2$ in two distinct ways:</p>
<p>$$\begin{aligned}<br>209 &amp;= 8^2 + 3\cdot 8\cdot 5 + 5^2 \\<br>209 &amp;= 13^2 + 3\cdot13\cdot 1 + 1^2<br>\end{aligned}<br>$$</p>
<p>Let $f(n,r)$ be the number of integers $k$ not exceeding $n$ that can be expressed as $k=a^2 + 3ab + b^2$, with $a\gt b&gt;0$ integers, in exactly $r$ different ways.</p>
<p>You are given that $f(10^5, 4) = 237$ and $f(10^8, 6) = 59517$.</p>
<p>Find $f(10^{15}, 40)$.</p>
<hr>
<h2 id="二元二次型"><a href="#二元二次型" class="headerlink" title="二元二次型"></a><strong>二元二次型</strong></h2><p>数$209$可以用两种方式表达为$a^2 + 3ab + b^2$：</p>
<p>$$\begin{aligned}<br>209 &amp;= 8^2 + 3\cdot 8\cdot 5 + 5^2 \\<br>209 &amp;= 13^2 + 3\cdot13\cdot 1 + 1^2<br>\end{aligned}<br>$$</p>
<p>记$f(n,r)$为不超过$n$且恰好可以用$r$种方式表达为$k=a^2 + 3ab + b^2$的整数$k$的数目，其中整数$a\gt b&gt;0$。</p>
<p>已知$f(10^5, 4) = 237$以及$f(10^8, 6) = 59517$。</p>
<p>求$f(10^{15}, 40)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 587</title>
    <url>/587/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-587"><a href="#Problem-587" class="headerlink" title="Problem 587"></a><a href="https://projecteuler.net/problem=587">Problem 587</a></h1><hr>
<h2 id="Concave-triangle"><a href="#Concave-triangle" class="headerlink" title="Concave triangle"></a><strong>Concave triangle</strong></h2><p>A square is drawn around a circle as shown in the diagram below on the left.<br>We shall call the blue shaded region the L-section.<br>A line is drawn from the bottom left of the square to the top right as shown in the diagram on the right.<br>We shall call the orange shaded region a concave triangle.</p>
<center><img src="/resources/images/0587_concave_triangle_1.png" alt="p587_concave_triangle_1.png"></center>

<p>It should be clear that the concave triangle occupies exactly half of the L-section.</p>
<p>Two circles are placed next to each other horizontally, a rectangle is drawn around both circles, and a line is drawn from the bottom left to the top right as shown in the diagram below.</p>
<center><img src="/resources/images/0587_concave_triangle_2.png" alt="p587_concave_triangle_2.png"></center>

<p>This time the concave triangle occupies approximately 36.46% of the L-section.</p>
<p>If $n$ circles are placed next to each other horizontally, a rectangle is drawn around the $n$ circles, and a line is drawn from the bottom left to the top right, then it can be shown that the least value of $n$ for which the concave triangle occupies less than 10% of the L-section is $n$ = 15.</p>
<p>What is the least value of $n$ for which the concave triangle occupies less than 0.1% of the L-section?</p>
<hr>
<h2 id="凹三角形"><a href="#凹三角形" class="headerlink" title="凹三角形"></a><strong>凹三角形</strong></h2><p>如下图左所示，在一个圆外作外接正方形。<br>我们称蓝色阴影区域为L型块。<br>如下图右所示，从正方形的左下角向右上角画一条直线。<br>我们称橙色阴影区域为凹三角形。</p>
<center><img src="/resources/images/0587_concave_triangle_1.png" alt="p587_concave_triangle_1.png"></center>

<p>显然此时凹三角形的面积是L型块的一半。</p>
<p>如下图所示，将两个圆水平并排摆放，并作一个外接长方形，并从左下角向右上角画一条直线。</p>
<center><img src="/resources/images/0587_concave_triangle_2.png" alt="p587_concave_triangle_2.png"></center>

<p>此时凹三角形的面积是L型块的约36.46%。</p>
<p>将$n$个圆水平并排摆放，并作一个外接长方形，并从左下角向右上角画一条直线，可以计算得出，使得此时凹三角形面积少于L型块的10%的最小的$n$=15。</p>
<p>使得凹三角形面积少于L型块的0.1%的最小的$n$值是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 588</title>
    <url>/588/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-588"><a href="#Problem-588" class="headerlink" title="Problem 588"></a><a href="https://projecteuler.net/problem=588">Problem 588</a></h1><hr>
<h2 id="Quintinomial-coefficients"><a href="#Quintinomial-coefficients" class="headerlink" title="Quintinomial coefficients"></a><strong>Quintinomial coefficients</strong></h2><p>The coefficients in the expansion of $(x+1)^k$ are called <b>binomial coefficients</b>.<br>Analoguously the coefficients in the expansion of $(x^4+x^3+x^2+x+1)^k$ are called <b>quintinomial coefficients</b>.<br>(quintus= Latin for fifth).</p>
<p>Consider the expansion of $(x^4+x^3+x^2+x+1)^3$:<br>$x^{12}+3x^{11}+6x^{10}+10x^9+15x^8+18x^7+19x^6+18x^5+15x^4+10x^3+6x^2+3x+1$<br>As we can see 7 out of the 13 quintinomial coefficients for $k=3$ are odd.</p>
<p>Let $Q(k)$ be the number of odd coefficients in the expansion of $(x^4+x^3+x^2+x+1)^k$.<br>So $Q(3)=7$.</p>
<p>You are given $Q(10)=17$ and $Q(100)=35$.</p>
<p>Find $\sum_{k=1}^{18}Q(10^k)$.</p>
<hr>
<h2 id="五项式系数"><a href="#五项式系数" class="headerlink" title="五项式系数"></a><strong>五项式系数</strong></h2><p>$(x+1)^k$展开的各项系数被称为<b>二项式系数</b>。<br>类似地，$(x^4+x^3+x^2+x+1)^k$展开的各项系数被称为<b>五项式系数</b>。<br>（quintus是表示“第5”的拉丁语词汇）。</p>
<p>考虑$(x^4+x^3+x^2+x+1)^3$的展开式：<br>$x^{12}+3x^{11}+6x^{10}+10x^9+15x^8+18x^7+19x^6+18x^5+15x^4+10x^3+6x^2+3x+1$<br>我们可以看出，当$k=3$时，13个五项式系数中有7个是奇数。</p>
<p>令$Q(k)$表示$(x^4+x^3+x^2+x+1)^k$的展开式的系数中奇数的数目。<br>因此$Q(3)=7$。</p>
<p>已知$Q(10)=17$以及$Q(100)=35$。</p>
<p>求$\sum_{k=1}^{18}Q(10^k)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 589</title>
    <url>/589/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-589"><a href="#Problem-589" class="headerlink" title="Problem 589"></a><a href="https://projecteuler.net/problem=589">Problem 589</a></h1><hr>
<h2 id="Poohsticks-Marathon"><a href="#Poohsticks-Marathon" class="headerlink" title="Poohsticks Marathon"></a><strong>Poohsticks Marathon</strong></h2><p>Christopher Robin and Pooh Bear love the game of Poohsticks so much that they invented a new version which allows them to play for longer before one of them wins and they have to go home for tea. The game starts as normal with both dropping a stick simultaneously on the upstream side of a bridge. But rather than the game ending when one of the sticks emerges on the downstream side, instead they fish their sticks out of the water, and drop them back in again on the upstream side. The game only ends when one of the sticks emerges from under the bridge ahead of the other one having also ‘lapped’ the other stick - that is, having made one additional journey under the bridge compared to the other stick.</p>
<p>On a particular day when playing this game, the time taken for a stick to travel under the bridge varies between a minimum of 30 seconds, and a maximum of 60 seconds. The time taken to fish a stick out of the water and drop it back in again on the other side is 5 seconds. The current under the bridge has the unusual property that the sticks’ journey time is always an integral number of seconds, and it is equally likely to emerge at any of the possible times between 30 and 60 seconds (inclusive). It turns out that under these circumstances, the expected time for playing a single game is 1036.15 seconds (rounded to 2 decimal places). This time is measured from the point of dropping the sticks for the first time, to the point where the winning stick emerges from under the bridge having lapped the other.</p>
<p>The stream flows at different rates each day, but maintains the property that the journey time in seconds is equally distributed amongst the integers from a minimum, $n$, to a maximum, $m$, inclusive. Let the expected time of play in seconds be $E(m,n)$. Hence $E(60,30)=1036.15…$</p>
<p>Let $S(k)=\sum_{m=2}^k\sum_{n=1}^{m-1}E(m,n)$.</p>
<p>For example $S(5)=7722.82$ rounded to 2 decimal places.</p>
<p>Find $S(100)$ and give your answer rounded to 2 decimal places.</p>
<hr>
<h2 id="维尼木棍马拉松"><a href="#维尼木棍马拉松" class="headerlink" title="维尼木棍马拉松"></a><strong>维尼木棍马拉松</strong></h2><p>克里斯托佛·罗宾和小熊维尼特别喜欢玩维尼木棍这个游戏，因此他们发明了一种新的版本，这样他们就不用在一方获胜后早早回家喝茶而可以玩得更久。和一般的“维尼木棍”游戏一样，开始时，两人同时在桥的上游扔下一根木棍，但在其中一根木棍在桥的下游一边出现时，游戏并不结束，而是从水里捞起来然后再次扔到桥的上游。游戏只在当其中一根木棍从桥的下游出现时，另一根还未完成其上一轮从桥的下游出现——也就是说，套了另一根木棍整整一圈。</p>
<p>在某一天玩这个游戏时，一根木棍从桥的上游到达下游所用的时间最少为30秒，最多为60秒。将木棍捞起来并重新扔到桥的另一边所用的时间为5秒。桥下的水流有一种神奇的性质，使得木棍所用的时间总是整数秒，而且任意30秒至60秒之间（含）的时长都是等可能发生的。在这种情况下，进行一整轮游戏的期望时间为1036.15秒（保留2位小数），这个时间是从第一次将木棍扔入水中开始计算，直到获胜的木棍最后一次浮出水面为止。</p>
<p>每天水流的速度都不同，但是都保持着这个性质：木棍每一趟旅程的时间等可能地分布在最小值$n$和最大值$m$间（含）的所有整数上。记以秒计的每一轮的期望游戏时间为$E(m,n)$。因此$E(60,30)=1036.15…$。</p>
<p>令$S(k)=\sum_{m=2}^k\sum_{n=1}^{m-1}E(m,n)$。</p>
<p>例如$S(5)=7722.82$保留2位小数。</p>
<p>求$S(100)$并将你的答案保留2位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 59</title>
    <url>/59/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-59"><a href="#Problem-59" class="headerlink" title="Problem 59"></a><a href="https://projecteuler.net/problem=59">Problem 59</a></h1><hr>
<h2 id="XOR-Decryption"><a href="#XOR-Decryption" class="headerlink" title="XOR Decryption"></a><strong>XOR Decryption</strong></h2><p>Each character on a computer is assigned a unique code and the preferred standard is ASCII (American Standard Code for Information Interchange). For example, uppercase $A = 65$, asterisk (*) $= 42$, and lowercase $k = 107$.</p>
<p>A modern encryption method is to take a text file, convert the bytes to ASCII, then XOR each byte with a given value, taken from a secret key. The advantage with the XOR function is that using the same encryption key on the cipher text, restores the plain text; for example, $65$ XOR $42 = 107$, then $107$ XOR $42 = 65$.</p>
<p>For unbreakable encryption, the key is the same length as the plain text message, and the key is made up of random bytes. The user would keep the encrypted message and the encryption key in different locations, and without both “halves”, it is impossible to decrypt the message.</p>
<p>Unfortunately, this method is impractical for most users, so the modified method is to use a password as a key. If the password is shorter than the message, which is likely, the key is repeated cyclically throughout the message. The balance for this method is using a sufficiently long password key for security, but short enough to be memorable.</p>
<p>Your task has been made easy, as the encryption key consists of three lower case characters. Using <a href="https://projecteuler.net/project/resources/p059_cipher.txt">cipher.txt</a> (right click and ‘Save Link/Target As…’), a file containing the encrypted ASCII codes, and the knowledge that the plain text must contain common English words, decrypt the message and find the sum of the ASCII values in the original text.</p>
<hr>
<h2 id="异或解密"><a href="#异或解密" class="headerlink" title="异或解密"></a><strong>异或解密</strong></h2><p>计算机上的每个字符都被指定了一个独特的代码，其中被广泛使用的一种是ASCII码（美国信息交换标准代码）。例如，大写字母$A = 65$，星号（*）$ = 42$，小写字母$k = 107$。</p>
<p>一种现代加密方法是将一个文本文档中的字符先转化为ASCII码，然后将其与一个根据密钥确定的值进行异或操作。使用异或进行加密的好处在于，只需对密文使用相同的密钥再加密一次就能得到明文，例如，$65$ XOR $42 = 107$，而$107$ XOR $42 = 65$。</p>
<p>为了使加密难以破解，密钥应当和明文一样长，由随机的字节构成。用户会把加密过的信息和密钥放置在不同的地方，解密时二者缺一不可。</p>
<p>不幸的是，这种方法对大多数人来说并不实用，因此一个略有改进的方法是使用一个口令作为密钥。口令的长度很有可能比信息要短，这时候就循环重复使用这个口令进行加密。这种方法需要达到一种平衡，一方面口令要足够长才能保证安全，另一方面需要充分短以方便记忆。</p>
<p>你的破解任务要简单得多，因为密钥只由三个小写字母构成。文本文件<a href="https://projecteuler.net/project/resources/p059_cipher.txt">cipher.txt</a>中包含了加密后的ASCII码，并且已知明文包含的都是常见的英文单词。解密这条消息并求出原文的ASCII码之和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 590</title>
    <url>/590/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-590"><a href="#Problem-590" class="headerlink" title="Problem 590"></a><a href="https://projecteuler.net/problem=590">Problem 590</a></h1><hr>
<h2 id="Sets-with-a-given-Least-Common-Multiple"><a href="#Sets-with-a-given-Least-Common-Multiple" class="headerlink" title="Sets with a given Least Common Multiple"></a><strong>Sets with a given Least Common Multiple</strong></h2><p>Let H($n$) denote the number of sets of positive integers such that the least common multiple of the integers in the set equals $n$.<br>E.g.:<br>The integers in the following ten sets all have a least common multiple of 6:<br>{2,3}, {1,2,3}, {6}, {1,6}, {2,6}, {1,2,6}, {3,6}, {1,3,6}, {2,3,6} and {1,2,3,6}.<br>Thus H(6)=10.</p>
<p>Let L($n$) denote the least common multiple of the numbers 1 through $n$.<br>E.g. L(6) is the least common multiple of the numbers 1,2,3,4,5,6 and L(6) equals 60.</p>
<p>Let HL($n$) denote H(L($n$)).<br>You are given HL(4)=H(12)=44.</p>
<p>Find HL(50000). Give your answer modulo 10<sup>9</sup>.</p>
<hr>
<h2 id="给定最小公倍数的集合"><a href="#给定最小公倍数的集合" class="headerlink" title="给定最小公倍数的集合"></a><strong>给定最小公倍数的集合</strong></h2><p>记H($n$)表示各元素的最小公倍数为$n$的正整数集的数目。<br>例如：<br>下面这10个集合，其元素的最小公倍数都是6：<br>{2,3}，{1,2,3}，{6}，{1,6}，{2,6}，{1,2,6}，{3,6}，{1,3,6}，{2,3,6}和{1,2,3,6}。<br>因此H(6)=10。</p>
<p>记L($n$)为1到$n$的所有整数的最小公倍数。<br>例如，L(6)表示1，2，3，4，5，6的最小公倍数，因此L(6)等于60。</p>
<p>记HL($n$)为H(L($n$))。<br>已知HL(4)=H(12)=44。</p>
<p>求HL(50000)。将你的答案对10<sup>9</sup>取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 591</title>
    <url>/591/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-591"><a href="#Problem-591" class="headerlink" title="Problem 591"></a><a href="https://projecteuler.net/problem=591">Problem 591</a></h1><hr>
<h2 id="Best-Approximations-by-Quadratic-Integers"><a href="#Best-Approximations-by-Quadratic-Integers" class="headerlink" title="Best Approximations by Quadratic Integers"></a><strong>Best Approximations by Quadratic Integers</strong></h2><p>Given a non-square integer $d$, any real $x$ can be approximated arbitrarily close by <b>quadratic integers</b> $a+b\sqrt{d}$, where $a,b$ are integers. For example, the following inequalities approximate $\pi$ with precision $10^{-13}$:<br>$4375636191520\sqrt{2}-6188084046055 &lt; \pi &lt; 721133315582\sqrt{2}-1019836515172 $<br>We call $BQA_d(x,n)$ the quadratic integer closest to $x$ with the absolute values of $a,b$ not exceeding $n$.<br>We also define the integral part of a quadratic integer as $I_d(a+b\sqrt{d}) = a$.</p>
<p>You are given that:</p>
<ul>
<li>$BQA_2(\pi,10) = 6 - 2\sqrt{2}$</li>
<li>$BQA_5(\pi,100)=26\sqrt{5}-55$</li>
<li>$BQA_7(\pi,10^6)=560323 - 211781\sqrt{7}$</li>
<li>$I_2(BQA_2(\pi,10^{13}))=-6188084046055$</li>
</ul>
<p>Find the sum of $|I_d(BQA_d(\pi,10^{13}))|$ for all non-square positive integers less than 100.</p>
<hr>
<h2 id="二次整数最佳逼近"><a href="#二次整数最佳逼近" class="headerlink" title="二次整数最佳逼近"></a><strong>二次整数最佳逼近</strong></h2><p>给定一个非完全平方的整数$d$，任意实数$x$可以用所谓<b>二次整数</b>$a+b\sqrt{d}$任意逼近，其中$a,b$均为整数。例如如下不等式能够以$10^{-13}$的精度逼近$\pi$：<br>$4375636191520\sqrt{2}-6188084046055 &lt; \pi &lt; 721133315582\sqrt{2}-1019836515172$<br>我们记$a,b$不超过$n$的所有二次整数中最接近$x$的为$BQA_d(x,n)$。<br>同时我们定义二次整数的“整数”部分为$I_d(a+b\sqrt{d}) = a$。</p>
<p>已知：</p>
<ul>
<li>$BQA_2(\pi,10) = 6 - 2\sqrt{2}$</li>
<li>$BQA_5(\pi,100)=26\sqrt{5}-55$</li>
<li>$BQA_7(\pi,10^6)=560323 - 211781\sqrt{7}$</li>
<li>$I_2(BQA_2(\pi,10^{13}))=-6188084046055$</li>
</ul>
<p>对于所有小于100的非完全平方整数$d$，求其对应的$|I_d(BQA_d(\pi,10^{13}))|$之和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 592</title>
    <url>/592/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-592"><a href="#Problem-592" class="headerlink" title="Problem 592"></a><a href="https://projecteuler.net/problem=592">Problem 592</a></h1><hr>
<h2 id="Factorial-trailing-digits-2"><a href="#Factorial-trailing-digits-2" class="headerlink" title="Factorial trailing digits 2"></a><strong>Factorial trailing digits 2</strong></h2><p>For any $N$, let $f$($N$) be the last twelve hexadecimal digits before the trailing zeroes in $N$!.</p>
<p>For example, the hexadecimal representation of 20! is 21C3677C82B40000,<br>so $f$(20) is the digit sequence 21C3677C82B4.</p>
<p>Find $f$(20!). Give your answer as twelve hexadecimal digits, using uppercase for the digits A to F.</p>
<hr>
<h2 id="阶乘的尾数2"><a href="#阶乘的尾数2" class="headerlink" title="阶乘的尾数2"></a><strong>阶乘的尾数2</strong></h2><p>对于任意$N$，记$f$($N$)为$N$!的十六进制表示除去末尾零后的最后十二位数字。</p>
<p>例如，20！的十六进制表示为21C3677C82B40000，<br>因此$f$(20)为数字序列21C3677C82B4。</p>
<p>求$f$(20!)。你的答案应当是十二位十六进制数字，注意使用大写字母A至F。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 593</title>
    <url>/593/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-593"><a href="#Problem-593" class="headerlink" title="Problem 593"></a><a href="https://projecteuler.net/problem=593">Problem 593</a></h1><hr>
<h2 id="Fleeting-Medians"><a href="#Fleeting-Medians" class="headerlink" title="Fleeting Medians"></a><strong>Fleeting Medians</strong></h2><p>We define two sequences $S = {S(1), S(2), …, S(n)}$ and $S_2 = {S_2(1), S_2(2), …, S_2(n)}$:</p>
<p>$S(k) = (p_k)^k$ mod $10007$ where $p_k$ is the $k$th prime number.</p>
<p>$S_2(k) = S(k) + S(\lfloor\frac{k}{10000}\rfloor + 1)$ where $\lfloor \cdot \rfloor$ denotes the floor function.</p>
<p>Then let $M(i, j)$ be the median of elements $S_2(i)$ through $S_2(j)$, inclusive. For example, $M(1, 10) = 2021.5$ and $M(10^2, 10^3) = 4715.0$.</p>
<p>Let $F(n, k) = \sum_{i=1}^{n-k+1} M(i, i + k - 1)$. For example, $F(100, 10) = 463628.5$ and $F(10^5, 10^4) = 675348207.5$.</p>
<p>Find $F(10^7, 10^5)$. If the sum is not an integer, use $.5$ to denote a half. Otherwise, use $.0$ instead.</p>
<hr>
<h2 id="快速中位数"><a href="#快速中位数" class="headerlink" title="快速中位数"></a><strong>快速中位数</strong></h2><p>我们定义两个序列$S = {S(1), S(2), …, S(n)}$和$S_2 = {S_2(1), S_2(2), …, S_2(n)}$：</p>
<p>$S(k) = (p_k)^k$ mod $10007$，其中$p_k$是第$k$个素数。</p>
<p>$S_2(k) = S(k) + S(\lfloor\frac{k}{10000}\rfloor + 1)$，其中$\lfloor \cdot \rfloor$表示下取整函数。</p>
<p>然后记$M(i, j)$为从$S_2(i)$到$S_2(j)$（含）的中位数。例如，$M(1, 10) = 2021.5$，而$M(10^2, 10^3) = 4715.0$。</p>
<p>记$F(n, k) = \sum_{i=1}^{n-k+1} M(i, i + k - 1)$。例如，$F(100, 10) = 463628.5$，而$F(10^5, 10^4) = 675348207.5$。</p>
<p>求$F(10^7, 10^5)$。如果这个和值不是整数，用$.5$表示，否则用$.0$表示。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 594</title>
    <url>/594/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-594"><a href="#Problem-594" class="headerlink" title="Problem 594"></a><a href="https://projecteuler.net/problem=594">Problem 594</a></h1><hr>
<h2 id="Rhombus-Tilings"><a href="#Rhombus-Tilings" class="headerlink" title="Rhombus Tilings"></a><strong>Rhombus Tilings</strong></h2><p>For a polygon $P$, let $t(P)$ be the number of ways in which $P$ can be tiled using rhombi and squares with edge length 1. Distinct rotations and reflections are counted as separate tilings.</p>
<p>For example, if $O$ is a regular octagon with edge length 1, then $t(O) = 8$. As it happens, all these 8 tilings are rotations of one another:</p>
<center><img src="/resources/images/0594_octagon_tilings_1.png" alt="p594_octagon_tilings_1.png"></center>

<p>Let $O_{a,b}$ be the equal-angled convex octagon whose edges alternate in length between $a$ and $b$.<br>For example, here is $O_{2,1}$, with one of its tilings:</p>
<center><img src="/resources/images/0594_octagon_tilings_2.png" alt="p594_octagon_tilings_2.png"></center>

<p>You are given that $t(O_{1,1})=8$, $t(O_{2,1})=76$ and $t(O_{3,2})=456572$.</p>
<p>Find $t(O_{4,2})$.</p>
<hr>
<h2 id="菱形地砖"><a href="#菱形地砖" class="headerlink" title="菱形地砖"></a><strong>菱形地砖</strong></h2><p>对于多边形$P$，记$t(P)$为用边长为1的菱形和正方形地砖铺满$P$的方法数。旋转和翻转后相同的铺法视为不同的铺法。</p>
<p>例如，如果用$O$表示一个边长为1的正八边形，那么$t(O) = 8$。事实上，这8种铺法都可以通过旋转相互得到：</p>
<center><img src="/resources/images/0594_octagon_tilings_1.png" alt="p594_octagon_tilings_1.png"></center>

<p>用$O_{a,b}$表示边长交替为$a$和$b$的等角凸八边形。<br>例如，如下是$O_{2,1}$和其中一种铺法：</p>
<center><img src="/resources/images/0594_octagon_tilings_2.png" alt="p594_octagon_tilings_2.png"></center>

<p>已知$t(O_{1,1})=8$，$t(O_{2,1})=76$，以及$t(O_{3,2})=456572$。</p>
<p>求$t(O_{4,2})$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 595</title>
    <url>/595/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-595"><a href="#Problem-595" class="headerlink" title="Problem 595"></a><a href="https://projecteuler.net/problem=595">Problem 595</a></h1><hr>
<h2 id="Incremental-Random-Sort"><a href="#Incremental-Random-Sort" class="headerlink" title="Incremental Random Sort"></a><strong>Incremental Random Sort</strong></h2><p>A deck of cards numbered from 1 to n is shuffled randomly such that each permutation is equally likely.</p>
<p>The cards are to be sorted into ascending order using the following technique:</p>
<ol>
<li>Look at the initial sequence of cards.  If it is already sorted, then there is no need for further action.  Otherwise, if any subsequences of cards happen to be in the correct place relative to one another (ascending with no gaps), then those subsequences are fixed by attaching the cards together. For example, with 7 cards initially in the order 4123756, the cards labelled 1, 2 and 3 would be attached together, as would 5 and 6.</li>
<li>The cards are ‘shuffled’ by being thrown into the air, but note that any correctly sequenced cards remain attached, so their orders are maintained.  The cards (or bundles of attached cards) are then picked up randomly.  You should assume that this randomisation is unbiased, despite the fact that some cards are single, and others are grouped together. </li>
<li>Repeat steps 1 and 2 until the cards are sorted. </li>
</ol>
<p>Let S(n) be the expected number of shuffles needed to sort the cards. Since the order is checked before the first shuffle, S(1) = 0. You are given that S(2) = 1, and S(5) = 4213/871.</p>
<p>Find S(52), and give your answer rounded to 8 decimal places.</p>
<hr>
<h2 id="改进随机排序"><a href="#改进随机排序" class="headerlink" title="改进随机排序"></a><strong>改进随机排序</strong></h2><p>一叠编号为1至n的卡片被随机地洗匀，每一种排列出现的可能性相等。</p>
<p>这些卡片将按照以下步骤排序成递增顺序：</p>
<ol>
<li>查看卡片的初始顺序。如果卡片已经有序，那么没必要采取额外的操作。否则，如果卡片中有任何子序列已经有序（连续的上升序列），则这些子序列会被固定在一起。例如，如果7张卡片的初始顺序是4123756，那么标号为1，2和3的卡片和标号为5和6的卡片将会分别固定在一起。</li>
<li>将这些卡片扔到空中“洗牌”，注意已经被固定在一起的卡片在这个过程中不会被分开，因此其顺序不发生改变。这些卡片（或卡片组）然后被随机地捡起来，你可以假设这一随机操作是无偏的，即使其中有些卡片只有一张，而有些则被固定在一块儿。</li>
<li>重复步骤1和2，直到卡片已经有序。</li>
</ol>
<p>记S(n)为将这些卡片排序所需要的期望洗牌次数。因为在第一次洗牌前会检查顺序，故S(1) = 0。已知S(2) = 1，以及S(5) = 4213/871。</p>
<p>求S(52)，并将你的答案保留8位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 596</title>
    <url>/596/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-596"><a href="#Problem-596" class="headerlink" title="Problem 596"></a><a href="https://projecteuler.net/problem=596">Problem 596</a></h1><hr>
<h2 id="Number-of-lattice-points-in-a-hyperball"><a href="#Number-of-lattice-points-in-a-hyperball" class="headerlink" title="Number of lattice points in a hyperball"></a><strong>Number of lattice points in a hyperball</strong></h2><p>Let T($r$) be the number of integer quadruplets $x$, $y$, $z$, $t$ such that $x^2+y^2+z^2+t^2 \le r^2$. In other words, T($r$) is the number of lattice points in the four-dimensional hyperball of radius $r$.</p>
<p>You are given that T(2) = 89, T(5) = 3121, T(100) = 493490641 and T(10<sup>4</sup>) = 49348022079085897.</p>
<p>Find T(10<sup>8</sup>) mod 1000000007.</p>
<hr>
<h2 id="超球中的格点数目"><a href="#超球中的格点数目" class="headerlink" title="超球中的格点数目"></a><strong>超球中的格点数目</strong></h2><p>记T($r$)为满足$x^2+y^2+z^2+t^2 \le r^2$的整数四元组$x$，$y$，$z$，$t$的数目。换言之，T($r$)是半径为$r$的四维超球中格点的数目。</p>
<p>已知T(2) = 89，T(5) = 3121，T(100) = 493490641以及T(10<sup>4</sup>) = 49348022079085897。</p>
<p>求T(10<sup>8</sup>) mod 1000000007。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 597</title>
    <url>/597/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-597"><a href="#Problem-597" class="headerlink" title="Problem 597"></a><a href="https://projecteuler.net/problem=597">Problem 597</a></h1><hr>
<h2 id="Torpids"><a href="#Torpids" class="headerlink" title="Torpids"></a><strong>Torpids</strong></h2><p>The Torpids are rowing races held annually in Oxford, following some curious rules:</p>
<ul>
<li>A division consists of $n$ boats (typically 13), placed in order based on past performance.</li>
<li>All boats within a division start at 40 metre intervals along the river, in order with the highest-placed boat starting furthest upstream.</li>
<li>The boats all start rowing simultaneously, upstream, trying to catch the boat in front while avoiding being caught by boats behind.</li>
<li>Each boat continues rowing until <i>either</i> it reaches the finish line <i>or</i> it catches up with (“bumps”) a boat in front.</li>
<li>The finish line is a distance $L$ metres (the course length, in reality about 1800 metres) upstream from the starting position of the lowest-placed boat. (Because of the staggered starting positions, higher-placed boats row a slightly shorter course than lower-placed boats.)</li>
<li>When a “bump” occurs, the “bumping” boat takes no further part in the race. The “bumped” boat must continue, however, and may even be “bumped” again by boats that started two or more places behind it.</li>
<li>After the race, boats are assigned new places within the division, based on the bumps that occurred. Specifically, for any boat $A$ that started in a lower place than $B$, then $A$ will be placed higher than $B$ in the new order if and only if one of the following occurred:<ol>
<li>$A$ bumped $B$ directly </li>
<li>$A$ bumped another boat that went on to bump $B$ </li>
<li>$A$ bumped another boat, that bumped yet another boat, that bumped $B$ </li>
<li>etc</li>
</ol>
</li>
</ul>
<p><b>NOTE</b>: For the purposes of this problem you may disregard the boats’ lengths, and assume that a bump occurs precisely when the two boats draw level. (In reality, a bump is awarded as soon as physical contact is made, which usually occurs when there is much less than a full boat length’s overlap.)</p>
<p>Suppose that, in a particular race, each boat $B_j$ rows at a steady speed $v_j = - \log X_j$ metres per second, where the $X_j$ are chosen randomly (with uniform distribution) between 0 and 1, independently from one another. These speeds are relative to the riverbank: you may disregard the flow of the river.</p>
<p>Let $p(n,L)$ be the probability that the new order is an <b>even permutation</b> of the starting order, when there are $n$ boats in the division and $L$ is the course length.</p>
<p>For example, with $n=3$ and $L=160$, labelling the boats as $A$,$B$,$C$ in starting order with $C$ highest, the different possible outcomes of the race are as follows:</p>
<table>
<thead>
<tr>
<th align="center"><b>Bumps occurring</b></th>
<th align="center"><b>New order</b></th>
<th align="center"><b>Permutation</b></th>
<th align="center"><b>Probability</b></th>
</tr>
</thead>
<tbody><tr>
<td align="center">none</td>
<td align="center">$A$, $B$, $C$</td>
<td align="center">even</td>
<td align="center">4/15</td>
</tr>
<tr>
<td align="center">$B$ bumps $C$</td>
<td align="center">$A$, $C$, $B$</td>
<td align="center">odd</td>
<td align="center">8/45</td>
</tr>
<tr>
<td align="center">$A$ bumps $B$</td>
<td align="center">$B$, $A$, $C$</td>
<td align="center">odd</td>
<td align="center">1/3</td>
</tr>
<tr>
<td align="center">$B$ bumps $C$, then $A$ bumps $C$</td>
<td align="center">$C$, $A$, $B$</td>
<td align="center">even</td>
<td align="center">4/27</td>
</tr>
<tr>
<td align="center">$A$ bumps $B$, then $B$ bumps $C$</td>
<td align="center">$C$, $B$, $A$</td>
<td align="center">odd</td>
<td align="center">2/27</td>
</tr>
</tbody></table>
<p>Therefore, $p(3,160) = 4/15 + 4/27 = 56/135$.</p>
<p>You are also given that $p(4,400)=0.5107843137$, rounded to 10 digits after the decimal point.</p>
<p>Find $p(13,1800)$ rounded to 10 digits after the decimal point.</p>
<hr>
<h2 id="赛艇"><a href="#赛艇" class="headerlink" title="赛艇"></a><strong>赛艇</strong></h2><p>在牛津大学，每年都会举办一场规则奇特的赛艇比赛：</p>
<ul>
<li>每一组比赛由$n$条船进行（通常是13条），按照以往的表现决定排名。</li>
<li>同一组中所有的船以40米的间隔沿河设定出发点，排名越高的船越靠近上游。</li>
<li>所有的船同时向上游出发，试图追上前船同时避免被后船追上。</li>
<li>每条船保持前进直到它到达终点线<i class=zh>或</i>它追上（“撞击”）前船。</li>
<li>终点线距离排名最低的船的起始位置距离$L$米（航程全长在现实中通常是1800米）。（因为起始位置不同，排名高的船到终点线的距离略短于排名低的船。）</li>
<li>当“撞击”发生时，进行“撞击”的船结束比赛。而“被撞”的船则继续前进，甚至可能被后面的船“撞击”多次。</li>
<li>在比赛后，每一组的船会根据发生的“撞击”重新进行排名。具体来说，如果原先船$A$排名低于船$B$，则船$A$的新排名高于船$B$当且仅当以下之一发生：<ol>
<li>$A$直接撞击$B$ </li>
<li>$A$撞击一艘船，该船撞击$B$ </li>
<li>$A$撞击一艘船，该船撞击另一艘船，另一艘船撞击$B$ </li>
<li>依此类推</li>
</ol>
</li>
</ul>
<p><b>注意</b>：问题方便起见，你可以暂时忽略船的长度，并且假设撞击准确地发生在两船位置相同时。（现实中，当两船有物理上的接触时就认定发生了碰撞，通常此时两船的距离远不到一个船身长。）</p>
<p>假设在一场特定的比赛，每条船$B_j$以固定的速度$v_j = - \log X_j$米每秒行驶，其中$X_j$从0到1上（均匀分布）随机独立地抽取。这些速度都是相对于河岸的：你可以忽略水流的速度。</p>
<p>令$p(n,L)$表示，当每一组有$n$条船且航程全长为$L$时，新排名是原排名的<b>偶排列</b>的概率。</p>
<p>例如，当$n=3$且$L=160$时，将三条船分别按排名标记为$A$，$B$，$C$，其中$C$的排名最高，则比赛所有可能的结果如下表所示：</p>
<table>
<thead>
<tr>
<th align="center"><b>发生的撞击</b></th>
<th align="center"><b>新排名</b></th>
<th align="center"><b>排列性质</b></th>
<th align="center"><b>概率</b></th>
</tr>
</thead>
<tbody><tr>
<td align="center">未发生</td>
<td align="center">$A$，$B$，$C$</td>
<td align="center">偶排列</td>
<td align="center">4/15</td>
</tr>
<tr>
<td align="center">$B$撞击$C$</td>
<td align="center">$A$，$C$，$B$</td>
<td align="center">奇排列</td>
<td align="center">8/45</td>
</tr>
<tr>
<td align="center">$A$撞击$B$</td>
<td align="center">$B$，$A$，$C$</td>
<td align="center">奇排列</td>
<td align="center">1/3</td>
</tr>
<tr>
<td align="center">$B$撞击$C$，然后$A$撞击$C$</td>
<td align="center">$C$，$A$，$B$</td>
<td align="center">偶排列</td>
<td align="center">4/27</td>
</tr>
<tr>
<td align="center">$A$撞击$B$，然后$B$撞击$C$</td>
<td align="center">$C$，$B$，$A$</td>
<td align="center">奇排列</td>
<td align="center">2/27</td>
</tr>
</tbody></table>
<p>因此，$p(3,160) = 4/15 + 4/27 = 56/135$。</p>
<p>此外还已知$p(4,400)=0.5107843137$，保留小数点后10位小数。</p>
<p>求$p(13,1800)$并保留小数点后10位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 599</title>
    <url>/599/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-599"><a href="#Problem-599" class="headerlink" title="Problem 599"></a><a href="https://projecteuler.net/problem=599">Problem 599</a></h1><hr>
<h2 id="Distinct-Colourings-of-a-Rubik’s-Cube"><a href="#Distinct-Colourings-of-a-Rubik’s-Cube" class="headerlink" title="Distinct Colourings of a Rubik’s Cube"></a><strong>Distinct Colourings of a Rubik’s Cube</strong></h2><p>The well-known <b>Rubik’s Cube</b> puzzle has many fascinating mathematical properties. The 2×2×2 variant has 8 cubelets with a total of 24 visible faces, each with a coloured sticker. Successively turning faces will rearrange the cubelets, although not all arrangements of cubelets are reachable without dismantling the puzzle.</p>
<p>Suppose that we wish to apply new stickers to a 2×2×2 Rubik’s cube in a non-standard colouring. Specifically, we have $n$ different colours available (with an unlimited supply of stickers of each colour), and we place one sticker on each of the 24 faces in any arrangement that we please. We are not required to use all the colours, and if desired the same colour may appear in more than one face of a single cubelet.</p>
<p>We say that two such colourings $c_1,c_2$ are <i>essentially distinct</i> if a cube coloured according to $c_1$ cannot be made to match a cube coloured according to $c_2$ by performing mechanically possible Rubik’s Cube moves.</p>
<p>For example, with two colours available, there are 183 essentially distinct colourings.</p>
<p>How many essentially distinct colourings are there with 10 different colours available?</p>
<hr>
<h2 id="魔方上色"><a href="#魔方上色" class="headerlink" title="魔方上色"></a><strong>魔方上色</strong></h2><p>著名的<b>鲁比克立方体</b>（魔方）有着许多惊艳的数学性质。2×2×2的魔方由8个小立方体构成，共有24个可视的面，每个面上有一张彩色贴纸。合法地旋转操作可以重新排列这些小立方体，但有些小立方体的排列无法在不破坏魔方的前提下达成。</p>
<p>假设现在我们打算给2×2×2魔方换一套贴纸颜色。具体来说，我们有$n$种不同的可选颜色（每种颜色都有无限量的供应），然后在24个面的每一个上任选一种颜色的贴纸贴上去。我们并不要求使用全部的颜色，而且在同一个小立方体的不同面上可以有同样的颜色多次出现。</p>
<p>我们称两种上色方案$c_1,c_2$是<i class=zh>完全不同的</i>，如果按照$c_1$上色的魔方不能通过机械上可行的魔方操作转化为按照$c_2$上色的魔方。</p>
<p>例如，如果只有两种可选的颜色，那么一共有183种完全不同的上色方案。</p>
<p>如果有10种不同的可选颜色，一共有多少种完全不同的上色方案？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 598</title>
    <url>/598/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-598"><a href="#Problem-598" class="headerlink" title="Problem 598"></a><a href="https://projecteuler.net/problem=598">Problem 598</a></h1><hr>
<h2 id="Split-Divisibilities"><a href="#Split-Divisibilities" class="headerlink" title="Split Divisibilities"></a><strong>Split Divisibilities</strong></h2><p>Consider the number 48.<br>There are five pairs of integers $a$ and $b$ ($a \leq b$) such that $a \times b=48$: (1,48), (2,24), (3,16), (4,12) and (6,8).<br>It can be seen that both 6 and 8 have 4 divisors.<br>So of those five pairs one consists of two integers with the same number of divisors.</p>
<p>In general:<br>Let $C(n)$ be the number of pairs of positive integers $a \times b=n$, ($a \leq b$) such that $a$ and $b$ have the same number of divisors;<br>so $C(48)=1$.</p>
<p>You are given $C(10!)=3$: (1680, 2160), (1800, 2016) and (1890,1920).</p>
<p>Find $C(100!)$.</p>
<hr>
<h2 id="分配整除性"><a href="#分配整除性" class="headerlink" title="分配整除性"></a><strong>分配整除性</strong></h2><p>考虑数48。<br>有五对整数$a$和$b$（$a \leq b$）满足$a \times b=48$：(1,48)，(2,24)，(3,16)，(4,12)和(6,8)。<br>可以看出，6和8都有4个因数。<br>所以在这五对整数中，只有一对整数的因数数量相同。</p>
<p>一般地：<br>令$C(n)$表示所有满足$a \times b=n$（$a \leq b$），且$a$和$b$的因数数量相同的正整数数对的数目；<br>因此已知$C(48)=1$。</p>
<p>此外，还已知$C(10!)=3$：(1680, 2160)，(1800, 2016)和(1890,1920)。</p>
<p>求$C(100!)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 6</title>
    <url>/6/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-6"><a href="#Problem-6" class="headerlink" title="Problem 6"></a><a href="https://projecteuler.net/problem=6">Problem 6</a></h1><hr>
<h2 id="Sum-Square-Difference"><a href="#Sum-Square-Difference" class="headerlink" title="Sum Square Difference"></a><strong>Sum Square Difference</strong></h2><p>The sum of the squares of the first ten natural numbers is,</p>
<p>$$1^2+2^2+\ldots +10^2=385$$</p>
<p>The square of the sum of the first ten natural numbers is,</p>
<p>$$(1+2+\ldots+10)^2 = 55^2 = 3025$$</p>
<p>Hence the difference between the sum of the squares of the first ten natural numbers and the square of the sum is $3025 − 385 = 2640$.</p>
<p>Find the difference between the sum of the squares of the first one hundred natural numbers and the square of the sum.</p>
<hr>
<h2 id="平方和与和平方之差"><a href="#平方和与和平方之差" class="headerlink" title="平方和与和平方之差"></a><strong>平方和与和平方之差</strong></h2><p>前十个自然数的平方的和是</p>
<p>$$1^2+2^2+\ldots +10^2=385$$</p>
<p>前十个自然数的和的平方是</p>
<p>$$(1+2+\ldots+10)^2 = 55^2 = 3025$$</p>
<p>因此，前十个自然数的平方和与和平方之差是$3025 − 385 = 2640$。</p>
<p>求前一百个自然数的平方的与和平方之差。</p>
<p><i class=zh>译注：注意此处出题人使用的自然数定义不包含$0$。</i></p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 60</title>
    <url>/60/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-60"><a href="#Problem-60" class="headerlink" title="Problem 60"></a><a href="https://projecteuler.net/problem=60">Problem 60</a></h1><hr>
<h2 id="Prime-Pair-Sets"><a href="#Prime-Pair-Sets" class="headerlink" title="Prime Pair Sets"></a><strong>Prime Pair Sets</strong></h2><p>The primes $3$, $7$, $109$, and $673$, are quite remarkable. By taking any two primes and concatenating them in any order the result will always be prime. For example, taking $7$ and $109$, both $7109$ and $1097$ are prime. The sum of these four primes, $792$, represents the lowest sum for a set of four primes with this property.</p>
<p>Find the lowest sum for a set of five primes for which any two primes concatenate to produce another prime.</p>
<hr>
<h2 id="素数对集合"><a href="#素数对集合" class="headerlink" title="素数对集合"></a><strong>素数对集合</strong></h2><p>$3$、$7$、$109$和$673$是非常特别的一组素数。任取其中的两个并且以任意顺序连接起来，其结果仍然是个素数。例如，选择$7$和$109$，得到$7109$和$1097$均为素数。这四个素数的和是$792$，而且是满足这个性质的一组四个素数的最小和。</p>
<p>若有一组五个素数，任取其中的两个并且以任意顺序连接起来，其结果仍然是个素数，求这样一组素数的最小和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 600</title>
    <url>/600/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-600"><a href="#Problem-600" class="headerlink" title="Problem 600"></a><a href="https://projecteuler.net/problem=600">Problem 600</a></h1><hr>
<h2 id="Integer-sided-equiangular-hexagons"><a href="#Integer-sided-equiangular-hexagons" class="headerlink" title="Integer sided equiangular hexagons"></a><strong>Integer sided equiangular hexagons</strong></h2><p>Let $H$($n$) be the number of distinct integer sided <b>equiangular</b> convex hexagons with perimeter not exceeding $n$.<br>Hexagons are distinct if and only if they are not <b>congruent</b>.</p>
<p>You are given $H$(6)=1, $H$(12)=10, $H$(100)=31248.<br>Find $H$(55106).</p>
<center><img src="/resources/images/0600_equiangular_hexagons.png" alt="p600-equiangular-hexagons.png" border="5">
<p><i>Equiangular hexagons with perimeter not exceeding 12</i></p>
</center>

<hr>
<h2 id="整数边长等角六边形"><a href="#整数边长等角六边形" class="headerlink" title="整数边长等角六边形"></a><strong>整数边长等角六边形</strong></h2><p>令$H$($n$)表示周长不超过$n$的不同整数边长<b>等角</b>凸六边形的数量。<br>当且仅当两个六边形不<b>全等</b>时视为不同的六边形。</p>
<p>已知$H$(6)=1，$H$(12)=10，$H$(100)=31248。<br>求$H$(55106)。</p>
<center><img src="/resources/images/0600_equiangular_hexagons.png" alt="p600-equiangular-hexagons.png" border="5">
<p><i class=zh>边长不超过12的等角六边形</i></p>
</center>

<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 601</title>
    <url>/601/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-601"><a href="#Problem-601" class="headerlink" title="Problem 601"></a><a href="https://projecteuler.net/problem=601">Problem 601</a></h1><hr>
<h2 id="Divisibility-streaks"><a href="#Divisibility-streaks" class="headerlink" title="Divisibility streaks"></a><strong>Divisibility streaks</strong></h2><p>For every positive number $n$ we define the function $streak(n)=k$ as the smallest positive integer $k$ such that $n+k$ is not divisible by $k+1$.<br>E.g:<br>13 is divisible by 1<br>14 is divisible by 2<br>15 is divisible by 3<br>16 is divisible by 4<br>17 is NOT divisible by 5<br>So $streak(13) = 4$.<br>Similarly:<br>120 is divisible by 1<br>121 is NOT divisible by 2<br>So $streak(120) = 1$.</p>
<p>Define $P(s, N)$ to be the number of integers $n$, $1 &lt; n &lt; N$, for which $streak(n) = s$.<br>So $P(3, 14) = 1$ and $P(6, 10^6) = 14286$.</p>
<p>Find the sum, as $i$ ranges from 1 to 31, of $P(i, 4^i)$.</p>
<hr>
<h2 id="连续整除"><a href="#连续整除" class="headerlink" title="连续整除"></a><strong>连续整除</strong></h2><p>对于任意正整数$n$，我们定义函数$streak(n)=k$为使$n+k$不能被$k+1$整除的最小正整数$k$。<br>例如：<br>13能被1整除<br>14能被2整除<br>15能被3整除<br>16能被4整除<br>17不能被5整除<br>因此$streak(13) = 4$。<br>类似地：<br>120能被1整除<br>121不能被2整除<br>因此$streak(120) = 1$。</p>
<p>定义$P(s, N)$为$1 &lt; n &lt; N$中满足$streak(n) = s$的整数$n$的数量。<br>因此$P(3, 14) = 1$，而$P(6, 10^6) = 14286$。</p>
<p>令$i$取值从1到31，求对应的$P(i, 4^i)$之和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 602</title>
    <url>/602/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-602"><a href="#Problem-602" class="headerlink" title="Problem 602"></a><a href="https://projecteuler.net/problem=602">Problem 602</a></h1><hr>
<h2 id="Product-of-Head-Counts"><a href="#Product-of-Head-Counts" class="headerlink" title="Product of Head Counts"></a><strong>Product of Head Counts</strong></h2><p>Alice enlists the help of some friends to generate a random number, using a single unfair coin. She and her friends sit around a table and, starting with Alice, they take it in turns to toss the coin. Everyone keeps a count of how many heads they obtain individually. The process ends as soon as Alice obtains a Head. At this point, Alice multiplies all her friends’ Head counts together to obtain her random number.</p>
<p>As an illustration, suppose Alice is assisted by Bob, Charlie, and Dawn, who are seated round the table in that order, and that they obtain the sequence of Head/Tail outcomes <b>THHH—TTTT—THHT—H</b> beginning and ending with Alice. Then Bob and Charlie each obtain 2 heads, and Dawn obtains 1 head. Alice’s random number is therefore $2\times 2\times 1 = 4$.</p>
<p>Define $e(n, p)$ to be the expected value of Alice’s random number, where $n$ is the number of friends helping (excluding Alice herself), and $p$ is the probability of the coin coming up Tails.</p>
<p>It turns out that, for any fixed $n$, $e(n, p)$ is always a polynomial in $p$. For example, $e(3, p) = p^3 + 4p^2 + p$.</p>
<p>Define $c(n, k)$ to be the coefficient of $p^k$ in the polynomial $e(n, p)$. So $c(3, 1) = 1$, $c(3, 2) = 4$, and $c(3, 3) = 1$.</p>
<p>You are given that $c(100, 40) \equiv 986699437 \text{ } (\text{mod } 10^9+7)$.</p>
<p>Find $c(10000000, 4000000) \mod 10^9+7$.</p>
<hr>
<h2 id="抛硬币结果的乘积"><a href="#抛硬币结果的乘积" class="headerlink" title="抛硬币结果的乘积"></a><strong>抛硬币结果的乘积</strong></h2><p>爱丽丝正在朋友的帮助下用一枚不公平硬币生成随机数。她和她的朋友围坐在桌子旁，从爱丽丝开始轮流抛掷硬币。每个人都各自记住他们抛出了多少次正面。当爱丽丝抛出正面时，这一流程宣告结束。此时，爱丽丝将她的朋友们所记录的正面次数相乘，作为她的随机数。</p>
<p>举例来说，假如爱丽丝找来鲍勃、查理和道恩帮忙，他们就按照这个顺序坐在桌子旁边，抛掷硬币的结果是序列<b>THHH—TTTT—THHT—H</b>，从爱丽丝开始并且到爱丽丝结束。鲍勃和查理各自抛出了2次正面，而道恩则抛出了1次正面。因此爱丽丝的随机数就是$2\times 2\times 1 = 4$。</p>
<p>记$e(n, p)$为帮忙的朋友数目为$n$（除爱丽丝自己以外）且硬币抛出反面概率为$p$时，爱丽丝所获得的随机数的期望值。</p>
<p>事实上，对于任意固定的$n$，$e(n, p)$总是$p$的一个多项式。例如$e(3, p) = p^3 + 4p^2 + p$。</p>
<p>定义$c(n, k)$为多项式$e(n, p)$中$p^k$项的系数。因此$c(3, 1) = 1$，$c(3, 2) = 4$，而$c(3, 3) = 1$。</p>
<p>已知$c(100, 40) \equiv 986699437 \text{ } (\text{mod } 10^9+7)$。</p>
<p>求$c(10000000, 4000000) \mod 10^9+7$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 603</title>
    <url>/603/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-603"><a href="#Problem-603" class="headerlink" title="Problem 603"></a><a href="https://projecteuler.net/problem=603">Problem 603</a></h1><hr>
<h2 id="Substring-sums-of-prime-concatenations"><a href="#Substring-sums-of-prime-concatenations" class="headerlink" title="Substring sums of prime concatenations"></a><strong>Substring sums of prime concatenations</strong></h2><p>Let $S(n)$ be the sum of all contiguous integer-substrings that can be formed from the integer $n$. The substrings need not be distinct. </p>
<p>For example, $S(2024) = 2 + 0 + 2 + 4 + 20 + 02 + 24 + 202 + 024 + 2024 = 2304$.</p>
<p>Let $P(n)$ be the integer formed by concatenating the first $n$ primes together. For example, $P(7) = 2357111317$.</p>
<p>Let $C(n, k)$ be the integer formed by concatenating $k$ copies of $P(n)$ together. For example, $C(7, 3) = 235711131723571113172357111317$.</p>
<p>Evaluate $S(C(10^6, 10^{12}))$ mod $(10^9 + 7)$.</p>
<hr>
<h2 id="素数拼接的子串和"><a href="#素数拼接的子串和" class="headerlink" title="素数拼接的子串和"></a><strong>素数拼接的子串和</strong></h2><p>记$S(n)$为整数$n$所能组成的全部连续整数子串的和。从不同位置和顺序得到的相同子串被视为不同的。</p>
<p>例如，$S(2024) = 2 + 0 + 2 + 4 + 20 + 02 + 24 + 202 + 024 + 2024 = 2304$。</p>
<p>记$P(n)$为将前$n$个素数拼接成的整数。例如，$P(7) = 2357111317$。</p>
<p>记$C(n, k)$为将$k$份$P(n)$拼接成的整数。例如，$C(7, 3) = 235711131723571113172357111317$。</p>
<p>试计算$S(C(10^6, 10^{12}))$ mod $(10^9 + 7)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 604</title>
    <url>/604/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-604"><a href="#Problem-604" class="headerlink" title="Problem 604"></a><a href="https://projecteuler.net/problem=604">Problem 604</a></h1><hr>
<h2 id="Convex-path-in-square"><a href="#Convex-path-in-square" class="headerlink" title="Convex path in square"></a><strong>Convex path in square</strong></h2><p>Let $F(N)$ be the maximum number of lattice points in an axis-aligned $N\times N$ square that the graph of a single <b>strictly convex</b> increasing function can pass through.</p>
<p>You are given that $F(1) = 2$, $F(3) = 3$,  $F(9) = 6$, $F(11) = 7$, $F(100) = 30$ and $F(50000) = 1898$.<br>Below is the graph of a function reaching the maximum 3 for $N=3$:</p>
<center><img src="/resources/images/0604_convex3.png" alt="p604_convex3.png"></center>

<p>Find $F(10^{18})$.</p>
<hr>
<h2 id="正方形中的凹路径"><a href="#正方形中的凹路径" class="headerlink" title="正方形中的凹路径"></a><strong>正方形中的凹路径</strong></h2><p>记$F(N)$为，在一个和坐标系对齐的$N\times N$正方形中，一个<b>严格凹</b>单调增函数所能够穿过的格点数目最大值。</p>
<p>已知$F(1) = 2$，$F(3) = 3$，$F(9) = 6$，$F(11) = 7$，$F(100) = 30$以及$F(50000) = 1898$。<br>以下是$N=3$时达成最大值的函数图象：</p>
<center><img src="/resources/images/0604_convex3.png" alt="p604_convex3.png"></center>

<p>求$F(10^{18})$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 605</title>
    <url>/605/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-605"><a href="#Problem-605" class="headerlink" title="Problem 605"></a><a href="https://projecteuler.net/problem=605">Problem 605</a></h1><hr>
<h2 id="Pairwise-Coin-Tossing-Game"><a href="#Pairwise-Coin-Tossing-Game" class="headerlink" title="Pairwise Coin-Tossing Game"></a><strong>Pairwise Coin-Tossing Game</strong></h2><p>Consider an $n$-player game played in consecutive pairs: Round $1$ takes place between players $1$ and $2$, round $2$ takes place between players $2$ and $3$, and so on and so forth, all the way up to round $n$, which takes place between players $n$ and $1$. Then round $n+1$ takes place between players $1$ and $2$ as the entire cycle starts again.</p>
<p>In other words, during round $r$, player $((r-1) \bmod n) + 1$ faces off against player $(r \bmod n) + 1$.</p>
<p>During each round, a fair coin is tossed to decide which of the two players wins that round. If any given player wins both rounds $r$ and $r+1$, then that player wins the entire game.</p>
<p>Let $P_n(k)$ be the probability that player $k$ wins in an $n$-player game, in the form of a reduced fraction. For example, $P_3(1) = 12/49$ and $P_6(2) = 368/1323$.</p>
<p>Let $M_n(k)$ be the product of the reduced numerator and denominator of $P_n(k)$. For example, $M_3(1) = 588$ and $M_6(2) = 486864$.</p>
<p>Find the last $8$ digits of $M_{10^8+7}(10^4+7)$.</p>
<hr>
<h2 id="配对抛掷硬币游戏"><a href="#配对抛掷硬币游戏" class="headerlink" title="配对抛掷硬币游戏"></a><strong>配对抛掷硬币游戏</strong></h2><p>考虑如下$n$名玩家轮流配对进行的游戏：第$1$轮在玩家$1$和$2$之间进行，第$2$轮在玩家$2$和$3$之间进行，依此类推，直到第$n$轮在玩家$n$和$1$之间进行。然后第$n+1$轮在玩家$1$和$2$之间进行，整个循环重新开始。</p>
<p>换言之，第$r$轮游戏中，玩家$((r-1) \bmod n) + 1$将会面对玩家$(r \bmod n) + 1$。</p>
<p>在每一轮中，抛掷一枚公平硬币来决定哪一位玩家赢得本轮。如果有一名玩家同时在第$r$和$r+1$轮获胜，该玩家立即赢得整个游戏。</p>
<p>记$P_n(k)$为玩家$k$在一个$n$名玩家进行的游戏中获胜的概率。例如$P_3(1) = 12/49$，而$P_6(2) = 368/1323$。</p>
<p>记$M_n(k)$为$P_n(k)$表达为最简分数时分子和分母的乘积。例如，$M_3(1) = 588$，而$M_6(2) = 486864$。</p>
<p>求$M_{10^8+7}(10^4+7)$的最后$8$位数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 606</title>
    <url>/606/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-606"><a href="#Problem-606" class="headerlink" title="Problem 606"></a><a href="https://projecteuler.net/problem=606">Problem 606</a></h1><hr>
<h2 id="Gozinta-Chains-II"><a href="#Gozinta-Chains-II" class="headerlink" title="Gozinta Chains II"></a><strong>Gozinta Chains II</strong></h2><p>A <b>gozinta chain</b> for n is a sequence {1,a,b,…,n} where each element properly divides the next.<br>For example, there are eight distinct gozinta chains for 12:<br>{1,12}, {1,2,12}, {1,2,4,12}, {1,2,6,12}, {1,3,12}, {1,3,6,12}, {1,4,12} and {1,6,12}.</p>
<p>Let S(n) be the sum of all numbers, k, not exceeding n, which have 252 distinct gozinta chains.<br>You are given S(10<sup>6</sup>)=8462952 and S(10<sup>12</sup>)=623291998881978.</p>
<p>Find S(10<sup>36</sup>), giving the last nine digits of your answer.</p>
<hr>
<h2 id="因子链II"><a href="#因子链II" class="headerlink" title="因子链II"></a><strong>因子链II</strong></h2><p>n的<b>因子链</b>指的是一个序列{1,a,b,…,n}，其中每个元素都整除后一个元素。<br>例如，12有八条因子链：<br>{1,12}，{1,2,12}，{1,2,4,12}，{1,2,6,12}，{1,3,12}，{1,3,6,12}，{1,4,12}和{1,6,12}。 </p>
<p>对于任意n，将所有不超过于n且恰好有252条不同因子链的整数k的和记为S(n)。<br>已知S(10<sup>6</sup>)=8462952，而S(10<sup>12</sup>)=623291998881978。</p>
<p>求S(10<sup>36</sup>)，并给出其最后九位数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 607</title>
    <url>/607/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-607"><a href="#Problem-607" class="headerlink" title="Problem 607"></a><a href="https://projecteuler.net/problem=607">Problem 607</a></h1><hr>
<h2 id="Marsh-Crossing"><a href="#Marsh-Crossing" class="headerlink" title="Marsh Crossing"></a><strong>Marsh Crossing</strong></h2><p>Frodo and Sam need to travel 100 leagues due East from point A to point B. On normal terrain, they can cover 10 leagues per day, and so the journey would take 10 days. However, their path is crossed by a long marsh which runs exactly South-West to North-East, and walking through the marsh will slow them down. The marsh is 50 leagues wide at all points, and the mid-point of AB is located in the middle of the marsh. A map of the region is shown in the diagram below:</p>
<center><img src="/resources/images/0607_marsh.png" alt="p607_marsh.png"></center>

<p>The marsh consists of 5 distinct regions, each 10 leagues across, as shown by the shading in the map. The strip closest to point A is relatively light marsh, and can be crossed at a speed of 9 leagues per day. However, each strip becomes progressively harder to navigate, the speeds going down to 8, 7, 6 and finally 5 leagues per day for the final region of marsh, before it ends and the terrain becomes easier again, with the speed going back to 10 leagues per day.</p>
<p>If Frodo and Sam were to head directly East for point B, they would travel exactly 100 leagues, and the journey would take approximately 13.4738 days. However, this time can be shortened if they deviate from the direct path.</p>
<p>Find the shortest possible time required to travel from point A to B, and give your answer in days, rounded to 10 decimal places.</p>
<hr>
<h2 id="穿越沼泽"><a href="#穿越沼泽" class="headerlink" title="穿越沼泽"></a><strong>穿越沼泽</strong></h2><p>弗罗多和山姆需要从点A向东移动100里格（长度单位）到达点B。在普通的土地上，他们每天可以走10里格，所以这趟旅程将会花费10天时间。但是，他们在路上需要穿过一个从正西南向正东北延伸的长沼泽，而他们在沼泽中行进时需要降低速度。沼泽在任意一处的宽度都是50里格，而AB连线的中点也恰好落在沼泽的中点。下图展示的是这片区域的地图：</p>
<center><img src="/resources/images/0607_marsh.png" alt="p607_marsh.png"></center>

<p>沼泽由5个不同的条状部分组成，每个部分宽10里格，在地图中表现为深浅的不同。最靠近A的条状部分沼泽化程度最浅，在这部分的行进速度可以达到每天9里格。然而，随着向东行进，每个条状部分逐渐难以前行，行进速度依次降低为每天8、7、6里格，直到最后一部分只有每天5里格；随后沼泽部分结束，回到正常的土地上，行进速度恢复到每天10里格。</p>
<p>如果弗罗多和山姆径直前往点B，他们恰好移动100里格，而这趟旅程将会花费约13.4738天。然而，如果他们不走直路，他们可以缩短旅行所需的时间。</p>
<p>找出从点A到点B所需的最少旅行时间，以天为单位，并保留小数点后10位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 608</title>
    <url>/608/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-608"><a href="#Problem-608" class="headerlink" title="Problem 608"></a><a href="https://projecteuler.net/problem=608">Problem 608</a></h1><hr>
<h2 id="Divisor-Sums"><a href="#Divisor-Sums" class="headerlink" title="Divisor Sums"></a><strong>Divisor Sums</strong></h2><p>Let $D(m,n)=\displaystyle\sum_{d|m}\sum_{k=1}^n\sigma_{\small 0}(kd)$ where $d$ runs through all divisors of $m$ and $\sigma_{\small 0}(n)$ is the number of divisors of $n$.<br>You are given $D(3!,10^2)=3398$ and $D(4!,10^6)=268882292$.</p>
<p>Find $D(200!,10^{12}) \text{ mod } (10^9 + 7)$.</p>
<hr>
<h2 id="因数和"><a href="#因数和" class="headerlink" title="因数和"></a><strong>因数和</strong></h2><p>记$D(m,n)=\displaystyle\sum_{d|m}\sum_{k=1}^n\sigma_{\small 0}(kd)$，其中$d$取遍$m$的所有因数，而$\sigma_{\small 0}(n)$表示$n$的因数数目。<br>已知$D(3!,10^2)=3398$以及$D(4!,10^6)=268882292$。</p>
<p>求$D(200!,10^{12}) \text{ mod } (10^9 + 7)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 609</title>
    <url>/609/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-609"><a href="#Problem-609" class="headerlink" title="Problem 609"></a><a href="https://projecteuler.net/problem=609">Problem 609</a></h1><hr>
<h2 id="pi-sequences"><a href="#pi-sequences" class="headerlink" title="$\pi$ sequences"></a><strong>$\pi$ sequences</strong></h2><p>For every $n \ge 1$ the <b>prime-counting</b> function $\pi(n)$ is equal to the number of primes not exceeding $n$.<br>E.g. $\pi(6)=3$ and $\pi(100)=25$.</p>
<p>We say that a sequence of integers $u  = (u_0,\cdots,u_m)$ is a <i>$\pi$ sequence</i> if </p>
<ul>
<li>$u_n \ge 1$ for every $n$</li>
<li>$u_{n+1}= \pi(u_n)$</li>
<li>$u$ has two or more elements</li>
</ul>
<p>For $u_0=10$ there are three distinct $\pi$ sequences: (10,4), (10,4,2) and (10,4,2,1).</p>
<p>Let $c(u)$ be the number of elements of $u$ that are not prime.<br>Let $p(n,k)$ be the number of $\pi$ sequences $u$ for which $u_0\le n$ and $c(u)=k$.<br>Let $P(n)$ be the product of all $p(n,k)$ that are larger than 0.<br>You are given: P(10)=3×8×9×3=648 and P(100)=31038676032.</p>
<p>Find $P(10^8)$. Give your answer modulo 1000000007. </p>
<hr>
<h2 id="pi-序列"><a href="#pi-序列" class="headerlink" title="$\pi$序列"></a><strong>$\pi$序列</strong></h2><p>对于任意$n \ge 1$，<b>素数计数</b>函数$\pi(n)$表示不超过$n$的素数数目。<br>例如，$\pi(6)=3$以及$\pi(100)=25$。</p>
<p>我们称序列$u  = (u_0,\cdots,u_m)$为<i class=zh>$\pi$序列</i>，如果 </p>
<ul>
<li>对于任意$n$，$u_n \ge 1$</li>
<li>$u_{n+1}= \pi(u_n)$</li>
<li>$u$中包含至少两个元素</li>
</ul>
<p>对于$u_0=10$，有三个不同的$\pi$序列：(10,4)，(10,4,2)和(10,4,2,1)。</p>
<p>记$c(u)$为序列$u$中非素数元素的数目。<br>记$p(n,k)$为满足$u_0\le n$和$c(u)=k$的$\pi$序列$u$的数目。<br>记$P(n)$为所有大于0的$p(n,k)$的乘积。<br>已知：P(10)=3×8×9×3=648以及P(100)=31038676032。</p>
<p>求$P(10^8)$，并将答案对1000000007取模。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 61</title>
    <url>/61/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-61"><a href="#Problem-61" class="headerlink" title="Problem 61"></a><a href="https://projecteuler.net/problem=61">Problem 61</a></h1><hr>
<h2 id="Cyclical-Figurate-Numbers"><a href="#Cyclical-Figurate-Numbers" class="headerlink" title="Cyclical Figurate Numbers"></a><strong>Cyclical Figurate Numbers</strong></h2><p>Triangle, square, pentagonal, hexagonal, heptagonal, and octagonal numbers are all figurate (polygonal) numbers and are generated by the following formulae:</p>
<table>
<thead>
<tr>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
</tr>
</thead>
<tbody><tr>
<td>Triangle</td>
<td>$P_{3,n}=n(n+1)/2$</td>
<td>$1, 3, 6, 10, 15, \ldots$</td>
</tr>
<tr>
<td>Square</td>
<td>$P_{4,n}=n^2$</td>
<td>$1, 4, 9, 16, 25, \ldots$</td>
</tr>
<tr>
<td>Pentagonal</td>
<td>$P_{5,n}=n(3n−1)/2$</td>
<td>$1, 5, 12, 22, 35, \ldots$</td>
</tr>
<tr>
<td>Hexagonal</td>
<td>$P_{6,n}=n(2n−1)$</td>
<td>$1, 6, 15, 28, 45, \ldots$</td>
</tr>
<tr>
<td>Heptagonal</td>
<td>$P_{7,n}=n(5n−3)/2$</td>
<td>$1, 7, 18, 34, 55, \ldots$</td>
</tr>
<tr>
<td>Octagonal</td>
<td>$P_{8,n}=n(3n−2)$</td>
<td>$1, 8, 21, 40, 65, \ldots$</td>
</tr>
</tbody></table>
<p>The ordered set of three $4$-digit numbers: $8128$, $2882$, $8281$, has three interesting properties.</p>
<ol>
<li>The set is cyclic, in that the last two digits of each number is the first two digits of the next number (including the last number with the first).</li>
<li>Each polygonal type: triangle ($P_{3,127}=8128$), square ($P_{4,91}=8281$), and pentagonal ($P_{5,44}=2882$), is represented by a different number in the set.</li>
<li>This is the only set of $4$-digit numbers with this property.</li>
</ol>
<p>Find the sum of the only ordered set of six cyclic $4$-digit numbers for which each polygonal type: triangle, square, pentagonal, hexagonal, heptagonal, and octagonal, is represented by a different number in the set.</p>
<hr>
<h2 id="循环的多边形数"><a href="#循环的多边形数" class="headerlink" title="循环的多边形数"></a><strong>循环的多边形数</strong></h2><p>三角形数、正方形数、五边形数、六边形数、七边形数和八边形数等等统称为多边形数。它们分别由如下的公式给出：</p>
<table>
<thead>
<tr>
<th>&nbsp;</th>
<th>&nbsp;</th>
<th>&nbsp;</th>
</tr>
</thead>
<tbody><tr>
<td>三角形数</td>
<td>$P_{3,n}=n(n+1)/2$</td>
<td>$1, 3, 6, 10, 15, \ldots$</td>
</tr>
<tr>
<td>正方形数</td>
<td>$P_{4,n}=n^2$</td>
<td>$1, 4, 9, 16, 25, \ldots$</td>
</tr>
<tr>
<td>五边形数</td>
<td>$P_{5,n}=n(3n−1)/2$</td>
<td>$1, 5, 12, 22, 35, \ldots$</td>
</tr>
<tr>
<td>六边形数</td>
<td>$P_{6,n}=n(2n−1)$</td>
<td>$1, 6, 15, 28, 45, \ldots$</td>
</tr>
<tr>
<td>七边形数</td>
<td>$P_{7,n}=n(5n−3)/2$</td>
<td>$1, 7, 18, 34, 55, \ldots$</td>
</tr>
<tr>
<td>八边形数</td>
<td>$P_{8,n}=n(3n−2)$</td>
<td>$1, 8, 21, 40, 65, \ldots$</td>
</tr>
</tbody></table>
<p>由三个$4$位数$8128$、$2882$、$8281$构成的有序集合有如下三个有趣的性质。</p>
<ol>
<li>这个集合是循环的，每个数的后两位是后一个数的前两位（最后一个数的后两位也是第一个数的前两位）。</li>
<li>前三种多边形数——三角形数（$P_{3,127}=8128$）、正方形数（$P_{4,91}=8281$）和五边形数（$P_{5,44}=2882$）——在其中各有一个代表。</li>
<li>这是唯一一个满足上述性质的$4$位数有序集。</li>
</ol>
<p>存在唯一一个包含六个$4$位数的循环有序集合，满足前六种多边形数——三角形数、正方形数、五边形数、六边形数、七边形数和八边形数——在其中各有一个代表。求这个集合的元素和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 611</title>
    <url>/611/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-611"><a href="#Problem-611" class="headerlink" title="Problem 611"></a><a href="https://projecteuler.net/problem=611">Problem 611</a></h1><hr>
<h2 id="Hallway-of-square-steps"><a href="#Hallway-of-square-steps" class="headerlink" title="Hallway of square steps"></a><strong>Hallway of square steps</strong></h2><p>Peter moves in a hallway with N+1 doors consecutively numbered from 0 through N. All doors are initially closed. Peter starts in front of door 0, and repeatedly performs the following steps:</p>
<ul>
<li>First, he walks a positive square number of doors away from his position.</li>
<li>Then he walks another, larger square number of doors away from his new position.</li>
<li>He toggles the door he faces (opens it if closed, closes it if open).</li>
<li>And finally returns to door 0.</li>
</ul>
<p>We call an action any sequence of those steps. Peter never performs the exact same action twice, and makes sure to perform all possible actions that don’t bring him past the last door.</p>
<p>Let F(N) be the number of doors that are open after Peter has performed all possible actions. You are given that F(5)=1, F(100)=27, F(1000)=233 and F(10<sup>6</sup>)=112168.</p>
<p>Find F(10<sup>12</sup>).</p>
<hr>
<h2 id="平方数与走廊"><a href="#平方数与走廊" class="headerlink" title="平方数与走廊"></a><strong>平方数与走廊</strong></h2><p>彼得在有N+1扇门的走廊中来回移动，门上依次标有整数0至N。一开始，所有的门都是关着的。彼得从标有0的门开始，重复进行以下步骤：</p>
<ul>
<li>首先，他移动到距离初始位置为一个正平方数的门。</li>
<li>然后，他移动到距离新位置为一个更大的平方数的门。</li>
<li>他改变现在所面对的门的状态（如果是关着的就打开，如果是开着的就关上）。</li>
<li>最后他回到标有0的门。</li>
</ul>
<p>我们将完整地进行上述步骤称为一次行动。彼得从来不会进行两次完全相同的行动，但同时他会将所有在过程中不会越过最后一扇门的行动都进行一次。</p>
<p>记F(N)为彼得进行完所有可能的行动后开着的门的数量。已知F(5)=1，F(100)=27，F(1000)=233以及F(10<sup>6</sup>)=112168。</p>
<p>求F(10<sup>12</sup>)。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 610</title>
    <url>/610/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-610"><a href="#Problem-610" class="headerlink" title="Problem 610"></a><a href="https://projecteuler.net/problem=610">Problem 610</a></h1><hr>
<h2 id="Roman-Numerals-II"><a href="#Roman-Numerals-II" class="headerlink" title="Roman Numerals II"></a><strong>Roman Numerals II</strong></h2><p>A random generator produces a sequence of symbols drawn from the set {<span style="font-family:'courier new', monospace;">I</span>, <span style="font-family:'courier new', monospace;">V</span>, <span style="font-family:'courier new', monospace;">X</span>, <span style="font-family:'courier new', monospace;">L</span>, <span style="font-family:'courier new', monospace;">C</span>, <span style="font-family:'courier new', monospace;">D</span>, <span style="font-family:'courier new', monospace;">M</span>, <span style="font-family:'courier new', monospace;">#</span>}. Each item in the sequence is determined by selecting one of these symbols at random, independently of the other items in the sequence. At each step, the seven letters are equally likely to be selected, with probability 14% each, but the <span style="font-family:'courier new', monospace;">#</span> symbol only has a 2% chance of selection.</p>
<p>We write down the sequence of letters from left to right as they are generated, and we stop at the first occurrence of the <span style="font-family:'courier new', monospace;">#</span> symbol (without writing it). However, we stipulate that what we have written down must always (when non-empty) be a valid Roman numeral representation in minimal form. If appending the next letter would contravene this then we simply skip it and try again with the next symbol generated.</p>
<p>Please take careful note of <a href="https://projecteuler.net/about=roman_numerals">About… Roman Numerals</a> for the definitive rules for this problem on what constitutes a “valid Roman numeral representation” and “minimal form”. For example, the (only) sequence that represents 49 is <span style="font-family:'courier new', monospace;">XLIX</span>. The subtractive combination <span style="font-family:'courier new', monospace;">IL</span> is invalid because of rule (ii), while <span style="font-family:'courier new', monospace;">XXXXIX</span> is valid but not minimal. The rules do not place any restriction on the number of occurrences of <span style="font-family:'courier new', monospace;">M</span>, so all integers have a valid representation. These are the same rules as were used in <a href="https://projecteuler.net/problem=89">Problem 89</a>, and members are invited to solve that problem first.</p>
<p>Find the expected value of the number represented by what we have written down when we stop. (If nothing is written down then count that as zero.) Give your answer rounded to 8 places after the decimal point.</p>
<hr>
<h2 id="罗马数字II"><a href="#罗马数字II" class="headerlink" title="罗马数字II"></a><strong>罗马数字II</strong></h2><p>一个随机生成器从集合{<span style="font-family:'courier new', monospace;">I</span>, <span style="font-family:'courier new', monospace;">V</span>, <span style="font-family:'courier new', monospace;">X</span>, <span style="font-family:'courier new', monospace;">L</span>, <span style="font-family:'courier new', monospace;">C</span>, <span style="font-family:'courier new', monospace;">D</span>, <span style="font-family:'courier new', monospace;">M</span>, <span style="font-family:'courier new', monospace;">#</span>}中生成一个符号序列。序列中的每个符号都是独立于其它符号随机选出的，在每一步中，七个字母都以14%的等概率被选中，而<span style="font-family:'courier new', monospace;">#</span>号则只有2%的概率被选中。</p>
<p>我们将生成的符号从左到右地写成序列，直到我们首次碰到<span style="font-family:'courier new', monospace;">#</span>号出现（但并不写下）。此外，我们还要求写下的字母序列构成一个合法的最简形式罗马数字表示（除非是空序列）。如果写下下一个字母将会违反规则，我们就跳过它，并尝试下一个生成的符号。</p>
<p>请仔细阅读<a href="https://projecteuler.net/about=roman_numerals">关于罗马数字</a>以了解本题中所提及的“合法罗马数字表示”和“最简形式”。例如，表示49的（唯一）合法序列是<span style="font-family:'courier new', monospace;">XLIX</span>。减法组合<span style="font-family:'courier new', monospace;">IL</span>是不合法的，因为它违反了规则(ii)，而<span style="font-family:'courier new', monospace;">XXXXIX</span>是合法的但不是最简形式。规则中并未限制字母<span style="font-family:'courier new', monospace;">M</span>的出现次数，所以所有整数都有一个合法的表示。这些规则同样被用在<a href="/89/">第89题</a>中，欢迎各位先去解决那道更早的问题。</p>
<p>找出当我们停止时所表示的数的期望值。（当什么都没写下时视为0。）将答案四舍五入至小数点后8位。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 612</title>
    <url>/612/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-612"><a href="#Problem-612" class="headerlink" title="Problem 612"></a><a href="https://projecteuler.net/problem=612">Problem 612</a></h1><hr>
<h2 id="Friend-numbers"><a href="#Friend-numbers" class="headerlink" title="Friend numbers"></a><strong>Friend numbers</strong></h2><p>Let’s call two numbers <i>friend numbers</i> if their representation in base 10 has at least one common digit.<br>E.g. 1123 and 3981 are friend numbers. </p>
<p>Let $f(n)$ be the number of pairs $(p,q)$ with $1\le p \lt q \lt n$ such that $p$ and $q$&gt; are friend numbers.<br>$f(100)=1539$.</p>
<p>Find $f(10^{18})$ mod $1000267129$.</p>
<hr>
<h2 id="朋友数"><a href="#朋友数" class="headerlink" title="朋友数"></a><strong>朋友数</strong></h2><p>我们称两个数为<i class=zh>朋友数</i>，如果它们的10进制表示中至少有一位数字相同。<br>例如，1123和3981就是朋友数。</p>
<p>记$f(n)$为所有满足$1\le p \lt q \lt n$且$p$和$q$为朋友数的数对$(p,q)$数目。<br>已知$f(100)=1539$。</p>
<p>求Find $f(10^{18})$ mod $1000267129$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 613</title>
    <url>/613/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-613"><a href="#Problem-613" class="headerlink" title="Problem 613"></a><a href="https://projecteuler.net/problem=613">Problem 613</a></h1><hr>
<h2 id="Pythagorean-Ant"><a href="#Pythagorean-Ant" class="headerlink" title="Pythagorean Ant"></a><strong>Pythagorean Ant</strong></h2><p>Dave is doing his homework on the balcony and, preparing a presentation about Pythagorean triangles, has just cut out a triangle with side lengths 30cm, 40cm and 50cm from some cardboard, when a gust of wind blows the triangle down into the garden.<br>Another gust blows a small ant straight onto this triangle. The poor ant is completely disoriented and starts to crawl straight ahead in random direction in order to get back into the grass.</p>
<p>Assuming that all possible positions of the ant within the triangle and all possible directions of moving on are equiprobable, what is the probability that the ant leaves the triangle along its longest side?<br>Give your answer rounded to 10 digits after the decimal point.</p>
<hr>
<h2 id="毕达哥拉斯蚂蚁"><a href="#毕达哥拉斯蚂蚁" class="headerlink" title="毕达哥拉斯蚂蚁"></a><strong>毕达哥拉斯蚂蚁</strong></h2><p>戴夫正在阳台上做家庭作业；为了准备一个关于毕达哥拉斯三角形的展示，他刚刚从硬纸板上剪下了一个边长分别为30厘米、40厘米和50厘米的三角形，这时一阵风吹来把三角形吹到了花园中。<br>另一阵风把一只小蚂蚁径直吹到了三角形上。这只可怜的蚂蚁完全迷失了方向，只能随机选了个方向一直向前爬，想要回到草丛中。</p>
<p>假设蚂蚁等可能地落在三角形内的任意位置并选择了任意方向，那么它最终从最长边离开三角形的概率是多少？<br>将你的答案四舍五入到小数点后10位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 614</title>
    <url>/614/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-614"><a href="#Problem-614" class="headerlink" title="Problem 614"></a><a href="https://projecteuler.net/problem=614">Problem 614</a></h1><hr>
<h2 id="Special-partitions-2"><a href="#Special-partitions-2" class="headerlink" title="Special partitions 2"></a><strong>Special partitions 2</strong></h2><p>An <b>integer partition</b> of a number $n$ is a way of writing $n$ as a sum of positive integers. Partitions that differ only by the order of their summands are considered the same.</p>
<p>We call an integer partition <i>special</i> if 1) all its summands are distinct, and 2) all its even summands are also divisible by 4.<br>For example, the special partitions of 10 are: </p>
<center>10 = 1+4+5=3+7=1+9</center>

<p>The number 10 admits many more integer partitions (a total of 42), but only those three are special.</p>
<p>Let be $P(n)$ the number of special integer partitions of $n$. You are given that $P(1) = 1$, $P(2) = 0$, $P(3) = 1$, $P(6) = 1$, $P(10)=3$, $P(100) = 37076$ and $P(1000)=3699177285485660336$.</p>
<p>Find $\displaystyle \sum_{i=1}^{10^7}{P(i)}$. Give the result modulo $10^9+7$.</p>
<hr>
<h2 id="特殊分划"><a href="#特殊分划" class="headerlink" title="特殊分划"></a><strong>特殊分划</strong></h2><p>$n$的<b>整数分划</b>是指将$n$写成正整数之和。如果两个分划只在相加的顺序上不同，那么就视为相同的分划。</p>
<p>我们称一个整数分划为<i class=zh>特殊分划</i>，如果它满足 1) 所有用于相加的数都不相同，以及 2) 所有用于相加的偶数都能被4整除。<br>例如，10的特殊分划包括：</p>
<center>10 = 1+4+5=3+7=1+9</center>

<p>显然10有更多种可能的分划（总计42种），但是只有这三种是特殊分划。</p>
<p>记$P(n)$为$n$的特殊分划的数目。已知$P(1) = 1$，$P(2) = 0$，$P(3) = 1$，$P(6) = 1$，$P(10)=3$，$P(100) = 37076$以及$P(1000)=3699177285485660336$。</p>
<p>求$\displaystyle \sum_{i=1}^{10^7}{P(i)}$。将结果对$10^9+7$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 615</title>
    <url>/615/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-615"><a href="#Problem-615" class="headerlink" title="Problem 615"></a><a href="https://projecteuler.net/problem=615">Problem 615</a></h1><hr>
<h2 id="The-millionth-number-with-at-least-one-million-prime-factors"><a href="#The-millionth-number-with-at-least-one-million-prime-factors" class="headerlink" title="The millionth number with at least one million prime factors"></a><strong>The millionth number with at least one million prime factors</strong></h2><p>Consider the natural numbers having at least 5 prime factors, which don’t have to be distinct.<br>Sorting these numbers by size gives a list which starts with:</p>
<ul>
<li>32=2⋅2⋅2⋅2⋅2</li>
<li>48=2⋅2⋅2⋅2⋅3</li>
<li>64=2⋅2⋅2⋅2⋅2⋅2</li>
<li>72=2⋅2⋅2⋅3⋅3</li>
<li>80=2⋅2⋅2⋅2⋅5</li>
<li>96=2⋅2⋅2⋅2⋅2⋅3</li>
<li>…</li>
</ul>
<p>So, for example, the fifth number with at least 5 prime factors is 80.</p>
<p>Find the millionth number with at least one million prime factors.<br>Give your answer modulo 123454321.</p>
<hr>
<h2 id="第一百万个拥有至少一百万个质因数的数"><a href="#第一百万个拥有至少一百万个质因数的数" class="headerlink" title="第一百万个拥有至少一百万个质因数的数"></a><strong>第一百万个拥有至少一百万个质因数的数</strong></h2><p>考虑所有拥有至少5个质因数的自然数，这些质因数不必完全不同。<br>将这些数按从小到大排序，所构成的列表开头是这几个数：</p>
<ul>
<li>32=2⋅2⋅2⋅2⋅2</li>
<li>48=2⋅2⋅2⋅2⋅3</li>
<li>64=2⋅2⋅2⋅2⋅2⋅2</li>
<li>72=2⋅2⋅2⋅3⋅3</li>
<li>80=2⋅2⋅2⋅2⋅5</li>
<li>96=2⋅2⋅2⋅2⋅2⋅3</li>
<li>…</li>
</ul>
<p>所以，第五个拥有至少5个质因数的数是80。</p>
<p>找出第一百万个拥有至少一百万个质因数的数。<br>将你的答案对123454321取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 617</title>
    <url>/617/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-617"><a href="#Problem-617" class="headerlink" title="Problem 617"></a><a href="https://projecteuler.net/problem=617">Problem 617</a></h1><hr>
<h2 id="Mirror-Power-Sequence"><a href="#Mirror-Power-Sequence" class="headerlink" title="Mirror Power Sequence"></a><strong>Mirror Power Sequence</strong></h2><p>For two integers $n,e&gt;1$, we define a $(n,e)$-<i>MPS (Mirror Power Sequence)</i> to be an infinite sequence of integers $(a_i)_i\ge0$ such that for all $i\ge0$, $a_{i+1}=\min(a^e_i,n−a^e_i)$ and $a_i&gt;1$.<br>Examples of such sequences are the two (18,2)-MPS sequences made of alternating 2 and 4.</p>
<p>Note that even though such a sequence is uniquely determined by $n,e$ and $a_0$, for most values such a sequence does not exist. For example, no $(n,e)$-MPS exists for $n&lt;6$.</p>
<p>Define $C(n)$ to be the number of $(n,e)$-MPS for some $e$, and $D(N)=\sum_{n=2}^NC(n)$. </p>
<p>You are given that $D(10)=2$, $D(100)=21$, $D(1000)=69$, $D(10^6)=1303$ and D$(10^{12})=1014800$.</p>
<p>Find $D(10^{18})$.</p>
<hr>
<h2 id="镜像幂序列"><a href="#镜像幂序列" class="headerlink" title="镜像幂序列"></a><strong>镜像幂序列</strong></h2><p>对于两个整数$n,e&gt;1$，我们定义满足如下条件的无穷整数序列$(a_i)_i\ge0$为$(n,e)$-<i class=zh>MPS（镜像幂序列）</i>：对于所有$i\ge0$，都有$a_{i+1}=\min(a^e_i,n−a^e_i)$以及 $a_i&gt;1$。<br>这类序列的例子包括两个由交替的2和4构成的(18,2)-MPS。</p>
<p>注意到，尽管这样的序列总是被$n$，$e$和$a_0$唯一确定，但对于大多数的取值这样的序列并不存在。例如，不存在任何$n&lt;6$的$(n,e)$-MPS。</p>
<p>记$C(n)$为$e$可以任意选择时所有$(n,e)$-MPS的数量，并记$D(N)=\sum_{n=2}^NC(n)$。</p>
<p>已知$D(10)=2$，$D(100)=21$，$D(1000)=69$，$D(10^6)=1303$以及$D(10^{12})=1014800$。</p>
<p>求$D(10^{18})$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 616</title>
    <url>/616/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-616"><a href="#Problem-616" class="headerlink" title="Problem 616"></a><a href="https://projecteuler.net/problem=616">Problem 616</a></h1><hr>
<h2 id="Creative-numbers"><a href="#Creative-numbers" class="headerlink" title="Creative numbers"></a><strong>Creative numbers</strong></h2><p>Alice plays the following game, she starts with a list of integers $L$ and on each step she can either:</p>
<ul>
<li>remove two elements $a$ and $b$ from $L$ and add $a^b$ to $L$</li>
<li>or conversely remove an element $c$ from $L$ that can be written as $a^b$, with $a$ and $b$ being two integers such that $a, b &gt; 1$, and add both $a$ and $b$ to $L$</li>
</ul>
<p>For example starting from the list $L={8}$, Alice can remove $8$ and add $2$ and $3$ resulting in $L={2,3}$ in a first step. Then she can obtain $L={9}$ in a second step.</p>
<p>Note that the same integer is allowed to appear multiple times in the list.</p>
<p>An integer $n&gt;1$ is said to be <i>creative</i> if for any integer $m&gt;1$ Alice can obtain a list that contains $m$ starting from $L={n}$.</p>
<p>Find the sum of all creative integers less than or equal to $10^{12}$.</p>
<hr>
<h2 id="创意数"><a href="#创意数" class="headerlink" title="创意数"></a><strong>创意数</strong></h2><p>爱丽丝正在这样一个游戏：她从整数列表$L$开始，每一步她可以：</p>
<ul>
<li>从$L$中去除两个元素$a$和$b$，并将$a^b$加入$L$</li>
<li>或者相反地，从$L$中去除一个可以写成$a^b$形式的元素$c$，其中$a$和$b$均为整数且$a, b &gt; 1$，然后将$a$和$b$加入$L$</li>
</ul>
<p>例如，从整数列表$L={8}$开始，第一步爱丽丝可以去除$8$并加入$2$和$3$，得到$L={2,3}$。然后第二步她可以得到$L={9}$。</p>
<p>注意在列表中同一整数允许重复出现多次。</p>
<p>称整数$n&gt;1$为<i class=zh>创意数</i>，如果对于任意整数$m&gt;1$，爱丽丝都能从$L={n}$开始得到一个包含有$m$的整数列表。</p>
<p>找出所有小于或等于$10^{12}$的创意数之和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 618</title>
    <url>/618/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-618"><a href="#Problem-618" class="headerlink" title="Problem 618"></a><a href="https://projecteuler.net/problem=618">Problem 618</a></h1><hr>
<h2 id="Numbers-with-a-given-prime-factor-sum"><a href="#Numbers-with-a-given-prime-factor-sum" class="headerlink" title="Numbers with a given prime factor sum"></a><strong>Numbers with a given prime factor sum</strong></h2><p>Consider the numbers 15, 16 and 18:<br>$15=3\times5$ and $3+5=8$.<br>$16=2\times2\times2\times2$ and $2+2+2+2=8$.<br>$18=2\times3\times3$ and $2+3+3=8$.<br>15, 16 and 18 are the only numbers that have 8 as sum of the prime factors (counted with multiplicity).</p>
<p>We define $S(k)$ to be the sum of all numbers $n$ where the sum of the prime factors (with multiplicity) of $n$ is $k$.<br>Hence $S(8)=15+16+18=49$.<br>Other examples: $S(1)=0$, $S(2)=2$, $S(3)=3$, $S(5)=5+6=11$.</p>
<p>The Fibonacci sequence is $F_1=1$, $F_2=1$, $F_3=2$, $F_4=3$, $F_5=5$, $\ldots$<br>Find the last nine digits of $\sum_{k=2}^{24}S(F_k)$.</p>
<hr>
<h2 id="给定质因数和的整数"><a href="#给定质因数和的整数" class="headerlink" title="给定质因数和的整数"></a><strong>给定质因数和的整数</strong></h2><p>考虑整数15，16和18的质因数分解：<br>$15=3\times5$，而$3+5=8$。<br>$16=2\times2\times2\times2$，而$2+2+2+2=8$。<br>$18=2\times3\times3$，而$2+3+3=8$。<br>15，16和18是仅有的质因数和（包括重复）为8的整数。</p>
<p>记$S(k)$为所有质因数和（包括重复）为$k$的整数$n$的和。<br>因此$S(8)=15+16+18=49$。<br>其它例子包括：$S(1)=0$，$S(2)=2$，$S(3)=3$，$S(5)=5+6=11$。</p>
<p>考虑斐波那契数列$F_1=1$，$F_2=1$，$F_3=2$，$F_4=3$，$F_5=5$，$\ldots$<br>求$\sum_{k=2}^{24}S(F_k)$的最后九位数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 62</title>
    <url>/62/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-62"><a href="#Problem-62" class="headerlink" title="Problem 62"></a><a href="https://projecteuler.net/problem=62">Problem 62</a></h1><hr>
<h2 id="Cubic-Permutations"><a href="#Cubic-Permutations" class="headerlink" title="Cubic Permutations"></a><strong>Cubic Permutations</strong></h2><p>The cube, $41063625$ ($345^3$), can be permuted to produce two other cubes: $56623104$ ($384^3$) and $66430125$ ($405^3$). In fact, $41063625$ is the smallest cube which has exactly three permutations of its digits which are also cube.</p>
<p>Find the smallest cube for which exactly five permutations of its digits are cube.</p>
<hr>
<h2 id="立方数重排"><a href="#立方数重排" class="headerlink" title="立方数重排"></a><strong>立方数重排</strong></h2><p>立方数$41063625$（$345^3$）可以重排为另外两个立方数：$56623104$（$384^3$）和$66430125$（$405^3$）。实际上，$41063625$是重排中恰好有三个立方数的最小立方数。</p>
<p>求重排中恰好有五个立方数的最小立方数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 619</title>
    <url>/619/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-619"><a href="#Problem-619" class="headerlink" title="Problem 619"></a><a href="https://projecteuler.net/problem=619">Problem 619</a></h1><hr>
<h2 id="Square-subsets"><a href="#Square-subsets" class="headerlink" title="Square subsets"></a><strong>Square subsets</strong></h2><p>For a set of positive integers ${a,a+1,a+2,\ldots,b}$, let $C(a,b)$ be the number of non-empty subsets in which the product of all elements is a perfect square.</p>
<p>For example $C(5,10)=3$, since the products of all elements of ${5,8,10}$, ${5,8,9,10}$ and ${9}$ are perfect squares, and no other subsets of ${5,6,7,8,9,10}$ have this property.</p>
<p>You are given that $C(40,55)=15$, and $C(1000,1234)\text{ mod }1000000007=975523611$.</p>
<p>Find $C(1000000,1234567)\text{ mod }1000000007$.</p>
<hr>
<h2 id="平方子集"><a href="#平方子集" class="headerlink" title="平方子集"></a><strong>平方子集</strong></h2><p>对于正整数集${a,a+1,a+2,\ldots,b}$，记$C(a,b)$为其非空子集中满足所有元素之积为完全平方数的子集的数目。</p>
<p>例如，$C(5,10)=3$，因为除了${5,8,10}$，${5,8,9,10}$和${9}$中所有元素之积为完全平方数外，不存在其它${5,6,7,8,9,10}$的子集满足这一性质。</p>
<p>已知$C(40,55)=15$，以及$C(1000,1234)\text{ mod }1000000007=975523611$。</p>
<p>求$C(1000000,1234567)\text{ mod }1000000007$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 621</title>
    <url>/621/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-621"><a href="#Problem-621" class="headerlink" title="Problem 621"></a><a href="https://projecteuler.net/problem=621">Problem 621</a></h1><hr>
<h2 id="Expressing-an-integer-as-the-sum-of-triangular-numbers"><a href="#Expressing-an-integer-as-the-sum-of-triangular-numbers" class="headerlink" title="Expressing an integer as the sum of triangular numbers"></a><strong>Expressing an integer as the sum of triangular numbers</strong></h2><p>Gauss famously proved that every positive integer can be expressed as the sum of three <strong>triangular numbers</strong> (including 0 as the lowest triangular number). In fact most numbers can be expressed as a sum of three triangular numbers in several ways.</p>
<p>Let $G(n)$ be the number of ways of expressing $n$ as the sum of three triangular numbers, regarding different arrangements of the terms of the sum as distinct.</p>
<p>For example, $G(9)=7$, as 9 can be expressed as: 3+3+3, 0+3+6, 0+6+3, 3+0+6, 3+6+0, 6+0+3, 6+3+0.<br>You are given $G(1000)=78$ and $G(10^6)=2106$.</p>
<p>Find $G(17526\times10^9)$.</p>
<hr>
<h1 id="将整数表示为三角形数的和"><a href="#将整数表示为三角形数的和" class="headerlink" title="将整数表示为三角形数的和"></a><strong>将整数表示为三角形数的和</strong></h1><p>众所周知高斯证明了任意正整数可以被表示为三个三角形数的和（包括0这一最小的三角形数）。事实上大多数整数可以以多种方式被表示为三个三角形数的和。</p>
<p>记$G(n)$为将$n$表示为三个三角形数的方式数目，不同的排列视为不同的方式。</p>
<p>例如，$G(9)=7$，因为9可以被表示成：3+3+3，0+3+6，0+6+3，3+0+6，3+6+0，6+0+3，6+3+0。<br>已知$G(1000)=78$以及$G(10^6)=2106$。</p>
<p>求$G(17526\times10^9)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 620</title>
    <url>/620/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-620"><a href="#Problem-620" class="headerlink" title="Problem 620"></a><a href="https://projecteuler.net/problem=620">Problem 620</a></h1><hr>
<h2 id="Planetary-Gears"><a href="#Planetary-Gears" class="headerlink" title="Planetary Gears"></a><strong>Planetary Gears</strong></h2><p>A circle $C$ of circumference $c$ centimetres has a smaller circle $S$ of circumference $s$ centimetres lying off-centre within it. Four other distinct circles, which we call “planets”, with circumferences $p$, $p$, $q$, $q$ centimetres respectively ($p&lt;q$), are inscribed within $C$ but outside $S$, with each planet touching both $C$ and $S$ tangentially. The planets are permitted to overlap one another, but the boundaries of $S$ and $C$ must be at least 1cm apart at their closest point.</p>
<p>Now suppose that these circles are actually gears with perfectly meshing teeth at a pitch of 1cm. $C$ is an internal gear with teeth on the inside. We require that $c$, $s$, $p$, $q$ are all integers (as they are the numbers of teeth), and we further stipulate that any gear must have at least 5 teeth.</p>
<p>Note that “perfectly meshing” means that as the gears rotate, the ratio between their angular velocities remains constant, and the teeth of one gear perfectly align with the groves of the other gear and vice versa. Only for certain gear sizes and positions will it be possible for $S$ and $C$ each to mesh perfectly with all the planets. Arrangements where not all gears mesh perfectly are not valid.</p>
<p>Define $g(c,s,p,q)$ to be the number of such gear arrangements for given values of $c$, $s$, $p$, $q$: it turns out that this is finite as only certain discrete arrangements are possible satisfying the above conditions. For example, $g(16,5,5,6)=9$.</p>
<p>Here is one such arrangement:</p>
<center><img src="/resources/images/0620_planetary_gears.png"></center>

<p>Let $G(n)=\sum_{s+p+q\le n}g(s+p+q,s,p,q)$ where the sum only includes cases with $p&lt;q$, $p\ge5$, and $s\ge5$, all integers. You are given that $G(16)=9$ and $G(20)=205$.</p>
<p>Find $G(500)$.</p>
<hr>
<h2 id="行星齿轮"><a href="#行星齿轮" class="headerlink" title="行星齿轮"></a><strong>行星齿轮</strong></h2><p>在周长为$c$厘米的圆$C$内部有一个不同心的周长为$s$厘米的小圆$S$。在$C$的内部但在$S$的外部，还有四个不同的圆，我们称之为“行星”，其周长分别是$p$，$p$，$q$，$q$厘米（$p&lt;q$），与$C$和$S$均相切。行星之间允许相互重叠，但是$S$和$C$的圆周之间最接近的地方至少要相距1厘米。</p>
<p>现在假设这些圆其实是一组节距1厘米且完美咬合的齿轮，其中$C$是齿位于内部的内齿轮。我们要求$c$，$s$，$p$，$q$均为整数（因而它们代表齿的数量），并进一步要求所有齿轮至少要有5个齿。</p>
<p>注意“完美咬合”的意思是当齿轮转动时，它们的角速度之比为常数，而且任一齿轮的齿都完美对齐另一齿轮的槽，反之亦然。只有特定的齿轮尺寸和位置能够让$S$和$C$与所有行星完美咬合。只有所有齿轮均完美咬合的设计方式才视为有效。</p>
<p>记$g(c,s,p,q)$为给定$c$，$s$，$p$，$q$时上述有效齿轮设计方式的数量：这一数量总是有限的，因为只有一部分离散的设计方式可能满足上述条件。例如，$g(16,5,5,6)=9$。</p>
<p>下图展示了一种有效的设计方式:</p>
<center><img src="/resources/images/0620_planetary_gears.png"></center>

<p>记$G(n)=\sum_{s+p+q\le n}g(s+p+q,s,p,q)$，其中被求和的参数还需满足$p&lt;q$，$p\ge5$和$s\ge5$，且均为整数。已知$G(16)=9$以及$G(20)=205$。</p>
<p>求$G(500)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 622</title>
    <url>/622/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-622"><a href="#Problem-622" class="headerlink" title="Problem 622"></a><a href="https://projecteuler.net/problem=622">Problem 622</a></h1><hr>
<h2 id="Riffle-Shuffle"><a href="#Riffle-Shuffle" class="headerlink" title="Riffle Shuffle"></a><strong>Riffle Shuffle</strong></h2><p>A riffle shuffle is executed as follows: a deck of cards is split into two equal halves, with the top half taken in the left hand and the bottom half taken in the right hand. Next, the cards are interleaved exactly, with the top card in the right half inserted just after the top card in the left half, the 2nd card in the right half just after the 2nd card in the left half, etc. (Note that this process preserves the location of the top and bottom card of the deck)</p>
<p>Let $s(n)$ be the minimum number of consecutive riffle shuffles needed to restore a deck of size $n$ to its original configuration, where $n$ is a positive even number.</p>
<p>Amazingly, a standard deck of $52$ cards will first return to its original configuration after only $8$ perfect shuffles, so $s(52)=8$. It can be verified that a deck of $86$ cards will also return to its original configuration after exactly $8$ shuffles, and the sum of all values of $n$ that satisfy $s(n)=8$ is $412$.</p>
<p>Find the sum of all values of $n$ that satisfy $s(n)=60$.</p>
<hr>
<h1 id="交叠洗牌"><a href="#交叠洗牌" class="headerlink" title="交叠洗牌"></a><strong>交叠洗牌</strong></h1><p>交叠洗牌的操作流程如下：将牌堆分成相同数量的两半，上半部分置于左手，下半部分置于右手。接着将牌准确地交叉叠合，也就是说，将右手中的第一张牌放在左手中的第一张牌下方，将右手中的第二张牌放在左手中的第二张牌下方，依此类推。（注意这一操作并不改变原牌堆的第一张和最后一张牌的位置）</p>
<p>记$s(n)$为对$n$张牌组成的牌堆连续进行交叠洗牌直至牌堆恢复原样所需的次数，其中$n$是一个正偶数。</p>
<p>令人惊奇的是，对于52张牌的标准牌堆，首次回复原样仅需要$8$次完美的交叠洗牌。可以验证对于86张牌的牌堆，恢复原样同样只需要$8$次洗牌，而所有满足$s(n)=8$的$n$取值之和为$412$。</p>
<p>求所有满足$s(n)=60$的$n$取值之和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 623</title>
    <url>/623/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-623"><a href="#Problem-623" class="headerlink" title="Problem 623"></a><a href="https://projecteuler.net/problem=623">Problem 623</a></h1><hr>
<h2 id="Lambda-Count"><a href="#Lambda-Count" class="headerlink" title="Lambda Count"></a><strong>Lambda Count</strong></h2><p>The <i>lambda-calculus</i> is a universal model of computation at the core of functional programming languages. It is based on <i>lambda-terms</i>, a minimal programming language featuring only function definitions, function calls and variables. Lambda-terms are built according to the following rules:</p>
<ul>
<li>Any variable $x$ (single letter, from some infinite alphabet) is a lambda-term.</li>
<li>If $M$ and $N$ are lambda-terms, then $(MN)$ is a lambda-term, called the <i>application</i> of $M$ to $N$.</li>
<li>If $x$ is a variable and $M$ is a term, then $(\lambda x.M)$ is a lambda-term, called an <i>abstraction</i>. An abstraction defines an anonymous function, taking $x$ as parameter and sending back $M$.</li>
</ul>
<p>A lambda-term $T$ is said to be <i>closed</i> if for all variables $x$, all occurrences of $x$ within $T$ are contained within some abstraction $(\lambda x.M)$ in $T$. The smallest such abstraction is said to <i>bind</i> the occurrence of the variable $x$. In other words, a lambda-term is closed if all its variables are bound to parameters of enclosing functions definitions. For example, the term $(\lambda x.x)$ is closed, while the term $(\lambda x.(xy))$ is not because $y$ is not bound.</p>
<p>Also, we can rename variables as long as no binding abstraction changes. This means that $(\lambda x.x)$ and $(\lambda y.y)$ should be considered equivalent since we merely renamed a parameter. Two terms equivalent modulo such renaming are called <i>$\alpha$-equivalent</i>. Note that $(\lambda x.(\lambda y.(xy)))$ and $(\lambda x.(\lambda x.(xx)))$ are not $\alpha$-equivalent, since the abstraction binding the first variable was the outer one and becomes the inner one. However, $(\lambda x.(\lambda y.(xy)))$ and $(\lambda y.(\lambda x.(yx)))$ are $\alpha$-equivalent.</p>
<p>The following table regroups the lambda-terms that can be written with at most $15$ symbols, symbols being parenthesis, $\lambda$, dot and variables.</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>$(\lambda x.x)$</td>
<td>$(\lambda x.(x(xx)))$</td>
<td>$(\lambda x.(\lambda y.(yx)))$</td>
<td>$(\lambda x.((\lambda y.x)x))$</td>
</tr>
<tr>
<td>$(\lambda x.(x((xx)x)))$</td>
<td>$(\lambda x.(xx))$</td>
<td>$(\lambda x.((xx)x))$</td>
<td>$(\lambda x.(\lambda y.(yy)))$</td>
</tr>
<tr>
<td>$(\lambda x.((\lambda y.y)x))$</td>
<td>$(\lambda x.((xx)(xx)))$</td>
<td>$(\lambda x.(\lambda y.x))$</td>
<td>$(\lambda x.(\lambda y.(xx)))$</td>
</tr>
<tr>
<td>$(\lambda x.(x(\lambda y.x)))$</td>
<td>$((\lambda x.x)(\lambda x.x))$</td>
<td>$(\lambda x.((x(xx))x))$</td>
<td>$(\lambda x.(\lambda y.y))$</td>
</tr>
<tr>
<td>$(\lambda x.(\lambda y.(xy)))$</td>
<td>$(\lambda x.(x(\lambda y.y)))$</td>
<td>$(\lambda x.(x(x(xx))))$</td>
<td>$(\lambda x.(((xx)x)x))$</td>
</tr>
</tbody></table>
<p>Let $\Lambda(n)$ be the number of distinct closed lambda-terms that can be written using at most $n$ symbols, where terms that are $\alpha$-equivalent to one another should be counted only once. You are given that $\Lambda(6)=1$, $\Lambda(9)=2$, $\Lambda(15)=20$ and $\Lambda(35)=3166438$.</p>
<p>Find $\Lambda(2000)$. Give the answer modulo $1000000007$.</p>
<hr>
<h2 id="lambda计数"><a href="#lambda计数" class="headerlink" title="lambda计数"></a><strong>lambda计数</strong></h2><p><i class=zh>lambda演算</i>是作为函数式编程语言核心的一种通用计算模型。这种模型基于<i class=zh>lambda项</i>，这是一种只包含函数定义、函数调用和变量的极简编程语言。lambda项根据如下的规则进行构建：</p>
<ul>
<li>任意变量$x$（由单个字母表示，假定字母表的长度无穷）都是lambda项。</li>
<li>如果$M$和$N$是lambda项，那么$(MN)$也是lambda项，这被称为将$M$<i class=zh>应用</i>到$N$上。</li>
<li>如果$x$是一个变量而$M$是一个lambda项，那么$(\lambda x.M)$是一个lambda项，这被称为<i class=zh>抽象</i>。 一个抽象定义了一个匿名函数，其中$x$是参数并返回$M$。</li>
</ul>
<p>如果在一个lambda项$T$中出现过的所有变量$x$均包含于$T$中的某个抽象$(\lambda x.M)$，则称$T$为<i class=zh>闭合</i>的，并称包含$x$的抽象中最小的一个<i class=zh>绑定</i>了$x$。换言之，如果一个lambda项中出现的所有变量都被绑定为某个函数定义中的参数，则它是闭合的。例如，lambda项$(\lambda x.x)$是闭合的，而lambda项$(\lambda x.(xy))$则不是，因为$y$并未被绑定。</p>
<p>另外，只要不改变抽象的绑定关系，我们可以随意重命名变量。这意味着$(\lambda x.x)$和$(\lambda y.y)$应当被认为是等价的，因为我们只是重命名了一个参数。在这样的重命名中等价的两个lambda项被称为<i class=zh>$\alpha$-等价</i>。注意$(\lambda x.(\lambda y.(xy)))$和$(\lambda x.(\lambda x.(xx)))$并不是$\alpha$-等价的，因为前者中绑定第一个变量的抽象是外层的抽象，而后者中则变成了内层的抽象。不过，$(\lambda x.(\lambda y.(xy)))$和$(\lambda y.(\lambda x.(yx)))$是$\alpha$-等价的。</p>
<p>如下的表格展示了所有可以用至多$15$个符号表示的lambda项，这里的符号包括括号，$\lambda$，点号和变量名。</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>$(\lambda x.x)$</td>
<td>$(\lambda x.(x(xx)))$</td>
<td>$(\lambda x.(\lambda y.(yx)))$</td>
<td>$(\lambda x.((\lambda y.x)x))$</td>
</tr>
<tr>
<td>$(\lambda x.(x((xx)x)))$</td>
<td>$(\lambda x.(xx))$</td>
<td>$(\lambda x.((xx)x))$</td>
<td>$(\lambda x.(\lambda y.(yy)))$</td>
</tr>
<tr>
<td>$(\lambda x.((\lambda y.y)x))$</td>
<td>$(\lambda x.((xx)(xx)))$</td>
<td>$(\lambda x.(\lambda y.x))$</td>
<td>$(\lambda x.(\lambda y.(xx)))$</td>
</tr>
<tr>
<td>$(\lambda x.(x(\lambda y.x)))$</td>
<td>$((\lambda x.x)(\lambda x.x))$</td>
<td>$(\lambda x.((x(xx))x))$</td>
<td>$(\lambda x.(\lambda y.y))$</td>
</tr>
<tr>
<td>$(\lambda x.(\lambda y.(xy)))$</td>
<td>$(\lambda x.(x(\lambda y.y)))$</td>
<td>$(\lambda x.(x(x(xx))))$</td>
<td>$(\lambda x.(((xx)x)x))$</td>
</tr>
</tbody></table>
<p>记$\Lambda(n)$为可以用至多$n$个符号表示的不同闭合lambda项的数目，其中$\alpha$-等价的lambda项只计算一次。已知$\Lambda(6)=1$，$\Lambda(9)=2$，$\Lambda(15)=20$以及$\Lambda(35)=3166438$。</p>
<p>求$\Lambda(2000)$，并将答案对$1000000007$取模。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 624</title>
    <url>/624/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-624"><a href="#Problem-624" class="headerlink" title="Problem 624"></a><a href="https://projecteuler.net/problem=624">Problem 624</a></h1><hr>
<h2 id="Two-heads-are-better-than-one"><a href="#Two-heads-are-better-than-one" class="headerlink" title="Two heads are better than one"></a><strong>Two heads are better than one</strong></h2><p>An unbiased coin is tossed repeatedly until two consecutive heads are obtained. Suppose these occur on the $(M−1)$ th and $M$th toss.<br>Let $P(n)$ be the probability that $M$ is divisible by $n$. For example, the outcomes HH, HTHH, and THTTHH all count towards $P(2)$, but THH and HTTHH do not.</p>
<p>You are given that $P(2)=\frac{3}{5}$ and $P(3)=\frac{9}{31}$. Indeed, it can be shown that $P(n)$ is always a rational number.</p>
<p>For a prime $p$ and a fully reduced fraction $\frac{a}{b}$, define $Q(\frac{a}{b},p)$ to be the smallest positive $q$ for which $a\equiv bq\pmod p$.<br>For example $Q(P(2),109)=Q(\frac{3}{5},109)=66$, because $5\cdot66=330\equiv 3\pmod{109}$ and $66$ is the smallest positive such number.<br>Similarly $Q(P(3),109)=46$.</p>
<p>Find $Q(P(10^{18}),1\ 000\ 000\ 009)$.</p>
<hr>
<h2 id="一个不少，两个正好"><a href="#一个不少，两个正好" class="headerlink" title="一个不少，两个正好"></a><strong>一个不少，两个正好</strong></h2><p>不断抛掷一枚标准硬币，直到连续两次抛出正面，记此时已经抛掷的次数为$M$。<br>令$P(n)$表示$M$被$n$整除的概率。比方说，在计算$P(2)$时，如“正正”、“正反正正”或是“反正反反正正”这样的抛掷结果都要算入，而“反正正”或“正反反正正”就不算。</p>
<p>已知$P(2)=\frac 3 5$ 和 $P(3)=\frac{9}{31}$。实际上，可以证明$P(n)$总是有理数。</p>
<p>对于素数$p$和最简分数$\frac a b$，记 $Q(\frac{a}{b},p)$ 为满足$a\equiv bq\pmod p$ 的最小正整数$q$。<br>例如，$Q(P(2),109)=Q(\frac{3}{5},109)=66$， 这是因为$5\cdot66=330\equiv 3 \pmod{109}$且$66$是满足上式的最小正整数；同理可得$Q(P(3),109)=46$。</p>
<p>求$Q(P(10^{18}),1\ 000\ 000\ 009)$。</p>
<p>（注：标题为我国1971年“四五计划”时期提出的计生政策口号）</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 625</title>
    <url>/625/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-625"><a href="#Problem-625" class="headerlink" title="Problem 625"></a><a href="https://projecteuler.net/problem=625">Problem 625</a></h1><hr>
<h2 id="Gcd-sum"><a href="#Gcd-sum" class="headerlink" title="Gcd sum"></a><strong>Gcd sum</strong></h2><p>$G(N)=\sum_{j=1}^N\sum_{i=1}^j\text{gcd}(i,j)$.<br>You are given: $G(10)=122$.</p>
<p>Find $G(10^{11})$. Give your answer modulo 998244353.</p>
<hr>
<h2 id="最大公约数之和"><a href="#最大公约数之和" class="headerlink" title="最大公约数之和"></a><strong>最大公约数之和</strong></h2><p>令$G(N)=\sum_{j=1}^N\sum_{i=1}^j\text{gcd}(i,j)$。<br>已知$G(10)=122$。</p>
<p>求$G(10^{11})$，并将你的答案对998244353取模。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 626</title>
    <url>/626/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-626"><a href="#Problem-626" class="headerlink" title="Problem 626"></a><a href="https://projecteuler.net/problem=626">Problem 626</a></h1><hr>
<h2 id="Counting-Binary-Matrices"><a href="#Counting-Binary-Matrices" class="headerlink" title="Counting Binary Matrices"></a><strong>Counting Binary Matrices</strong></h2><p>A binary matrix is a matrix consisting entirely of 0s and 1s. Consider the following transformations that can be performed on a binary matrix:</p>
<ul>
<li>Swap any two rows</li>
<li>Swap any two columns</li>
<li>Flip all elements in a single row (1s become 0s, 0s become 1s)</li>
<li>Flip all elements in a single column</li>
</ul>
<p>Two binary matrices $A$ and $B$ will be considered <i>equivalent</i> if there is a sequence of such transformations that when applied to $A$ yields $B$. For example, the following two matrices are equivalent:</p>
<p>$$A=\begin{pmatrix}<br>1 &amp; 0 &amp; 1 \<br>0 &amp; 0 &amp; 1 \<br>0 &amp; 0 &amp; 0<br>\end{pmatrix}\quad<br>B=\begin{pmatrix}<br>0 &amp; 0 &amp; 0 \<br>1 &amp; 0 &amp; 0 \<br>0 &amp; 0 &amp; 1<br>\end{pmatrix}$$ </p>
<p>via the sequence of two transformations “Flip all elements in column 3” followed by “Swap rows 1 and 2”.</p>
<p>Define $c(n)$ to be the maximum number of $n\times n$ binary matrices that can be found such that no two are equivalent. For example, $c(3)=3$. You are also given that $c(5)=39$ and $c(8)=656108$.</p>
<p>Find $c(20)$, and give your answer modulo $1\ 001\ 001\ 011$.</p>
<hr>
<h2 id="01矩阵计数"><a href="#01矩阵计数" class="headerlink" title="01矩阵计数"></a><strong>01矩阵计数</strong></h2><p>01矩阵指的是只由0或1构成的矩阵。对于任意01矩阵，可以进行以下变形：</p>
<ul>
<li>交换任意两行</li>
<li>交换任意两列</li>
<li>翻转一行中所有元素（1变成0，0变成1）</li>
<li>翻转一列中所有元素</li>
</ul>
<p>现有两个01矩阵$A$和$B$，如果能够通过一系列上述变形能够将$A$变为$B$，则称$A$和$B$是 <i class=zh>等价</i>的。例如，如下的两个矩阵就是等价的：</p>
<p>$$A=\begin{pmatrix}<br>1 &amp; 0 &amp; 1 \<br>0 &amp; 0 &amp; 1 \<br>0 &amp; 0 &amp; 0<br>\end{pmatrix}\quad<br>B=\begin{pmatrix}<br>0 &amp; 0 &amp; 0 \<br>1 &amp; 0 &amp; 0 \<br>0 &amp; 0 &amp; 1<br>\end{pmatrix}$$ </p>
<p>只需先翻转$A$中第三列的元素，然后交换第一行和第二行即可得到$B$。</p>
<p>在所有$n\times n$的01矩阵中，记两两互不等价的01矩阵数目最多为$c(n)$。例如，$c(3)=3$，$c(5)=39$，以及$c(8)=656108$。</p>
<p>求$c(20)$，并将你的答案对$1\ 001\ 001\ 011$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 627</title>
    <url>/627/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-627"><a href="#Problem-627" class="headerlink" title="Problem 627"></a><a href="https://projecteuler.net/problem=627">Problem 627</a></h1><hr>
<h2 id="Counting-products"><a href="#Counting-products" class="headerlink" title="Counting products"></a><strong>Counting products</strong></h2><p>Consider the set $S$  of all possible products of $n$ positive integers not exceeding $m$, that is<br>$S={x_1x_2\ldots x_n|1\le x_1,x_2,\ldots,x_n\le m}.$<br>Let $F(m,n)$ be the number of the distinct elements of the set $S$.<br>For example, $F(9,2)=36$ and $F(30,2)=308$.</p>
<p>Find $F(30,10001) \mod 1\ 000\ 000\ 007$ .</p>
<hr>
<h2 id="乘积计数"><a href="#乘积计数" class="headerlink" title="乘积计数"></a><strong>乘积计数</strong></h2><p>记$S$为所有$n$个不超过$m$的正整数连乘的乘积所构成的集合，也即<br>$S={x_1x_2\ldots x_n|1\le x_1,x_2,\ldots,x_n\le m}.$<br>记$F(m,n)$为$S$中不同元素的个数。<br>例如，$F(9,2)=36$，而$F(30,2)=308$。</p>
<p>求$F(30,10001) \mod 1\ 000\ 000\ 007$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 628</title>
    <url>/628/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-628"><a href="#Problem-628" class="headerlink" title="Problem 628"></a><a href="https://projecteuler.net/problem=628">Problem 628</a></h1><hr>
<h2 id="Open-chess-positions"><a href="#Open-chess-positions" class="headerlink" title="Open chess positions"></a><strong>Open chess positions</strong></h2><p>A position in chess is an (orientated) arrangement of chess pieces placed on a chessboard of given size. In the following, we consider all positions in which $n$ pawns are placed on a $n\times n$ board in such a way, that there is a single pawn in every row and every column.</p>
<p>We call such a position an <i>open</i> position, if a rook, starting at the (empty) lower left corner and using only moves towards the right or upwards, can reach the upper right corner without moving onto any field occupied by a pawn.</p>
<p>Let $f(n)$ be the number of open positions for a $n\times n$ chessboard.<br>For example, $f(3)=2$, illustrated by the two open positions for a $3\times 3$ chessboard below.</p>
<p><img src="/resources/images/0628_chess4.png" alt="Open position 1"></p>
<p><img src="/resources/images/0628_chess5.png" alt="Open position 2"></p>
<p>You are also given $f(5)=70$.</p>
<p>Find $f(10^8)$ modulo $1\ 008\ 691\ 207$.</p>
<hr>
<h2 id="开放局面"><a href="#开放局面" class="headerlink" title="开放局面"></a><strong>开放局面</strong></h2><p>国际象棋中，在给定大小的棋盘上（按照固定朝向）摆放一系列棋子，称为局面。接下来，只考虑在$n\times n$的棋盘上摆放$n$个兵，并使得每一行每一列都只有一个兵的局面。</p>
<p>如果棋盘的左下角是空的，且在这个位置摆放的车能够在不吃掉任何一个兵的情况下，通过只向右或向上移动到达棋盘的右上角，则称这样的局面为<i class=zh>开放</i>局面。</p>
<p>记$f(n)$为$n \times n$棋盘上开放局面的数目。<br>例如，$f(3)=2$，这两种开放局面如下图所示：</p>
<p><img src="/resources/images/0628_chess4.png" alt="开放局面1"></p>
<p><img src="/resources/images/0628_chess5.png" alt="开放局面2"></p>
<p>已知$f(5)=70$。</p>
<p>求$f(10^8)$对$1\ 008\ 691\ 207$取余的结果。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 629</title>
    <url>/629/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-629"><a href="#Problem-629" class="headerlink" title="Problem 629"></a><a href="https://projecteuler.net/problem=629">Problem 629</a></h1><hr>
<h2 id="Scatterstone-Nim"><a href="#Scatterstone-Nim" class="headerlink" title="Scatterstone Nim"></a><strong>Scatterstone Nim</strong></h2><p>Alice and Bob are playing a modified game of Nim called Scatterstone Nim, with Alice going first, alternating turns with Bob. The game begins with an arbitrary set of stone piles with a total number of stones equal to $n$.</p>
<p>During a player’s turn, he/she must pick a pile having at least $2$ stones and perform a split operation, dividing the pile into an arbitrary set of $p$ non-empty, arbitrarily-sized piles where $2\le p\le k$ for some fixed constant $k$. For example, a pile of size $4$ can be split into ${1,3}$ or ${2,2}$, or ${1,1,2}$ if $k=3$ and in addition ${1,1,1,1}$ if $k=4$.</p>
<p>If no valid move is possible on a given turn, then the other player wins the game.</p>
<p>A winning position is defined as a set of stone piles where a player can ultimately ensure victory no matter what the other player does.</p>
<p>Let $f(n,k)$ be the number of winning positions for Alice on her first turn, given parameters $n$ and $k$. For example, $f(5,2)=3$ with winning positions ${1,1,1,2}, {1,4},{2,3}$. In contrast, $f(5,3)=5$ with winning positions ${1,1,1,2},{1,1,3},{1,4},{2,3},{5}$.</p>
<p>Let $g(n)$ be the sum of $f(n,k)$ over all $2\le k\le n$. For example, $g(7)=66$ and $g(10)=291$.</p>
<p>Find $g(200) \mod(10^9+7)$.</p>
<hr>
<h2 id="分堆取石子游戏"><a href="#分堆取石子游戏" class="headerlink" title="分堆取石子游戏"></a><strong>分堆取石子游戏</strong></h2><p>爱丽丝和鲍勃正在玩一个分堆取石子游戏，爱丽丝先行动，然后轮到鲍勃，如此交替。游戏开始时，将$n$枚石子分成若干堆，每堆中的石子数目任意。</p>
<p>轮到任一玩家行动时，该玩家先选择一堆至少有$2$枚石子，然后将其分成$p$堆，每一堆的石子数任意，但不能为空堆，同时$p$满足$2\le p\le k$，$k$为某个事先约定的常数。例如，一堆共$4$枚石子，如果$k=3$，那么可以分成${1,3}$或${2,2}$或${1,1,2}$；如果$k=4$，那么还可以分成${1,1,1,1}$。</p>
<p>如果轮到某一玩家时没有可行的行动，则对手获胜。</p>
<p>如果玩家在面对特定的石子分堆时，无论对手如何行动，总能保证自己获得最终的胜利，则称之为必胜态。</p>
<p>对于给定的$n$和$k$，记$f(n,k)$为爱丽丝在初次行动时必胜态的数目。例如，$f(5,2)=3$，必胜态包括${1,1,1,2}, {1,4},{2,3}$。此外，$f(5,3)=5$，必胜态包括${1,1,1,2},{1,1,3},{1,4},{2,3},{5}$。</p>
<p>记$g(n)$为遍取$2\le k\le n$时所有$f(n,k)$的和。例如，$g(7)=66$而$g(10)=291$。</p>
<p>求$g(200) \mod (10^9+7)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 63</title>
    <url>/63/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-63"><a href="#Problem-63" class="headerlink" title="Problem 63"></a><a href="https://projecteuler.net/problem=63">Problem 63</a></h1><hr>
<h2 id="Powerful-Digit-Counts"><a href="#Powerful-Digit-Counts" class="headerlink" title="Powerful Digit Counts"></a><strong>Powerful Digit Counts</strong></h2><p>The $5$-digit number, $16807=7^5$, is also a fifth power. Similarly, the $9$-digit number,<br>$134217728=8^9$, is a ninth power.</p>
<p>How many $n$-digit positive integers exist which are also an $n$th power?</p>
<hr>
<h2 id="幂次与位数"><a href="#幂次与位数" class="headerlink" title="幂次与位数"></a><strong>幂次与位数</strong></h2><p>五位数$16807=7^5$同时也是一个五次幂。类似地，九位数$134217728=8^9$同时也是九次幂。</p>
<p>有多少个$n$位正整数同时也是$n$次幂？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 631</title>
    <url>/631/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-631"><a href="#Problem-631" class="headerlink" title="Problem 631"></a><a href="https://projecteuler.net/problem=631">Problem 631</a></h1><hr>
<h2 id="Constrained-Permutations"><a href="#Constrained-Permutations" class="headerlink" title="Constrained Permutations"></a><strong>Constrained Permutations</strong></h2><p>Let $(p_1p_2\ldots p_k)$ denote the permutation of the set ${1,\ldots,k}$ that maps $p_i\mapsto i$. Define the length of the permutation to be $k$; note that the empty permutation $()$ has length zero.</p>
<p>Define an <i>occurrence</i> of a permutation $p=(p_1p_2\ldots p_k)$  in a permutation $P=(P_1P_2\ldots P_n)$ to be a sequence $1\le t_1&lt;t_2&lt;\cdots &lt;t_k\le n$ such that $p_i&lt;p_j$ if and only if $P_{t_i}&lt;P_{t_j}$ for all $i,j\in{1,\ldots,k}$.</p>
<p>For example, $(1243)$ occurs twice in the permutation $(314625)$: once as the 1st, 3rd, 4th and 6th elements $(3\ 46\ 5)$, and once as the 2nd, 3rd, 4th and 6th elements $(\ 146\ 5)$.</p>
<p>Let $f(n,m)$ be the number of permutations $P$ of length at most $n$ such that there is no occurrence of the permutation $(1243)$ in $P$ and there are at most $m$ occurrences of the permutation $(21)$ in $P$.</p>
<p>For example, $f(2,0)=3$, with the permutations $()$, $(1)$, $(1,2)$ but not $(2,1)$.</p>
<p>You are also given that $f(4,5)=32$ and $f(10,25)=294\ 400$.</p>
<p>Find $f(10^{18},40)$ modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="带约束的排列"><a href="#带约束的排列" class="headerlink" title="带约束的排列"></a><strong>带约束的排列</strong></h2><p>用$(p_1p_2\ldots p_k)$表示将集合 ${1,\ldots,k}$ 按照$p_i\mapsto i$映射的排列。记这样的排列的长度为$k$；注意空排列$()$的长度视为0。</p>
<p>考虑排列$P=(P_1P_2\ldots P_n)$和较短的排列$p=(p_1p_2\ldots p_k)$，如果存在序列$1\le t_1&lt;t_2&lt;\cdots &lt;t_k\le n$ ，使得对任意$i,j\in{1,\ldots,k}$，$p_i&lt;p_j$ 当且仅当$P_{t_i}&lt;P_{t_j}$，则称$p$在$P$中<i class=zh>出现</i>了一次。</p>
<p>例如，排列$(1243)$在排列$(314625)$中出现了两次：第一次由第1、3、4、6个元素组成，即 $(3\ 46\ 5)$；第二次由第2、3、4、6个元素组成，即$(\ 146\ 5)$。</p>
<p>考虑所有长度不超过$n$的排列$P$，其中，没有排列$(1243)$出现，且排列$(21)$出现至多$m$次的排列总数记为$f(n,m)$。</p>
<p>例如，$f(2,0)=3$，这三种排列分别是$()$，$(1)$和$(1,2)$，而$(2,1)$不满足要求。</p>
<p>已知$f(4,5)=32$，以及$f(10,25)=294\ 400$。</p>
<p>求$f(10^{18},40)$并对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 630</title>
    <url>/630/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-630"><a href="#Problem-630" class="headerlink" title="Problem 630"></a><a href="https://projecteuler.net/problem=630">Problem 630</a></h1><hr>
<h2 id="Crossed-lines"><a href="#Crossed-lines" class="headerlink" title="Crossed lines"></a><strong>Crossed lines</strong></h2><p>Given a set, $L$, of unique lines, let $M(L)$ be the number of lines in the set and let $S(L)$ be the sum over every line of the number of times that line is crossed by another line in the set. For example, two sets of three lines are shown below:</p>
<p><img src="/resources/images/0630_threelines.png" alt="crossed lines"></p>
<p>In both cases $M(L)$ is $3$ and $S(L)$ is $6$: each of the three lines is crossed by two other lines. Note that even if the lines cross at a single point, all of the separate crossings of lines are counted.</p>
<p>Consider points $(T_{2k-1},T_{2k})$, for integer $k\ge 1$, generated in the following way:</p>
<p>$S_0=290797$<br>$S_{n+1}=S^2_n \mod 50515093$<br>$T_n=(S_n \mod 2000) - 1000$</p>
<p>For example, the first three points are: (527, 144), (−488, 732), (−454, −947). Given the first $n$ points generated in this manner, let $L_n$ be the set of <strong>unique</strong> lines that can be formed by joining each point with every other point, the lines being extended indefinitely in both directions. We can then define $M(L_n)$ and $S(L_n)$ as described above.</p>
<p>For example, $M(L_3)=3$ and $S(L_3)=6$. Also $M(L_{100})=4948$ and $S(L_{100})=24477690$.</p>
<p>Find $S(L_{2500})$.</p>
<hr>
<h2 id="交叉的直线"><a href="#交叉的直线" class="headerlink" title="交叉的直线"></a><strong>交叉的直线</strong></h2><p>给定一系列相异直线的集合$L$，记$M(L)$为集合中直线的数目，而$S(L)$为所有这些直线与集合中其它直线相交的次数之和。例如，考虑下图所示的两组直线集合：</p>
<p><img src="/resources/images/0630_threelines.png" alt="交叉的直线"></p>
<p>在这两种情形中，$M(L)$均为$3$而$S(L)$均为$6$：每个集合有三条直线，每条直线都与其它两条直线各相交一次。注意到，即使这些直线交于同一点，每次相交也都分别计算。</p>
<p>考虑由以下方式构造的一系列点$(T_{2k-1},T_{2k})$，其中整数$k\ge 1$：</p>
<p>$S_0=290797$<br>$S_{n+1}=S^2_n \mod 50515093$<br>$T_n=(S_n \mod 2000) - 1000$</p>
<p>例如，前三个点分别是：(527, 144)，(−488, 732)，(−454, −947)。给定由这种方式给出的前$n$个点，并记$L_n$为将这些点两两连接所得的所有<strong>相异</strong>直线构成的集合；注意直线总是向两端延长至无限远处。相应地，可以按照上述定义给出$M(L_n)$和$S(L_n)$。</p>
<p>例如，$M(L_3)=3$而$S(L_3)=6$。此外，$M(L_{100})=4948$而$S(L_{100})=24477690$。</p>
<p>求$S(L_{2500})$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 632</title>
    <url>/632/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-632"><a href="#Problem-632" class="headerlink" title="Problem 632"></a><a href="https://projecteuler.net/problem=632">Problem 632</a></h1><hr>
<h2 id="Square-prime-factors"><a href="#Square-prime-factors" class="headerlink" title="Square prime factors"></a><strong>Square prime factors</strong></h2><p>For an integer $n$, we define the <i>square prime factors</i> of $n$ to be the primes whose square divides $n$. For example, the square prime factors of $1500 = 2^2 \times 3 \times 5^3$ are $2$ and $5$.</p>
<p>Let $C_k(N)$ be the number of integers between $1$ and $N$ inclusive with exactly $k$ square prime factors. You are given some values of $C_k(N)$ in the table below.</p>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">$k=0$</th>
<th align="center">$k=1$</th>
<th align="center">$k=2$</th>
<th align="center">$k=3$</th>
<th align="center">$k=4$</th>
<th align="center">$k=5$</th>
</tr>
</thead>
<tbody><tr>
<td align="center">$N=10$</td>
<td align="center">$7$</td>
<td align="center">$3$</td>
<td align="center">$0$</td>
<td align="center">$0$</td>
<td align="center">$0$</td>
<td align="center">$0$</td>
</tr>
<tr>
<td align="center">$N=10^2$</td>
<td align="center">$61$</td>
<td align="center">$36$</td>
<td align="center">$3$</td>
<td align="center">$0$</td>
<td align="center">$0$</td>
<td align="center">$0$</td>
</tr>
<tr>
<td align="center">$N=10^3$</td>
<td align="center">$608$</td>
<td align="center">$343$</td>
<td align="center">$48$</td>
<td align="center">$1$</td>
<td align="center">$0$</td>
<td align="center">$0$</td>
</tr>
<tr>
<td align="center">$N=10^4$</td>
<td align="center">$6083$</td>
<td align="center">$3363$</td>
<td align="center">$533$</td>
<td align="center">$21$</td>
<td align="center">$0$</td>
<td align="center">$0$</td>
</tr>
<tr>
<td align="center">$N=10^5$</td>
<td align="center">$60794$</td>
<td align="center">$33562$</td>
<td align="center">$5345$</td>
<td align="center">$297$</td>
<td align="center">$2$</td>
<td align="center">$0$</td>
</tr>
<tr>
<td align="center">$N=10^6$</td>
<td align="center">$607926$</td>
<td align="center">$335438$</td>
<td align="center">$53358$</td>
<td align="center">$3218$</td>
<td align="center">$60$</td>
<td align="center">$0$</td>
</tr>
<tr>
<td align="center">$N=10^7$</td>
<td align="center">$6079291$</td>
<td align="center">$3353956$</td>
<td align="center">$533140$</td>
<td align="center">$32777$</td>
<td align="center">$834$</td>
<td align="center">$2$</td>
</tr>
<tr>
<td align="center">$N=10^8$</td>
<td align="center">$60792694$</td>
<td align="center">$33539196$</td>
<td align="center">$5329747$</td>
<td align="center">$329028$</td>
<td align="center">$9257$</td>
<td align="center">$78$</td>
</tr>
</tbody></table>
<p>Find the product of all non-zero $C_k(10^{16})$. Give the result reduced modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="平方质因数"><a href="#平方质因数" class="headerlink" title="平方质因数"></a><strong>平方质因数</strong></h2><p>对于整数$n$，称平方后能整除$n$的质数为$n$的<i class=zh>平方质因数</i>。例如，$1500 = 2^2 \times 3 \times 5^3$的平方质因数包括$2$和$5$。</p>
<p>记$C_k(N)$为$1$与$N$之间（含$1$和$N$）恰好有$k$个平方质因数的整数之和。下表给出了部分$C_k(N)$的取值：</p>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">$k=0$</th>
<th align="center">$k=1$</th>
<th align="center">$k=2$</th>
<th align="center">$k=3$</th>
<th align="center">$k=4$</th>
<th align="center">$k=5$</th>
</tr>
</thead>
<tbody><tr>
<td align="center">$N=10$</td>
<td align="center">$7$</td>
<td align="center">$3$</td>
<td align="center">$0$</td>
<td align="center">$0$</td>
<td align="center">$0$</td>
<td align="center">$0$</td>
</tr>
<tr>
<td align="center">$N=10^2$</td>
<td align="center">$61$</td>
<td align="center">$36$</td>
<td align="center">$3$</td>
<td align="center">$0$</td>
<td align="center">$0$</td>
<td align="center">$0$</td>
</tr>
<tr>
<td align="center">$N=10^3$</td>
<td align="center">$608$</td>
<td align="center">$343$</td>
<td align="center">$48$</td>
<td align="center">$1$</td>
<td align="center">$0$</td>
<td align="center">$0$</td>
</tr>
<tr>
<td align="center">$N=10^4$</td>
<td align="center">$6083$</td>
<td align="center">$3363$</td>
<td align="center">$533$</td>
<td align="center">$21$</td>
<td align="center">$0$</td>
<td align="center">$0$</td>
</tr>
<tr>
<td align="center">$N=10^5$</td>
<td align="center">$60794$</td>
<td align="center">$33562$</td>
<td align="center">$5345$</td>
<td align="center">$297$</td>
<td align="center">$2$</td>
<td align="center">$0$</td>
</tr>
<tr>
<td align="center">$N=10^6$</td>
<td align="center">$607926$</td>
<td align="center">$335438$</td>
<td align="center">$53358$</td>
<td align="center">$3218$</td>
<td align="center">$60$</td>
<td align="center">$0$</td>
</tr>
<tr>
<td align="center">$N=10^7$</td>
<td align="center">$6079291$</td>
<td align="center">$3353956$</td>
<td align="center">$533140$</td>
<td align="center">$32777$</td>
<td align="center">$834$</td>
<td align="center">$2$</td>
</tr>
<tr>
<td align="center">$N=10^8$</td>
<td align="center">$60792694$</td>
<td align="center">$33539196$</td>
<td align="center">$5329747$</td>
<td align="center">$329028$</td>
<td align="center">$9257$</td>
<td align="center">$78$</td>
</tr>
</tbody></table>
<p>求出所有非零的$C_k(10^{16})$的乘积，并将结果对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 633</title>
    <url>/633/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-633"><a href="#Problem-633" class="headerlink" title="Problem 633"></a><a href="https://projecteuler.net/problem=633">Problem 633</a></h1><hr>
<h2 id="Square-prime-factors-II"><a href="#Square-prime-factors-II" class="headerlink" title="Square prime factors II"></a><strong>Square prime factors II</strong></h2><p>For an integer $n$, we define the <i>square prime factors</i> of $n$ to be the primes whose square divides $n$. For example, the square prime factors of $1500 = 2^2 \times 3 \times 5^3$ are $2$ and $5$.</p>
<p>Let $C_k(N)$ be the number of integers between $1$ and $N$ inclusive with exactly $k$ square prime factors.  It can be shown that with growing $N$ the ratio $\frac{C_k(N)}{N}$ gets arbitrarily close to a constant $c_k^\infty$, as suggested by the table below.</p>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">$k=0$</th>
<th align="center">$k=1$</th>
<th align="center">$k=2$</th>
<th align="center">$k=3$</th>
<th align="center">$k=4$</th>
</tr>
</thead>
<tbody><tr>
<td align="center">$C_k(10)$</td>
<td align="center">$7$</td>
<td align="center">$3$</td>
<td align="center">$0$</td>
<td align="center">$0$</td>
<td align="center">$0$</td>
</tr>
<tr>
<td align="center">$C_k(10^2)$</td>
<td align="center">$61$</td>
<td align="center">$36$</td>
<td align="center">$3$</td>
<td align="center">$0$</td>
<td align="center">$0$</td>
</tr>
<tr>
<td align="center">$C_k(10^3)$</td>
<td align="center">$608$</td>
<td align="center">$343$</td>
<td align="center">$48$</td>
<td align="center">$1$</td>
<td align="center">$0$</td>
</tr>
<tr>
<td align="center">$C_k(10^4)$</td>
<td align="center">$6083$</td>
<td align="center">$3363$</td>
<td align="center">$533$</td>
<td align="center">$21$</td>
<td align="center">$0$</td>
</tr>
<tr>
<td align="center">$C_k(10^5)$</td>
<td align="center">$60794$</td>
<td align="center">$33562$</td>
<td align="center">$5345$</td>
<td align="center">$297$</td>
<td align="center">$2$</td>
</tr>
<tr>
<td align="center">$C_k(10^6)$</td>
<td align="center">$607926$</td>
<td align="center">$335438$</td>
<td align="center">$53358$</td>
<td align="center">$3218$</td>
<td align="center">$60$</td>
</tr>
<tr>
<td align="center">$C_k(10^7)$</td>
<td align="center">$6079291$</td>
<td align="center">$3353956$</td>
<td align="center">$533140$</td>
<td align="center">$32777$</td>
<td align="center">$834$</td>
</tr>
<tr>
<td align="center">$C_k(10^8)$</td>
<td align="center">$60792694$</td>
<td align="center">$33539196$</td>
<td align="center">$5329747$</td>
<td align="center">$329028$</td>
<td align="center">$9257$</td>
</tr>
<tr>
<td align="center">$C_k(10^9)$</td>
<td align="center">$607927124$</td>
<td align="center">$335389706$</td>
<td align="center">$53294365$</td>
<td align="center">$3291791$</td>
<td align="center">$95821$</td>
</tr>
<tr>
<td align="center">$c_k^\infty$</td>
<td align="center">$\frac{6}{\pi^2}$</td>
<td align="center">$3.3539\times 10^{-1}$</td>
<td align="center">$5.3293\times 10^{-2}$</td>
<td align="center">$3.2921\times 10^{-3}$</td>
<td align="center">$9.7046\times 10^{-5}</td>
</tr>
</tbody></table>
<p>Find $c_7^\infty$. Give the result in scientific notation rounded to $5$ significant digits, using a $e$ to seperate mantissa and exponent. E.g., if the answer were $0.000123456789$, then the answer format would be $1.2346e-4$.</p>
<hr>
<h2 id="平方质因数II"><a href="#平方质因数II" class="headerlink" title="平方质因数II"></a><strong>平方质因数II</strong></h2><p>对于整数$n$，称平方后能整除$n$的质数为$n$的<i class=zh>平方质因数</i>。例如，$1500 = 2^2 \times 3 \times 5^3$的平方质因数包括$2$和$5$。</p>
<p>记$C_k(N)$为$1$与$N$之间（含$1$和$N$）恰好有$k$个平方质因数的整数之和。可以发现，随着$N$不断增大，比值$\frac{C_k(N)}{N}$逐渐趋向于一个常数$c_k^\infty$，如下表所示：</p>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">$k=0$</th>
<th align="center">$k=1$</th>
<th align="center">$k=2$</th>
<th align="center">$k=3$</th>
<th align="center">$k=4$</th>
<th align="center">$k=5$</th>
</tr>
</thead>
<tbody><tr>
<td align="center">$N=10$</td>
<td align="center">$7$</td>
<td align="center">$3$</td>
<td align="center">$0$</td>
<td align="center">$0$</td>
<td align="center">$0$</td>
<td align="center">$0$</td>
</tr>
<tr>
<td align="center">$N=10^2$</td>
<td align="center">$61$</td>
<td align="center">$36$</td>
<td align="center">$3$</td>
<td align="center">$0$</td>
<td align="center">$0$</td>
<td align="center">$0$</td>
</tr>
<tr>
<td align="center">$N=10^3$</td>
<td align="center">$608$</td>
<td align="center">$343$</td>
<td align="center">$48$</td>
<td align="center">$1$</td>
<td align="center">$0$</td>
<td align="center">$0$</td>
</tr>
<tr>
<td align="center">$N=10^4$</td>
<td align="center">$6083$</td>
<td align="center">$3363$</td>
<td align="center">$533$</td>
<td align="center">$21$</td>
<td align="center">$0$</td>
<td align="center">$0$</td>
</tr>
<tr>
<td align="center">$N=10^5$</td>
<td align="center">$60794$</td>
<td align="center">$33562$</td>
<td align="center">$5345$</td>
<td align="center">$297$</td>
<td align="center">$2$</td>
<td align="center">$0$</td>
</tr>
<tr>
<td align="center">$N=10^6$</td>
<td align="center">$607926$</td>
<td align="center">$335438$</td>
<td align="center">$53358$</td>
<td align="center">$3218$</td>
<td align="center">$60$</td>
<td align="center">$0$</td>
</tr>
<tr>
<td align="center">$N=10^7$</td>
<td align="center">$6079291$</td>
<td align="center">$3353956$</td>
<td align="center">$533140$</td>
<td align="center">$32777$</td>
<td align="center">$834$</td>
<td align="center">$2$</td>
</tr>
<tr>
<td align="center">$N=10^8$</td>
<td align="center">$60792694$</td>
<td align="center">$33539196$</td>
<td align="center">$5329747$</td>
<td align="center">$329028$</td>
<td align="center">$9257$</td>
<td align="center">$78$</td>
</tr>
</tbody></table>
<p>求$c_7^\infty$，并将结果用科学计数法表示，保留5位有效数字，尾数和指数间用$e$分隔。例如，如果结果是$0.000123456789$，则应当回答$1.2346e-4$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 634</title>
    <url>/634/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-634"><a href="#Problem-634" class="headerlink" title="Problem 634"></a><a href="https://projecteuler.net/problem=634">Problem 634</a></h1><hr>
<h2 id="Numbers-of-the-form-a-2b-3"><a href="#Numbers-of-the-form-a-2b-3" class="headerlink" title="Numbers of the form $a^2b^3$"></a><strong>Numbers of the form $a^2b^3$</strong></h2><p>Define $F(n)$ to be the number of integers $x\le n$ that can be written in the form $x=a^2b^3$, where $a$ and $b$ are integers not necessarily different and both greater than $1$.</p>
<p>For example, $32=2^2\times 2^3$ and $72=3^2\times 2^3$ are the only two integers less than $100$ that can be written in this form. Hence, $F(100)=2$.</p>
<p>Further you are given $F(2\times 10^4)=130$ and $F(3\times 10^6)=2014$.</p>
<p>Find $F(9\times 10^{18})$.</p>
<hr>
<h2 id="可写成-a-2b-3-的数"><a href="#可写成-a-2b-3-的数" class="headerlink" title="可写成$a^2b^3$的数"></a><strong>可写成$a^2b^3$的数</strong></h2><p>考虑整数$x\le n$，若$x$可写成$x=a^2b^3$，其中$a$和$b$是大于$1$且可重复的整数，记所有此类整数的数目为$F(n)$。</p>
<p>例如，在小于$100$的整数中，只有$32=2^2\times 2^3$和$72=3^2\times 2^3$可以写成这种形式，因此$F(100)=2$。</p>
<p>此外，还已知$F(2\times 10^4)=130$以及$F(3\times 10^6)=2014$。</p>
<p>求$F(9\times 10^{18})$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 635</title>
    <url>/635/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-635"><a href="#Problem-635" class="headerlink" title="Problem 635"></a><a href="https://projecteuler.net/problem=635">Problem 635</a></h1><hr>
<h2 id="Subset-sums"><a href="#Subset-sums" class="headerlink" title="Subset sums"></a><strong>Subset sums</strong></h2><p>Let $A_q(n)$ be the number of subsets, $B$, of the set ${1,2,\ldots,q\cdot n}$ that satisfy two conditions:</p>
<p>1) $B$ has exactly $n$ elements;<br>2) the sum of the elements of $B$ is divisible by $n$.</p>
<p>E.g. $A_2(5)=52$ and $A_3(5)=603$.</p>
<p>Let $S_q(L)$ be $\sum A_q(p)$ where the sum is taken over all primes $p\le L$.<br>E.g. $S_2(10)=554$, $S_2(100) \mod 1\ 000\ 000\ 009 = 100433628$ and $S_3(100) \mod 1\ 000\ 000\ 009=855618282$.</p>
<p>Find $S_2(10^8)+S_3(10^8)$. Give your answer modulo $1\ 000\ 000\ 009$.</p>
<hr>
<h2 id="子集和"><a href="#子集和" class="headerlink" title="子集和"></a><strong>子集和</strong></h2><p>考虑集合${1,2,\ldots,q\cdot n}$的子集$B$，且$B$满足以下两个条件：</p>
<p>1) $B$中恰好有$n$个元素；<br>2) $B$中元素的和能够被$n$整除；<br>记所有此类子集$B$的数目为$A_q(n)$。</p>
<p>例如，$A_2(5)=52$，$A_3(5)=603$。</p>
<p>记$S_q(L)$为$\sum A_q(p)$，其中$p$取遍所有满足$p\le L$的质数。<br>例如，$S_2(10)=554$，$S_2(100) \mod 1\ 000\ 000\ 009 = 100433628$，$S_3(100) \mod 1\ 000\ 000\ 009=855618282$。</p>
<p>求$S_2(10^8)+S_3(10^8)$，并将答案对$1\ 000\ 000\ 009$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 636</title>
    <url>/636/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-636"><a href="#Problem-636" class="headerlink" title="Problem 636"></a><a href="https://projecteuler.net/problem=636">Problem 636</a></h1><hr>
<h2 id="Restricted-Factorisations"><a href="#Restricted-Factorisations" class="headerlink" title="Restricted Factorisations"></a><strong>Restricted Factorisations</strong></h2><p>Consider writing a natural number as product of powers of natural numbers with given exponents, additionally requiring different base numbers for each power.</p>
<p>For example, $256$ can be written as a product of a square and a fourth power in three ways such that the base numbers are different.<br>That is, $256 = 1^2 \times 4^4 = 4^2 \times 2^4 = 16^2 \times 1^4$.</p>
<p>Though $4^2$ and $2^4$ are both equal, we are concerned only about the base numbers in this problem. Note that permutations are not considered distinct, for example $16^2\times 1^4$ and $1^4\times 16^2$  are considered to be the same.</p>
<p>Similarly, $10!$ can be written as a product of one natural number, two squares and three cubes in two ways ($10!=42\times 5^2\times 4^2 \times 3^3 \times 2^3 \times 1^3 = 21 \times 5^2 \times 2^2 \times 4^3 \times 3^3 \times 1^3$) whereas $20!$ can be given the same representation in $41680$ ways.</p>
<p>Let $F(n)$ denote the number of ways in which $n$ can be written as a product of one natural number, two squares, three cubes and four fourth powers.</p>
<p>You are given that $F(25!)=4933$,<br>$F(100!) \mod 1\ 000\ 000\ 007=693\ 952\ 493$,<br>and $F(1\ 000!)\mod 1\ 000\ 000\ 007=6\ 364\ 496$.</p>
<p>Find $F(1\ 000\ 000!)\mod 1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="有限制的因数分解"><a href="#有限制的因数分解" class="headerlink" title="有限制的因数分解"></a><strong>有限制的因数分解</strong></h2><p>考虑将自然数表示成一系列给定指数的幂的乘积，同时要求这些幂的底数互不相同。</p>
<p>例如，将$256$表示成一个平方数乘以一个四次方数，且底数互不相同，有三种不同的方式，分别是<br>$256 = 1^2 \times 4^4 = 4^2 \times 2^4 = 16^2 \times 1^4$。</p>
<p>尽管$4^2$和$2^4$是相等的，但是在这个问题中我们只要求底数不同。还要注意，改变排列方式并不认为是不同的表示方式，例如$16^2\times 1^4$和$1^4\times 16^2$是相同的表示。</p>
<p>类似地，将$10!$表示成一个自然数、两个平方数和三个立方数的乘积，有两种方式（$10!=42\times 5^2\times 4^2 \times 3^3 \times 2^3 \times 1^3 = 21 \times 5^2 \times 2^2 \times 4^3 \times 3^3 \times 1^3$），而$20!$则有$41680$种表示方式。</p>
<p>记$F(n)$为将$n$表示成一个自然数、两个平方数、三个立方数和四个四次方数的方式总数。</p>
<p>已知$F(25!)=4933$，<br>$F(100!) \mod 1\ 000\ 000\ 007=693\ 952\ 493$，<br>$F(1\ 000!)\mod 1\ 000\ 000\ 007=6\ 364\ 496$。</p>
<p>求$F(1\ 000\ 000!)\mod 1\ 000\ 000\ 007$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 637</title>
    <url>/637/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-637"><a href="#Problem-637" class="headerlink" title="Problem 637"></a><a href="https://projecteuler.net/problem=637">Problem 637</a></h1><hr>
<h2 id="Flexible-digit-sum"><a href="#Flexible-digit-sum" class="headerlink" title="Flexible digit sum"></a><strong>Flexible digit sum</strong></h2><p>Given any positive integer $n$, we can construct a new integer by inserting plus signs between some of the digits of the base $B$ representation of $n$, and then carrying out the additions.</p>
<p>For example, from $n=123_{10}$ ($n$ in base $10$) we can construct the four base $10$ integers $123_{10}$, $1+23 =24_{10}$, $12+3=15_{10}$ and $1+2+3=6_{10}$. </p>
<p>Let $f(n,B)$ be the smallest number of steps needed to arrive at a single-digit number in base $B$. For example, $f(7,10)=0$ and $f(123,10)=1$.</p>
<p>Let $g(n,B_1,B_2)$ be the sum of the positive integers $i$ not exceeding $n$ such that $f(i,B_1)=f(i,B_2)$.</p>
<p>You are given $g(100,10,3)=3302$.</p>
<p>Find $g(10^7,10,3)$.</p>
<hr>
<h2 id="灵活的数字和"><a href="#灵活的数字和" class="headerlink" title="灵活的数字和"></a><strong>灵活的数字和</strong></h2><p>给定任意正整数$n$，我们可以通过在$n$的$B$进制表示中插入加号，并计算加法的结果，来构造新的整数。</p>
<p>例如，从$n=123_{10}$ ($10$进制表示的$n$)出发，我们能够构造四个$10$进制整数：$123_{10}$，$1+23 =24_{10}$，$12+3=15_{10}$和$1+2+3=6_{10}$。</p>
<p>记$f(n,B)$为将$B$进制下的$n$变为一位数所需的最少步数。例如，$f(7,10)=0$而$f(123,10)=1$。</p>
<p>记$g(n,B_1,B_2)$为所有小于等于$n$且满足$f(i,B_1)=f(i,B_2)$的正整数$i$之和。</p>
<p>已知$g(100,10,3)=3302$。</p>
<p>求$g(10^7,10,3)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 638</title>
    <url>/638/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-638"><a href="#Problem-638" class="headerlink" title="Problem 638"></a><a href="https://projecteuler.net/problem=638">Problem 638</a></h1><hr>
<h2 id="Weighted-lattice-paths"><a href="#Weighted-lattice-paths" class="headerlink" title="Weighted lattice paths"></a><strong>Weighted lattice paths</strong></h2><p>Let $P_{a.b}$ denote a path in a $a\times b$ lattice grid with following properties:</p>
<ul>
<li>The path begins at $(0,0)$ and ends at $(a,b)$.</li>
<li>The path consists only of unit moves upwards or to the right; that is the coordinates are increasing with every move.</li>
</ul>
<p>Denote $A(P_{a,b})$  to be the area under the path. For the example of a $P_{4,3}$ path given below, the area equals $6$.</p>
<p><img src="/resources/images/0638_lattice_area.png" alt="lattice path"></p>
<p>Define $G(P_{a,b},k)=k^{A(P_{a,b})}$. Let $C(a,b,k)$ equal the sum of $G(P_{a,b},k)$ over all valid paths in a $a\times b$ lattice grid.</p>
<p>You are given that</p>
<ul>
<li>$C(2,2,1)=6$</li>
<li>$C(2,2,2)=6$</li>
<li>$C(10,10,1)=184\ 756$</li>
<li>$C(15,10,3)\equiv 880\ 419\ 838 \mod 1\ 000\ 000\ 007$</li>
<li>$C(10\ 000,10\ 000,4)\equiv 395\ 913\ 804 \mod 1\ 000\ 000\ 007$</li>
</ul>
<p>Calculate $\sum_{k=1}^7 C(10^k+k,10^k+k,k)$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="带权格阵路径"><a href="#带权格阵路径" class="headerlink" title="带权格阵路径"></a><strong>带权格阵路径</strong></h2><p>记$P_{a.b}$为$a\times b$格阵中满足如下性质的路径：</p>
<ul>
<li>路径从$(0,0)$开始，到$(a,b)$结束。</li>
<li>路径只能沿着格阵每次向上或向右走一步；也就是说，每一步都只能使横、纵坐标增加而不能减少。</li>
</ul>
<p>记$A(P_{a,b})$为路径下方区域的面积。以下图给出的一条$P_{4,3}$路径为例，其下方区域的面积为$6$。</p>
<p><img src="/resources/images/0638_lattice_area.png" alt="格阵路径"></p>
<p>记$G(P_{a,b},k)=k^{A(P_{a,b})}$。记 $C(a,b,k)$为$a\times b$格阵中所有满足上述条件的路径所对应的$G(P_{a,b},k)$之和。</p>
<p>已知</p>
<ul>
<li>$C(2,2,1)=6$</li>
<li>$C(2,2,2)=6$</li>
<li>$C(10,10,1)=184\ 756$</li>
<li>$C(15,10,3)\equiv 880\ 419\ 838 \mod 1\ 000\ 000\ 007$</li>
<li>$C(10\ 000,10\ 000,4)\equiv 395\ 913\ 804 \mod 1\ 000\ 000\ 007$</li>
</ul>
<p>求$\sum_{k=1}^7 C(10^k+k,10^k+k,k)$，并将答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 639</title>
    <url>/639/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-639"><a href="#Problem-639" class="headerlink" title="Problem 639"></a><a href="https://projecteuler.net/problem=639">Problem 639</a></h1><hr>
<h2 id="Summing-a-multiplicative-function"><a href="#Summing-a-multiplicative-function" class="headerlink" title="Summing a multiplicative function"></a><strong>Summing a multiplicative function</strong></h2><p>A <strong>multiplicative function</strong> $f(x)$ is a function over positive integers satisfying $f(1)=1$ and $f(ab)=f(a)f(b)$ for any two coprime positive integers $a$ and $b$.</p>
<p>For integer $k$ let $f_k(n)$ be a multiplicative function additionally satisfying $f_k(e^p)=p^k$ for any prime $p$ and any integer $e&gt;0$.<br>For example, $f_1(2)=2$, $f_1(4)=2$, $f_1(18)=6$ and $f_2(18)=36$.</p>
<p>Let $S_k(n)=\sum_{i=1}^n f_k(i)$. For example, $S_1(10)=41$, $S_1(100)=3512$, $S_2(100)=208090$, $S_1(10000)=35252550$ and $\sum_{k=1}^3 S_k(10^8)\equiv 338787512 (\mod 1\ 000\ 000\ 007)$. </p>
<p>Find $\sum_{k=1}^{50}S_k(10^{12})\mod 1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="积性函数求和"><a href="#积性函数求和" class="headerlink" title="积性函数求和"></a><strong>积性函数求和</strong></h2><p>若定义在正整数上的函数$f(x)$满足$f(1)=1$，且对任意两个互质正整数$a$和$b$有$f(ab)=f(a)f(b)$，则称$f(x)$为<strong>积性函数</strong>。</p>
<p>对于正整数$k$，积性函数$f_k(n)$进一步满足，对于任意质数$p$和任意整数$e&gt;0$有$f_k(e^p)=p^k$。<br>例如，$f_1(2)=2$，$f_1(4)=2$，$f_1(18)=6$，$f_2(18)=36$。</p>
<p>记$S_k(n)=\sum_{i=1}^n f_k(i)$。例如，$S_1(10)=41$，$S_1(100)=3512$，$S_2(100)=208090$，$S_1(10000)=35252550$，$\sum_{k=1}^3 S_k(10^8)\equiv 338787512 (\mod 1\ 000\ 000\ 007)$。 </p>
<p>求$\sum_{k=1}^{50}S_k(10^{12})\mod 1\ 000\ 000\ 007$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 64</title>
    <url>/64/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-64"><a href="#Problem-64" class="headerlink" title="Problem 64"></a><a href="https://projecteuler.net/problem=64">Problem 64</a></h1><hr>
<h2 id="Odd-Period-Square-Roots"><a href="#Odd-Period-Square-Roots" class="headerlink" title="Odd Period Square Roots"></a><strong>Odd Period Square Roots</strong></h2><p>All square roots are periodic when written as continued fractions and can be written in the form:</p>
<p>$\quad \quad \sqrt{N}=a_0+\frac{1}{a_1+\frac{1}{a_2+\frac{1}{a_3+…}}}$</p>
<p>For example, let us consider $\sqrt{23}$:</p>
<p>$\quad \quad \sqrt{23}=4+\sqrt{23}-4=4+\frac{1}{\frac{1}{\sqrt{23}-4}}=4+\frac{1}{1+\frac{\sqrt{23}-3}{7}}$</p>
<p>If we continue we would get the following expansion:</p>
<p>$\quad \quad \sqrt{23}=4+\frac{1}{1+\frac{1}{3+\frac{1}{1+\frac{1}{8+…}}}}$</p>
<p>The process can be summarised as follows:</p>
<p>$\quad \quad a_0=4, \frac 1 {\sqrt{23}-4}=\frac {\sqrt{23}+4} 7=1+\frac {\sqrt{23}-3} 7$<br /><br>$\quad \quad a_1=1, \frac 7 {\sqrt{23}-3}=\frac {7(\sqrt{23}+3)} {14}=3+\frac {\sqrt{23}-3} 2$<br /><br>$\quad \quad a_2=3, \frac 2 {\sqrt{23}-3}=\frac {2(\sqrt{23}+3)} {14}=1+\frac {\sqrt{23}-4} 7$<br /><br>$\quad \quad a_3=1, \frac 7 {\sqrt{23}-4}=\frac {7(\sqrt{23}+4)} 7=8+\sqrt{23}-4$<br /><br>$\quad \quad a_4=8, \frac 1 {\sqrt{23}-4}=\frac {\sqrt{23}+4} 7=1+\frac {\sqrt{23}-3} 7$<br /><br>$\quad \quad a_5=1, \frac 7 {\sqrt{23}-3}=\frac {7 (\sqrt{23}+3)} {14}=3+\frac {\sqrt{23}-3} 2$<br /><br>$\quad \quad a_6=3, \frac 2 {\sqrt{23}-3}=\frac {2(\sqrt{23}+3)} {14}=1+\frac {\sqrt{23}-4} 7$<br /><br>$\quad \quad a_7=1, \frac 7 {\sqrt{23}-4}=\frac {7(\sqrt{23}+4)} {7}=8+\sqrt{23}-4$<br /></p>
<p>It can be seen that the sequence is repeating. For conciseness, we use the notation $\sqrt{23} = [4;(1,3,1,8)]$, to indicate that the block $(1,3,1,8)$ repeats indefinitely.</p>
<p>The first ten continued fraction representations of (irrational) square roots are:</p>
<p>$\quad \quad \sqrt{2}=[1;(2)]$, period=$1$<br /><br>$\quad \quad \sqrt{3}=[1;(1,2)]$, period=$2$<br /><br>$\quad \quad \sqrt{5}=[2;(4)]$, period=$1$<br /><br>$\quad \quad \sqrt{6}=[2;(2,4)]$, period=$2$<br /><br>$\quad \quad \sqrt{7}=[2;(1,1,1,4)]$, period=$4$<br /><br>$\quad \quad \sqrt{8}=[2;(1,4)]$, period=$2$<br /><br>$\quad \quad \sqrt{10}=[3;(6)]$, period=$1$<br /><br>$\quad \quad \sqrt{11}=[3;(3,6)]$, period=$2$<br /><br>$\quad \quad \sqrt{12}=[3;(2,6)]$, period=$2$<br /><br>$\quad \quad \sqrt{13}=[3;(1,1,1,1,6)]$, period=$5$</p>
<p>Exactly four continued fractions, for $N \le 13$, have an odd period.</p>
<p>How many continued fractions for $N \le 10000$ have an odd period?</p>
<hr>
<h2 id="奇周期平方根"><a href="#奇周期平方根" class="headerlink" title="奇周期平方根"></a><strong>奇周期平方根</strong></h2><p>所有的平方根写成如下连分数表示时都是周期性重复的：</p>
<p>$\quad \quad \sqrt{N}=a_0+\frac{1}{a_1+\frac{1}{a_2+\frac{1}{a_3+…}}}$</p>
<p>例如，让我们考虑$\sqrt{23}$：</p>
<p>$\quad \quad \sqrt{23}=4+\sqrt{23}-4=4+\frac{1}{\frac{1}{\sqrt{23}-4}}=4+\frac{1}{1+\frac{\sqrt{23}-3}{7}}$</p>
<p>如果我们继续展开，会得到：</p>
<p>$\quad \quad \sqrt{23}=4+\frac{1}{1+\frac{1}{3+\frac{1}{1+\frac{1}{8+…}}}}$</p>
<p>这个过程可以总结如下：</p>
<p>$\quad \quad a_0=4, \frac 1 {\sqrt{23}-4}=\frac {\sqrt{23}+4} 7=1+\frac {\sqrt{23}-3} 7$<br /><br>$\quad \quad a_1=1, \frac 7 {\sqrt{23}-3}=\frac {7(\sqrt{23}+3)} {14}=3+\frac {\sqrt{23}-3} 2$<br /><br>$\quad \quad a_2=3, \frac 2 {\sqrt{23}-3}=\frac {2(\sqrt{23}+3)} {14}=1+\frac {\sqrt{23}-4} 7$<br /><br>$\quad \quad a_3=1, \frac 7 {\sqrt{23}-4}=\frac {7(\sqrt{23}+4)} 7=8+\sqrt{23}-4$<br /><br>$\quad \quad a_4=8, \frac 1 {\sqrt{23}-4}=\frac {\sqrt{23}+4} 7=1+\frac {\sqrt{23}-3} 7$<br /><br>$\quad \quad a_5=1, \frac 7 {\sqrt{23}-3}=\frac {7 (\sqrt{23}+3)} {14}=3+\frac {\sqrt{23}-3} 2$<br /><br>$\quad \quad a_6=3, \frac 2 {\sqrt{23}-3}=\frac {2(\sqrt{23}+3)} {14}=1+\frac {\sqrt{23}-4} 7$<br /><br>$\quad \quad a_7=1, \frac 7 {\sqrt{23}-4}=\frac {7(\sqrt{23}+4)} {7}=8+\sqrt{23}-4$<br /></p>
<p>可以看出序列正在重复。我们将其简记为$\sqrt{23} = [4;(1,3,1,8)]$，表示在此之后$(1,3,1,8)$无限循环。</p>
<p>前$10$个（无理数）平方根的连分数表示是：</p>
<p>$\quad \quad \sqrt{2}=[1;(2)]$，周期为$1$<br /><br>$\quad \quad \sqrt{3}=[1;(1,2)]$，周期为$2$<br /><br>$\quad \quad \sqrt{5}=[2;(4)]$，周期为$1$<br /><br>$\quad \quad \sqrt{6}=[2;(2,4)]$，周期为$2$<br /><br>$\quad \quad \sqrt{7}=[2;(1,1,1,4)]$，周期为$4$<br /><br>$\quad \quad \sqrt{8}=[2;(1,4)]$，周期为$2$<br /><br>$\quad \quad \sqrt{10}=[3;(6)]$，周期为$1$<br /><br>$\quad \quad \sqrt{11}=[3;(3,6)]$，周期为$2$<br /><br>$\quad \quad \sqrt{12}=[3;(2,6)]$，周期为$2$<br /><br>$\quad \quad \sqrt{13}=[3;(1,1,1,1,6)]$，周期为$5$</p>
<p>在$N \le 13$中，恰好有$4$个连分数表示的周期是奇数。</p>
<p>在$N \le 10000$中，有多少个连分数表示的周期是奇数？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 640</title>
    <url>/640/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-640"><a href="#Problem-640" class="headerlink" title="Problem 640"></a><a href="https://projecteuler.net/problem=640">Problem 640</a></h1><hr>
<h2 id="Shut-the-Box"><a href="#Shut-the-Box" class="headerlink" title="Shut the Box"></a><strong>Shut the Box</strong></h2><p>Bob plays a single-player game of chance using two standard $6$-sided dice and twelve cards numbered $1$ to $12$. When the game starts, all cards are placed face up on a table.</p>
<p>Each turn, Bob rolls both dice, getting numbers $x$ and $y$ respectively, each in the range $1,\ldots,6$. He must choose amongst three options: turn over card $x$, card $y$, or card $x+y$. (If the chosen card is already face down, it is turned to face up, and vice versa.)</p>
<p>If Bob manages to have all twelve cards face down at the same time, he wins.</p>
<p>Alice plays a similar game, except that instead of dice she uses two fair coins, counting heads as $2$ and tails as $1$, and that she uses four cards instead of twelve. Alice finds that, with the optimal strategy for her game, the expected number of turns taken until she wins is approximately $5.673651$.</p>
<p>Assuming that Bob plays with an optimal strategy, what is the expected number of turns taken until he wins? Give your answer rounded to $6$ places after the decimal point.</p>
<hr>
<h2 id="关上盒子"><a href="#关上盒子" class="headerlink" title="关上盒子"></a><strong>关上盒子</strong></h2><p>鲍勃在玩一种带有运气成分的单人游戏，这种游戏需要用到两个六面骰子和十二张标记有$1$至$12$的卡片。在游戏开始时，把所有的卡片正面朝上放在桌上。</p>
<p>每一回合，鲍勃抛掷两枚骰子，得到的数字分别是$x$和$y$，显然这两个数字都在$1,\ldots,6$的范围内。他必须在以下三种操作中选择一种：翻转卡片$x$、翻转卡片$y$、翻转卡片$x+y$。（如果被翻转的卡片已经正面朝下，则翻转后变回正面朝上；反之亦然。）</p>
<p>如果鲍勃成功地将所有十二张卡片都翻转至正面朝下，则获得胜利。</p>
<p>爱丽丝则在玩一种类似的游戏，只是她用的不是骰子而是两枚标准硬币，并将正面视为$2$，反面视为$1$，此外她只用四张卡片而非十二张。爱丽斯发现，当她采用最优策略时，获得胜利所需回合数的期望约为$5.673651$。</p>
<p>假设鲍勃采用最优策略，他获胜所需回合数的期望是多少？将你的答案保留小数点后$6$位小数。</p>
<p>（注：标题指一种流行于英国的酒吧骰子游戏，本题题面对游戏规则有所修改。）</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 641</title>
    <url>/641/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-641"><a href="#Problem-641" class="headerlink" title="Problem 641"></a><a href="https://projecteuler.net/problem=641">Problem 641</a></h1><hr>
<h2 id="A-Long-Row-of-Dice"><a href="#A-Long-Row-of-Dice" class="headerlink" title="A Long Row of Dice"></a><strong>A Long Row of Dice</strong></h2><p>Consider a row of $n$ dice all showing $1$.</p>
<p>First turn every second die,$(2,4,6,\ldots)$, so that the number showing is increased by $1$. Then turn every third die. The sixth die will now show a $3$. Then turn every fourth die and so on until every $n$th die (only the last die) is turned. If the die to be turned is showing a $6$ then it is changed to show a $1$.</p>
<p>Let $f(n)$ be the number of dice that are showing a $1$ when the process finishes. You are given $f(100)=2$ and $f(10^8)=69$.</p>
<p>Find $f(10^{36})$.</p>
<hr>
<h2 id="一长排骰子"><a href="#一长排骰子" class="headerlink" title="一长排骰子"></a><strong>一长排骰子</strong></h2><p>将共$n$个骰子排成一排，均翻至$1$点朝上。</p>
<p>从头开始，每数到第二个骰子（也即第$2,4,6,\ldots$个骰子），就将其翻动至点数加$1$。然后再从头开始，每数到第三个骰子，就将其翻动至点数加$1$；此时第六个骰子的点数应该是$3$点。如此循环，在最后一轮，每数到第$n$个骰子才将其翻动至点数加$1$（也就是说，只翻动最后一个骰子）。在每次翻动前，如果骰子当前是$6$点朝上，则翻动后变为$1$点朝上。</p>
<p>令$f(n)$表示在全部翻动完毕后$1$点朝上的骰子数目。已知$f(100)=2$， $f(10^8)=69$。</p>
<p>求$f(10^{36})$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 642</title>
    <url>/642/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-642"><a href="#Problem-642" class="headerlink" title="Problem 642"></a><a href="https://projecteuler.net/problem=642">Problem 642</a></h1><hr>
<h2 id="Sum-of-largest-prime-factors"><a href="#Sum-of-largest-prime-factors" class="headerlink" title="Sum of largest prime factors"></a><strong>Sum of largest prime factors</strong></h2><p>Let $f(n)$ be the largest prime factor of $n$ and $F(n)=\sum_{i=2}^nf(i)$.<br>For example $F(10)=32$, $F(100)=1915$ and $F(10000)=10118280$.</p>
<p>Find $F(201820182018)$. Give your answer modulus $10^9$.</p>
<hr>
<h2 id="最大质因数之和"><a href="#最大质因数之和" class="headerlink" title="最大质因数之和"></a><strong>最大质因数之和</strong></h2><p>记$f(n)$为$n$的最大质因数，并记$F(n)=\sum_{i=2}^nf(i)$。<br>已知$F(10)=32$，$F(100)=1915$，$F(10000)=10118280$。</p>
<p>求$F(201820182018)$，并将你的答案对$10^9$取余.</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 643</title>
    <url>/643/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-643"><a href="#Problem-643" class="headerlink" title="Problem 643"></a><a href="https://projecteuler.net/problem=643">Problem 643</a></h1><hr>
<h2 id="2-Friendly"><a href="#2-Friendly" class="headerlink" title="$2$-Friendly"></a><strong>$2$-Friendly</strong></h2><p>Two positive integers $a$ and $b$ are <i>$2$-friendly</i> when $\text{gcd}(a,b)=2^t,t&gt;0$. For example, $24$ and $40$ are $2$-friendly because $\text{gcd}(24,40)=8=2^3$ while $24$ and $36$ are not because $\text{gcd}(24,36)=12=2^2\cdot 3$ not a power of $2$.</p>
<p>Let $f(n)$ be the number of pairs, $(p,q)$, of positive integers with $1\le p&lt;q\le n$ such that $p$ and $q$ are $2$-friendly. You are given $f(10^2)=1031$ and $f(10^6)=321418433$ modulo $1\ 000\ 000\ 007$.</p>
<p>Find $f(10^{11})$ modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="2-友善数"><a href="#2-友善数" class="headerlink" title="$2$-友善数"></a><strong>$2$-友善数</strong></h2><p>如果正整数$a$和$b$满足$\text{gcd}(a,b)=2^t,t&gt;0$，则称它们互为<i class=zh>2-友善数</i>。例如，$24$和$40$互为$2$-友善数，因为$\text{gcd}(24,40)=8=2^3$；而$24$和$36$则不是，因为$\text{gcd}(24,36)=12=2^2\cdot 3$不是$2$的幂。</p>
<p>考虑所有满足$1\le p&lt;q\le n$且$p$和$q$互为$2$-友善数的正整数对$(p,q)$，并记这些数对的数目为$f(n)$。已知$f(10^2)=1031$，$f(10^6)$对$1\ 000\ 000\ 007$取余的结果为$321418433$<br>.</p>
<p>Find $f(10^{11})$并对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 644</title>
    <url>/644/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-644"><a href="#Problem-644" class="headerlink" title="Problem 644"></a><a href="https://projecteuler.net/problem=644">Problem 644</a></h1><hr>
<h2 id="Squares-on-the-line"><a href="#Squares-on-the-line" class="headerlink" title="Squares on the line"></a><strong>Squares on the line</strong></h2><p>Sam and Tom are trying a game of (partially) covering a given line segment of length $L$ by taking turns in placing unit squares onto the line segment.</p>
<p>As illustrated below, the squares may be positioned in two different ways, either “straight” by placing the midpoints of two opposite sides on the line segment, or “diagonal” by placing two opposite corners on the line segment. Newly placed squares may touch other squares, but are not allowed to overlap any other square laid down before.<br>The player who is able to place the last unit square onto the line segment wins.</p>
<p><img src="/resources/images/0644_squareline.png" alt="p644_squareline.png"></p>
<p>With Sam starting each game by placing the first square, they quickly realise that Sam can easily win every time by placing the first square in the middle of the line segment, making the game boring.</p>
<p>Therefore they decide to randomise Sam’s first move, by first tossing a fair coin to determine whether the square will be placed straight or diagonal onto the line segment and then choosing the actual position on the line segment randomly with all possible positions being equally likely. Sam’s gain of the game is defined to be $0$ if he loses the game and $L$ if he wins. Assuming optimal play of both players after Sam’s initial move, you can see that Sam’s expected gain, called $e(L)$, is only dependent on the length of the line segment.</p>
<p>For example, if $L=2$, Sam will win with a probability of $1$, so $e(2)=2$.<br>Choosing $L=4$, the winning probability will be $0.33333333$ for the straight case and $0.22654092$ for the diagonal case, leading to $e(4)=1.11974851$ (rounded to $8$ digits after the decimal point each).</p>
<p>Being interested in the optimal value of $L$ for Sam, let’s define $f(a,b)$ to be the maximum of $e(L)$ for some $L\in[a,b]$.<br>You are given $f(2,10)=2.61969775$, being reached for $L=7.82842712$, and $f(10,20)=5.99374121$ (rounded to $8$ digits each).</p>
<p>Find $f(200,500)$, rounded to $8$ digits after the decimal point.</p>
<hr>
<h2 id="线段的正方形覆盖"><a href="#线段的正方形覆盖" class="headerlink" title="线段的正方形覆盖"></a><strong>线段的正方形覆盖</strong></h2><p>山姆和汤姆正在玩一个游戏：在一条长为$L$的线段上，他们轮流摆放单位正方形，以（部分地）覆盖这个线段。</p>
<p>如下图所示，有两种摆放正方形的方式，一种是“横放”，将正方形两条对边的中点放在线段上，另一种是“斜放”，将正方形沿对角线放在线段上。后放的正方形可以与先放的正方形接触，但是不允许重叠。<br>如果在一名玩家摆放完正方形之后，对方无法再摆放新的正方形，则前者获胜。</p>
<p><img src="/resources/images/0644_squareline.png" alt="p644_squareline.png"></p>
<p>一开始，总是由山姆先摆放正方形，但他们很快发现，山姆只需把第一个正方形摆放在线段正中间，就必定能够获胜，这样的游戏太无聊了。</p>
<p>于是他们决定，山姆必须随机摆放第一个正方形：先抛掷一枚公平硬币，决定这个正方形是横放还是斜放，然后再在线段上等概率地选择正方形摆放的位置。双方约定，如果山姆输了，那么他的收益为$0$，反之他的收益为$L$。在摆完第一个正方形之后，如果双方都采用最优策略，可以看出山姆的期望收益$e(L)$只取决于线段的长度。</p>
<p>例如，如果$L=2$，山姆必定获胜，所以$e(2)=2$。<br>如果$L=4$，当第一个正方形横放时，山姆获胜的概率是$0.33333333$，而斜放时概率是$0.22654092$，因此$e(4)=1.11974851$（均保留小数点后$8$位小数）。</p>
<p>我们希望知道，在一定范围内，对山姆来说最优的线段长度$L$应该是多少，因此我们记$f(a,b)$为所有$L\in[a,b]$对应的$e(L)$中的最大值。<br>已知$f(2,10)=2.61969775$，此时最优长度为$L=7.82842712$；我们还知道$f(10,20)=5.99374121$（均保留小数点后$8$位小数）。</p>
<p>求$f(200,500)$，并保留小数点后$8$位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 645</title>
    <url>/645/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-645"><a href="#Problem-645" class="headerlink" title="Problem 645"></a><a href="https://projecteuler.net/problem=645">Problem 645</a></h1><hr>
<h2 id="Every-Day-is-a-Holiday"><a href="#Every-Day-is-a-Holiday" class="headerlink" title="Every Day is a Holiday"></a><strong>Every Day is a Holiday</strong></h2><p>On planet J, a year lasts for $D$ days. Holidays are defined by the two following rules.</p>
<ol>
<li>At the beginning of the reign of the current Emperor, his birthday is declared a holiday from that year onwards.</li>
<li>If both the day before and after a day $d$ are holidays, then $d$ also becomes a holiday.</li>
</ol>
<p>Initially there are no holidays. Let $E(D)$ be the expected number of Emperors to reign before all the days of the year are holidays, assuming that their birthdays are independent and uniformly distributed throughout the $D$ days of the year.</p>
<p>You are given $E(2)=1$, $E(5)=31/6$, $E(365)\approx 1174.3501$.</p>
<p>Find $E(10000)$. Give your answer rounded to $4$ digits after the decimal point.</p>
<hr>
<h2 id="每天都是休息天"><a href="#每天都是休息天" class="headerlink" title="每天都是休息天"></a><strong>每天都是休息天</strong></h2><p>J星球上的一年有$D$天，并按照下面两条规则安排休息天：</p>
<ol>
<li>每当一名新皇帝登基后，他的生日被宣告为一个新的休息天；</li>
<li>如果一年中第$d$天的前一天和后一天都是休息天，则这一天自动成为休息天。</li>
</ol>
<p>一开始，这个星球上没有休息天；后来随着一名又一名新皇帝登基，每一天都变成了休息天。假设皇帝们的生日独立地均匀分布在一年中的每一天，并记$E(D)$为恰好每一天都变成休息天时登基过的皇帝总数的期望。</p>
<p>已知$E(2)=1$，$E(5)=31/6$，$E(365)\approx 1174.3501$。</p>
<p>求$E(10000)$，并将答案保留小数点后$4$位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 646</title>
    <url>/646/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-646"><a href="#Problem-646" class="headerlink" title="Problem 646"></a><a href="https://projecteuler.net/problem=646">Problem 646</a></h1><hr>
<h2 id="Bounded-Divisors"><a href="#Bounded-Divisors" class="headerlink" title="Bounded Divisors"></a><strong>Bounded Divisors</strong></h2><p>Let $n$ be a natural number and $p_1^{\alpha_1}\cdot p_2^{\alpha_2}\cdots p_k^{\alpha_k}$ its prime factorisation.</p>
<p>Define the <strong>Liouville function</strong> $\lambda(n)$ as $\lambda(n)=(-1)^{\sum_{i=1}^k\alpha_i}$.<br>(i.e. $-1$ if the sum of the exponents $\alpha_i$ is odd and $1$ if the sum of the exponents is even. )<br>Let $S(n,L,H)$ be the sum $\lambda(d)\cdot d$ over all divisors $d$ of $n$ for which $L\le d\le H$.</p>
<p>You are given:<br>$S(10!,100,1000)=1457$<br>$S(15!,10^3,10^5)=-107974$<br>$S(30!,10^8,10^{12})=9766732243224$</p>
<p>Find $S(70!,10^{20},10^{60})$ and give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="有界因数"><a href="#有界因数" class="headerlink" title="有界因数"></a><strong>有界因数</strong></h2><p>考虑自然数$n$及其质因数分解$p_1^{\alpha_1}\cdot p_2^{\alpha_2}\cdots p_k^{\alpha_k}$。</p>
<p>定义<strong>刘维尔函数</strong> $\lambda(n)$为$\lambda(n)=(-1)^{\sum_{i=1}^k\alpha_i}$。<br>（也就是说，若所有指数$\alpha_i$之和为奇数，则该函数取$-1$，若为偶数则取$1$。）<br>考虑$n$在$L\le d\le H$范围内的所有因数$d$，并记这些$\lambda(d)\cdot d$之和为$S(n,L,H)$。</p>
<p>已知：<br>$S(10!,100,1000)=1457$<br>$S(15!,10^3,10^5)=-107974$<br>$S(30!,10^8,10^{12})=9766732243224$</p>
<p>求$S(70!,10^{20},10^{60})$，并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 647</title>
    <url>/647/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-647"><a href="#Problem-647" class="headerlink" title="Problem 647"></a><a href="https://projecteuler.net/problem=647">Problem 647</a></h1><hr>
<h2 id="Linear-Transformations-of-Polygonal-Numbers"><a href="#Linear-Transformations-of-Polygonal-Numbers" class="headerlink" title="Linear Transformations of Polygonal Numbers"></a><strong>Linear Transformations of Polygonal Numbers</strong></h2><p>It is possible to find positive integers $A$ and $B$ such that given any triangular number, $T_n$, then $AT_n+B$ is always a triangular number. We define $F_3(N)$ to be the sum of $(A+B)$ over all such possible pairs $(A,B)$ with $\max(A,B)\le N$. For example $F_3(100)=184$.</p>
<p>Polygonal numbers are generalisations of triangular numbers. Polygonal numbers with parameter $k$ we call $k$-gonal numbers. The formula for the $n$th $k$-gonal number is $\frac 1 2 n(n(k-2)+4-k)$ where $n\ge1$. For example when $k=3$ we get $\frac 1 2 n(n+1)$ the formula for triangular numbers.</p>
<p>The statement above is true for pentagonal, heptagonal and in fact any $k$-gonal number with $k$ odd. For example when $k=5$ we get the pentagonal numbers and we can find positive integers $A$ and $B$ such that given any pentagonal number, $P_n$, then $AP_n+B$ is always a pentagonal number. We define $F_5(N)$ to be the sum of $(A+B)$ over all such possible pairs $(A,B)$ with $\max(A,B)\le N$.</p>
<p>Similarly we define $F_k(N)$ for odd $k$. You are given $\sum_kF_k(10^3)=14993$ where the sum is over all odd $k=3,5,7,\ldots$.</p>
<p>Find $\sum_kF_k(10^{12})$ where the sum is over all odd $k=3,5,7,\ldots$.</p>
<hr>
<h2 id="多边形数线性变换"><a href="#多边形数线性变换" class="headerlink" title="多边形数线性变换"></a><strong>多边形数线性变换</strong></h2><p>我们能够找到一组正整数$A$和$B$，使得对于任意三角形数$T_n$，其线性变换$AT_n+B$仍然是三角形数。对于所有满足$\max(A,B)\le N$的这类正整数对$(A,B)$，记$(A+B)$之和为$F_3(N)$。</p>
<p>在三角形数之上，我们可以考虑更一般的多边形数，比如$k$边形数。第$n$个$k$边形数的公式为$\frac 1 2 n(n(k-2)+4-k)$，其中$n\ge1$。例如，取$k=3$，上述公式就简化为$\frac 1 2 n(n+1)$，就是三角形数的公式。</p>
<p>对于五边形数、七边形数，进而任意$k$为奇数的$k$边形数，我们都能找到如上所述的数对。比如说，当$k=5$时，我们能够找到一组正整数$A$和$B$，使得对于任意五边形数$P_n$，其线性变换$AP_n+B$仍然是五边形数。同样地，对于所有满足$\max(A,B)\le N$的这类正整数对$(A,B)$，记$(A+B)$之和为$F_5(N)$。</p>
<p>类似地，我们可以对任意奇数$k$定义函数$F_k(N)$。已知，仅对奇数$k=3,5,7,\ldots$求和时，$\sum_kF_k(10^3)=14993$。</p>
<p>仅对奇数$k=3,5,7,\ldots$求和，求$\sum_kF_k(10^{12})$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 648</title>
    <url>/648/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-648"><a href="#Problem-648" class="headerlink" title="Problem 648"></a><a href="https://projecteuler.net/problem=648">Problem 648</a></h1><hr>
<h2 id="Skipping-Squares"><a href="#Skipping-Squares" class="headerlink" title="Skipping Squares"></a><strong>Skipping Squares</strong></h2><p>For some fixed $\rho\in[0,1]$, we begin a sum $s$ at $0$ and repeatedly apply a process: With probability $\rho$, we add $1$ to $s$, otherwise we add $2$ to $s$.</p>
<p>The process ends when either $s$ is a perfect square or $s$ exceeds $10^{18}$, whichever occurs first. For example, if $s$ goes through $0,2,3,5,7,9$, the process ends at $s=9$, and two squares $1$ and $4$ were skipped over.</p>
<p>Let $f(\rho)$ be the expected number of perfect squares skipped over when the process finishes.</p>
<p>It can be shown that the power series for $f(\rho)$ is $\sum_{k=0}^{\infty}a_k\rho^k$ for a suitable (unique) choice of coefficients $a_k$. Some of the first few coefficients are $a_0=1$,<br>$a_1=0$, $a_5=-18$, $a_{10}=45176$.</p>
<p>Let $F(n)=\sum_{k=0}^na_k$. You are given that $F(10)=53964$ and $F(50)\equiv 842418857\pmod{10^9}$.</p>
<p>Find $F(1000)$, and give your answer modulo $10^9$.</p>
<hr>
<h2 id="平方跳跃"><a href="#平方跳跃" class="headerlink" title="平方跳跃"></a><strong>平方跳跃</strong></h2><p>对于给定的$\rho\in[0,1]$，我们对变量$s$从$0$开始进行如下操作：以概率$\rho$我们给$s$加$1$，否则我们给$s$加$2$。</p>
<p>我们不断重复上述操作，直到$s$是一个完全平方数或者$s$超过了$10^{18}$。例如，如果$s$的取值依次为$0,2,3,5,7,9$，那么我们在$s=9$时停止操作，此时有两个完全平方数$1$和$4$被跳过了。</p>
<p>记$f(\rho)$为在操作结束前，被跳过的完全平方数的期望数目。</p>
<p>可以证明，$f(\rho)$可以唯一地表示成幂级数展开的形式$\sum_{k=0}^{\infty}a_k\rho^k$，其中系数的前几项分别是$a_0=1$，$a_1=0$，$a_5=-18$，$a_{10}=45176$。</p>
<p>记$F(n)=\sum_{k=0}^na_k$。已知$F(10)=53964$，$F(50)\equiv 842418857\pmod{10^9}$。</p>
<p>求$F(1000)$，并将你的答案对$10^9$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 649</title>
    <url>/649/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-649"><a href="#Problem-649" class="headerlink" title="Problem 649"></a><a href="https://projecteuler.net/problem=649">Problem 649</a></h1><hr>
<h2 id="Low-Prime-Chessboard-Nim"><a href="#Low-Prime-Chessboard-Nim" class="headerlink" title="Low-Prime Chessboard Nim"></a><strong>Low-Prime Chessboard Nim</strong></h2><p>Alice and Bob are taking turns playing a game consisting of $c$ different coins on a chessboard of size $n$ by $n$.</p>
<p>The game may start with any arrangement of $c$ coins in squares on the board. It is possible at any time for more than one coin to occupy the same square on the board at the same time. The coins are distinguishable, so swapping two coins gives a different arrangement if (and only if) they are on different squares.</p>
<p>On a given turn, the player must choose a coin and move it either left or up $2$, $3$, $5$, or $7$ spaces in a single direction. The only restriction is that the coin cannot move off the edge of the board.</p>
<p>The game ends when a player is unable to make a valid move, thereby granting the other player the victory.</p>
<p>Assuming that Alice goes first and that both players are playing optimally, let $M(n,c)$ be the number of possible starting arrangements for which Alice can ensure her victory, given a board of size $n$ by $n$ with $c$ distinct coins.</p>
<p>For example, $M(3,1)=4$, $M(3,2)=40$, and $M(9,3)=450304$.</p>
<p>What are the last $9$ digits of $M(10\ 000\ 019,100)$?</p>
<hr>
<h2 id="小质数棋盘取石子游戏"><a href="#小质数棋盘取石子游戏" class="headerlink" title="小质数棋盘取石子游戏"></a><strong>小质数棋盘取石子游戏</strong></h2><p>爱丽丝和鲍勃正在玩一个双方交替行动的游戏，这个游戏需要一张$n$乘$n$的棋盘和$c$枚不同的硬币。</p>
<p>游戏开始时，将$c$枚硬币任意地摆放在棋盘的空格内。在游戏进行中的任意时刻，可以有多枚硬币同时摆放在同一个棋盘格内。因为硬币是不同的，所以当（且仅当）两枚硬币在不同的棋盘格内时，交换这两枚硬币会被视为改变了棋盘布局。</p>
<p>在每一轮行动中，玩家必须选择一枚硬币，并将其向左或向上移动$2$、 $3$、 $5$或$7$格，移动期间不能转弯，也不能移出棋盘。</p>
<p>如果轮到一名玩家时不存在合法行动，则对手获胜。</p>
<p>假设爱丽丝先行动，而且双方都采用最优策略，对于给定的棋盘大小$n$和硬币数目$c$，记$M(n,c)$为爱丽丝能够确保获胜的起始布局数目。</p>
<p>已知，$M(3,1)=4$，$M(3,2)=40$，$M(9,3)=450304$。</p>
<p>求问，$M(10\ 000\ 019,100)$的末$9$位数字是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 65</title>
    <url>/65/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-65"><a href="#Problem-65" class="headerlink" title="Problem 65"></a><a href="https://projecteuler.net/problem=65">Problem 65</a></h1><hr>
<h2 id="Convergents-of-e"><a href="#Convergents-of-e" class="headerlink" title="Convergents of $e$"></a><strong>Convergents of $e$</strong></h2><p>The square root of $2$ can be written as an infinite continued fraction.</p>
<p>$\sqrt{2} = 1 + \dfrac{1}{2 + \dfrac{1}{2 + \dfrac{1}{2 + \dfrac{1}{2 + \ldots}}}}$</p>
<p>The infinite continued fraction can be written, $\sqrt{2} = [1;(2)]$, $(2)$ indicates that $2$ repeats <i>ad infinitum</i>. In a similar way, $\sqrt{23} = [4;(1,3,1,8)]$.</p>
<p>It turns out that the sequence of partial values of continued fractions for square roots provide the best rational approximations. Let us consider the convergents for $\sqrt{2}$.</p>
<p>$\begin{aligned}<br>&amp; 1 + \dfrac{1}{2} = \dfrac{3}{2} \\<br>&amp; 1 + \dfrac{1}{2 + \dfrac{1}{2}} = \dfrac{7}{5}\\<br>&amp; 1 + \dfrac{1}{2 + \dfrac{1}{2 + \dfrac{1}{2}}} = \dfrac{17}{12}\\<br>&amp; 1 + \dfrac{1}{2 + \dfrac{1}{2 + \dfrac{1}{2 + \dfrac{1}{2}}}} = \dfrac{41}{29}<br>\end{aligned}$</p>
<p>Hence the sequence of the first ten convergents for $\sqrt{2}$ are:</p>
<p>$1, \dfrac{3}{2}, \dfrac{7}{5}, \dfrac{17}{12}, \dfrac{41}{29}, \dfrac{99}{70}, \dfrac{239}{169}, \dfrac{577}{408}, \dfrac{1393}{985}, \dfrac{3363}{2378}, \ldots$</p>
<p>What is most surprising is that the important mathematical constant,</p>
<p>$e = [2; 1, 2, 1, 1, 4, 1, 1, 6, 1, … , 1, 2k, 1, …]$.</p>
<p>The first ten terms in the sequence of convergents for $e$ are:</p>
<p>$2, 3, \dfrac{8}{3}, \dfrac{11}{4}, \dfrac{19}{7}, \dfrac{87}{32}, \dfrac{106}{39}, \dfrac{193}{71}, \dfrac{1264}{465}, \dfrac{1457}{536}, \ldots$</p>
<p>The sum of digits in the numerator of the $10$<sup>th</sup> convergent is $1+4+5+7=17$.</p>
<p>Find the sum of digits in the numerator of the $100$<sup>th</sup> convergent of the continued fraction for $e$.</p>
<hr>
<h2 id="e的有理逼近"><a href="#e的有理逼近" class="headerlink" title="e的有理逼近"></a><strong>e的有理逼近</strong></h2><p>$2$的算术平方根可以写成无限连分数的形式。</p>
<p>$\sqrt{2} = 1 + \dfrac{1}{2 + \dfrac{1}{2 + \dfrac{1}{2 + \dfrac{1}{2 + \ldots}}}}$</p>
<p>这个无限连分数可以简记为$\sqrt{2} = [1;(2)]$，其中$(2)$表示$2$<i class=zh>无限</i>重复。同样的，我们可以记$\sqrt{23} = [4;(1,3,1,8)]$。</p>
<p>可以证明，截取算术平方根连分数表示的一部分所组成的序列，给出了一系列最佳有理逼近值。让我们来考虑$\sqrt{2}$的逼近值：</p>
<p>$\begin{aligned}<br>&amp; 1 + \dfrac{1}{2} = \dfrac{3}{2} \\<br>&amp; 1 + \dfrac{1}{2 + \dfrac{1}{2}} = \dfrac{7}{5}\\<br>&amp; 1 + \dfrac{1}{2 + \dfrac{1}{2 + \dfrac{1}{2}}} = \dfrac{17}{12}\\<br>&amp; 1 + \dfrac{1}{2 + \dfrac{1}{2 + \dfrac{1}{2 + \dfrac{1}{2}}}} = \dfrac{41}{29}<br>\end{aligned}$</p>
<p>因此$\sqrt{2}$的前十个逼近值为：</p>
<p>$1, \dfrac{3}{2}, \dfrac{7}{5}, \dfrac{17}{12}, \dfrac{41}{29}, \dfrac{99}{70}, \dfrac{239}{169}, \dfrac{577}{408}, \dfrac{1393}{985}, \dfrac{3363}{2378}, \ldots$</p>
<p>最令人惊讶的莫过于重要的数学常数$e$有如下连分数表示</p>
<p>$e = [2; 1, 2, 1, 1, 4, 1, 1, 6, 1, … , 1, 2k, 1, …]$。</p>
<p>$e$的前十个逼近值为：</p>
<p>$2, 3, \dfrac{8}{3}, \dfrac{11}{4}, \dfrac{19}{7}, \dfrac{87}{32}, \dfrac{106}{39}, \dfrac{193}{71}, \dfrac{1264}{465}, \dfrac{1457}{536}, \ldots$</p>
<p>第$10$个逼近值的分子各位数字之和为$1+4+5+7=17$。</p>
<p>求$e$的第$100$个逼近值的分子各位数字之和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 650</title>
    <url>/650/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-650"><a href="#Problem-650" class="headerlink" title="Problem 650"></a><a href="https://projecteuler.net/problem=650">Problem 650</a></h1><hr>
<h2 id="Divisors-of-Binomial-Product"><a href="#Divisors-of-Binomial-Product" class="headerlink" title="Divisors of Binomial Product"></a><strong>Divisors of Binomial Product</strong></h2><p>Let $B(n)=\displaystyle\prod_{k=0}^n {n \choose k}$, a product of binomial coefficients.<br>For example,<br>$B(5)={5 \choose 0} \times {5 \choose 1} \times {5 \choose 2} \times {5\choose 3}\times {5 \choose 4}\times {5 \choose 5} = 1\times 5\times 10\times 10\times 5\times 1=2500$.</p>
<p>Let $D(n)=\displaystyle \sum_{d|B(n)}d$, the sum of the divisors of $B(n)$.<br>For example, the divisors of $B(5)$ are $1$, $2$, $4$, $5$, $10$, $20$, $25$, $50$, $100$, $125$, $250$, $500$, $625$, $1250$ and $2500$,<br>so $D(5) = 1 + 2 + 4 + 5 + 10 + 20 + 25 + 50 + 100 + 125 + 250 + 500 + 625 + 1250 + 2500 = 5467$.</p>
<p>Let $S(n)=\displaystyle \sum_{k=1}^n D(k)$.<br>You are given $S(5)=5736$, $S(10)=141740594713218418$ and $S(100) \mod 1\ 000\ 000\ 007=332792866$.</p>
<p>Find $S(20\ 000) \mod 1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="二项式系数乘积的因数"><a href="#二项式系数乘积的因数" class="headerlink" title="二项式系数乘积的因数"></a><strong>二项式系数乘积的因数</strong></h2><p>记$B(n)=\displaystyle\prod_{k=0}^n {n \choose k}$为二项式系数的乘积。<br>例如，<br>$B(5)={5 \choose 0} \times {5 \choose 1} \times {5 \choose 2} \times {5\choose 3}\times {5 \choose 4}\times {5 \choose 5} = 1\times 5\times 10\times 10\times 5\times 1=2500$。</p>
<p>记$D(n)=\displaystyle \sum_{d|B(n)}d$为$B(n)$的因数和。<br>例如，$B(5)$的因数有$1$、$2$、$4$、$5$、$10$、$20$、$25$、$50$、$100$、$125$、$250$、$500$、$625$、$1250$和$2500$，<br>因此$D(5) = 1 + 2 + 4 + 5 + 10 + 20 + 25 + 50 + 100 + 125 + 250 + 500 + 625 + 1250 + 2500 = 5467$。</p>
<p>记$S(n)=\displaystyle \sum_{k=1}^n D(k)$。<br>已知$S(5)=5736$，$S(10)=141740594713218418$，$S(100) \mod 1\ 000\ 000\ 007=332792866$。</p>
<p>求$S(20\ 000) \mod 1\ 000\ 000\ 007$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 651</title>
    <url>/651/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-651"><a href="#Problem-651" class="headerlink" title="Problem 651"></a><a href="https://projecteuler.net/problem=651">Problem 651</a></h1><hr>
<h2 id="Patterned-Cylinders"><a href="#Patterned-Cylinders" class="headerlink" title="Patterned Cylinders"></a><strong>Patterned Cylinders</strong></h2><p>An infinitely long cylinder has its curved surface fully covered with different coloured but otherwise identical rectangular stickers, without overlapping. The stickers are aligned with the cylinder, so two of their edges are parallel with the cylinder’s axis, with four stickers meeting at each corner.</p>
<p>Let $a&gt;0$ and suppose that the colouring is periodic along the cylinder, with the pattern repeating every $a$ stickers. (The period is allowed to be any divisor of $a$.) Let $b$ be the number of stickers that fit round the circumference of the cylinder.</p>
<p>Let $f(m,a,b)$ be the number of different such periodic patterns that use <em>exactly</em> $m$ distinct colours of stickers. Translations along the axis, reflections in any plane, rotations in any axis, (or combinations of such operations) applied to a pattern are to be counted as the same as the original pattern.</p>
<p>You are given that $f(2,2,3)=11$, $f(3,2,3)=56$, and $f(2,3,4)=156$. Furthermore, $f(8,13,21)\equiv 49718354\pmod{1\ 000\ 000\ 007}$, and $f(13,144,233) \equiv 907081451 \pmod{1\ 000\ 000\ 007}$.</p>
<p>Find $\sum_{i=4}^{40}f(i,F_{i-1},F_i)\mod 1\ 000\ 000\ 007$, where $F_i$ are the Fibonacci numbers starting at $F_0=0$, $F_1=1$.</p>
<hr>
<h2 id="有规律的圆柱"><a href="#有规律的圆柱" class="headerlink" title="有规律的圆柱"></a><strong>有规律的圆柱</strong></h2><p>一根无限长圆柱体的侧面被长方形贴纸完全贴满，这些贴纸除了颜色不同之外没有任何区别，相互间也没有重叠。这些贴纸都与圆柱体对齐，有两条边平行于圆柱体的轴，而且每个角都与另外三张贴纸相邻。</p>
<p>沿着圆柱体看，贴纸的颜色呈现周期性变化，每隔$a$张贴纸，颜色模式会重复一次，其中$a&gt;0$。（颜色模式的最小周期可以是$a$的任意因数。）记$b$为环绕圆柱一周能够贴上的贴纸数目。</p>
<p>记$f(m,a,b)$为<i class=zh>恰好</i>使用了$m$种不同颜色的贴纸的颜色模式数目。经过移动、旋转、翻转（或这三者的任意组合）之后能够重叠的颜色模式，均视为相同的模式，只计算一次。</p>
<p>已知$f(2,2,3)=11$，$f(3,2,3)=56$，$f(2,3,4)=156$。此外，$f(8,13,21)\equiv 49718354\pmod{1\ 000\ 000\ 007}$，$f(13,144,233) \equiv 907081451 \pmod{1\ 000\ 000\ 007}$。</p>
<p>求$\sum_{i=4}^{40}f(i,F_{i-1},F_i)\mod 1\ 000\ 000\ 007$，其中$F_i$表示由$F_0=0$和$F_1=1$起始的斐波那契数列。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 652</title>
    <url>/652/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-652"><a href="#Problem-652" class="headerlink" title="Problem 652"></a><a href="https://projecteuler.net/problem=652">Problem 652</a></h1><hr>
<h2 id="Distinct-values-of-a-proto-logarithmic-function"><a href="#Distinct-values-of-a-proto-logarithmic-function" class="headerlink" title="Distinct values of a proto-logarithmic function"></a><strong>Distinct values of a proto-logarithmic function</strong></h2><p>Consider the values of $\log_2(8)$, $\log_4(64)$ and $\log_3(27)$. All three are equal to $3$.</p>
<p>Generally, the function $f(m,n)=\log_m(n)$ over integers $m,n\ge 2$ has the property that<br>$f(m_1,n_1)=f(m_2,n_2)$ if</p>
<ol>
<li>$m_1=a^e$, $n_1=a^f$, $m_2=b^e$, $n_2=b^f$ for some integers $a, b, e, f$ or</li>
<li>$m_1=a^e$, $n_1=b^e$, $m_2=a^f$, $n_2=b^f$ for some integers $a, b, e, f$</li>
</ol>
<p>We call a function $g(m,n)$ over integers $m,n\ge 2$ <i>proto-logarithmic</i> if</p>
<ul>
<li>$g(m_1,n_1) = g(m_2,n_2)$ if any integers $a, b, e, f$ fulfilling 1. or 2. can be found</li>
<li><strong>and</strong> $g(m_1,n_1)\neq g(m_2,n_2)$ if no integers $a, b, e, f$ fulfilling 1. or 2. can be found</li>
</ul>
<p>Let $D(N)$ be the number of distinct values that any proto-logarithmic function $g(m,n)$ attains over $2\le m,n\le N$.<br>For example, $D(5)=13$, $D(10)=69$, $D(100)=9607$ and $D(10000)=99959605$.</p>
<p>Find $D(10^{18})$, and give the last $9$ digits as answer.</p>
<p><strong>Note</strong>: According to the <strong>four exponentials conjecture</strong> the function $\log_m(n)$ is <i>proto-logarithmic</i>. While this conjecture is yet unproven in general, $\log_m(n)$ can be used to calculate $D(N)$ for small values of $N$.</p>
<hr>
<h2 id="原型对数函数的不同取值"><a href="#原型对数函数的不同取值" class="headerlink" title="原型对数函数的不同取值"></a><strong>原型对数函数的不同取值</strong></h2><p>$\log_2(8)$、$\log_4(64)$和$\log_3(27)$这三个表达式都等于$3$。</p>
<p>一般地，定义在整数$m,n\ge 2$上的函数$f(m,n)=\log_m(n)$有如下性质：<br>$f(m_1,n_1)=f(m_2,n_2)$仅当</p>
<ol>
<li>$m_1=a^e$，$n_1=a^f$，$m_2=b^e$，$n_2=b^f$，其中$a, b, e, f$均为整数；或者</li>
<li>$m_1=a^e$，$n_1=b^e$，$m_2=a^f$，$n_2=b^f$，其中$a, b, e, f$均为整数。</li>
</ol>
<p>我们称定义在整数$m,n\ge 2$上的函数$g(m,n)$为<i class=zh>原型对数函数</i>，如果它满足</p>
<ul>
<li>如果存在满足1. 或2. 的整数组$a, b, e, f$，则$g(m_1,n_1) = g(m_2,n_2)$； </li>
<li><strong>并且</strong>，如果不存在满足1. 或2. 的整数组$a, b, e, f$，则$g(m_1,n_1) \neq g(m_2,n_2)$。</li>
</ul>
<p>记$D(N)$记为任意原型整数函数$g(m,n)$在$2\le m,n\le N$上不同取值的数目。<br>已知，$D(5)=13$，$D(10)=69$，$D(100)=9607$，$D(10000)=99959605$。</p>
<p>求$D(10^{18})$，并给出最后$9$位数字作为你的答案。</p>
<p><strong>注意</strong>：根据<strong>四指数猜想</strong>，函数$\log_m(n)$是<i class=zh>原型对数函数</i>。尽管这个猜想尚未被证实，但是对较小的$N$可以用$\log_m(n)$来计算$D(N)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 653</title>
    <url>/653/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-653"><a href="#Problem-653" class="headerlink" title="Problem 653"></a><a href="https://projecteuler.net/problem=653">Problem 653</a></h1><hr>
<h2 id="Frictionless-Tube"><a href="#Frictionless-Tube" class="headerlink" title="Frictionless Tube"></a><strong>Frictionless Tube</strong></h2><p>Consider a horizontal frictionless tube with length $L$ millimetres, and a diameter of $20$ millimetres. The east end of the tube is open, while the west end is sealed. The tube contains $N$ marbles of diameter $20$ millimetres at designated starting locations, each one initially moving either westward or eastward with common speed $v$.</p>
<p>Since there are marbles moving in opposite directions, there are bound to be some collisions. We assume that the collisions are perfectly elastic, so both marbles involved instantly change direction and continue with speed  $v$ away from the collision site. Similarly, if the west-most marble collides with the sealed end of the tube, it instantly changes direction and continues eastward at speed $v$. On the other hand, once a marble reaches the unsealed east end, it exits the tube and has no further interaction with the remaining marbles.</p>
<p>To obtain the starting positions and initial directions, we use the pseudo-random sequence $r_j$ defined by:<br>$r_1 = 6\ 563\ 116$<br>$r_{j+1}=r^2_j\mod 32\ 745\ 673$<br>The west-most marble is initially positioned with a gap of $(r_1 \mod 1000)+1$ millimetres between it and the sealed end of the tube, measured from the west-most point of the surface of the marble. Then, for $2\le j\le N$, counting from the west, the gap between the $(j-1)$th and $j$th marbles, as measured from their closest points, is given by $(r_j\mod 1000)+1$ millimetres. Furthermore, the $j$th marble is initially moving eastward if $r_j\le 10\ 000\ 000$, and westward if $r_j&gt;10\ 000\ 000$.</p>
<p>For example, with $N=3$, the sequence specifies gaps of $117$, $432$, and $173$ millimetres. The marbles’ <i>centres</i> are therefore $127$, $579$, and $772$ millimetres from the sealed west end of the tube. The west-most marble initially moves eastward, while the other two initially move westward.</p>
<p>Under this setup, and with a five metre tube ($L=5000$), it turns out that the middle (second) marble travels $5519$ millimetres before its centre reaches the east-most end of the tube.</p>
<p>Let $d(L,N,j)$ be the distance in millimetres that the $j$th marble travels before its centre reaches the eastern end of the tube. So $d(5000,3,2)=5519$. You are also given that $d(10\ 000,11,6)=11\ 780$ and $d(100\ 000,101,51)=114\ 101$.</p>
<p>Find $d(1\ 000\ 000\ 000, 1\ 000\ 001, 500\ 001)$.</p>
<hr>
<h2 id="无摩擦管道"><a href="#无摩擦管道" class="headerlink" title="无摩擦管道"></a><strong>无摩擦管道</strong></h2><p>现有一根长为$L$毫米、直径为$20$毫米、水平放置的无摩擦管道，其东侧末端开口，西侧末端封闭。管道中放有$N$颗直径为$20$毫米的弹珠，这些弹珠放在指定的起始位置，并以相同的速率$v$向东或向西运动。</p>
<p>由于这些弹珠朝着相反方向运动，因此必然会发生碰撞。我们假设这些碰撞是完全弹性的，也就是说，弹珠相撞后立即向反方向运动且保持速率$v$不变。类似地，向西运动的弹珠如果撞到西侧封闭的末端，也会立即向东运动且保持速率$v$不变。反之，如果弹珠抵达了东侧开口的末端，它会离开管道，不再需要考虑。</p>
<p>这些弹珠的起始位置和最初的运动方向由如下伪随机数列$r_j$确定：<br>$r_1 = 6\ 563\ 116$<br>$r_{j+1}=r^2_j\mod 32\ 745\ 673$<br>最靠西的弹珠最初被摆在其表面上最西侧的点距离管道被封闭的西侧末端$(r_1 \mod 1000)+1$毫米的位置上。随后继续从西到东摆放弹珠，对于$2\le j\le N$，第$(j-1)$颗和第$j$颗弹珠表面之间最接近的两点距离恰好是$(r_j\mod 1000)+1$毫米。此外，如果$r_j\le 10\ 000\ 000$，则第$j$颗弹珠向东运动，反之如果$r_j&gt;10\ 000\ 000$则向西运动。</p>
<p>例如，若$N=3$，弹珠间的距离分别是$117$、$432$和$173$毫米，也就是说，这些弹珠的<i>球心</i>分别位于距离管道西侧末端$127$、$579$和$772$毫米处。最靠西侧的弹珠一开始向东运动，而另外两颗弹珠则向西运动。</p>
<p>在上述设定下，如果管道的长度为五米（$L=5000$），那么中间那颗（第二颗）弹珠在其球心从东侧开口末端离开管道前，一共运动了$5519$毫米的距离。</p>
<p>记$d(L,N,j)$为第$j$颗弹珠在其球心从东侧开口末端离开管道前所运动的距离（以毫米计），因此$d(5000,3,2)=5519$。已知$d(10\ 000,11,6)=11\ 780$，$d(100\ 000,101,51)=114\ 101$。</p>
<p>求$d(1\ 000\ 000\ 000, 1\ 000\ 001, 500\ 001)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 654</title>
    <url>/654/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-654"><a href="#Problem-654" class="headerlink" title="Problem 654"></a><a href="https://projecteuler.net/problem=654">Problem 654</a></h1><hr>
<h2 id="Neighbourly-Constraints"><a href="#Neighbourly-Constraints" class="headerlink" title="Neighbourly Constraints"></a><strong>Neighbourly Constraints</strong></h2><p>Let $T(m,n)$ be the number of $m$-tuples of positive integers such that the sum of any two neighbouring elements of the tuple is $\le n$.</p>
<p>For example, $T(3,4)=8$, via the following eight $4$-tuples:<br>$(1, 1, 1, 1)$<br>$(1, 1, 1, 2)$<br>$(1, 1, 2, 1)$<br>$(1, 2, 1 ,1)$<br>$(1, 2, 1 ,2)$<br>$(2, 1, 1 ,1)$<br>$(2, 1, 1 ,2)$<br>$(2, 1, 2 ,1)$</p>
<p>You are also given that $T(5,5)=246$,<br>$T(10,10^2)\equiv 862820094 \pmod{1\ 000\ 000\ 007}$ and<br>$T(10^2,10)\equiv 782136797 \pmod{1\ 000\ 000\ 007}$.</p>
<p>Find $T(5000,10^{12})\mod 1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="相邻约束"><a href="#相邻约束" class="headerlink" title="相邻约束"></a><strong>相邻约束</strong></h2><p>记$T(m,n)$为任意相邻元素之和$\le n$的所有$m$-元正整数组的数目。</p>
<p>例如，$T(3,4)=8$这八个$4$元组分别是：<br>$(1, 1, 1, 1)$<br>$(1, 1, 1, 2)$<br>$(1, 1, 2, 1)$<br>$(1, 2, 1 ,1)$<br>$(1, 2, 1 ,2)$<br>$(2, 1, 1 ,1)$<br>$(2, 1, 1 ,2)$<br>$(2, 1, 2 ,1)$</p>
<p>已知$T(5,5)=246$，<br>$T(10,10^2)\equiv 862820094 \pmod{1\ 000\ 000\ 007}$，<br>$T(10^2,10)\equiv 782136797 \pmod{1\ 000\ 000\ 007}$。</p>
<p>求$T(5000,10^{12})\mod 1\ 000\ 000\ 007$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 656</title>
    <url>/656/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-656"><a href="#Problem-656" class="headerlink" title="Problem 656"></a><a href="https://projecteuler.net/problem=656">Problem 656</a></h1><hr>
<h2 id="Palindromic-sequences"><a href="#Palindromic-sequences" class="headerlink" title="Palindromic sequences"></a><strong>Palindromic sequences</strong></h2><p>Given an irrational number $\alpha$, let $S_\alpha(n)$ be the sequence $S_\alpha(n)=\lfloor \alpha \cdot n \rfloor - \lfloor \alpha \cdot (n-1)\rfloor$ for $n\ge 1$.<br>($\lfloor \ldots \rfloor$ is the floor-function.)</p>
<p>It can be proven that for any irrational $\alpha$ there exist infinitely many values of $n$ such that the subsequence ${S_\alpha(1),S_\alpha(2)\ldots S_\alpha(n)}$ is palindromic.</p>
<p>The first $20$ values of $n$ that give a palindromic subsequence for $\alpha=\sqrt{31}$ are: $1$, $3$, $5$, $7$, $44$, $81$, $118$, $273$, $3158$, $9201$, $15244$, $21287$, $133765$, $246243$, $358721$, $829920$, $9600319$, $27971037$, $46341755$, $647124734.</p>
<p>Let $H_g(\alpha)$ be the sum of the first $g$ values of $n$ for which the corresponding subsequence is palindromic.<br>So $H_{20}(\sqrt{31})=150243655$.</p>
<p>Let $T={2, 3, 5, 6, 7, 8, 10, \ldots, 1000}$ be the set of positive integers, not exceeding $1000$, excluding perfect squares.<br>Calculate the sum of $H_{100}(\sqrt{\beta})$ for $\beta \in T$. Give the last $15$ digits of your answer.</p>
<hr>
<h2 id="回文序列"><a href="#回文序列" class="headerlink" title="回文序列"></a><strong>回文序列</strong></h2><p>任取无理数$\alpha$，记$S_\alpha(n)$为序列$S_\alpha(n)=\lfloor \alpha \cdot n \rfloor - \lfloor \alpha \cdot (n-1)\rfloor$，其中$n\ge 1$。<br>（$\lfloor \ldots \rfloor$表示下取整函数。）</p>
<p>可以证明，对于任意无理数$\alpha$，存在无数个$n$，使得子序列${S_\alpha(1),S_\alpha(2)\ldots S_\alpha(n)}$是回文的。</p>
<p>对于$\alpha=\sqrt{31}$，前$20$个满足上述条件的$n$分别是：$1$，$3$，$5$，$7$，$44$，$81$，$118$，$273$，$3158$，$9201$，$15244$，$21287$，$133765$，$246243$，$358721$，$829920$，$9600319$，$27971037$，$46341755$，$647124734$。</p>
<p>记$H_g(\alpha)$为前$g$个满足上述条件的$n$之和。<br>因此$H_{20}(\sqrt{31})=150243655$。</p>
<p>记$T={2, 3, 5, 6, 7, 8, 10, \ldots, 1000}$为不超过$1000$且不包含完全平方数的正整数所组成的集合。<br>对于所有$\beta \in T$，求$H_{100}(\sqrt{\beta})$之和，并给出最后$15$位数字作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 655</title>
    <url>/655/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-655"><a href="#Problem-655" class="headerlink" title="Problem 655"></a><a href="https://projecteuler.net/problem=655">Problem 655</a></h1><hr>
<h2 id="Divisible-Palindromes"><a href="#Divisible-Palindromes" class="headerlink" title="Divisible Palindromes"></a><strong>Divisible Palindromes</strong></h2><p>The numbers $545$, $5\ 995$ and $15\ 151$ are the three smallest <strong>palindromes</strong> divisible by $109$. There are nine palindromes less than $100\ 000$ which are divisible by $109$.</p>
<p>How many palindromes less than $10^{32}$ are divisible by $10\ 000\ 019$?</p>
<hr>
<h2 id="可除尽的回文数"><a href="#可除尽的回文数" class="headerlink" title="可除尽的回文数"></a><strong>可除尽的回文数</strong></h2><p>$545$，$5\ 995$和$15\ 151$是最小的三个能被$109$除尽的<strong>回文数</strong>。在所有小于$100\ 000$的回文数中，有九个能够被$109$除尽。</p>
<p>在所有小于$10^{32}$的回文数中，有多少个能够被$10\ 000\ 019$整除？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 657</title>
    <url>/657/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-657"><a href="#Problem-657" class="headerlink" title="Problem 657"></a><a href="https://projecteuler.net/problem=657">Problem 657</a></h1><hr>
<h2 id="Incomplete-words"><a href="#Incomplete-words" class="headerlink" title="Incomplete words"></a><strong>Incomplete words</strong></h2><p>In the context of <strong>formal languages</strong>, any finite sequence of letters of a given <strong>alphabet</strong> $\Sigma$ is called a <strong>word</strong> over $\Sigma$. We call a word <i>incomplete</i> if it does not contain every letter of $\Sigma$.</p>
<p>For example, using the alphabet $\Sigma={a,b,c}$, ‘$ab$’, ‘$abab$’ and ‘ ‘ (the empty word) are incomplete words over $\Sigma$, while ‘$abac$’ is a complete word over $\Sigma$.</p>
<p>Given an alphabet $\Sigma$ of $\alpha$ letters, we define $I(\alpha,n)$ to be the number of incomplete words over $\Sigma$ with a length not exceeding $n$.<br>For example, $I(3,0)=1$, $I(3,2)=13$ and $I(3,4)=79$.</p>
<p>Find $I(10^7,10^{12})$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="不完整的单词"><a href="#不完整的单词" class="headerlink" title="不完整的单词"></a><strong>不完整的单词</strong></h2><p>在<strong>形式语言</strong>中，由给定<strong>字母表</strong>$\Sigma$中的字母构成的有限序列被称为$\Sigma$上的<strong>单词</strong>。如果一个单词不包含$\Sigma$中的全部字母，我们称这个单词是<i class=zh>不完整的</i>。</p>
<p>例如，对于字母表$\Sigma={a,b,c}$，$\Sigma$上的单词’$ab$’，’$abab$’和’ ‘（空单词）都是不完整的，而’$abac$’则是完整的。</p>
<p>若字母表$\Sigma$包含有$\alpha$个字母，我们记$I(\alpha,n)$为$\Sigma$上长度不超过$n$的不完整单词的数目。<br>例如，$I(3,0)=1$，$I(3,2)=13$，$I(3,4)=79$。</p>
<p>求$I(10^7,10^{12})$，并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 658</title>
    <url>/658/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-658"><a href="#Problem-658" class="headerlink" title="Problem 658"></a><a href="https://projecteuler.net/problem=658">Problem 658</a></h1><hr>
<h2 id="Incomplete-words-II"><a href="#Incomplete-words-II" class="headerlink" title="Incomplete words II"></a><strong>Incomplete words II</strong></h2><p>In the context of <strong>formal languages</strong>, any finite sequence of letters of a given <strong>alphabet</strong> $\Sigma$ is called a <strong>word</strong> over $\Sigma$. We call a word <i>incomplete</i> if it does not contain every letter of $\Sigma$.</p>
<p>For example, using the alphabet $\Sigma={a,b,c}$, ‘$ab$’, ‘$abab$’ and ‘ ‘ (the empty word) are incomplete words over $\Sigma$, while ‘$abac$’ is a complete word over $\Sigma$.</p>
<p>Given an alphabet $\Sigma$ of $\alpha$ letters, we define $I(\alpha,n)$ to be the number of incomplete words over $\Sigma$ with a length not exceeding $n$.<br>For example, $I(3,0)=1$, $I(3,2)=13$ and $I(3,4)=79$.</p>
<p>Let $S(k,n)=\displaystyle\sum_{\alpha=1}^k I(\alpha,n)$.<br>For example, $S(4,4)=406$, $S(8,8)=27902680$ and $S(10,100)\equiv 983602076\text{ mod }1\ 000\ 000\ 007$.</p>
<p>Find $S(10^7,10^{12})$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="不完整的单词II"><a href="#不完整的单词II" class="headerlink" title="不完整的单词II"></a><strong>不完整的单词II</strong></h2><p>在<strong>形式语言</strong>中，由给定<strong>字母表</strong>$\Sigma$中的字母构成的有限序列被称为$\Sigma$上的<strong>单词</strong>。如果一个单词不包含$\Sigma$中的全部字母，我们称这个单词是<i class=zh>不完整的</i>。</p>
<p>例如，对于字母表$\Sigma={a,b,c}$，$\Sigma$上的单词’$ab$’，’$ababa$’和’ ‘（空单词）都是不完整的，而’$abac$’则是完整的。</p>
<p>若字母表$\Sigma$包含有$\alpha$个字母，我们记$I(\alpha,n)$为$\Sigma$上长度不超过$n$的不完整单词的数目。<br>例如，$I(3,0)=1$，$I(3,2)=13$，$I(3,4)=79$。</p>
<p>记$S(k,n)=\displaystyle\sum_{\alpha=1}^k I(\alpha,n)$。<br>例如，$S(4,4)=406$，$S(8,8)=27902680$，$S(10,100)\equiv 983602076\text{ mod }1\ 000\ 000\ 007$。</p>
<p>求$S(10^7,10^{12})$，并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 659</title>
    <url>/659/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-659"><a href="#Problem-659" class="headerlink" title="Problem 659"></a><a href="https://projecteuler.net/problem=659">Problem 659</a></h1><hr>
<h2 id="Largest-prime"><a href="#Largest-prime" class="headerlink" title="Largest prime"></a><strong>Largest prime</strong></h2><p>Consider the sequence $n^2+3$ with $n \ge 1$.<br>If we write down the first terms of this sequence we get:<br>$4, 7, 12, 19, 28, 39, 52, 67, 84, 103, 124, 147, 172, 199, 228, 259, 292, 327, 364,\ldots$<br>We see that the terms for $n=6$ and $n=7$ ($39$ and $52$) are both divisible by $13$.<br>In fact $13$ is the largest prime dividing any two successive terms of this sequence.</p>
<p>Let $P(k)$ be the largest prime  that divides any two successive terms of the sequence $n^2+k^2$.</p>
<p>Find the last $18$ digits of $\displaystyle \sum_{k=1}^{10,000,000} P(k)$.</p>
<hr>
<h2 id="最大的素数"><a href="#最大的素数" class="headerlink" title="最大的素数"></a><strong>最大的素数</strong></h2><p>考虑序列$n^2+3$，其中$n \ge 1$，该序列的一开始几项分别是：<br>$4, 7, 12, 19, 28, 39, 52, 67, 84, 103, 124, 147, 172, 199, 228, 259, 292, 327, 364,\ldots$<br>可以看出，$n=6$和$n=7$所对应的项（$39$和$52$）均能被$13$整除。<br>实际上，$13$是能够整除该序列相邻两项的最大的素数。</p>
<p>对于序列$n^2+k^2$，记$P(k)$为能够整除该序列相邻两项的最大的素数。</p>
<p>求$\displaystyle \sum_{k=1}^{10,000,000} P(k)$的最后$18$位数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 66</title>
    <url>/66/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-66"><a href="#Problem-66" class="headerlink" title="Problem 66"></a><a href="https://projecteuler.net/problem=66">Problem 66</a></h1><hr>
<h2 id="Diophantine-Equation"><a href="#Diophantine-Equation" class="headerlink" title="Diophantine Equation"></a><strong>Diophantine Equation</strong></h2><p>Consider quadratic Diophantine equations of the form:</p>
<p>$$x^2-Dy^2=1$$</p>
<p>For example, when $D=13$, the minimal solution in $x$ is $649^2 – 13\times 180^2 = 1$.</p>
<p>It can be assumed that there are no solutions in positive integers when $D$ is square.</p>
<p>By finding minimal solutions in $x$ for $D = \{2, 3, 5, 6, 7\}$, we obtain the following:</p>
<p>$$\begin{aligned}<br>3^2 - 2\times 2^2 &amp;= 1 \\<br>2^2 - 3\times 1^2 &amp;= 1 \\<br>{\color{red}9}^2 - 5\times 4^2 &amp;= 1 \\<br>5^2 - 6\times 2^2 &amp;= 1 \\<br>8^2 - 7\times 3^2 &amp;= 1 \\<br>\end{aligned}$$</p>
<p>Hence, by considering minimal solutions in $x$ for $D \le 7$, the largest $x$ is obtained when $D=5$.</p>
<p>Find the value of $D \le 1000$ in minimal solutions of $x$ for which the largest value of $x$ is obtained.</p>
<hr>
<h2 id="丢番图方程"><a href="#丢番图方程" class="headerlink" title="丢番图方程"></a><strong>丢番图方程</strong></h2><p>考虑如下形式的二次丢番图方程：</p>
<p>$$x^2-Dy^2=1$$</p>
<p>举例而言，当$D=13$时，$x$的最小值出现在$649^2 – 13\times 180^2 = 1$。</p>
<p>可以断定，当$D$是平方数时，这个方程不存在正整数解。</p>
<p>对于$D= \{2, 3, 5, 6, 7\}$，$x$取最小值的解分别是：</p>
<p>$$\begin{aligned}<br>3^2 - 2\times 2^2 &amp;= 1 \\<br>2^2 - 3\times 1^2 &amp;= 1 \\<br>{\color{red}9}^2 - 5\times 4^2 &amp;= 1 \\<br>5^2 - 6\times 2^2 &amp;= 1 \\<br>8^2 - 7\times 3^2 &amp;= 1 \\<br>\end{aligned}$$</p>
<p>因此，对于所有$D \le 7$，当$D=5$时$x$的最小值最大。</p>
<p>对于所有$D \le 1000$，求使得$x$的最小值最大时$D$的取值。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 660</title>
    <url>/660/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-660"><a href="#Problem-660" class="headerlink" title="Problem 660"></a><a href="https://projecteuler.net/problem=660">Problem 660</a></h1><hr>
<h2 id="Pandigital-Triangles"><a href="#Pandigital-Triangles" class="headerlink" title="Pandigital Triangles"></a><strong>Pandigital Triangles</strong></h2><p>We call an integer sided triangle <i>$n$-pandigital</i> if it contains one angle of $120$ degrees and, when the sides of the triangle are written in base $n$, together they use all $n$ digits of that base exactly once.</p>
<p>For example, the triangle $(217, 248, 403)$ is $9$-pandigital because it contains one angle of $120$ degrees and the sides written in base $9$ are $261_9, 305_9, 487_9$ using each of the $9$ digits of that base once.</p>
<p>Find the sum of the largest sides of all $n$-pandigital triangles with $9 \le n \le 18$.</p>
<hr>
<h2 id="全数字三角形"><a href="#全数字三角形" class="headerlink" title="全数字三角形"></a><strong>全数字三角形</strong></h2><p>如果一个边长为整数的三角形有一个内角为$120$度，且其三边长在$n$进制下恰好使用了全部$n$个数字各一次，则我们称这个三角形为<i class=zh>$n$-全数字</i>三角形。</p>
<p>例如，三角形$(217, 248, 403)$是$9$-全数字三角形，因为它有一个内角为$120$度，而且它的三边长在$9$进制下分别是$261_9, 305_9, 487_9$，恰好使用了全部$9$个数字各一次。</p>
<p>对于$9 \le n \le 18$，求所有$n$-全数字三角形中最长边的长度之和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 661</title>
    <url>/661/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-661"><a href="#Problem-661" class="headerlink" title="Problem 661"></a><a href="https://projecteuler.net/problem=661">Problem 661</a></h1><hr>
<h2 id="A-Long-Chess-Match"><a href="#A-Long-Chess-Match" class="headerlink" title="A Long Chess Match"></a><strong>A Long Chess Match</strong></h2><p>Two friends $A$ and $B$ are great fans of Chess. They both enjoy playing the game, but after each game the player who lost the game would like to continue (to get back at the other player) and the player who won would prefer to stop (to finish on a high).</p>
<p>So they come up with a plan. After every game, they would toss a (biased) coin with probability $p$ of Heads (and hence probability $1-p$ of Tails). If they get Tails, they will continue with the next game. Otherwise they end the match. Also, after every game the players make a note of who is leading in the match.</p>
<p>Let $p_A$ denote the probability of $A$ winning a game and $p_B$ the probability of $B$ winning a game. Accordingly $1-p_A-p_B$ is the probability that a game ends in a draw. Let $\mathbb{E}_A(p_A,p_B,p)$ denote the expected number of times $A$ was leading in the match.<br>For example, $\mathbb{E}_A(0.25,0.25,0.5)\approx 0.585786$ and $\mathbb{E}_A(0.47,0.48,0.001)\approx 377.471736$, both rounded to six places after the decimal point.</p>
<p>Let $\displaystyle H(n)=\sum_{k=3}^n \mathbb{E}_A\left(\frac 1 {\sqrt{k+3}},\frac 1 {\sqrt{k+3}}+\frac 1 {k^2},\frac 1 {k^3}\right)$<br>For example $H(3) \approx 6.8345$, rounded to 4 digits after the decimal point.</p>
<p>Find $H(50)$, rounded to 4 digits after the decimal point.</p>
<hr>
<h2 id="漫长的棋局"><a href="#漫长的棋局" class="headerlink" title="漫长的棋局"></a><strong>漫长的棋局</strong></h2><p>两位好友$A$和$B$都很喜欢下棋，但是每下完一局，输的一方都想要再下一局（想要赢回来），而赢的一方则不想再下（见好就收）。</p>
<p>他俩想到了一个办法：每下完一局，他们会抛掷一枚（不公平的）硬币，硬币有$p$的概率正面朝上（因此反面朝上的概率是$1-p$）。如果硬币是反面朝上，他们就接着下一局，否则就结束。此外，每下完一局，他们都会记录目前在总获胜局数上谁暂且领先。</p>
<p>记$A$赢得单局的概率为$p_A$，$B$赢得单局的概率为$p_B$，进而两人平局的概率为$1-p_A-p_B$。记$\mathbb{E}_A(p_A,p_B,p)$为整个棋局过程中$A$领先的次数的期望值。<br>例如，$\mathbb{E}_A(0.25,0.25,0.5)\approx 0.585786$，$\mathbb{E}_A(0.47,0.48,0.001)\approx 377.471736$，均保留小数点后$6$位小数。</p>
<p>记$\displaystyle H(n)=\sum_{k=3}^n \mathbb{E}_A\left(\frac 1 {\sqrt{k+3}},\frac 1 {\sqrt{k+3}}+\frac 1 {k^2},\frac 1 {k^3}\right)$<br>例如，$H(3) \approx 6.8345$，保留小数点后$4$位小数。</p>
<p>求$H(50)$并保留小数点后$4$位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 662</title>
    <url>/662/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-662"><a href="#Problem-662" class="headerlink" title="Problem 662"></a><a href="https://projecteuler.net/problem=662">Problem 662</a></h1><hr>
<h2 id="Fibonacci-paths"><a href="#Fibonacci-paths" class="headerlink" title="Fibonacci paths"></a><strong>Fibonacci paths</strong></h2><p>Alice walks on a lattice grid. She can step from one lattice point $A (a,b)$ to another $B (a+x,b+y)$ providing distance $AB = \sqrt{x^2+y^2}$ is a Fibonacci number ${1,2,3,5,8,13,\ldots}$ and $x\ge 0,$  $y\ge 0$.</p>
<p>In the lattice grid below Alice can step from the blue point to any of the red points.</p>
<p><img src="/resources/images/0662_fibonacciwalks.png" alt="p662_fibonacciwalks.png"></p>
<p>Let $F(W,H)$ be the number of paths Alice can take from $(0,0)$ to $(W,H)$.<br>You are given $F(3,4) = 278$ and $F(10,10) = 215846462$.</p>
<p>Find $F(10,000,10,000) \bmod 1,000,000,007$.</p>
<hr>
<h2 id="斐波那契路径"><a href="#斐波那契路径" class="headerlink" title="斐波那契路径"></a><strong>斐波那契路径</strong></h2><p>爱丽丝正在格阵上行走，每次她都可以从一个格点$A (a,b)$走到另一个格点$B (a+x,b+y)$，只要两点间距离$AB = \sqrt{x^2+y^2}$是一个斐波那契数${1,2,3,5,8,13,\ldots}$，且$x\ge 0$，$y\ge 0$。</p>
<p>如下图的格阵，从蓝点出发，爱丽丝可以前往任意一个红点。</p>
<p><img src="/resources/images/0662_fibonacciwalks.png" alt="p662_fibonacciwalks.png"></p>
<p>记$F(W,H)$为爱丽丝从$(0,0)$出发到达$(W,H)$的可行路径数目。<br>已知，$F(3,4) = 278$，$F(10,10) = 215846462$。</p>
<p>求$F(10,000,10,000) \bmod 1,000,000,007$.</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 664</title>
    <url>/664/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-664"><a href="#Problem-664" class="headerlink" title="Problem 664"></a><a href="https://projecteuler.net/problem=664">Problem 664</a></h1><hr>
<h2 id="An-infinite-game"><a href="#An-infinite-game" class="headerlink" title="An infinite game"></a><strong>An infinite game</strong></h2><p>Peter is playing a solitaire game on an infinite checkerboard, each square of which can hold an unlimited number of tokens.</p>
<p>Each move of the game consists of the following steps:</p>
<ol>
<li>Choose one token $T$ to move. This may be any token on the board, as long as not all of its four adjacent squares are empty.</li>
<li>Select and discard one token $D$ from a square adjacent to that of $T$.</li>
<li>Move $T$ to any one of its four adjacent squares (even if that square is already occupied).</li>
</ol>
<p><img src="/resources/images/0664_moves.gif" alt="Allowed moves"></p>
<p>The board is marked with a line called the <i>dividing line</i>. Initially, every square to the left of the dividing line contains a token, and every square to the right of the dividing line is empty:</p>
<p><img src="/resources/images/0664_starting_0.png" alt="Initial setup"></p>
<p>Peter’s goal is to get a token as far as possible to the right in a finite number of moves. However, he quickly finds out that, even with his infinite supply of tokens, he cannot move a token more than four squares beyond the dividing line.</p>
<p>Peter then considers starting configurations with larger supplies of tokens: each square in the $d$th column to the left of the dividing line starts with $d^n$ tokens instead of $1$. This is illustrated below for $n=1$:</p>
<p><img src="/resources/images/0664_starting_1.png" alt="Initial setup n=1"></p>
<p>Let $F(n)$ be the maximum number of squares Peter can move a token beyond the dividing line. For example, $F(0)=4$. You are also given that $F(1)=6$, $F(2)=9$, $F(3)=13$, $F(11)=58$ and $F(123)=1173$.</p>
<p>Find $F(1234567)$.</p>
<hr>
<h2 id="无限游戏"><a href="#无限游戏" class="headerlink" title="无限游戏"></a><strong>无限游戏</strong></h2><p>彼得在玩一个单人游戏，这个游戏需要一张无穷大的棋盘，棋盘上的每一格都可以放置无限枚棋子。</p>
<p>游戏中的每次行动由以下几个步骤构成：</p>
<ol>
<li>选择一枚棋子$T$，这枚棋子的四个相邻方格不能全部为空。</li>
<li>从与$T$相邻的方格中选择并移除一枚棋子$D$。</li>
<li>将$T$移动至四个相邻方格之一（棋子可以堆叠）。</li>
</ol>
<p><img src="/resources/images/0664_moves.gif" alt="可行行动"></p>
<p>棋盘上画有一条竖直线，称为<i class=zh>分割线</i>。游戏开始时，在分割线左侧的每一格中放上一枚棋子，而分割线右侧的每一格置空。</p>
<p><img src="/resources/images/0664_starting_0.png" alt="初始局面"></p>
<p>彼得的目标是，在有限步内，将一枚棋子移动到分割线右侧尽可能远处。然而，他很快发现，即使他有无限枚棋子，他也只能将一枚棋子向右移动至多四格。</p>
<p>于是彼得转而考虑增加初始局面下棋子的数目：在从分割线向左数第$d$列的所有格子中，一开始放上$d^n$枚而不是$1$枚棋子。如下图所示为$n=1$时的初始局面：</p>
<p><img src="/resources/images/0664_starting_1.png" alt="n=1时的初始局面"></p>
<p>记$F(n)$为此时彼得能够移动棋子到达的最远距离。例如，$F(0)=4$。已知$F(1)=6$，$F(2)=9$，$F(3)=13$，$F(11)=58$，$F(123)=1173$。</p>
<p>求$F(1234567)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 663</title>
    <url>/663/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-663"><a href="#Problem-663" class="headerlink" title="Problem 663"></a><a href="https://projecteuler.net/problem=663">Problem 663</a></h1><hr>
<h2 id="Sums-of-subarrays"><a href="#Sums-of-subarrays" class="headerlink" title="Sums of subarrays"></a><strong>Sums of subarrays</strong></h2><p>Let $t_k$ be the <strong>tribonacci numbers</strong> defined as:<br>$\quad t_0 = t_1 = 0$;<br>$\quad t_2 = 1$;<br>$\quad t_k = t_{k-1} + t_{k-2} + t_{k-3}$ for $k \ge 3$.</p>
<p>For a given integer $n$, let $A_n$ be an array of length $n$ (indexed from 0 to $n-1$), that is initially filled with zeros.<br>The array is changed iteratively by replacing $A_n[(t_{2 i-2} \text{ mod } n)]$ with $A_n[(t_{2 i-2} \text{ mod } n)]+2 (t_{2 i-1} \text{ mod } n)-n+1$ in each step $i$.<br>After each step $i$, define $M_n(i)$ to be $\displaystyle \max{\sum_{j=p}^q A_n[j]: 0\le p\le q&lt;n}$, the maximal sum of any contiguous subarray of $A_n$. </p>
<p>The first $6$ steps for $n=5$ are illustrated below:<br>Initial state: $, A_5={0,0,0,0,0}$<br>Step $1$: $\quad \Rightarrow A_5={-4,0,0,0,0}$ , $M_5(1)=0$<br>Step $2$: $\quad \Rightarrow A_5={-4, -2, 0, 0, 0}$ , $M_5(2)=0$<br>Step $3$: $\quad \Rightarrow A_5={-4, -2, 4, 0, 0}$ , $M_5(3)=4$<br>Step $4$: $\quad \Rightarrow A_5={-4, -2, 6, 0, 0}$ , $M_5(4)=6$<br>Step $5$: $\quad \Rightarrow A_5={-4, -2, 6, 0, 4}$ , $M_5(5)=10$<br>Step $6$: $\quad \Rightarrow A_5={-4, 2, 6, 0, 4}$ , $M_5(6)=12$</p>
<p>Let $\displaystyle S(n,l)=\sum_{i=1}^l M_n(i)$. Thus $S(5,6)=32$.<br>You are given $S(5,100)=2416$, $S(14,100)=3881$ and $S(107,1000)=1618572$.</p>
<p>Find $S(10,000,003,10,200,000)-S(10,000,003,10,000,000)$.</p>
<hr>
<h2 id="子数组之和"><a href="#子数组之和" class="headerlink" title="子数组之和"></a><strong>子数组之和</strong></h2><p>记$t_k$为如下定义的<strong>三阶斐波那契数列</strong>：<br>$\quad t_0 = t_1 = 0$；<br>$\quad t_2 = 1$；<br>$\quad t_k = t_{k-1} + t_{k-2} + t_{k-3}$对于任意$k \ge 3$。</p>
<p>对于给定整数$n$，记$A_n$为长为$n$的数组（数组下标为$0$至$n-1$），数组中的元素初始值均设为0。<br>接着对数组进行初步调整，在第$i$步，将$A_n[(t_{2 i-2} \bmod n)]$替换为$A_n[(t_{2 i-2}\bmod n)]+2 (t_{2 i-1}\bmod n)-n+1$。<br>在第$i$步替换后，记$M_n(i)$为$\displaystyle \max{\sum_{j=p}^q A_n[j]: 0\le p\le q&lt;n}$，即$A_n$所有连续子数组之和的最大值。</p>
<p>当$n=5$时，前$6$步调整过程如下所示：<br>初始状态：$,A_5={0,0,0,0,0}$<br>第$1$步：$\quad \Rightarrow A_5={-4, 0, 0, 0, 0}$，$M_5(1)=0$<br>第$2$步：$\quad \Rightarrow A_5={-4, -2, 0, 0, 0}$，$M_5(2)=0$<br>第$3$步：$\quad \Rightarrow A_5={-4, -2, 4, 0, 0}$，$M_5(3)=4$<br>第$4$步：$\quad \Rightarrow A_5={-4, -2, 6, 0, 0}$，$M_5(4)=6$<br>第$5$步：$\quad \Rightarrow A_5={-4, -2, 6, 0, 4}$，$M_5(5)=10$<br>第$6$步：$\quad \Rightarrow A_5={-4, 2, 6, 0, 4}$，$M_5(6)=12$</p>
<p>记$\displaystyle S(n,l)=\sum_{i=1}^l M_n(i)$，因此$S(5,6)=32$。<br>已知$S(5,100)=2416$，$S(14,100)=3881$，$S(107,1000)=1618572$。</p>
<p>求$S(10,000,003,10,200,000)-S(10,000,003,10,000,000)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 665</title>
    <url>/665/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-665"><a href="#Problem-665" class="headerlink" title="Problem 665"></a><a href="https://projecteuler.net/problem=665">Problem 665</a></h1><hr>
<h2 id="Proportionate-Nim"><a href="#Proportionate-Nim" class="headerlink" title="Proportionate Nim"></a><strong>Proportionate Nim</strong></h2><p>Two players play a game with two piles of stones, alternating turns.</p>
<p>On each turn, the corresponding player chooses a positive integer $n$ and does one of the following:</p>
<ul>
<li>removes $n$ stones from one pile;</li>
<li>removes $n$ stones from both piles; or</li>
<li>removes $n$ stones from one pile and $2n$ stones from the other pile.</li>
</ul>
<p>The player who removes the last stone wins.</p>
<p>We denote by $(n,m)$ the position in which the piles have $n$ and $m$ stones remaining. Note that $(n,m)$ is considered to be the same position as $(m,n)$.</p>
<p>Then, for example, if the position is $(2,6)$, the next player may reach the following positions:<br>$(0,2)$, $(0,4)$, $(0,5)$, $(0,6)$, $(1,2)$, $(1,4)$, $(1,5)$, $(1,6)$, $(2,2)$, $(2,3)$, $(2,4)$, $(2,5)$</p>
<p>A position is a losing position if the player to move next cannot force a win. For example, $(1,3)$, $(2,6)$, $(4,5)$ are the first few losing positions.</p>
<p>Let $f(M)$ be the sum of $n+m$ for all losing positions $(n,m)$ with $n\le m$ and $n+m \le M$. For example, $f(10) = 21$, by considering the losing positions $(1,3)$, $(2,6)$, $(4,5)$.</p>
<p>You are given that $f(100) = 1164$ and $f(1000) = 117002$.</p>
<p>Find $f(10^7)$.</p>
<hr>
<h2 id="等比例取石子游戏"><a href="#等比例取石子游戏" class="headerlink" title="等比例取石子游戏"></a><strong>等比例取石子游戏</strong></h2><p>两名玩家正在玩一个取石子游戏，这个游戏需要两堆石子，两名玩家交替行动。</p>
<p>在每一回合，轮到行动的玩家选择一个正整数$n$，然后进行以下操作之一：</p>
<ul>
<li>从一个堆中移除$n$个石子；</li>
<li>从两个堆中各移除$n$个石子；</li>
<li>从一个堆中移除$n$个石子，并从另一个堆中移除$2n$个石子。</li>
</ul>
<p>最终，移除最后一个石子的玩家获胜。</p>
<p>我们用$(n,m)$表示两堆分别还剩$n$个和$m$个石子的状态。注意$(n,m)$和$(m,n)$被视为相同的状态。</p>
<p>比如说，如果当前状态是$(2,6)$，那么即将行动的玩家可以达成的状态包括：<br>$(0,2)$, $(0,4)$, $(0,5)$, $(0,6)$, $(1,2)$, $(1,4)$, $(1,5)$, $(1,6)$, $(2,2)$, $(2,3)$, $(2,4)$, $(2,5)$</p>
<p>如果即将行动的玩家不能确保获胜，则称当前状态为必败态。例如，$(1,3)$，$(2,6)$和$(4,5)$就都是必败态。</p>
<p>对于所有满足$n\le m$和$n+m \le M$的必败态$(n,m)$，记它们的$n+m$的总和为$f(M)$。例如，$f(10) = 21$，对应的所有必败态即为$(1,3)$，$(2,6)$和$(4,5)$。</p>
<p>已知$f(100) = 1164$，$f(1000) = 117002$。</p>
<p>求$f(10^7)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 666</title>
    <url>/666/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-666"><a href="#Problem-666" class="headerlink" title="Problem 666"></a><a href="https://projecteuler.net/problem=666">Problem 666</a></h1><hr>
<h2 id="Polymorphic-Bacteria"><a href="#Polymorphic-Bacteria" class="headerlink" title="Polymorphic Bacteria"></a><strong>Polymorphic Bacteria</strong></h2><p>Members of a species of bacteria occur in two different types: $\alpha$ and $\beta$. Individual bacteria are capable of multiplying and mutating between the types according to the following rules:</p>
<ul>
<li>Every minute, each individual will simultaneously undergo some kind of transformation.</li>
<li>Each individual $A$ of type $\alpha$ will, independently, do one of the following (at random with equal probability):<ul>
<li>clone itself, resulting in a new bacterium of type $\alpha$ (alongside $A$ who remains)</li>
<li>split into $3$ new bacteria of type $\beta$ (replacing $A$)</li>
</ul>
</li>
<li>Each individual $B$ of type $\beta$ will, independently, do one of the following (at random with equal probability):<ul>
<li>spawn a new bacterium of type $\alpha$ (alongside $B$ who remains)    </li>
<li>die</li>
</ul>
</li>
</ul>
<p>If a population starts with a single bacterium of type $\alpha$, then it can be shown that there is a $0.07243802$ probability that the population will eventually die out, and a $0.92756198$ probability that the population will last forever. These probabilities are given rounded to $8$ decimal places.</p>
<p>Now consider another species of bacteria, $S_{k,m}$ (where $k$ and $m$ are positive integers), which occurs in $k$ different types $\alpha_i$ for $0\le i&lt; k$. The rules governing this species’ lifecycle involve the sequence $r_n$ defined by:<br>    $r_0 = 306$<br>    $r_{n+1} = r_n^2 \bmod 10\ 007$</p>
<p>Every minute, for each $i$, each bacterium $A$ of type $\alpha_i$ will independently choose an integer $j$ uniformly at random in the range $0\le j&lt;m$. What it then does depends on $q = r_{im+j} \bmod 5$:</p>
<ul>
<li>If $q=0$, $A$ dies.</li>
<li>If $q=1$, $A$ clones itself, resulting in a new bacterium of type $\alpha_i$ (alongside $A$ who remains).</li>
<li>If $q=2$, $A$ mutates, changing into type $\alpha_{(2i) \bmod k}$.</li>
<li>If $q=3$, $A$ splits into 3 new bacteria of type $\alpha_{(i^2+1) \bmod k}$ (replacing $A$).</li>
<li>If $q=4$, $A$ spawns a new bacterium of type $\alpha_{(i+1) \bmod k}$ (alongside $A$ who remains).</li>
</ul>
<p>In fact, our original species was none other than $S_{2,2}$, with $\alpha=\alpha_0$ and $\beta=\alpha_1$.</p>
<p>Let $P_{k,m}$ be the probability that a population of species $S_{k,m}$, starting with a single bacterium of type $\alpha_0$, will eventually die out. So $P_{2,2} = 0.07243802$. You are also given that $P_{4,3} = 0.18554021$ and $P_{10,5} = 0.53466253$, all rounded to $8$ decimal places.</p>
<p>Find $P_{500,10}$, and give your answer rounded to $8$ decimal places.</p>
<hr>
<h2 id="多态细菌"><a href="#多态细菌" class="headerlink" title="多态细菌"></a><strong>多态细菌</strong></h2><p>某种细菌有两种表现形态：$\alpha$型和$\beta$型。每个细菌个体都拥有增殖和在两种形态间突变的能力，但这种能力受到以下规则的约束：</p>
<ul>
<li>每一分钟，每个细菌个体都必定在同一时间进行变形。</li>
<li>每个$\alpha$型细菌个体$A$会随机进行以下两种变形之一，不同个体之间对变形的选择是独立且等概率的：<ul>
<li>克隆本身从而创造一个新的$\alpha$型细菌（并保留$A$）</li>
<li>分裂成$3$个新的$\beta$型细菌（并取代$A$）</li>
</ul>
</li>
<li>每个$\beta$型细菌个体$B$会随机进行以下两种变形之一，不同个体之间对变形的选择是独立且等概率的：<ul>
<li>生成一个新的$\alpha$型细菌（并保留$B$）</li>
<li>死亡</li>
</ul>
</li>
</ul>
<p>如果一个细胞族群一开始只包含一个$\alpha$型细菌，可以算出，有$0.07243802$的概率这个族群会最终全部死亡，而有$0.92756198$的概率这个族群将永远存续下去，上述概率均保留$8$位小数。</p>
<p>现在考虑另一种细菌$S_{k,m}$（其中$k$和$m$均为正整数），这种细菌有$k$种不同的形态，分别用$\alpha_i$表示，其中$0\le i&lt;k$。这种细菌的生命周期取决于如下定义的序列$r_n$:<br>    $r_0 = 306$<br>    $r_{n+1} = r_n^2 \bmod 10\ 007$</p>
<p>每一分钟，每个$\alpha_i$型的细菌个体$A$会独立地在$0\le j&lt;m$的范围内均匀随机地选择一个整数$j$，并根据$q = r_{im+j} \bmod 5$选择其行动：:</p>
<ul>
<li>如果$q=0$，则$A$死亡。</li>
<li>如果$q=1$，则$A$克隆本身从而创造一个新的$\alpha_i$型细菌（并保留$A$）。</li>
<li>如果$q=2$，$A$突变成为$\alpha_{(2i) \bmod k}$型细菌。</li>
<li>如果$q=3$，$A$分裂成$3$个新的$\alpha_{(i^2+1) \bmod k}$型细菌（并取代$A$）。</li>
<li>如果$q=4$，$A$生成一个新的$\alpha_{(i+1) \bmod k}$型细菌（并保留$A$）。</li>
</ul>
<p>事实上，我们最初考虑的那种细菌可以被表示为$S_{2,2}$，其中$\alpha=\alpha_0$而$\beta=\alpha_1$。</p>
<p>考虑一个$S_{k,m}$细胞族群，一开始族群只包含一个$\alpha_0$型细菌，记$P_{k,m}$为该族群最终全部死亡的概率。已知$P_{2,2} = 0.07243802$，$P_{4,3} = 0.18554021$，$P_{10,5} = 0.53466253$，均保留$8$位小数。</p>
<p>求$P_{500,10}$，并将你的答案保留$8$位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 668</title>
    <url>/668/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-668"><a href="#Problem-668" class="headerlink" title="Problem 668"></a><a href="https://projecteuler.net/problem=668">Problem 668</a></h1><hr>
<h2 id="Square-root-smooth-Numbers"><a href="#Square-root-smooth-Numbers" class="headerlink" title="Square root smooth Numbers"></a><strong>Square root smooth Numbers</strong></h2><p>A positive integer is called <i>square root smooth</i> if all of its prime factors are strictly less than its square root.<br>Including the number $1$, there are $29$ square root smooth numbers not exceeding $100$.</p>
<p>How many square root smooth numbers are there not exceeding $10\ 000\ 000\ 000$?</p>
<hr>
<h2 id="平方根光滑数"><a href="#平方根光滑数" class="headerlink" title="平方根光滑数"></a><strong>平方根光滑数</strong></h2><p>若一个正整数的所有质因数都严格小于它的平方根，则称之为<i class=zh>平方根光滑数</i>。<br>包括$1$在内，有$29$个不超过$100$的平方根光滑数。.</p>
<p>有多少个不超过$10\ 000\ 000\ 000$的平方根光滑数？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 667</title>
    <url>/667/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-667"><a href="#Problem-667" class="headerlink" title="Problem 667"></a><a href="https://projecteuler.net/problem=667">Problem 667</a></h1><hr>
<h2 id="Moving-Pentagon"><a href="#Moving-Pentagon" class="headerlink" title="Moving Pentagon"></a><strong>Moving Pentagon</strong></h2><p>After buying a <i>Gerver Sofa</i> from the <i>Moving Sofa Company</i>, Jack wants to buy a matching cocktail table from the same company. Most important for him is that the table can be pushed through his L-shaped corridor into the living room without having to be lifted from its table legs.<br>Unfortunately, the simple square model offered to him is too small for him, so he asks for a bigger model.<br>He is offered the new pentagonal model illustrated below:</p>
<p><img src="/resources/images/0667_MovingPentagon.png" alt="p667.png"></p>
<p>Note, while the shape and size can be ordered individually, due to the production process,<strong>all edges of the pentagonal table have to have the same length.</strong></p>
<p>Given optimal form and size, what is the biggest pentagonal cocktail table (in terms of area) that Jack can buy that still fits through his unit wide L-shaped corridor?</p>
<p>Give your answer rounded to 10 digits after the decimal point (if Jack had chosen the square model instead the answer would have been 1.0000000000).</p>
<hr>
<h2 id="移动的五边形"><a href="#移动的五边形" class="headerlink" title="移动的五边形"></a><strong>移动的五边形</strong></h2><p>在从<i class=zh>移动沙发公司</i>购买了一套<i class=zh>格弗式沙发</i>之后，杰克打算再买一张配套的鸡尾酒桌。对他来说最重要的是，这张桌子能够直接推着通过他家的L形走廊而不需要被抬起来。<br>很不凑巧，那些能够满足杰克的条件的正方形桌子都太小了，他想要再大一些的桌子，于是销售人员向他推荐了一些新的五边形桌子，如下所示：</p>
<p><img src="/resources/images/0667_MovingPentagon.png" alt="p667.png"></p>
<p>需要注意的是，尽管桌子的形状和大小都可以定制，但是由于制造工艺的限制，<strong>五边形桌子的每一条边必须有相同的长度。</strong></p>
<p>在最优的形状和大小下，杰克能够买到的、能顺利通过他家的L型走廊的五边形鸡尾酒桌到底能有多大（以桌面的面积计）？</p>
<p>将你的答案保留小数点后10位小数（比方说，如果杰克打算买一开始那张正方形桌子，那么答案就应该是1.0000000000）。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 669</title>
    <url>/669/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-669"><a href="#Problem-669" class="headerlink" title="Problem 669"></a><a href="https://projecteuler.net/problem=669">Problem 669</a></h1><hr>
<h2 id="The-King’s-Banquet"><a href="#The-King’s-Banquet" class="headerlink" title="The King’s Banquet"></a><strong>The King’s Banquet</strong></h2><p>The Knights of the Order of Fibonacci are preparing a grand feast for their king. There are $n$ knights, and each knight is assigned a distinct number from $1$ to $n$.</p>
<p>When the knights sit down at the roundtable for their feast, they follow a peculiar seating rule: two knights can only sit next to each other if their respective numbers sum to a Fibonacci number.</p>
<p>When the $n$ knights all try to sit down around a circular table with $n$ chairs, they are unable to find a suitable seating arrangement for any $n&gt;2$ despite their best efforts. Just when they are about to give up, they remember that the king will sit on his throne at the table as well.</p>
<p>Suppose there are $n=7$ knights and $7$ chairs at the roundtable, in addition to the king’s throne. After some trial and error, they come up with the following seating arrangement (K represents the king):</p>
<p><img src="/resources/images/0669_roundtable.png" alt="Roundtable"></p>
<p>Notice that the sums $4+1$, $1+7$, $7+6$, $6+2$, $2+3$, and $3+5$ are all Fibonacci numbers, as required. It should also be mentioned that the king always prefers an arrangement where the knight to the his left has a smaller number than the knight to his right. With this additional rule, the above arrangement is unique for $n=7$, and the knight sitting in the $3$rd chair from the king’s left is knight number $7$.</p>
<p>Later, several new knights are appointed to the Order, giving $34$ knights and chairs in addition to the king’s throne. The knights eventually determine that there is a unique seating arrangement for $n=34$ satisfying the above rules, and this time knight number $30$ is sitting in the $3$rd chair from the king’s left.</p>
<p>Now suppose there are $n=99\ 194\ 853\ 094\ 755\ 497$ knights and the same number of chairs at the roundtable (not including the king’s throne). After great trials and tribulations, they are finally able to find the unique seating arrangement for this value of $n$ that satisfies the above rules.</p>
<p>Find the number of the knight sitting in the $10\ 000\ 000\ 000\ 000\ 000$th chair from the king’s left.</p>
<hr>
<h2 id="国王的宴会"><a href="#国王的宴会" class="headerlink" title="国王的宴会"></a><strong>国王的宴会</strong></h2><p>斐波那契骑士团的骑士们正为他们的国王准备一场盛大的宴会。骑士共有$n$位，每位骑士都被授予了$1$和$n$之间的不同编号之一。</p>
<p>当骑士们在宴会的圆桌边就座时，他们的座位必须遵循如下特定的规则：座位相邻的两位骑士的编号之和必须是斐波那契数。</p>
<p>当这$n$位骑士试图在有$n$个座位的圆桌边就座时，他们发现，只要$n&gt;2$，无论他们怎么努力，都找不到合适的座位安排。正在他们打算放弃时，他们突然想到，还得给国王在圆桌边安排御座。</p>
<p>假如骑士共有$7$位，因此圆桌边除了国王的御座以外还有$7$个座位。经过一番尝试，骑士们得到了如下的座位安排（其中K代表国王）：</p>
<p><img src="/resources/images/0669_roundtable.png" alt="Roundtable"></p>
<p>注意到$4+1$、$1+7$、$7+6$、$6+2$、$2+3$和$3+5$都是斐波那契数，符合要求。不得不提的是，国王总是希望他左手边的骑士比右手边的骑士编号更小。在这个额外的要求下，上面这个座位安排是$n=7$时唯一的合理安排。在这一安排中，坐在国王左手边第$3$位的骑士编号是$7$。</p>
<p>不久，一些新骑士加入了骑士团，现在有$34$位骑士，圆桌边除了国王的御座外还有$34$个座位。骑士们最终发现，对于$n=34$也同样只有唯一符合要求的座位安排，此时坐在国王左手边第$3$位的骑士编号是$30$。</p>
<p>现在假设总共有$n=99\ 194\ 853\ 094\ 755\ 497$位骑士，圆桌边也有相应数目的座位（除了国王的御座之外）。经过漫长而痛苦的尝试，骑士们终于找到了唯一符合要求的座位安排。</p>
<p>求此时坐在国王左手边第 $10\ 000\ 000\ 000\ 000\ 000$位的骑士的编号。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 67</title>
    <url>/67/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-67"><a href="#Problem-67" class="headerlink" title="Problem 67"></a><a href="https://projecteuler.net/problem=67">Problem 67</a></h1><hr>
<h2 id="Maximum-Path-Sum-II"><a href="#Maximum-Path-Sum-II" class="headerlink" title="Maximum Path Sum II"></a><strong>Maximum Path Sum II</strong></h2><p>By starting at the top of the triangle below and moving to adjacent numbers on the row below, the maximum total from top to bottom is $23$.</p>
<p>$$<br>\begin{aligned}<br>&amp;{\color{red}3}\\<br>{\color{red}7}&amp;\ \ 4\\<br>2\ \ &amp;{\color{red}4}\ \ 6\\<br>8\ \ 5&amp;\ \ {\color{red}9}\ \ 3\\<br>\end{aligned}<br>$$</p>
<p>That is, $3 + 7 + 4 + 9 = 23$.</p>
<p>Find the maximum total from top to bottom in <a href="https://projecteuler.net/project/resources/p067_triangle.txt">triangle.txt</a>(right click and ‘Save Link/Target As…’), a 15K text file containing a triangle with one-hundred rows.</p>
<p><strong>NOTE:</strong> This is a much more difficult version of <a href="/18">Problem 18</a>. It is not possible to try every route to solve this problem, as there are $2^{99}$ altogether! If you could check one trillion ($10^{12}$) routes every second it would take over twenty billion years to check them all. There is an efficient algorithm to solve it. ;o)</p>
<hr>
<h2 id="最大路径和（二）"><a href="#最大路径和（二）" class="headerlink" title="最大路径和（二）"></a><strong>最大路径和（二）</strong></h2><p>从下面展示的三角形的顶端出发，不断移动到在下一行与其相邻的元素，能够得到的最大路径和是$23$。</p>
<p>$$<br>\begin{aligned}<br>&amp;{\color{red}3}\\<br>{\color{red}7}&amp;\ \ 4\\<br>2\ \ &amp;{\color{red}4}\ \ 6\\<br>8\ \ 5&amp;\ \ {\color{red}9}\ \ 3\\<br>\end{aligned}<br>$$</p>
<p>如上图，最大路径和为$3 + 7 + 4 + 9 = 23$。</p>
<p>在文本文件[triangle.txt] (<a href="https://projecteuler.net/project/resources/p067_triangle.txt)中包含了一个一百行的三角形，求从其顶端出发到达底部，所能够得到的最大路径和。">https://projecteuler.net/project/resources/p067_triangle.txt)中包含了一个一百行的三角形，求从其顶端出发到达底部，所能够得到的最大路径和。</a></p>
<p><strong>注意：</strong>这是<a href="/18">第18题</a>的强化版。由于总路径一共有$2^{99}$条，穷举每条路经来解决这个问题是不可能的！即使你每秒钟能够检查一万亿（$10^{12}$）条路径，全部检查完也需要两千万年。存在一个非常高效的算法能解决这个问题。;o)</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 670</title>
    <url>/670/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-670"><a href="#Problem-670" class="headerlink" title="Problem 670"></a><a href="https://projecteuler.net/problem=670">Problem 670</a></h1><hr>
<h2 id="Colouring-a-Strip"><a href="#Colouring-a-Strip" class="headerlink" title="Colouring a Strip"></a><strong>Colouring a Strip</strong></h2><p>A certain type of tile comes in three different sizes - $1\times 1$, $1\times2$, and $1\times 3$ - and in four different colours: blue, green, red and yellow. There is an unlimited number of tiles available in each combination of size and colour.</p>
<p>These are used to tile a $2\times n$ rectangle, where $n$ is a positive integer, subject to the following conditions:</p>
<ul>
<li>The rectangle must be fully covered by non-overlapping tiles.</li>
<li>It is <i>not</i> permitted for four tiles to have their corners meeting at a single point.</li>
<li>Adjacent tiles must be of different colours.</li>
</ul>
<p>For example, the following is an acceptable tiling of a $2\times 12$ rectangle:</p>
<p><img src="/resources/images/0670_strip_acceptable.png" alt="Acceptable colouring"></p>
<p>but the following is not an acceptable tiling, because it violates the “no four corners meeting at a point” rule:</p>
<p><img src="/resources/images/0670_strip_unacceptable.png" alt="Unacceptable colouring"></p>
<p>Let $F(n)$ be the number of ways the $2\times n$ rectangle can be tiled subject to these rules. Where reflecting horizontally or vertically would give a different tiling, these tilings are to be counted separately.</p>
<p>For example, $F(2) = 120$, $F(5) = 45876$, and $F(100)\equiv 53275818 \pmod{1\ 000\ 004\ 321}$.</p>
<p>Find $F(10^{16}) \bmod 1\ 000\ 004\ 321$.</p>
<hr>
<h2 id="彩砖条形铺盖"><a href="#彩砖条形铺盖" class="headerlink" title="彩砖条形铺盖"></a><strong>彩砖条形铺盖</strong></h2><p>某种砖块有三种不同的大小，分别是$1\times 1$、$1\times2$和$1\times 3$，同时又有四种不同的颜色：蓝色、绿色、红色和黄色。每种大小和颜色组合的砖块都不限量供应。</p>
<p>这些砖块被用于铺盖大小为$2\times n$的长方形，其中$n$为正整数。铺盖过程必须满足以下条件：</p>
<ul>
<li>长方形必须完全被覆盖，且砖块之间不能重叠。</li>
<li><i class=zh>不</i>允许有四块砖块共用一个顶点。</li>
<li>相邻的砖块必须有不同的颜色。</li>
</ul>
<p>例如，下图是对大小为$2\times 12$的长方形的一种合理铺盖：</p>
<p><img src="/resources/images/0670_strip_acceptable.png" alt="合理铺盖"></p>
<p>而下图则是一种不合理铺盖，因为这种铺盖违背了“四块砖块不允许共用一个顶点”的规则：</p>
<p><img src="/resources/images/0670_strip_unacceptable.png" alt="不合理铺盖"></p>
<p>记$F(n)$为大小为$2\times n$的长方形上的合理铺盖总数。上下或左右镜像对称的铺盖视为不同的铺盖。</p>
<p>已知，$F(2) = 120$，$F(5) = 45876$，$F(100)\equiv 53275818 \pmod{1\ 000\ 004\ 321}$。</p>
<p>求$F(10^{16}) \bmod 1\ 000\ 004\ 321$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 671</title>
    <url>/671/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-671"><a href="#Problem-671" class="headerlink" title="Problem 671"></a><a href="https://projecteuler.net/problem=671">Problem 671</a></h1><hr>
<h2 id="Colouring-a-Loop"><a href="#Colouring-a-Loop" class="headerlink" title="Colouring a Loop"></a><strong>Colouring a Loop</strong></h2><p>A certain type of tile comes in three different sizes - $1\times 1$, $1\times2$, and $1\times 3$ - and in $k$ different colours. There is an unlimited number of tiles available in each combination of size and colour.</p>
<p>These are used to tile a closed loop of width $2$ and length (circumference) $n$, where $n$ is a positive integer, subject to the following conditions:</p>
<ul>
<li>The loop must be fully covered by non-overlapping tiles.</li>
<li>It is <i>not</i> permitted for four tiles to have their corners meeting at a single point.</li>
<li>Adjacent tiles must be of different colours.</li>
</ul>
<p>For example, the following is an acceptable tiling of a $2\times 23$ loop with $k=4$ (blue, green, red and yellow):</p>
<p><img src="/resources/images/0671_loop_acceptable.png" alt="Acceptable colouring"></p>
<p>but the following is not an acceptable tiling, because it violates the “no four corners meeting at a point” rule:</p>
<p><img src="/resources/images/0671_loop_unacceptable.png" alt="Unacceptable colouring"></p>
<p>Let $F_k(n)$ be the number of ways the $2\times n$ loop can be tiled subject to these rules when $k$ colours are available. (Not all $k$ colours have to be used.) Where reflecting horizontally or vertically would give a different tiling, these tilings are to be counted separately.</p>
<p>For example, $F_4(3) = 104$, $F_5(7) = 3327300$, and $F_6(101)\equiv 75309980 \pmod{1,000,004,321}$.</p>
<p>Find $F_{10}(10,004,003,002,001) \bmod 1,000,004,321$.</p>
<hr>
<h2 id="彩砖环形铺盖"><a href="#彩砖环形铺盖" class="headerlink" title="彩砖环形铺盖"></a><strong>彩砖环形铺盖</strong></h2><p>某种砖块有三种不同的大小，分别是$1\times 1$、$1\times2$和$1\times 3$，同时又有$k$种不同的颜色。每种大小和颜色组合的砖块都不限量供应。</p>
<p>这些砖块被用于铺盖宽度为$2$、长度（周长）为$n$的圆环，其中$n$为正整数。铺盖过程必须满足以下条件：</p>
<ul>
<li>圆环必须完全被覆盖，且砖块之间不能重叠。</li>
<li><i class=zh>不</i>允许有四块砖块共用一个顶点。</li>
<li>相邻的砖块必须有不同的颜色。</li>
</ul>
<p>例如，下图是$k=4$（分别是蓝色、绿色、红色和黄色）时对大小为$2\times 23$的圆环的一种合理铺盖：</p>
<p><img src="/resources/images/0671_loop_acceptable.png" alt="合理铺盖"></p>
<p>而下图则是一种不合理铺盖，因为这种铺盖违背了“四块砖块不允许共用一个顶点”的规则：</p>
<p><img src="/resources/images/0671_loop_unacceptable.png" alt="不合理铺盖"></p>
<p>记$F_k(n)$为有$k$种颜色时，大小为$2\times n$的圆环上的合理铺盖总数。（$k$种颜色不必全都用上。）上下或左右镜像对称的铺盖视为不同的铺盖。</p>
<p>已知，$F_4(3) = 104$，$F_5(7) = 3327300$，$F_6(101)\equiv 75309980 \pmod{1,000,004,321}$。</p>
<p>求$F_{10}(10,004,003,002,001) \bmod 1,000,004,321$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 672</title>
    <url>/672/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-672"><a href="#Problem-672" class="headerlink" title="Problem 672"></a><a href="https://projecteuler.net/problem=672">Problem 672</a></h1><hr>
<h2 id="One-more-one"><a href="#One-more-one" class="headerlink" title="One more one"></a><strong>One more one</strong></h2><p>Consider the following process that can be applied recursively to any positive integer $n$:</p>
<ul>
<li>if $n = 1$ do nothing and the process stops,</li>
<li>if $n$ is divisible by $7$ divide it by $7$,</li>
<li>otherwise add $1$.</li>
</ul>
<p>Define $g(n)$ to be the number of $1$’s that must be added before the process ends. For example:</p>
<p>$$125\xrightarrow{\scriptsize{+1}} 126\xrightarrow{\scriptsize{\div 7}} 18\xrightarrow{\scriptsize{+1}} 19\xrightarrow{\scriptsize{+1}} 20\xrightarrow{\scriptsize{+1}} 21\xrightarrow{\scriptsize{\div 7}} 3\xrightarrow{\scriptsize{+1}} 4\xrightarrow{\scriptsize{+1}} 5\xrightarrow{\scriptsize{+1}} 6\xrightarrow{\scriptsize{+1}} 7\xrightarrow{\scriptsize{\div 7}} 1$$</p>
<p>Eight $1$’s are added so $g(125) = 8$. Similarly $g(1000) = 9$ and $g(10000) = 21$.</p>
<p>Define $S(N) = \sum_{n=1}^{N} g(n)$ and $H(K) = S\left(\frac{7^K-1}{11}\right)$. You are given $H(10) = 690409338$.</p>
<p>Find $H(10^9)$ modulo $1,117,117,717$.</p>
<hr>
<h2 id="再多一个一"><a href="#再多一个一" class="headerlink" title="再多一个一"></a><strong>再多一个一</strong></h2><p>从正整数$n$开始进行如下迭代操作：</p>
<ul>
<li>若$n = 1$，则迭代中止；</li>
<li>若$n$能被$7$整除，则除以$7$；</li>
<li>否则加$1$。</li>
</ul>
<p>记$g(n)$为迭代过程中加$1$的次数。例如：</p>
<p>$$125\xrightarrow{\scriptsize{+1}} 126\xrightarrow{\scriptsize{\div 7}} 18\xrightarrow{\scriptsize{+1}} 19\xrightarrow{\scriptsize{+1}} 20\xrightarrow{\scriptsize{+1}} 21\xrightarrow{\scriptsize{\div 7}} 3\xrightarrow{\scriptsize{+1}} 4\xrightarrow{\scriptsize{+1}} 5\xrightarrow{\scriptsize{+1}} 6\xrightarrow{\scriptsize{+1}} 7\xrightarrow{\scriptsize{\div 7}} 1$$</p>
<p>总共有八次加$1$的操作，因此$g(125) = 8$。类似地，$g(1000) = 9$，$g(10000) = 21$。</p>
<p>记$S(N) = \sum_{n=1}^{N} g(n)$而$H(K) = S\left(\frac{7^K-1}{11}\right)$。已知$H(10) = 690409338$。</p>
<p>求$H(10^9)$并对$1,117,117,717$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 673</title>
    <url>/673/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-673"><a href="#Problem-673" class="headerlink" title="Problem 673"></a><a href="https://projecteuler.net/problem=673">Problem 673</a></h1><hr>
<h2 id="Beds-and-Desks"><a href="#Beds-and-Desks" class="headerlink" title="Beds and Desks"></a><strong>Beds and Desks</strong></h2><p>At Euler University, each of the $n$ students (numbered from $1$ to $n$) occupies a bed in the dormitory and uses a desk in the classroom.</p>
<p>Some of the beds are in private rooms which a student occupies alone, while the others are in double rooms occupied by two students as roommates. Similarly, each desk is either a single desk for the sole use of one student, or a twin desk at which two students sit together as desk partners.</p>
<p>We represent the bed and desk sharing arrangements each by a list of pairs of student numbers. For example, with $n=4$, if $(2,3)$ represents the bed pairing and $(1,3)(2,4)$ the desk pairing, then students $2$ and $3$ are roommates while $1$ and $4$ have single rooms, and students $1$ and $3$ are desk partners, as are students $2$ and $4$.</p>
<p>The new chancellor of the university decides to change the organisation of beds and desks: a permutation $\sigma$ of the numbers $1,2,\ldots,n$ will be chosen, and each student $k$ will be given both the bed and the desk formerly occupied by student number $\sigma(k)$.</p>
<p>The students agree to this change, under the conditions that:</p>
<ol>
<li>Any two students currently sharing a room will still be roommates.</li>
<li>Any two students currently sharing a desk will still be desk partners.</li>
</ol>
<p>In the example above, there are only two ways to satisfy these conditions: either take no action ($\sigma$ is the <strong>identity permutation</strong>), or reverse the order of the students.</p>
<p>With $n=6$, for the bed pairing $(1,2)(3,4)(5,6)$ and the desk pairing $(3,6)(4,5)$, there are $8$ permutations which satisfy the conditions. One example is the mapping $(1, 2, 3, 4, 5, 6) \mapsto (1, 2, 5, 6, 3, 4)$.</p>
<p>With $n=36$, if we have bed pairing:<br>$(2,13)(4,30)(5,27)(6,16)(10,18)(12,35)(14,19)(15,20)(17,26)(21,32)(22,33)(24,34)(25,28)$<br>and desk pairing<br>$(1,35)(2,22)(3,36)(4,28)(5,25)(7,18)(9,23)(13,19)(14,33)(15,34)(20,24)(26,29)(27,30)$<br>then among the $36!$ possible permutations (including the identity permutation), $663552$ of them satisfy the conditions stipulated by the students.</p>
<p>The downloadable text files <a href="https://projecteuler.net/project/resources/p673_beds.txt">beds.txt</a> and <a href="https://projecteuler.net/project/resources/p673_desks.txt">desks.txt</a> contain pairings for $n=500$. Each pairing is written on its own line, with the student numbers of the two roommates (or desk partners) separated with a comma. For example, the desk pairing in the $n=4$ example above would be represented in this file format as:</p>
<pre>
1,3
2,4
</pre>

<p>With these pairings, find the number of permutations that satisfy the students’ conditions. Give your answer modulo $999,999,937$.</p>
<hr>
<h2 id="床位和座位"><a href="#床位和座位" class="headerlink" title="床位和座位"></a><strong>床位和座位</strong></h2><p>欧拉大学有$n$个学生（编号为$1$至$n$），每个学生在宿舍有一个床位，在教室里有一个座位。</p>
<p>这其中，某些床位是单人间，某些则是双人间；同样地，某些座位是单人桌，某些则是双人桌。</p>
<p>我们用一系列数对来表示床位和座位安排。例如，当$n=4$时，如果床位安排是$(2,3)$，而座位安排是$(1,3)(2,4)$，那就意味着$2$号和$3$号住的是双人间，而$1$号和$4$号住的是单人间，同时$1$号和$3$号、$2$号和$4$号分别共用一张双人桌。</p>
<p>新任校监打算调整一下床位和座位安排：他会选择$1,2,\ldots,n$的一个排列$\sigma$，然后$k$号学生会获得原本$\sigma(k)$号学生的床位和座位。</p>
<p>学生们表示，只有满足以下条件时，他们才愿意进行调整：</p>
<ol>
<li>原本的室友在调整后仍然是室友。</li>
<li>原本的同桌在调整后仍然是同桌。</li>
</ol>
<p>在之前的例子中，只有两种满足上述条件的排列：要么就什么都不做（此时选择的$\sigma$称为<strong>恒等排列</strong> ），要么将学生们的编号逆序排列。</p>
<p>当$n=6$时，若当前的床位安排是$(1,2)(3,4)(5,6)$，当前的座位安排是$(3,6)(4,5)$，则共有$8$种排列符合要求，其中一种是$(1, 2, 3, 4, 5, 6) \mapsto (1, 2, 5, 6, 3, 4)$。</p>
<p>当$n=36$，若当前的床位安排是<br>$(2,13)(4,30)(5,27)(6,16)(10,18)(12,35)(14,19)(15,20)(17,26)(21,32)(22,33)(24,34)(25,28)$<br>而当前的座位安排是<br>$(1,35)(2,22)(3,36)(4,28)(5,25)(7,18)(9,23)(13,19)(14,33)(15,34)(20,24)(26,29)(27,30)$<br>那么在所有的$36!$种可能的排列中（包括恒等排列），共有$663552$种满足学生们的条件。</p>
<p>在文本文件<a href="https://projecteuler.net/project/resources/p673_beds.txt">beds.txt</a>和<a href="https://projecteuler.net/project/resources/p673_desks.txt">desks.txt</a>中，包含有一组$n=500$时的座位和床位安排。每一行描述了一组室友或同桌，用逗号分隔。举例来说，上述$n=4$的例子中的同桌关系在上述文件中会表示为</p>
<pre>
1,3
2,4
</pre>

<p>给定这些室友和同桌关系，求满足所有学生条件的排列总数，并将你的答案对$999,999,937$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 675</title>
    <url>/675/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-675"><a href="#Problem-675" class="headerlink" title="Problem 675"></a><a href="https://projecteuler.net/problem=675">Problem 675</a></h1><hr>
<h2 id="2-omega-n"><a href="#2-omega-n" class="headerlink" title="$2^{\omega(n)}$"></a><strong>$2^{\omega(n)}$</strong></h2><p>Let $\omega(n)$ denote the number of distinct prime divisors of a positive integer $n$.<br>So $\omega(1) = 0$ and $\omega(360) = \omega(2^{3} \times 3^{2} \times 5) = 3$.</p>
<p>Let $S(n)$ be $ \Sigma_{d | n} 2^{\omega(d)}  $.<br>E.g. $S(6) = 2^{\omega(1)}+2^{\omega(2)}+2^{\omega(3)}+2^{\omega(6)} = 2^0+2^1+2^1+2^2 = 9$.</p>
<p>Let $F(n)=\Sigma_{i=2}^n S(i!)$. $F(10)=4821.$</p>
<p>Find $F(10\ 000\ 000)$. Give your answer modulo  $1\ 000\ 000\ 087$.</p>
<hr>
<h2 id="2-omega-n-1"><a href="#2-omega-n-1" class="headerlink" title="$2^{\omega(n)}$"></a><strong>$2^{\omega(n)}$</strong></h2><p>记$\omega(n)$为正整数$n$的不同质因数的数目。<br>因此，$\omega(1) = 0$，$\omega(360) = \omega(2^{3} \times 3^{2} \times 5) = 3$。</p>
<p>记$S(n)$为$ \Sigma_{d | n} 2^{\omega(d)}  $。<br>例如$S(6) = 2^{\omega(1)}+2^{\omega(2)}+2^{\omega(3)}+2^{\omega(6)} = 2^0+2^1+2^1+2^2 = 9$。</p>
<p>记$F(n)=\Sigma_{i=2}^n S(i!)$。已知$F(10)=4821$。</p>
<p>求$F(10\ 000\ 000)$并将你的答案对$1\ 000\ 000\ 087$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 674</title>
    <url>/674/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-674"><a href="#Problem-674" class="headerlink" title="Problem 674"></a><a href="https://projecteuler.net/problem=674">Problem 674</a></h1><hr>
<h2 id="Solving-mathcal-I-equations"><a href="#Solving-mathcal-I-equations" class="headerlink" title="Solving $\mathcal{I}$-equations"></a><strong>Solving $\mathcal{I}$-equations</strong></h2><p>We define the $\mathcal{I}$ operator as the function<br>$$\mathcal{I}(x,y) = (1+x+y)^2+y-x$$<br>and $\mathcal{I}$-expressions as arithmetic expressions built only from variables names and applications of $\mathcal{I}$. A variable name may consist of one or more letters. For example, the three expressions $x$, $\mathcal{I}(x,y)$, and $\mathcal{I}(\mathcal{I}(x,ab),x)$ are all $\mathcal{I}$-expressions.</p>
<p>For two $\mathcal{I}$-expressions $e_1$ and $e_2$ such that the equation $e_1=e_2$ has a solution in non-negative integers, we define the least simultaneous value of $e_1$ and $e_2$ to be the minimum value taken by $e_1$ and $e_2$ on such a solution. If the equation $e_1=e_2$ has no solution in non-negative integers, we define the least simultaneous value of $e_1$ and $e_2$ to be $0$. For example, consider the following three $\mathcal{I}$-expressions:<br>$$\begin{array}{l}A = \mathcal{I}(x,\mathcal{I}(z,t))\<br>B = \mathcal{I}(\mathcal{I}(y,z),y)\<br>C = \mathcal{I}(\mathcal{I}(x,z),y)\end{array}$$<br>The least simultaneous value of $A$ and $B$ is $23$, attained for $x=3, y=1, z=t=0$. On the other hand, $A=C$ has no solutions in non-negative integers, so the least simultaneous value of $A$ and $C$ is $0$. The total sum of least simultaneous pairs made of $\mathcal{I}$-expressions from ${A,B,C}$ is $26$.</p>
<p>Find the sum of least simultaneous values of all $\mathcal{I}$-expressions pairs made of distinct expressions from file <a href="https://projecteuler.net/project/resources/p674_i_expressions.txt">I-expressions.txt</a> (pairs $(e_1,e_2)$ and $(e_2,e_1)$ are considered to be identical). Give the last nine digits of the result as the answer.</p>
<hr>
<h2 id="求解-mathcal-I-方程"><a href="#求解-mathcal-I-方程" class="headerlink" title="求解$\mathcal{I}$-方程"></a><strong>求解$\mathcal{I}$-方程</strong></h2><p>定义算子$\mathcal{I}$为函数<br>$$\mathcal{I}(x,y) = (1+x+y)^2+y-x$$<br>而$\mathcal{I}$-表达式为仅由变量和应用$\mathcal{I}$算子于变量所构成的算术表达式。变量名可以包含一个或多个字母。例如，如下三个表达式$x$、$\mathcal{I}(x,y)$和$\mathcal{I}(\mathcal{I}(x,ab),x)$都是$\mathcal{I}$-表达式。</p>
<p>若对于两个$\mathcal{I}$-表达式$e_1$和$e_2$，方程$e_1=e_2$有非负整数解，则记$e_1$和$e_2$的最小共值为所有上述方程的非负整数解下$e_1$和$e_2$所能取得的最小值。如果该方程没有非负整数解，则记$e_1$和$e_2$的最小共值为$0$。例如，考虑下面这三个$\mathcal{I}$-表达式：<br>$$\begin{array}{l}A = \mathcal{I}(x,\mathcal{I}(z,t))\<br>B = \mathcal{I}(\mathcal{I}(y,z),y)\<br>C = \mathcal{I}(\mathcal{I}(x,z),y)\end{array}$$<br>$A$和$B$的最小共值为$23$，在$x=3, y=1, z=t=0$时取得；而$A=C$没有非负整数解，因此$A$和$C$的最小共值为$0$。${A,B,C}$中任意两对表达式的最小共值之和为$26$。</p>
<p>在文本文件<a href="https://projecteuler.net/project/resources/p674_i_expressions.txt">I-expressions.txt</a>所包含的所有$\mathcal{I}$-表达式中，求任意两对表达式的最小共值之和（注意$(e_1,e_2)$和$(e_2,e_1)$是相同的一对表达式），并给出其最后九位数字作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 676</title>
    <url>/676/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-676"><a href="#Problem-676" class="headerlink" title="Problem 676"></a><a href="https://projecteuler.net/problem=676">Problem 676</a></h1><hr>
<h2 id="Matching-Digit-Sums"><a href="#Matching-Digit-Sums" class="headerlink" title="Matching Digit Sums"></a><strong>Matching Digit Sums</strong></h2><p>Let $d(i,b)$ be the <strong>digit sum</strong> of the number $i$ in base $b$. For example $d(9,2)=2$, since $9=1001_2$. When using different bases, the respective digit sums most of the time deviate from each other, for example $d(9,4)=3 \ne d(9,2)$.</p>
<p>However, for some numbers $i$ there will be a match, like $d(17,4)=d(17,2)=2$. Let $ M(n,b_1,b_2)$ be the sum of all natural numbers $i \le n$ for which $d(i,b_1)=d(i,b_2)$. For example, $M(10,8,2)=18$, $M(100,8,2)=292$ and $M(10^6,8,2)=19173952$.</p>
<p>Find $\displaystyle \sum_{k=3}^6 \sum_{l=1}^{k-2}M(10^{16},2^k,2^l)$, giving the last $16$ digits as the answer.</p>
<hr>
<h2 id="相同数字和"><a href="#相同数字和" class="headerlink" title="相同数字和"></a><strong>相同数字和</strong></h2><p>记$d(i,b)$为数$i$在$b$进制下的<strong>数字和</strong>。例如，$d(9,2)=2$，因为$9=1001_2$。不同进制下的数字和通常是不同的，例如$d(9,4)=3 \ne d(9,2)$。</p>
<p>然而，对于某些数$i$，在不同进制下的数字和可能会相同，比如$d(17,4)=d(17,2)=2$。记$M(n,b_1,b_2)$为所有满足$i \le n$且$d(i,b_1)=d(i,b_2)$的自然数$i$之和。例如，$M(10,8,2)=18$，$M(100,8,2)=292$，$M(10^6,8,2)=19173952$。</p>
<p>求$\displaystyle \sum_{k=3}^6 \sum_{l=1}^{k-2}M(10^{16},2^k,2^l)$，并给出其最后$16$位数字作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 677</title>
    <url>/677/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-677"><a href="#Problem-677" class="headerlink" title="Problem 677"></a><a href="https://projecteuler.net/problem=677">Problem 677</a></h1><hr>
<h2 id="Coloured-Graphs"><a href="#Coloured-Graphs" class="headerlink" title="Coloured Graphs"></a><strong>Coloured Graphs</strong></h2><p>Let $g(n)$ be the number of <strong>undirected graphs</strong> with $n$ nodes satisfying the following properties:</p>
<ul>
<li>The graph is connected and has no cycles or multiple edges.</li>
<li>Each node is either red, blue, or yellow.</li>
<li>A red node may have no more than $4$ edges connected to it.</li>
<li>A blue or yellow node may have no more than $3$ edges connected to it.</li>
<li>An edge may not directly connect a yellow node to a yellow node.</li>
</ul>
<p>For example, $g(2)=5$, $g(3)=15$, and $g(4) = 57$.<br>You are also given that $g(10) = 710249$ and $g(100) \equiv 919747298 \pmod{1\ 000\ 000\ 007}$.</p>
<p>Find $g(10\ 000) \bmod 1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="图染色"><a href="#图染色" class="headerlink" title="图染色"></a><strong>图染色</strong></h2><p>记$g(n)$为有$n$个结点并满足以下性质的<strong>无向图</strong>总数：</p>
<ul>
<li>该图是连通图、无环、无重边。</li>
<li>每个结点被染上红色、蓝色或黄色之一。</li>
<li>每个红色结点至多与$4$条边相连。</li>
<li>每个蓝色或黄色结点至多与$3$条边相连。</li>
<li>黄色结点之间不能直接相连。</li>
</ul>
<p>例如，$g(2)=5$，$g(3)=15$，$g(4) = 57$。<br>还已知$g(10) = 710249$，$g(100) \equiv 919747298 \pmod{1\ 000\ 000\ 007}$。</p>
<p>求$g(10\ 000) \bmod 1\ 000\ 000\ 007$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 678</title>
    <url>/678/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-678"><a href="#Problem-678" class="headerlink" title="Problem 678"></a><a href="https://projecteuler.net/problem=678">Problem 678</a></h1><hr>
<h2 id="Fermat-like-Equations"><a href="#Fermat-like-Equations" class="headerlink" title="Fermat-like Equations"></a><strong>Fermat-like Equations</strong></h2><p>If a triple of positive integers $(a, b, c)$ satisfies $a^2+b^2=c^2$, it is called a Pythagorean triple. No triple $(a, b, c)$ satisfies $a^e+b^e=c^e$ when $e \ge 3$ (Fermat’s Last Theorem). However, if the exponents of the left-hand side and right-hand side differ, this is not true. For example, $3^3+6^3=3^5$.</p>
<p>Let $a, b, c, e, f$ be all positive integers, $0 \lt a \lt b$, $e \ge 2$, $f \ge 3$ and $c^f \le N$. Let $F(N)$ be the number of $(a, b, c, e, f)$ such that $a^e+b^e=c^f$. You are given $F(10^3) = 7$, $F(10^5) = 53$ and $F(10^7) = 287$.</p>
<p>Find $F(10^{18})$.</p>
<hr>
<h2 id="费马式方程"><a href="#费马式方程" class="headerlink" title="费马式方程"></a><strong>费马式方程</strong></h2><p>若正整数三元组$(a, b, c)$满足$a^2+b^2=c^2$，则称之为毕达哥拉斯三元组。根据费马大定理，对于任意$e \ge 3$，不存在三元组$(a, b, c)$满足$a^e+b^e=c^e$。不过，若等号左侧和右侧所选择的指数不同，则方程可能有解。例如，$3^3+6^3=3^5$。</p>
<p>令$a, b, c, e, f$为正整数，且$0 \lt a \lt b$，$e \ge 2$，$f \ge 3$，$c^f \le N$。记$F(N)$为使得$a^e+b^e=c^f$的数组$(a, b, c, e, f)$总数。已知$F(10^3) = 7$，$F(10^5) = 53$，$F(10^7) = 287$。</p>
<p>求$F(10^{18})$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 679</title>
    <url>/679/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-679"><a href="#Problem-679" class="headerlink" title="Problem 679"></a><a href="https://projecteuler.net/problem=679">Problem 679</a></h1><hr>
<h2 id="FREEFAREA"><a href="#FREEFAREA" class="headerlink" title="FREEFAREA"></a><strong>FREEFAREA</strong></h2><p>Let $S$ be the set consisting of the four letters<br>${\texttt{<code>A&#39;&#125;,\texttt&#123;</code>E’},\texttt{<code>F&#39;&#125;,\texttt&#123;</code>R’}}$.<br>For $n\ge 0$, let $S^*(n)$ denote the set of words of length $n$ consisting of letters belonging to $S$.<br>We designate the words $\texttt{FREE}, \texttt{FARE}, \texttt{AREA}, \texttt{REEF}$ as <i>keywords</i>.</p>
<p>Let $f(n)$ be the number of words in $S^*(n)$ that contains all four keywords exactly once.</p>
<p>This first happens for $n=9$, and indeed there is a unique 9 lettered word that contain each of the keywords once: $\texttt{FREEFAREA}$<br>So, $f(9)=1$.</p>
<p>You are also given that $f(15)=72863$.</p>
<p>Find $f(30)$.</p>
<hr>
<h2 id="FREEFAREA-1"><a href="#FREEFAREA-1" class="headerlink" title="FREEFAREA"></a><strong>FREEFAREA</strong></h2><p>记$S$为包含四个字母的集合${\texttt{<code>A&#39;&#125;,\texttt&#123;</code>E’},\texttt{<code>F&#39;&#125;,\texttt&#123;</code>R’}}$。<br>对于$n\ge 0$，记$S^*(n)$为仅包含$S$中的字母且长度为$n$的字符串所组成的集合。<br>我们选择$\texttt{FREE}, \texttt{FARE}, \texttt{AREA}, \texttt{REEF}$作为<i class=zh>关键词</i>。</p>
<p>记$f(n)$为$S^*(n)$中恰好包含四个关键词各一次的字符串数目。</p>
<p>在$n=9$时首次出现满足要求的字符串，且唯一的拥有$9$个字母的此类字符串是$\texttt{FREEFAREA}$。<br>因此$f(9)=1$。</p>
<p>已知$f(15)=72863$。</p>
<p>求$f(30)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 68</title>
    <url>/68/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-68"><a href="#Problem-68" class="headerlink" title="Problem 68"></a><a href="https://projecteuler.net/problem=68">Problem 68</a></h1><hr>
<h2 id="Magic-5-gon-Ring"><a href="#Magic-5-gon-Ring" class="headerlink" title="Magic 5-gon Ring"></a><strong>Magic 5-gon Ring</strong></h2><p>Consider the following “magic” $3$-gon ring, filled with the numbers $1$ to $6$, and each line adding to nine.</p>
<center>
<img src="/resources/images/0068_1.png" />
</center>

<p>Working <strong>clockwise</strong>, and starting from the group of three with the numerically lowest external node ($4,3,2$ in this example), each solution can be described uniquely. For example, the above solution can be described by the set: $4,3,2; 6,2,1; 5,1,3$.</p>
<p>It is possible to complete the ring with four different totals: $9$, $10$, $11$, and $12$. There are eight solutions in total.</p>
<table>
<thead>
<tr>
<th align="center"><strong>Total</strong></th>
<th align="center"><strong>Solution Set</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="center">$9$</td>
<td align="center">$4,2,3; 5,3,1; 6,1,2$</td>
</tr>
<tr>
<td align="center">$9$</td>
<td align="center">$4,3,2; 6,2,1; 5,1,3$</td>
</tr>
<tr>
<td align="center">$10$</td>
<td align="center">$2,3,5; 4,5,1; 6,1,3$</td>
</tr>
<tr>
<td align="center">$10$</td>
<td align="center">$2,5,3; 6,3,1; 4,1,5$</td>
</tr>
<tr>
<td align="center">$11$</td>
<td align="center">$1,4,6; 3,6,2; 5,2,4$</td>
</tr>
<tr>
<td align="center">$11$</td>
<td align="center">$1,6,4; 5,4,2; 3,2,6$</td>
</tr>
<tr>
<td align="center">$12$</td>
<td align="center">$1,5,6; 2,6,4; 3,4,5$</td>
</tr>
<tr>
<td align="center">$12$</td>
<td align="center">$1,6,5; 3,5,4; 2,4,6$</td>
</tr>
</tbody></table>
<p>By concatenating each group it is possible to form $9$-digit strings; the maximum string for a $3$-gon ring is $432621513$.</p>
<p>Using the numbers $1$ to $10$, and depending on arrangements, it is possible to form $16$- and $17$-digit strings. What is the maximum <strong>$16$-digit</strong> string for a “magic” $5$-gon ring?</p>
<center>
<img src="/resources/images/0068_2.png">
</center>

<hr>
<h2 id="魔力五边形环"><a href="#魔力五边形环" class="headerlink" title="魔力五边形环"></a><strong>魔力五边形环</strong></h2><p>考虑下面这个“魔力”三角形环，在其中填入$1$至$6$这$6$个数，每条线上的三个数加起来都是$9$。</p>
<center>
<img src="/resources/images/0068_1.png">
</center>

<p>从最外侧结点所填的数最小的线（在这个例子中是$4,3,2$）开始，按<strong>顺时针</strong>方向，每个解都能被唯一表述。例如，上面这个解可以记作解集：$4,3,2; 6,2,1; 5,1,3$。</p>
<p>将环填满后，每条线上的总和一共有四种可能：$9$、$10$、$11$和$12$。总共有$8$种填法：</p>
<table>
<thead>
<tr>
<th align="center"><strong>总和</strong></th>
<th align="center"><strong>解集</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="center">$9$</td>
<td align="center">$4,2,3; 5,3,1; 6,1,2$</td>
</tr>
<tr>
<td align="center">$9$</td>
<td align="center">$4,3,2; 6,2,1; 5,1,3$</td>
</tr>
<tr>
<td align="center">$10$</td>
<td align="center">$2,3,5; 4,5,1; 6,1,3$</td>
</tr>
<tr>
<td align="center">$10$</td>
<td align="center">$2,5,3; 6,3,1; 4,1,5$</td>
</tr>
<tr>
<td align="center">$11$</td>
<td align="center">$1,4,6; 3,6,2; 5,2,4$</td>
</tr>
<tr>
<td align="center">$11$</td>
<td align="center">$1,6,4; 5,4,2; 3,2,6$</td>
</tr>
<tr>
<td align="center">$12$</td>
<td align="center">$1,5,6; 2,6,4; 3,4,5$</td>
</tr>
<tr>
<td align="center">$12$</td>
<td align="center">$1,6,5; 3,5,4; 2,4,6$</td>
</tr>
</tbody></table>
<p>把解集中的数字连接起来，可以构造一个$9$位数字串；对于三角形环来说，最大的数字串是$432621513$。</p>
<p>在如下的“魔力”五边形环中，在其中填入$1$至$10$这$10$个数，根据不同的填写方式，可以组成$16$位或$17$位数字串。在“魔力”五边形环中，最大的<strong>$16$位</strong>数字串是多少？</p>
<center>
<img src="/resources/images/0068_2.png">
</center>

<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 680</title>
    <url>/680/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-680"><a href="#Problem-680" class="headerlink" title="Problem 680"></a><a href="https://projecteuler.net/problem=680">Problem 680</a></h1><hr>
<h2 id="Yarra-Gnisrever"><a href="#Yarra-Gnisrever" class="headerlink" title="Yarra Gnisrever"></a><strong>Yarra Gnisrever</strong></h2><p>Let $N$ and $K$ be two positive integers.</p>
<p>$F_n$ is the $n$-th Fibonacci number: $F_1 = F_2 = 1$, $F_n = F_{n - 1} + F_{n - 2}$ for all $n \geq 3$.<br>Let $s_n = F_{2n - 1} \bmod N$ and let $t_n = F_{2n} \bmod N$.</p>
<p>Start with an array of integers $A = (A[0], \cdots, A[N - 1])$ where initially every $A\text{[}i]$ is equal to $i$. Now perform $K$ successive operations on $A$, where the $j$-th operation consists of reversing the order of those elements in $A$ with indices between $s_j$ and $t_j$ (both ends inclusive).</p>
<p>Define $R(N,K)$ to be $\sum_{i = 0}^{N - 1}i \times A\text {[}i]$ after $K$ operations.</p>
<p>For example, $R(5, 4) = 27$, as can be seen from the following procedure:</p>
<p>Initial position: $(0, 1, 2, 3, 4)$<br>Step $1$ - Reverse $A[1]$ to $A[1]$: $(0, 1, 2, 3, 4)$<br>Step $2$ - Reverse $A[2]$ to $A[3]$: $(0, 1, 3, 2, 4)$<br>Step $3$ - Reverse $A[0]$ to $A[3]$: $(2, 3, 1, 0, 4)$<br>Step $4$ - Reverse $A[3]$ to $A[1]$: $(2, 0, 1, 3, 4)$<br>$R(5, 4) = 0 \times 2 + 1 \times 0 + 2 \times 1 + 3 \times 3 + 4 \times 4 = 27$</p>
<p>Also, $R(10^2, 10^2) = 246597$ and $R(10^4, 10^4) = 249275481640$.</p>
<p>Find $R(10^{18}, 10^6)$ giving your answer modulo $10^9$.</p>
<hr>
<h2 id="组数转逆"><a href="#组数转逆" class="headerlink" title="组数转逆"></a><strong>组数转逆</strong></h2><p>任取两个正整数$N$和$K$。</p>
<p>$F_n$是第$n$个斐波那契数：$F_1 = F_2 = 1$，对于所有$n\geq 3$，$F_n = F_{n - 1} + F_{n - 2}$。<br>令$s_n = F_{2n - 1} \bmod N$，$t_n = F_{2n} \bmod N$。</p>
<p>在初始状态下，整数数组$A = (A[0], \cdots, A[N - 1])$中，$A\text{[}i]$等于$i$。现在，对$A$进行连续的$K$次逆转操作，其中第$j$次操作将数组$A$中下标在$s_j$和$t_j$之间（包含两端）的元素逆序排列。</p>
<p>完成$K$次操作后，记$R(N,K)$为$\sum_{i = 0}^{N - 1}i \times A\text {[}i]$。</p>
<p>例如，$R(5, 4) = 27$，其操作和计算过程如下所示：</p>
<p>初始状态：$(0, 1, 2, 3, 4)$<br>第$1$步 - 将$A[1]$至$A[1]$逆转：$(0, 1, 2, 3, 4)$<br>第$2$步 - 将$A[2]$至$A[3]$逆转：$(0, 1, 3, 2, 4)$<br>第$3$步 - 将$A[0]$至$A[3]$逆转：$(2, 3, 1, 0, 4)$<br>第$4$步 - 将$A[3]$至$A[1]$逆转：$(2, 0, 1, 3, 4)$<br>$R(5, 4) = 0 \times 2 + 1 \times 0 + 2 \times 1 + 3 \times 3 + 4 \times 4 = 27$</p>
<p>已知，$R(10^2, 10^2) = 246597$，$R(10^4, 10^4) = 249275481640$。</p>
<p>求$R(10^{18}, 10^6)$并将你的答案对$10^9$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 681</title>
    <url>/681/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-681"><a href="#Problem-681" class="headerlink" title="Problem 681"></a><a href="https://projecteuler.net/problem=681">Problem 681</a></h1><hr>
<h2 id="Maximal-Area"><a href="#Maximal-Area" class="headerlink" title="Maximal Area"></a><strong>Maximal Area</strong></h2><p>Given positive integers $a \le b \le c \le d$, it may be possible to form quadrilaterals with edge lengths $a$, $b$, $c$, $d$ (in any order). When this is the case, let $M(a,b,c,d)$ denote the maximal area of such a quadrilateral.<br>For example, $M(2,2,3,3)=6$, attained e.g. by a $2\times 3$ rectangle.</p>
<p>Let $SP(n)$ be the sum of $a+b+c+d$ over all choices $a \le b \le c \le d$ for which $M(a,b,c,d)$ is a positive integer not exceeding $n$.<br>$SP(10)=186$ and $SP(100)=23238$.</p>
<p>Find $SP(1\ 000\ 000)$.</p>
<hr>
<h2 id="最大面积"><a href="#最大面积" class="headerlink" title="最大面积"></a><strong>最大面积</strong></h2><p>对于给定正整数$a \le b \le c \le d$，有时能找到边长分别为$a$、$b$、$c$、$d$的四边形（未必按照这一顺序）。当存在这样的四边形时，记$M(a,b,c,d)$为所有此类四边形的最大面积。<br>例如，$M(2,2,3,3)=6$，这一最大面积在构成$2\times 3$的长方形时取得。</p>
<p>考虑所有满足$a \le b \le c \le d$且$M(a,b,c,d)$为不超过$n$的正整数的四元组$(a,b,c,d)$，并记所有这些四元组对应的$a+b+c+d$之和为$SP(n)$.<br>已知$SP(10)=186$，$SP(100)=23238$。</p>
<p>求$SP(1\ 000\ 000)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 682</title>
    <url>/682/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-682"><a href="#Problem-682" class="headerlink" title="Problem 682"></a><a href="https://projecteuler.net/problem=682">Problem 682</a></h1><hr>
<h2 id="5-Smooth-Pairs"><a href="#5-Smooth-Pairs" class="headerlink" title="$5$-Smooth Pairs"></a><strong>$5$-Smooth Pairs</strong></h2><p>$5$-smooth numbers are numbers whose largest prime factor doesn’t exceed $5$.<br>$5$-smooth numbers are also called Hamming numbers.</p>
<p>Let $\Omega(a)$ be the count of prime factors of $a$ (counted with multiplicity).<br>Let $s(a)$ be the sum of the prime factors of $a$ (with multiplicity).<br>For example, $\Omega(300) = 5$ and $s(300) = 2+2+3+5+5 = 17$.</p>
<p>Let $f(n)$ be the number of pairs, $(p,q)$, of Hamming numbers such that $\Omega(p)=\Omega(q)$ and $s(p)+s(q)=n$.<br>You are given $f(10)=4$ (the pairs are $(4,9),(5,5),(6,6),(9,4)$) and $f(10^2)=3629$.</p>
<p>Find $f(10^7) \bmod 1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="5-光滑数对"><a href="#5-光滑数对" class="headerlink" title="$5$-光滑数对"></a><strong>$5$-光滑数对</strong></h2><p>$5$-光滑数是指最大质因数不超过$5$的数。<br>$5$-光滑数也被称为汉明数。</p>
<p>记$\Omega(a)$为$a$的质因数数目（包括重复的质因数）。<br>记$s(a)$为$a$的质因数之和（包括重复的质因数）。<br>例如，$\Omega(300) = 5$，$s(300) = 2+2+3+5+5 = 17$。</p>
<p>记$f(n)$为所有满足$\Omega(p)=\Omega(q)$和$s(p)+s(q)=n$的汉明数对$(p,q)$的数目。<br>已知$f(10)=4$（包括$(4,9),(5,5),(6,6),(9,4)$），$f(10^2)=3629$。</p>
<p>求$f(10^7) \bmod 1\ 000\ 000\ 007$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 683</title>
    <url>/683/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-683"><a href="#Problem-683" class="headerlink" title="Problem 683"></a><a href="https://projecteuler.net/problem=683">Problem 683</a></h1><hr>
<h2 id="The-Chase-II"><a href="#The-Chase-II" class="headerlink" title="The Chase II"></a><strong>The Chase II</strong></h2><p>Consider the following variant of “The Chase” game. This game is played between $n$ players sitting around a circular table using two dice. It consists of $n-1$ rounds, and at the end of each round one player is eliminated and has to pay a certain amount of money into a pot. The last player remaining is the winner and receives the entire contents of the pot.</p>
<p>At the beginning of a round, each die is given to a randomly selected player. A round then consists of a number of turns.</p>
<p>During each turn, each of the two players with a die rolls it. If a player rolls a $1$ or a $2$, the die is passed to the neighbour on the left; if the player rolls a $5$ or a $6$, the die is passed to the neighbour on the right; otherwise, the player keeps the die for the next turn.</p>
<p>The round ends when one player has both dice at the beginning of a turn. At which point that player is immediately eliminated and has to pay $s^2$ where $s$ is the number of completed turns in this round. Note that if both dice happen to be handed to the same player at the beginning of a round, then no turns are completed, so the player is eliminated without having to pay any money into the pot.</p>
<p>Let $G(n)$ be the expected amount that the winner will receive. For example $G(5)$ is approximately $96.544$, and $G(50)$ is $2.82491788e6$ in scientific notation rounded to $9$ significant digits.</p>
<p>Find $G(500)$, giving your answer in scientific notation rounded to $9$ significant digits.</p>
<hr>
<h2 id="追赶游戏II"><a href="#追赶游戏II" class="headerlink" title="追赶游戏II"></a><strong>追赶游戏II</strong></h2><p>“追赶游戏”的如下变种需要$n$名玩家和两个骰子，游戏开始时这些玩家围坐在一张圆形桌子周围。游戏共分为$n-1$轮，每一轮结束时中淘汰一名玩家，被淘汰的玩家必须向奖池支付一笔特定金额的奖金，最终存活的玩家获胜并获得奖池中的所有奖金。</p>
<p>在每一轮开始时，两个骰子分别随机交给一名玩家。每一轮由多个回合组成：</p>
<p>在每一回合，当前持有骰子的两名玩家分别抛掷骰子。如果玩家掷出$1$或$2$，则将骰子交给其左手边的玩家；如果玩家掷出$5$或$6$，则将骰子交给右手边的玩家；否则，玩家保留手上的骰子进入下一回合。</p>
<p>如果某一回合开始时，一名玩家手上同时持有两个骰子，则本轮结束。这名玩家将被淘汰，同时，若本轮已经进行了$s$个回合，则该玩家必须向奖池支付金额为$s^2$的奖金。注意，如果在第一回合开始时，两个骰子恰好被交给了同一名玩家，由于之前没有进行过任何回合，因此这名玩家被淘汰的同时不需要支付奖金。</p>
<p>记$G(n)$为获胜者所获得奖池中总奖金的期望。例如，$G(5)$约等于$96.544$，在采用科学计数法并保留$9$位有效数字时$G(50)$约等于$2.82491788e6$。</p>
<p>求$G(500)$，将你的答案用科学计数法表示并保留$9$位有效数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 684</title>
    <url>/684/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-684"><a href="#Problem-684" class="headerlink" title="Problem 684"></a><a href="https://projecteuler.net/problem=684">Problem 684</a></h1><hr>
<h2 id="Inverse-Digit-Sum"><a href="#Inverse-Digit-Sum" class="headerlink" title="Inverse Digit Sum"></a><strong>Inverse Digit Sum</strong></h2><p>Define $s(n)$ to be the smallest number that has a digit sum of $n$. For example $s(10) = 19$.<br>Let $\displaystyle S(k) = \sum_{n=1}^k s(n)$. You are given $S(20) = 1074$.</p>
<p>Further let $f_i$ be the Fibonacci sequence defined by $f_0=0, f_1=1$ and $f_i=f_{i-2}+f_{i-1}$ for all $i \ge 2$.</p>
<p>Find $\displaystyle \sum_{i=2}^{90} S(f_i)$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="数字和的逆函数"><a href="#数字和的逆函数" class="headerlink" title="数字和的逆函数"></a><strong>数字和的逆函数</strong></h2><p>记 $s(n)$为最小的数字和为$n$的数。例如$s(10) = 19$。<br>记$\displaystyle S(k) = \sum_{n=1}^k s(n)$。已知$S(20) = 1074$。</p>
<p>记$f_i$为斐波那契数列，其中$f_0=0$，$f_1=1$，对任意$i \ge 2$有$f_i=f_{i-2}+f_{i-1}$。</p>
<p>求$\displaystyle \sum_{i=2}^{90} S(f_i)$。将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 685</title>
    <url>/685/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-685"><a href="#Problem-685" class="headerlink" title="Problem 685"></a><a href="https://projecteuler.net/problem=685">Problem 685</a></h1><hr>
<h2 id="Inverse-Digit-Sum-II"><a href="#Inverse-Digit-Sum-II" class="headerlink" title="Inverse Digit Sum II"></a><strong>Inverse Digit Sum II</strong></h2><p>Writing down the numbers which have a digit sum of $10$ in ascending order, we get: $19, 28, 37, 46, 55, 64, 73, 82, 91, 109, 118, \dots$</p>
<p>Let $f(n,m)$ be the $m^{\text{th}}$ occurrence of the digit sum $n$. For example, $f(10,1)=19$, $f(10,10)=109$ and $f(10,100)=1423$.</p>
<p>Let $\displaystyle S(k)=\sum_{n=1}^k f(n^3,n^4)$. For example $S(3)=7128$ and $S(10)\equiv 32287064 \mod 1\ 000\ 000\ 007$.</p>
<p>Find $S(10\ 000)$ modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="数字和的逆函数II"><a href="#数字和的逆函数II" class="headerlink" title="数字和的逆函数II"></a><strong>数字和的逆函数II</strong></h2><p>从小到大排列，数字和为$10$的数包括：$19, 28, 37, 46, 55, 64, 73, 82, 91, 109, 118, \dots$</p>
<p>记$f(n,m)$为第$m$个数字和为$n$的数。例如，$f(10,1)=19$，$f(10,10)=109$，$f(10,100)=1423$。</p>
<p>记$\displaystyle S(k)=\sum_{n=1}^k f(n^3,n^4)$。例如$S(3)=7128$，$S(10)\equiv 32287064 \bmod 1\ 000\ 000\ 007$。</p>
<p>求$S(10\ 000)$并对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 686</title>
    <url>/686/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-686"><a href="#Problem-686" class="headerlink" title="Problem 686"></a><a href="https://projecteuler.net/problem=686">Problem 686</a></h1><hr>
<h2 id="Powers-of-Two"><a href="#Powers-of-Two" class="headerlink" title="Powers of Two"></a><strong>Powers of Two</strong></h2><p>$2^7=128$ is the first power of two whose leading digits are “$12$”.<br>The next power of two whose leading digits are “$12$” is $2^{80}$.</p>
<p>Define $p(L, n)$ to be the $n$th-smallest value of $j$ such that the base $10$ representation of $2^j$ begins with the digits of $L$.<br>So $p(12, 1) = 7$ and $p(12, 2) = 80$.</p>
<p>You are also given that $p(123, 45) = 12710$.</p>
<p>Find $p(123, 678910)$.</p>
<hr>
<h2 id="二的幂"><a href="#二的幂" class="headerlink" title="二的幂"></a><strong>二的幂</strong></h2><p>在二的幂中，第一个拥有前导数字“$12$”的是$2^7=128$。下一个拥有前导数字“$12$”的二的幂是$2^{80}$。</p>
<p>记$p(L, n)$为第$n$个使得$10$进制表示的$2^j$拥有前导数字$L$的数$j$。<br>因此$p(12, 1) = 7$，$p(12, 2) = 80$。</p>
<p>已知$p(123, 45) = 12710$。</p>
<p>求$p(123, 678910)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 687</title>
    <url>/687/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-687"><a href="#Problem-687" class="headerlink" title="Problem 687"></a><a href="https://projecteuler.net/problem=687">Problem 687</a></h1><hr>
<h2 id="Shuffling-Cards"><a href="#Shuffling-Cards" class="headerlink" title="Shuffling Cards"></a><strong>Shuffling Cards</strong></h2><p>A standard deck of $52$ playing cards, which consists of thirteen ranks (Ace, Two, …, Ten, King, Queen and Jack) each in four suits (Clubs, Diamonds, Hearts and Spades), is randomly shuffled.  Let us call a rank <i>perfect</i> if no two cards of that same rank appear next to each other after the shuffle.</p>
<p>It can be seen that the expected number of ranks that are perfect after a random shuffle equals $\frac {4324} {425} \approx 10.1741176471$.</p>
<p>Find the probability that the number of perfect ranks is prime. Give your answer rounded to $10$ decimal places.</p>
<hr>
<h2 id="洗牌"><a href="#洗牌" class="headerlink" title="洗牌"></a><strong>洗牌</strong></h2><p>一副拿走大小王的标准扑克牌有$52$张牌，分为四种花色（草花、方块、红心、黑桃）和十三套点数（$A$，$2$，……，$10$，$J$，$Q$，$K$）。在洗牌之后，如果某套点数的四张牌相互之间都不紧挨着，则称这套点数被<i class=zh>完美洗开</i>了。</p>
<p>可以计算出，洗一次牌之后，被完美洗开的点数的期望是$\frac {4324} {425} \approx 10.1741176471$套。</p>
<p>求被完美洗开的点数恰好有质数套的概率，并将你的答案保留小数点后$10$位。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 688</title>
    <url>/688/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-688"><a href="#Problem-688" class="headerlink" title="Problem 688"></a><a href="https://projecteuler.net/problem=688">Problem 688</a></h1><hr>
<h2 id="Piles-of-Plates"><a href="#Piles-of-Plates" class="headerlink" title="Piles of Plates"></a><strong>Piles of Plates</strong></h2><p>We stack $n$ plates into $k$ non-empty piles where each pile is a different size. Define $f(n,k)$ to be the maximum number of plates possible in the smallest pile. For example when $n = 10$ and $k = 3$ the piles $2,3,5$ is the best that can be done and so $f(10,3) = 2$. It is impossible to divide $10$ into $5$ non-empty differently-sized piles and hence $f(10,5) = 0$.</p>
<p>Define $F(n)$ to be the sum of $f(n,k)$ for all possible pile sizes $k\ge 1$. For example $F(100) = 275$.</p>
<p>Further define $S(N) = \displaystyle\sum_{n=1}^N F(n)$. You are given $S(100) = 12656$.</p>
<p>Find $S(10^{16})$ giving your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="盘子分堆"><a href="#盘子分堆" class="headerlink" title="盘子分堆"></a><strong>盘子分堆</strong></h2><p>将$n$个盘子分为$k$堆，每一堆既不能为空，也不能与另一堆有相同数量的盘子，并记$f(n,k)$为所有分法中最少的那堆可能分得的最大盘子数量。例如，若$n = 10$，$k = 3$，那么最理想的分法是$2,3,5$，因此$f(10,3) = 2$。由于无法将$10$个盘子按照上述要求分为$5$堆，因此$f(10,5) = 0$。</p>
<p>记$F(n)$为所有堆数$k\ge 1$的$f(n,k)$之和。例如，$F(100) = 275$。</p>
<p>再记$S(N) = \displaystyle\sum_{n=1}^N F(n)$。已知$S(100) = 12656$。</p>
<p>求$S(10^{16})$并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 689</title>
    <url>/689/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-689"><a href="#Problem-689" class="headerlink" title="Problem 689"></a><a href="https://projecteuler.net/problem=689">Problem 689</a></h1><hr>
<h2 id="Binary-Series"><a href="#Binary-Series" class="headerlink" title="Binary Series"></a><strong>Binary Series</strong></h2><p>For $0 \le x \lt 1$, define $d_i(x)$ to be the $i$th digit after the binary point of the binary representation of $x$.<br>For example $d_2(0.25) = 1$, $d_i(0.25) = 0$ for $i \ne 2$.</p>
<p>Let $f(x) = \displaystyle{\sum_{i=1}^{\infty}\frac{d_i(x)}{i^2}}$.</p>
<p>Let $p(a)$ be probability that $f(x) \gt a$, given that $x$ is uniformly distributed between $0$ and $1$.</p>
<p>Find $p(0.5)$. Give your answer rounded to $8$ digits after the decimal point.</p>
<hr>
<h2 id="二进制级数"><a href="#二进制级数" class="headerlink" title="二进制级数"></a><strong>二进制级数</strong></h2><p>对于任意$0 \le x \lt 1$，记$d_i(x)$为$x$的二进制表示中小数点后第$i$位数字。<br>例如，$d_2(0.25) = 1$，而对所有$i \ne 2$则有$d_i(0.25)=0$。</p>
<p>记$f(x) = \displaystyle{\sum_{i=1}^{\infty}\frac{d_i(x)}{i^2}}$。</p>
<p>若$x$在$0$和$1$之间均匀分布，记$p(a)$为$f(x) \gt a$的概率。</p>
<p>求$p(0.5)$，并将你的答案保留小数点后$8$位数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 69</title>
    <url>/69/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-69"><a href="#Problem-69" class="headerlink" title="Problem 69"></a><a href="https://projecteuler.net/problem=69">Problem 69</a></h1><hr>
<h2 id="Totient-Maximum"><a href="#Totient-Maximum" class="headerlink" title="Totient Maximum"></a><strong>Totient Maximum</strong></h2><p>Euler’s Totient function, $\varphi(n)$ [sometimes called the phi function], is used to determine the number of numbers less than $n$ which are relatively prime to $n$. For example, as $1$, $2$, $4$, $5$, $7$, and $8$, are all less than nine and relatively prime to nine, $\varphi(9)=6$.</p>
<table>
<thead>
<tr>
<th align="center"><strong>$n$</strong></th>
<th align="center"><strong>Relatively Prime</strong></th>
<th align="center"><strong>$\varphi(n)$</strong></th>
<th align="center"><strong>$n/\varphi(n)$</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="center">$2$</td>
<td align="center">$1$</td>
<td align="center">$1$</td>
<td align="center">$2$</td>
</tr>
<tr>
<td align="center">$3$</td>
<td align="center">$1,2$</td>
<td align="center">$2$</td>
<td align="center">$1.5$</td>
</tr>
<tr>
<td align="center">$4$</td>
<td align="center">$1,3$</td>
<td align="center">$2$</td>
<td align="center">$2$</td>
</tr>
<tr>
<td align="center">$5$</td>
<td align="center">$1,2,3,4$</td>
<td align="center">$4$</td>
<td align="center">$1.25$</td>
</tr>
<tr>
<td align="center">$6$</td>
<td align="center">$1,5$</td>
<td align="center">$2$</td>
<td align="center">$3$</td>
</tr>
<tr>
<td align="center">$7$</td>
<td align="center">$1,2,3,4,5,6$</td>
<td align="center">$6$</td>
<td align="center">$1.1666\ldots$</td>
</tr>
<tr>
<td align="center">$8$</td>
<td align="center">$1,3,5,7$</td>
<td align="center">$4$</td>
<td align="center">$2$</td>
</tr>
<tr>
<td align="center">$9$</td>
<td align="center">$1,2,4,5,7,8$</td>
<td align="center">$6$</td>
<td align="center">$1.5$</td>
</tr>
<tr>
<td align="center">$10$</td>
<td align="center">$1,3,7,9$</td>
<td align="center">$4$</td>
<td align="center">$2.5$</td>
</tr>
</tbody></table>
<p>It can be seen that $n=6$ produces a maximum $n/\varphi(n)$ for $n \le 10$.</p>
<p>Find the value of $n \le 1,000,000$ for which $n/\varphi(n)$ is a maximum.</p>
<hr>
<h2 id="欧拉总计函数与最大值"><a href="#欧拉总计函数与最大值" class="headerlink" title="欧拉总计函数与最大值"></a><strong>欧拉总计函数与最大值</strong></h2><p>小于$n$且与$n$互质的正整数的数量记为欧拉总计函数$\varphi(n)$。例如，$1$、$2$、$4$、$5$、$7$和$8$均小于$9$且与$9$互质，因此$\varphi(9)=6$。</p>
<table>
<thead>
<tr>
<th align="center"><strong>$n$</strong></th>
<th align="center"><strong>互质的数</strong></th>
<th align="center"><strong>$\varphi(n)$</strong></th>
<th align="center"><strong>$n/\varphi(n)$</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="center">$2$</td>
<td align="center">$1$</td>
<td align="center">$1$</td>
<td align="center">$2$</td>
</tr>
<tr>
<td align="center">$3$</td>
<td align="center">$1,2$</td>
<td align="center">$2$</td>
<td align="center">$1.5$</td>
</tr>
<tr>
<td align="center">$4$</td>
<td align="center">$1,3$</td>
<td align="center">$2$</td>
<td align="center">$2$</td>
</tr>
<tr>
<td align="center">$5$</td>
<td align="center">$1,2,3,4$</td>
<td align="center">$4$</td>
<td align="center">$1.25$</td>
</tr>
<tr>
<td align="center">$6$</td>
<td align="center">$1,5$</td>
<td align="center">$2$</td>
<td align="center">$3$</td>
</tr>
<tr>
<td align="center">$7$</td>
<td align="center">$1,2,3,4,5,6$</td>
<td align="center">$6$</td>
<td align="center">$1.1666\ldots$</td>
</tr>
<tr>
<td align="center">$8$</td>
<td align="center">$1,3,5,7$</td>
<td align="center">$4$</td>
<td align="center">$2$</td>
</tr>
<tr>
<td align="center">$9$</td>
<td align="center">$1,2,4,5,7,8$</td>
<td align="center">$6$</td>
<td align="center">$1.5$</td>
</tr>
<tr>
<td align="center">$10$</td>
<td align="center">$1,3,7,9$</td>
<td align="center">$4$</td>
<td align="center">$2.5$</td>
</tr>
</tbody></table>
<p>可以看出，对于$n \le 10$，当$n=6$时$n/\varphi(n)$取得最大值。</p>
<p>对于$n \le 1,000,000$，求使得$n/\varphi(n)$取得最大值的$n$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 690</title>
    <url>/690/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-690"><a href="#Problem-690" class="headerlink" title="Problem 690"></a><a href="https://projecteuler.net/problem=690">Problem 690</a></h1><hr>
<h2 id="Tom-and-Jerry"><a href="#Tom-and-Jerry" class="headerlink" title="Tom and Jerry"></a><strong>Tom and Jerry</strong></h2><p>Tom (the cat) and Jerry (the mouse) are playing on a simple graph $G$.</p>
<p>Every vertex of $G$ is a mousehole, and every edge of $G$ is a tunnel connecting two mouseholes.</p>
<p>Originally, Jerry is hiding in one of the mouseholes.<br>Every morning, Tom can check one (and only one) of the mouseholes. If Jerry happens to be hiding there then Tom catches Jerry and the game is over.<br>Every evening, if the game continues, Jerry moves to a mousehole which is adjacent (i.e. connected by a tunnel, if there is one available) to his current hiding place. The next morning Tom checks again and the game continues like this.</p>
<p>Let us call a graph $G$ a <i>Tom graph</i>, if our super-smart Tom, who knows the configuration of the graph but does not know the location of Jerry, can <i>guarantee</i> to catch Jerry in finitely many days. For example consider all graphs on $3$ nodes:</p>
<p><img src="/resources/images/0690_graphs.jpg" alt="&quot;Graphs on 3 nodes&quot;"></p>
<p>For graphs $1$ and $2$, Tom will catch Jerry in at most three days. For graph $3$ Tom can check the middle connection on two consecutive days and hence guarantee to catch Jerry in at most two days. These three graphs are therefore Tom Graphs. However, graph $4$ is not a Tom Graph because the game could potentially continue forever.</p>
<p>Let $T(n)$ be the number of different Tom graphs with $n$ vertices. Two graphs are considered the same if there is a bijection $f$ between their vertices, such that $(v,w)$ is an edge if and only if $(f(v),f(w))$ is an edge.</p>
<p>We have $T(3) = 3$, $T(7) = 37$, $T(10) = 328$ and $T(20) = 1416269$.</p>
<p>Find $T(2019)$ giving your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="猫和老鼠"><a href="#猫和老鼠" class="headerlink" title="猫和老鼠"></a><strong>猫和老鼠</strong></h2><p>汤姆（猫）和杰瑞（老鼠）在玩游戏，他们玩游戏的地图可以用简单图$G$表示。</p>
<p>$G$中的每一个顶点代表一个老鼠洞，而$G$中的每一条边代表连通两个老鼠洞的一条地道。</p>
<p>一开始，杰瑞躲在其中一个老鼠洞中。<br>每天早上，汤姆可以查看一个老鼠洞。如果杰瑞恰好躲在这个老鼠洞中，那么汤姆抓住杰瑞，游戏结束。<br>每天晚上，如果游戏没有结束，杰瑞会从当前藏身的老鼠洞移动到一个相邻（有地道直接相连）的老鼠洞。第二天早上再次轮到汤姆查看一个老鼠洞，依此类推。</p>
<p>汤姆不知道杰瑞的位置，但他知道图$G$的形状，如果超级聪明的汤姆能<i class=zh>保证</i>在有限天内抓住杰瑞，那么我们称图$G$为<i class=zh>汤姆图</i>。考虑如下有$3$个顶点的图：</p>
<p><img src="/resources/images/0690_graphs.jpg" alt="“有3个顶点的图”"></p>
<p>对于图$1$和$2$，汤姆可以在至多三天内抓住杰瑞。对于图$3$，汤姆只需连续两天都检查右下角的老鼠洞，就能保证在至多两天内抓住杰瑞。因此这三张图都是汤姆图。然而，图$4$不是汤姆图，因为这个游戏有可能永远不会结束。</p>
<p>记$T(n)$为有$n$个顶点的不同汤姆图的数量。如果两张图的顶点间存在双射$f$，使得$(v,w)$是第一张图的一条边当且仅当$(f(v),f(w))$是第二张图的一条边，这两张图就被认为是相同的图。</p>
<p>已知$T(3) = 3$，$T(7) = 37$，$T(10) = 328$，$T(20) = 1416269$。</p>
<p>求$T(2019)$并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 691</title>
    <url>/691/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-691"><a href="#Problem-691" class="headerlink" title="Problem 691"></a><a href="https://projecteuler.net/problem=691">Problem 691</a></h1><hr>
<h2 id="Long-substring-with-many-repetitions"><a href="#Long-substring-with-many-repetitions" class="headerlink" title="Long substring with many repetitions"></a><strong>Long substring with many repetitions</strong></h2><p>Given a character string $s$, we define $L(k,s)$ to be the length of the longest substring of $s$ which appears at least $k$ times in $s$, or $0$ if such a substring does not exist. For example, $L(3,\text{“bbabcabcabcacba”})=4$ because of the three occurrences of the substring $\text{“abca”}$, and $L(2,\text{“bbabcabcabcacba”})=7$ because of the repeated substring $\text{“abcabca”}$. Note that the occurrences can overlap.</p>
<p>Let $a_n$, $b_n$ and $c_n$ be the $0/1$ sequences defined by:</p>
<ul>
<li>$a_0 = 0$</li>
<li>$a_{2n} = a_{n}$</li>
<li>$a_{2n+1} = 1-a_{n}$</li>
<li>$b_n = \lfloor\frac{n+1}{\varphi}\rfloor - \lfloor\frac{n}{\varphi}\rfloor$ (where $\varphi$ is the golden ratio)</li>
<li>$c_n = a_n + b_n - 2a_nb_n$</li>
</ul>
<p>and $S_n$ the character string $c_0\ldots c_{n-1}$. You are given that $L(2,S_{10})=5$, $L(3,S_{10})=2$, $L(2,S_{100})=14$, $L(4,S_{100})=6$, $L(2,S_{1000})=86$, $L(3,S_{1000}) = 45$, $L(5,S_{1000}) = 31$, and that the sum of non-zero $L(k,S_{1000})$ for $k\ge 1$ is $2460$.</p>
<p>Find the sum of non-zero $L(k,S_{5000000})$ for $k\ge 1$.</p>
<hr>
<h2 id="多次重复的长子串"><a href="#多次重复的长子串" class="headerlink" title="多次重复的长子串"></a><strong>多次重复的长子串</strong></h2><p>给定字符串$s$，记$L(k,s)$为在$s$中至少重复出现$k$次的子串中最长子串的长度，如果这样的子串不存在则取$0$。例如，$L(3,\text{“bbabcabcabcacba”})=4$，因为子串$\text{“abca”}$重复出现了三次；而$L(2,\text{“bbabcabcabcacba”})=7$因为子串$\text{“abcabca”}$重复出现了两次。注意子串的多次出现之间允许重复使用字符。</p>
<p>记$a_n$、$b_n$和$c_n$为由如下规则生成的$0/1$序列：</p>
<ul>
<li>$a_0 = 0$</li>
<li>$a_{2n} = a_{n}$</li>
<li>$a_{2n+1} = 1-a_{n}$</li>
<li>$b_n = \lfloor\frac{n+1}{\varphi}\rfloor - \lfloor\frac{n}{\varphi}\rfloor$（其中$\varphi$表示黄金比$\frac{1+\sqrt{5}}{2}$）</li>
<li>$c_n = a_n + b_n - 2a_nb_n$</li>
</ul>
<p>记$S_n$为字符串$c_0\ldots c_{n-1}$。已知$L(2,S_{10})=5$，$L(3,S_{10})=2$，$L(2,S_{100})=14$，$L(4,S_{100})=6$，$L(2,S_{1000})=86$，$L(3,S_{1000}) = 45$，$L(5,S_{1000}) = 31$，而对于任意$k\ge 1$，所有非零的$L(k,S_{1000})$之和为$2460$。</p>
<p>对于任意$k\ge 1$，求所有非零的$L(k,S_{5000000})$之和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 692</title>
    <url>/692/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-692"><a href="#Problem-692" class="headerlink" title="Problem 692"></a><a href="https://projecteuler.net/problem=692">Problem 692</a></h1><hr>
<h2 id="Siegbert-and-Jo"><a href="#Siegbert-and-Jo" class="headerlink" title="Siegbert and Jo"></a><strong>Siegbert and Jo</strong></h2><p>Siegbert and Jo take turns playing a game with a heap of $N$ pebbles:</p>
<ol>
<li>Siegbert is the first to take some pebbles. He can take as many pebbles as he wants. (Between $1$ and $N$ inclusive.)</li>
<li>In each of the following turns the current player must take at least one pebble and at most twice the amount of pebbles taken by the previous player.</li>
<li>The player who takes the last pebble wins.</li>
</ol>
<p>Although Siegbert can always win by taking all the pebbles on his first turn, to make the game more interesting he chooses to take the smallest number of pebbles that guarantees he will still win (assuming both Siegbert and Jo play optimally for the rest of the game).</p>
<p>Let $H(N)$ be that minimal amount for a heap of $N$ pebbles.<br>$H(1)=1$, $H(4)=1$, $H(17)=1$, $H(8)=8$ and $H(18)=5$ .</p>
<p>Let $G(n)$ be $\displaystyle{\sum_{k=1}^n H(k)}$.<br>$G(13)=43$.</p>
<p>Find $G(23416728348467685)$.</p>
<hr>
<h2 id="西格贝特和乔"><a href="#西格贝特和乔" class="headerlink" title="西格贝特和乔"></a><strong>西格贝特和乔</strong></h2><p>西格贝特和乔在玩一个游戏，这个游戏需要一堆共$N$枚石子，两人轮流行动：</p>
<ol>
<li>西格贝特先行，他可以从堆中取$1$到$N$之间任意数目的石子。</li>
<li>接下来的每一轮，当前行动的玩家最少取一枚石子，最多取前一轮行动的玩家所取数目两倍的石子。</li>
<li>拿走最后一枚石子的玩家获胜。</li>
</ol>
<p>虽然西格贝特总是能够在第一轮拿走所有的石子从而获胜，为了让这个游戏更有趣，他在第一轮在保证获胜的基础上取走最少数目的石子（假设西格贝特和乔在接下来的行动中总是采取最优行动）。</p>
<p>记$H(N)$为有$N$枚石子时，第一轮所必需取走的最少石子数目。<br>已知$H(1)=1$，$H(4)=1$，$H(17)=1$，$H(8)=8$，$H(18)=5$。</p>
<p>记$G(n)$为$\displaystyle{\sum_{k=1}^n H(k)}$。<br>已知$G(13)=43$。</p>
<p>求$G(23416728348467685)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 693</title>
    <url>/693/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-693"><a href="#Problem-693" class="headerlink" title="Problem 693"></a><a href="https://projecteuler.net/problem=693">Problem 693</a></h1><hr>
<h2 id="Finite-Sequence-Generator"><a href="#Finite-Sequence-Generator" class="headerlink" title="Finite Sequence Generator"></a><strong>Finite Sequence Generator</strong></h2><p>Two positive integers $x$ and $y$ ($x&gt;y$) can generate a sequence in the following manner:</p>
<ul>
<li>$a_x = y$ is the first term,</li>
<li>$a_{z+1} = a_z^2 \bmod z$ for $z = x, x+1,x+2,\ldots$ and</li>
<li>the generation stops when a term becomes $0$ or $1$.</li>
</ul>
<p>The number of terms in this sequence is denoted $l(x,y)$.</p>
<p>For example, with $x = 5$ and $y = 3$, we get $a_5 = 3$, $a_6 = 3^2 \bmod 5 = 4$, $a_7 = 4^2\bmod 6 = 4$, etc. Giving the sequence of $29$ terms:<br>$3,4,4,2,4,7,9,4,4,3,9,6,4,16,4,16,16,4,16,3,9,6,10,19,25,16,16,8,0$<br>Hence $l(5,3) = 29$.</p>
<p>$g(x)$ is defined to be the maximum value of $l(x,y)$ for $y&lt;x$. For example, $g(5) = 29$.</p>
<p>Further, define $f(n)$ to be the maximum value of $g(x)$ for $x \le n$. For example, $f(100) = 145$ and $f(10\ 000) = 8824$.</p>
<p>Find $f(3\ 000\ 000)$.</p>
<hr>
<h2 id="有限数列生成器"><a href="#有限数列生成器" class="headerlink" title="有限数列生成器"></a><strong>有限数列生成器</strong></h2><p>对两个任意正整数$x$和$y$（其中$x&gt;y$），可以按照如下方式生成数列：</p>
<ul>
<li>数列的第一项为$a_x = y$；</li>
<li>对于$z = x, x+1,x+2,\ldots$，令$a_{z+1} = a_z^2 \bmod z$；</li>
<li>当某一项为$0$或$1$时停止。</li>
</ul>
<p>当序列停止时，记$l(x,y)$为此时序列中的项数。</p>
<p>例如，若$x = 5$而$y = 3$，那么依次生成的项分别是$a_5 = 3$，$a_6 = 3^2 \bmod 5 = 4$，$a_7 = 4^2\bmod 6 = 4$，依此类推，前$29$项分别是：<br>$3,4,4,2,4,7,9,4,4,3,9,6,4,16,4,16,16,4,16,3,9,6,10,19,25,16,16,8,0$<br>因此$l(5,3) = 29$。</p>
<p>记$g(x)$在所有$y&lt;x$中$l(x,y)$的最大值。例如，$g(5) = 29$。</p>
<p>记$f(n)$为所有$x\le n$中$g(x)$的最大值。例如，$f(100) = 145$，$f(10\ 000) = 8824$。</p>
<p>求$f(3\ 000\ 000)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 694</title>
    <url>/694/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-694"><a href="#Problem-694" class="headerlink" title="Problem 694"></a><a href="https://projecteuler.net/problem=694">Problem 694</a></h1><hr>
<h2 id="Cube-full-Divisors"><a href="#Cube-full-Divisors" class="headerlink" title="Cube-full Divisors"></a><strong>Cube-full Divisors</strong></h2><p>A positive integer $n$ is considered <i>cube-full</i>, if for every prime $p$ that divides $n$, so does $p^3$. Note that $1$ is considered cube-full.</p>
<p>Let $s(n)$ be the function that counts the number of cube-full divisors of $n$. For example, $1$, $8$ and $16$ are the three cube-full divisors of $16$. Therefore, $s(16)=3$.</p>
<p>Let $S(n)$ represent the summatory function of $s(n)$, that is $S(n)=\displaystyle\sum_{i=1}^n s(i)$.</p>
<p>You are given $S(16) =  19$, $S(100) = 126$ and $S(10000) = 13344$.</p>
<p>Find $S(10^{18})$.</p>
<hr>
<h2 id="满立方约数"><a href="#满立方约数" class="headerlink" title="满立方约数"></a><strong>满立方约数</strong></h2><p>考虑正整数$n$，若对于任意整除$n$的质数$p$，总有$p^3$也整除$n$，则称$n$为<i class=zh>满立方</i>数。作为特例，$1$也是满立方数。</p>
<p>记$s(n)$为$n$的所有约数中满立方数的数目。例如，$16$的约数中有$1$、$8$和$16$三个满立方数，因此$s(16)=3$。</p>
<p>记$S(n)$为$s(n)$的部分和函数，也即$S(n)=\displaystyle\sum_{i=1}^n s(i)$。</p>
<p>已知$S(16) =  19$，$S(100) = 126$，$S(10000) = 13344$。</p>
<p>求$S(10^{18})$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 695</title>
    <url>/695/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-695"><a href="#Problem-695" class="headerlink" title="Problem 695"></a><a href="https://projecteuler.net/problem=695">Problem 695</a></h1><hr>
<h2 id="Random-Rectangles"><a href="#Random-Rectangles" class="headerlink" title="Random Rectangles"></a><strong>Random Rectangles</strong></h2><p>Three points, $P_1$, $P_2$ and $P_3$, are randomly selected within a unit square. Consider the three rectangles with sides parallel to the sides of the unit square and a diagonal that is one of the three line segments $\overline{P_1P_2}$, $\overline{P_1P_3}$ or $\overline{P_2P_3}$ (see picture below).</p>
<p><img src="/resources/images/0695_randrect.png" alt="3 random rectangles"></p>
<p>We are interested in the rectangle with the second biggest area. In the example above that happens to be the green rectangle defined with the diagonal $\overline{P_2P_3}$.</p>
<p>Find the expected value of the area of the second biggest of the three rectangles. Give your answer rounded to $10$ digits after the decimal point.</p>
<hr>
<h2 id="随机长方形"><a href="#随机长方形" class="headerlink" title="随机长方形"></a><strong>随机长方形</strong></h2><p>在单位正方形的边缘随机选择三个点$P_1$、$P_2$和$P_3$，并分别以线段$\overline{P_1P_2}$、$\overline{P_1P_3}$和$\overline{P_2P_3}$为对角线作各边平行于单位正方形的三个长方形，如下图所示：</p>
<p><img src="/resources/images/0695_randrect.png" alt="3个随机长方形"></p>
<p>我们感兴趣的是这其中面积第二大的那个长方形。在上述例子当中，面积第二大的长方形是以线段$\overline{P_2P_3}$为对角线的绿色长方形。</p>
<p>求面积第二大的长方形的面积期望值，并将你的答案保留小数点后$10$位数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 696</title>
    <url>/696/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-696"><a href="#Problem-696" class="headerlink" title="Problem 696"></a><a href="https://projecteuler.net/problem=696">Problem 696</a></h1><hr>
<h2 id="Mahjong"><a href="#Mahjong" class="headerlink" title="Mahjong"></a><strong>Mahjong</strong></h2><p>The game of Mahjong is played with tiles belonging to $s$ <i>suits</i>. Each tile also has a <i>number</i> in the range $1\ldots n$, and for each suit/number combination there are exactly four indistinguishable tiles with that suit and number. (The real Mahjong game also contains other bonus tiles, but those will not feature in this problem.)</p>
<p>A <i>winning hand</i> is a collection of $3t+2$ Tiles (where $t$ is a fixed integer) that can be arranged as $t$ <i>Triples</i> and one <i>Pair</i>, where:</p>
<ul>
<li>A <i>Triple</i> is either a <i>Chow</i> or a <i>Pung</i></li>
<li>A <i>Chow</i> is three tiles of the same suit and consecutive numbers</li>
<li>A <i>Pung</i> is three identical tiles (same suit and same number)</li>
<li>A <i>Pair</i> is two identical tiles (same suit and same number)</li>
</ul>
<p>For example, here is a winning hand with $n=9$, $s=3$, $t=4$, consisting in this case of two Chows, two Pungs, and one Pair:</p>
<p><img src="/resources/images/0696_mahjong_1.png" alt="A winning Mahjong hand"></p>
<p>Note that sometimes the same collection of tiles can be represented as $t$ Triples and one Pair in more than one way. This only counts as one winning hand. For example, this is considered to be the same winning hand as above, because it consists of the same tiles:</p>
<p><img src="/resources/images/0696_mahjong_2.png" alt="Alternative arrangement of the same hand"></p>
<p>Let $w(n, s, t)$ be the number of distinct winning hands formed of $t$ Triples and one Pair, where there are $s$ suits available and tiles are numbered up to $n$.</p>
<p>For example, with a single suit and tiles numbered up to $4$, we have $w(4, 1, 1) = 20$: there are $12$ winning hands consisting of a Pung and a Pair, and another $8$ containing a Chow and a Pair. You are also given that $w(9, 1, 4) = 13259$, $w(9, 3, 4) = 5237550$, and $w(1000, 1000, 5) \equiv 107662178 \pmod{1\ 000\ 000\ 007}$.</p>
<p>Find $w(10^8, 10^8, 30)$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="麻将"><a href="#麻将" class="headerlink" title="麻将"></a><strong>麻将</strong></h2><p>变种麻将游戏需要用到$s$种<i class=zh>花色</i>、牌面<i class=zh>数字</i>为$1\dots n$、每种花色/数字组合各四张的麻将牌。（现实中的标准麻将还会用到花牌和字牌，但在本问题中不考虑这些。）</p>
<p><i class=zh>和牌</i>是一手共$3t+2$张牌（其中$t$是预先确定的整数），且这些牌能够被排列为$t$<i class=zh>组</i>加一<i class=zh>对</i>，其中：</p>
<ul>
<li>一<i class=zh>组</i>可以是一个<i class=zh>顺子</i>或者一个<i class=zh>刻子</i></li>
<li><i class=zh>顺子</i>是指三张花色相同、数字连续的牌</li>
<li><i class=zh>刻子</i>是指三张花色/数字组合完全相同的牌</li>
<li>一<i class=zh>对</i>是指两张花色/数字组合完全相同的牌</li>
</ul>
<p>如下所示就是当$n=9$，$s=3$，$t=4$（即标准麻将）时的一手和牌，包括两个顺子、两个刻子和一对：</p>
<p><img src="/resources/images/0696_mahjong_1.png" alt="一手麻将和牌"></p>
<p>注意到，相同的一手麻将牌可以有多种方式表示为$t$组和一对，但这只被算作一手和牌。例如，如下所示就是和上图相同的一手和牌：</p>
<p><img src="/resources/images/0696_mahjong_2.png" alt="同一手和牌的不同表示"></p>
<p>当共有$s$种花色、牌面数字至多为$n$时，记$w(n, s, t)$为所有由$t$组和一对构成的不同和牌的数量。</p>
<p>例如，如果只有一种花色，且数字至多为$4$，我们有$w(4, 1, 1) = 20$：有$12$手包括一个刻子和一对，还有$8$手包括一个顺子和一对。已知$w(9, 1, 4) = 13259$，$w(9, 3, 4) = 5237550$，$w(1000, 1000, 5) \equiv 107662178 \pmod{1\ 000\ 000\ 007}$。</p>
<p>求$w(10^8, 10^8, 30)$并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 697</title>
    <url>/697/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-697"><a href="#Problem-697" class="headerlink" title="Problem 697"></a><a href="https://projecteuler.net/problem=697">Problem 697</a></h1><hr>
<h2 id="Randomly-Decaying-Sequence"><a href="#Randomly-Decaying-Sequence" class="headerlink" title="Randomly Decaying Sequence"></a><strong>Randomly Decaying Sequence</strong></h2><p>Given a fixed real number $c$, define a random sequence $(X_n)_{n\ge 0}$ by the following random process:</p>
<ul>
<li>$X_0 = c$ (with probability 1).</li>
<li>For $n&gt;0$, $X_n = U_n X_{n-1}$ where $U_n$ is a real number chosen at random between zero and one, uniformly, and independently of all previous choices $(U_m)_{m&lt;n}$.</li>
</ul>
<p>If we desire there to be precisely a $25%$ probability that $X_{100}&lt;1$, then this can be arranged by fixing $c$ such that $\log_{10} c \approx 46.27$.</p>
<p>Suppose now that $c$ is set to a different value, so that there is precisely a  $25%$ probability that $X_{10\ 000\ 000}&lt;1$.</p>
<p>Find $\log_{10} c$ and give your answer rounded to two places after the decimal point.</p>
<hr>
<h2 id="随机递减序列"><a href="#随机递减序列" class="headerlink" title="随机递减序列"></a><strong>随机递减序列</strong></h2><p>给定实数$c$，如下的随机过程可以生成一个随机序列$(X_n)_{n\ge 0}$：</p>
<ul>
<li>$X_0 = c$ （概率为1）。</li>
<li>对于所有$n&gt;0$，$X_n = U_n X_{n-1}$，其中$U_n$是在$0$到$1$之间均匀随机选择的实数，且与之前所有的$(U_m)_{m&lt;n}$独立。</li>
</ul>
<p>如果我们希望$X_{100}&lt;1$的概率恰好为$25%$，我们只需选择满足$\log_{10} c \approx 46.27$的实数$c$。</p>
<p>假设现在我们希望$X_{10\ 000\ 000}&lt;1$的概率恰好为 $25%$，我们需要给$c$选择一个不同的数值。</p>
<p>求$\log_{10} c$并将你的答案保留小数点后两位。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 698</title>
    <url>/698/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-698"><a href="#Problem-698" class="headerlink" title="Problem 698"></a><a href="https://projecteuler.net/problem=698">Problem 698</a></h1><hr>
<h2 id="123-Numbers"><a href="#123-Numbers" class="headerlink" title="$123$-Numbers"></a><strong>$123$-Numbers</strong></h2><p>We define <i>$123$-numbers</i> as follows:</p>
<ul>
<li>$1$ is the smallest $123$-number.</li>
<li>When written in base $10$ the only digits that can be present are “$1$”, “$2$” and “$3$” and if present the number of times they each occur is also a $123$-number.</li>
</ul>
<p>So $2$ is a $123$-number, since it consists of one digit “$2$” and $1$ is a $123$-number. Therefore, $33$ is a $123$-number as well since it consists of two digits “$3$” and $2$ is a $123$-number.<br>On the other hand, $1111$ is not a $123$-number, since it contains $4$ digits “$1$” and $4$ is not a $123$-number.</p>
<p>In ascending order, the first $123$-numbers are:<br>$1, 2, 3, 11, 12, 13, 21, 22, 23, 31, 32, 33, 111, 112, 113, 121, 122, 123, 131, \ldots$</p>
<p>Let $F(n)$ be the $n$-th $123$-number. For example $F(4)=11$, $F(10)=31$, $F(40)=1112$, $F(1000)=1223321$ and $F(6000)= 2333333333323$.</p>
<p>Find $F(111\ 111\ 111\ 111\ 222\ 333)$. Give your answer modulo $123\ 123\ 123$.</p>
<hr>
<h2 id="123-数"><a href="#123-数" class="headerlink" title="$123$-数"></a><strong>$123$-数</strong></h2><p><i class=zh>$123$-数</i>的定义如下：</p>
<ul>
<li>$1$是最小的$123$数。</li>
<li>在$10$进制下，这个数只由数字”$1$”、”$2$”和”$3$”组成，且这些数字要么不出现，要么其出现次数也是$123$-数。</li>
</ul>
<p>所以，$2$是个$123$-数，因为它包含一个”$2$”而$1$是个$123$-数。进而$33$也是个$123$-数，因为它包含两个”$3$”而$2$是个$123$-数。<br>反之，$1111$不是个$123$-数，因为它包含$4$个”$1$”而$4$不是个$123$-数。</p>
<p>将所有$123$-数从小到大排列，最初的一部分是：<br>$1, 2, 3, 11, 12, 13, 21, 22, 23, 31, 32, 33, 111, 112, 113, 121, 122, 123, 131, \ldots$</p>
<p>记$F(n)$为第$n$个$123$-数。例如，$F(4)=11$，$F(10)=31$，$F(40)=1112$，$F(1000)=1223321$，$F(6000)= 2333333333323$。</p>
<p>求$F(111\ 111\ 111\ 111\ 222\ 333)$，并将你的答案对$123\ 123\ 123$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 699</title>
    <url>/699/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-699"><a href="#Problem-699" class="headerlink" title="Problem 699"></a><a href="https://projecteuler.net/problem=699">Problem 699</a></h1><hr>
<h2 id="Triffle-Numbers"><a href="#Triffle-Numbers" class="headerlink" title="Triffle Numbers"></a><strong>Triffle Numbers</strong></h2><p>Let $\sigma(n)$ be the sum of all the divisors of the positive integer $n$, for example:<br>$\sigma(10) = 1+2+5+10 = 18$.</p>
<p>Define $T(N)$ to be the sum of all numbers $n \le N$ such that when the fraction $\frac{\sigma(n)}{n}$ is written in its lowest form $\frac{a}{b}$, the denominator is a power of $3$ i.e. $b = 3^k, k&gt;0$.</p>
<p>You are given $T(100) = 270$ and $T(10^6) = 26089287$.</p>
<p>Find $T(10^{14})$.</p>
<hr>
<h2 id="三友数"><a href="#三友数" class="headerlink" title="三友数"></a><strong>三友数</strong></h2><p>记$\sigma(n)$为正整数$n$的所有因数之和，例如：$\sigma(10) = 1+2+5+10 = 18$。</p>
<p>考虑所有正整数$n \le N$，并将$\frac{\sigma(n)}{n}$写成既约分数$\frac{a}{b}$，记所有使得分母$b$为$3$的幂的数$n$之和为$T(N)$。</p>
<p>已知$T(100) = 270$，$T(10^6) = 26089287$。</p>
<p>求$T(10^{14})$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 7</title>
    <url>/7/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-7"><a href="#Problem-7" class="headerlink" title="Problem 7"></a><a href="https://projecteuler.net/problem=7">Problem 7</a></h1><hr>
<h2 id="10-001-st-Prime"><a href="#10-001-st-Prime" class="headerlink" title="$10\ 001$st Prime"></a><strong>$10\ 001$st Prime</strong></h2><p>By listing the first six prime numbers: $2$, $3$, $5$, $7$, $11$, and $13$, we can see that the $6$th prime is $13$.</p>
<p>What is the $10\ 001$st prime number?</p>
<hr>
<h2 id="第-10-001-个质数"><a href="#第-10-001-个质数" class="headerlink" title="第$10\ 001$个质数"></a><strong>第$10\ 001$个质数</strong></h2><p>前$6$个质数分别是$2$、$3$、$5$、$7$、$11$和$13$。</p>
<p>第$10\ 001$个质数是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 70</title>
    <url>/70/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-70"><a href="#Problem-70" class="headerlink" title="Problem 70"></a><a href="https://projecteuler.net/problem=70">Problem 70</a></h1><hr>
<h2 id="Totient-Permutation"><a href="#Totient-Permutation" class="headerlink" title="Totient Permutation"></a><strong>Totient Permutation</strong></h2><p>Euler’s Totient function, $\varphi(n)$ [sometimes called the phi function], is used to determine the number of positive numbers less than or equal to $n$ which are relatively prime to $n$. For example, as $1$, $2$, $4$, $5$, $7$, and $8$, are all less than nine and relatively prime to nine, $\varphi(9)=6$.</p>
<p>The number $1$ is considered to be relatively prime to every positive number, so $\varphi(1)=1$.</p>
<p>Interestingly, $\varphi(87109)=79180$, and it can be seen that $87109$ is a permutation of $79180$.</p>
<p>Find the value of $n$, $1&lt;n&lt;10^7$, for which $\varphi(n)$ is a permutation of $n$ and the ratio $n/\varphi(n)$ produces a minimum.</p>
<hr>
<h2 id="欧拉总计函数与重排"><a href="#欧拉总计函数与重排" class="headerlink" title="欧拉总计函数与重排"></a><strong>欧拉总计函数与重排</strong></h2><p>小于或等于$n$且与$n$互质的正整数的数量记为欧拉总计函数$\varphi(n)$。例如，$1$、$2$、$4$、$5$、$7$和$8$均小于$9$且与$9$互质，因此$\varphi(9)=6$。</p>
<p>$1$和任意正整数互质，所以$\varphi(1)=1$。</p>
<p>有趣的是，$\varphi(87109)=79180$，而$79180$恰好是$87109$的一个重排。</p>
<p>在$1&lt;n&lt;10^7$中，有些$n$满足$\varphi(n)$是$n$的一个重排，求这些取值中使$n/\varphi(n)$最小的一个。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 700</title>
    <url>/700/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-700"><a href="#Problem-700" class="headerlink" title="Problem 700"></a><a href="https://projecteuler.net/problem=700">Problem 700</a></h1><hr>
<h2 id="Eulercoin"><a href="#Eulercoin" class="headerlink" title="Eulercoin"></a><strong>Eulercoin</strong></h2><p>Leonhard Euler was born on $15$ April $1707$.</p>
<p>Consider the sequence $1504170715041707n \bmod 4503599627370517$.</p>
<p>An element of this sequence is defined to be an Eulercoin if it is strictly smaller than all previously found Eulercoins.</p>
<p>For example, the first term is $1504170715041707$ which is the first Eulercoin. The second term is $3008341430083414$ which is greater than $1504170715041707$ so is not an Eulercoin. However, the third term is $8912517754604$ which is small enough to be a new Eulercoin.</p>
<p>The sum of the first $2$ Eulercoins is therefore $1513083232796311$.</p>
<p>Find the sum of all Eulercoins.</p>
<hr>
<h2 id="欧拉币"><a href="#欧拉币" class="headerlink" title="欧拉币"></a><strong>欧拉币</strong></h2><p>莱昂哈德·欧拉出生于$1707$年四月$15$日。</p>
<p>考虑序列$1504170715041707n \bmod 4503599627370517$。</p>
<p>该序列中的某个元素被定义为欧拉币，当且仅当它严格小于之前已经定义的所有欧拉币。</p>
<p>例如，序列的第一项是$1504170715041707$，这是第一枚欧拉币。序列的第二项是$3008341430083414$，因为它大于$1504170715041707$，因此它不是欧拉币。然后，序列的第三项是$8912517754604$，比第一项要小，因此是一枚新的欧拉币。</p>
<p>因此，前$2$枚欧拉币之和为$1513083232796311$。</p>
<p>求所有欧拉币之和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 702</title>
    <url>/702/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-702"><a href="#Problem-702" class="headerlink" title="Problem 702"></a><a href="https://projecteuler.net/problem=702">Problem 702</a></h1><hr>
<h2 id="Jumping-Flea"><a href="#Jumping-Flea" class="headerlink" title="Jumping Flea"></a><strong>Jumping Flea</strong></h2><p>A regular hexagon table of side length $N$ is divided into equilateral triangles of side length $1$. The picture below is an illustration of the case $N = 3$.</p>
<p><img src="/resources/images/0702_jumping_flea.png" alt="hexagonal table"></p>
<p>An flea of negligible size is jumping on this table. The flea starts at the centre of the table. Thereafter, at each step, it chooses one of the six corners of the table, and jumps to the mid-point between its current position and the chosen corner.</p>
<p>For every triangle $T$, we denote by $J(T)$ the minimum number of jumps required for the flea to reach the interior of $T$. Landing on an edge or vertex of $T$ is not sufficient.</p>
<p>For example, $J(T) = 3$ for the triangle marked with a star in the picture: by jumping from the centre half way towards F, then towards C, then towards E.</p>
<p>Let $S(N)$ be the sum of $J(T)$ for all the upper-pointing triangles $T$ in the upper half of the table. For the case $N = 3$, these are the triangles painted black in the above picture.</p>
<p>You are given that $S(3) = 42$, $S(5) = 126$, $S(123) = 167178$, and $S(12345) = 3185041956$.</p>
<p>Find $S(123456789)$.</p>
<hr>
<h2 id="跳蚤"><a href="#跳蚤" class="headerlink" title="跳蚤"></a><strong>跳蚤</strong></h2><p>一个边长为$N$的正六边形被分割成数个边长为$1$的等边三角形，下图展示了$N=3$的情形。</p>
<p><img src="/resources/images/0702_jumping_flea.png" alt="六边形格"></p>
<p>一只可视为质点的跳蚤正在这个正六边形上跳跃，它从正中心出发，每一步它选择正六边形的一个顶点，并跳跃至当前位置和被选中的顶点的中点。</p>
<p>对任意等边三角形$T$，我们记$J(T)$为到达$T$的内部所需要的最少步数。注意$T$的内部不包含其顶点或边缘。</p>
<p>例如，对于途中标有星号的三角形，$J(T)=3$：跳蚤首先由中心跳向F点，再跳向C点，最后跳向E点。</p>
<p>记$S(N)$为正六边形上半部分所有尖端向上的三角形$T$所对应的$J(T)$之和。对于$N=3$的情形，只需考虑上图中被染黑的三角形。</p>
<p>已知$S(3) = 42$，$S(5) = 126$，$S(123) = 167178$，$S(12345) = 3185041956$。</p>
<p>求$S(123456789)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 701</title>
    <url>/701/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-701"><a href="#Problem-701" class="headerlink" title="Problem 701"></a><a href="https://projecteuler.net/problem=701">Problem 701</a></h1><hr>
<h2 id="Random-connected-area"><a href="#Random-connected-area" class="headerlink" title="Random connected area"></a><strong>Random connected area</strong></h2><p>Consider a rectangle made up of $W \times H$ square cells each with area $1$.<br>Each cell is independently coloured black with probability $0.5$ otherwise white. Black cells sharing an edge are assumed to be connected.<br>Consider the maximum area of connected cells.</p>
<p>Define $E(W,H)$ to be the expected value of this maximum area. For example, $E(2,2)=1.875$, as illustrated below.</p>
<p><img src="/resources/images/0701_randcon.png" alt="3 random connected area"></p>
<p>You are also given $E(4, 4) = 5.76487732$, rounded to $8$ decimal places.</p>
<p>Find $E(7, 7)$, rounded to $8$ decimal places.</p>
<hr>
<h2 id="随机连通区域"><a href="#随机连通区域" class="headerlink" title="随机连通区域"></a><strong>随机连通区域</strong></h2><p>考虑由$W \times H$个面积为$1$的正方形方格组成的长方形。<br>每一格正方形独立地以$0.5$的概率染上黑色或白色。如果两个黑色正方形格共用一条边，则认为它们是连通的。<br>考虑最大连通区域的面积。</p>
<p>记$E(W,H)$为最大连通区域的面积的期望值。例如，$E(2,2)=1.875$，如下图所示（其中数字表示最大连通区域的面积）。</p>
<p><img src="/resources/images/0701_randcon.png" alt="随机连通区域"></p>
<p>已知$E(4, 4) = 5.76487732$，保留$8$位小数。</p>
<p>求$E(7, 7)$并保留$8$位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 703</title>
    <url>/703/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-703"><a href="#Problem-703" class="headerlink" title="Problem 703"></a><a href="https://projecteuler.net/problem=703">Problem 703</a></h1><hr>
<h2 id="Circular-Logic-II"><a href="#Circular-Logic-II" class="headerlink" title="Circular Logic II"></a><strong>Circular Logic II</strong></h2><p>Given an integer $n$, $n \geq 3$, let $B={\mathrm{false},\mathrm{true}}$ and let $B^n$ be the set of sequences of $n$ values from $B$. The function $f$ from $B^n$ to $B^n$ is defined by $f(b_1 \dots b_n) = c_1 \dots c_n$ where:</p>
<ul>
<li>$c_i = b_{i+1}$ for $1 \leq i&lt;n$.</li>
<li>$c_n = b_1\ \mathrm{AND}\ (b_2\ \mathrm{XOR}\ b_3)$, where $\mathrm{AND}$ and $\mathrm{XOR}$ are the logical $\mathrm{AND}$ and exclusive $\mathrm{OR}$ operations.</li>
</ul>
<p>Let $S(n)$ be the number of functions $T$ from $B^n$ to $B$ such that for all $x$ in $B^n$, $T(x) <del>\mathrm{AND}</del> T(f(x)) = \mathrm{false}$. You are given that $S(3) = 35$ and $S(4) = 2118$.</p>
<p>Find $S(20)$. Give your answer modulo $1\ 001\ 001\ 011$.</p>
<hr>
<h2 id="圆环之理II"><a href="#圆环之理II" class="headerlink" title="圆环之理II"></a><strong>圆环之理II</strong></h2><p>给定整数$n$，$n \geq 3$，令$B={\mathrm{false},\mathrm{true}}$而$B^n$为从$B$中选择$n$个值所组成的序列。由$B^n$映射到$B^n$的函数$f$，记为$f(b_1\ldots b_n)=c_1\ldots c_n$，满足以下条件：</p>
<ul>
<li>对于$1 \leq i&lt;n$，$c_i = b_{i+1}$。</li>
<li>$c_n = b_1\ \mathrm{AND}\ (b_2\ \mathrm{XOR}\ b_3)$，其中$\mathrm{AND}$和$\mathrm{XOR}$ 分别是逻辑与和逻辑异或运算。</li>
</ul>
<p>考虑由$B^n$映射到$B$的函数$T$，对于任意$x$属于$B^n$满足$T(x) <del>\mathrm{AND}</del> T(f(x)) = \mathrm{false}$，记所有此类函数的数目为$S(n)$。已知$S(3) = 35$，$S(4) = 2118$。</p>
<p>求$S(20)$，并将你的答案对$1\ 001\ 001\ 011$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 704</title>
    <url>/704/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-704"><a href="#Problem-704" class="headerlink" title="Problem 704"></a><a href="https://projecteuler.net/problem=704">Problem 704</a></h1><hr>
<h2 id="Factors-of-Two-in-Binomial-Coefficients"><a href="#Factors-of-Two-in-Binomial-Coefficients" class="headerlink" title="Factors of Two in Binomial Coefficients"></a><strong>Factors of Two in Binomial Coefficients</strong></h2><p>Define $g(n, m)$ to be the largest integer $k$ such that $2^k$ divides $\binom{n}m$. For example, $\binom{12}5 = 792 = 2^3 \cdot 3^2 \cdot 11$, hence $g(12, 5) = 3$. Then define $F(n) = \max { g(n, m) : 0 \le m \le n }$. $F(10) = 3$ and $F(100) = 6$.</p>
<p>Let $S(N)$ = $\displaystyle\sum_{n=1}^N{F(n)}$. You are given that $S(100) = 389$ and $S(10^7) = 203222840$.</p>
<p>Find $S(10^{16})$.</p>
<hr>
<h2 id="二项式系数中的质因数二"><a href="#二项式系数中的质因数二" class="headerlink" title="二项式系数中的质因数二"></a><strong>二项式系数中的质因数二</strong></h2><p>记$g(n, m)$为使得$2^k$整除$\binom{n}m$的最大整数$k$。例如，$\binom{12}5 = 792 = 2^3 \cdot 3^2 \cdot 11$，因此$g(12, 5) = 3$。再定义$F(n) = \max { g(n, m) : 0 \le m \le n }$。已知$F(10) = 3$，$F(100) = 6$。</p>
<p>记$S(N)$ = $\displaystyle\sum_{n=1}^N{F(n)}$。已知$S(100) = 389$，$S(10^7) = 203222840$。</p>
<p>求$S(10^{16})$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 705</title>
    <url>/705/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-705"><a href="#Problem-705" class="headerlink" title="Problem 705"></a><a href="https://projecteuler.net/problem=705">Problem 705</a></h1><hr>
<h2 id="Total-Inversion-Count-of-Divided-Sequences"><a href="#Total-Inversion-Count-of-Divided-Sequences" class="headerlink" title="Total Inversion Count of Divided Sequences"></a><strong>Total Inversion Count of Divided Sequences</strong></h2><p>The <i>inversion count</i> of a sequence of digits is the smallest number of adjacent pairs that must be swapped to sort the sequence.<br>For example, $34214$ has inversion count of $5$: $34214 \to 32414 \to 23414 \to 23144 \to 21344 \to12344$.</p>
<p>If each digit of a sequence is replaced by one of its divisors a <i>divided sequence</i> is obtained.<br>For example, the sequence $332$ has $8$ divided sequences: ${332,331,312,311,132,131,112,111}$.</p>
<p>Define $G(N)$ to be the concatenation of all primes less than $N$, ignoring any zero digit.<br>For example, $G(20) = 235711131719$.</p>
<p>Define $F(N)$ to be the sum of the inversion count for all possible divided sequences from the master sequence $G(N)$.<br>You are given $F(20) = 3312$ and $F(50) = 338079744$.</p>
<p>Find $F(10^8)$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="整除列的逆序对数"><a href="#整除列的逆序对数" class="headerlink" title="整除列的逆序对数"></a><strong>整除列的逆序对数</strong></h2><p>一个数字序列的<i class=zh>逆序对数</i>是指通过交换相邻数字对序列进行排序时所需的步数。<br>例如，序列$34214$的逆序对数为$5$：$34214 \to 32414 \to 23414 \to 23144 \to 21344 \to12344$。</p>
<p>将数字序列中的每个数字替换为其约数，得到的新序列称为其<i class=zh>整除列</i>。<br>例如，序列$332$有$8$个整除列：${332,331,312,311,132,131,112,111}$。</p>
<p>记$G(N)$为连接所有小于$N$的质数所构成的序列（不包含前导零）。例如，$G(20) = 235711131719$。</p>
<p>记$F(N)$为$G(N)$的所有整除列的逆序对数之和。<br>已知$F(20) = 3312$，$F(50) = 338079744$。</p>
<p>求$F(10^8)$并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 706</title>
    <url>/706/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-706"><a href="#Problem-706" class="headerlink" title="Problem 706"></a><a href="https://projecteuler.net/problem=706">Problem 706</a></h1><hr>
<h2 id="3-Like-Numbers"><a href="#3-Like-Numbers" class="headerlink" title="$3$-Like Numbers"></a><strong>$3$-Like Numbers</strong></h2><p>For a positive integer $n$, define $f(n)$ to be the number of non-empty substrings of $n$ that are divisible by $3$. For example, the string “$2573$” has $10$ non-empty substrings, three of which represent numbers that are divisible by $3$, namely $57$, $573$ and $3$. So $f(2573) = 3$.</p>
<p>If $f(n)$ is divisible by $3$ then we say that $n$ is <i>$3$-like</i>.</p>
<p>Define $F(d)$ to be how many $d$ digit numbers are $3$-like. For example, $F(2) = 30$ and $F(6) = 290898$.</p>
<p>Find $F(10^5)$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="3-似数"><a href="#3-似数" class="headerlink" title="$3$似数"></a><strong>$3$似数</strong></h2><p>将正整数$n$视为数字串，记$f(n)$为能被$3$整除的$n$的非空子串数目。例如，数字串”$2573$”有$10$个非空子串，其中有三个能被$3$整除，分别是$57$、$573$和$3$，因此$f(2573) = 3$。</p>
<p>如果$f(n)$能被$3$整除，则称$n$为<i class=zh>$3$似数</i>。</p>
<p>记$F(d)$为$d$位数中$3$似数的个数。例如，$F(2) = 30$，$F(6) = 290898$。</p>
<p>求$F(10^5)$并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 707</title>
    <url>/707/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-707"><a href="#Problem-707" class="headerlink" title="Problem 707"></a><a href="https://projecteuler.net/problem=707">Problem 707</a></h1><hr>
<h2 id="Lights-Out"><a href="#Lights-Out" class="headerlink" title="Lights Out"></a><strong>Lights Out</strong></h2><p>Consider a $w\times h$ grid. A cell is either ON or OFF. When a cell is selected, that cell and all cells connected to that cell by an edge are toggled on-off, off-on. See the diagram for the $3$ cases of selecting a corner cell, an edge cell or central cell in a grid that has all cells on (white).</p>
<p><img src="/resources/images/0707_LightsOutPic.jpg" alt="LightsOut"></p>
<p>The goal is to get every cell to be off simultaneously. This is not possible for all starting states. A state is solvable if, by a process of selecting cells, the goal can be achieved.</p>
<p>Let $F(w,h)$ be the number of solvable states for a $w\times h$ grid. You are given $F(1,2)=2$, $F(3,3) = 512$, $F(4,4) = 4096$ and $F(7,11) \equiv 270016253 \pmod{1\ 000\ 000\ 007}$.</p>
<p>Let $f_1=f_2 = 1$ and $f_n=f_{n-1}+f_{n-2}, n \ge 3$ be the Fibonacci sequence and define<br>$$ S(w,n) = \sum_{k=1}^n F(w,f_k)$$<br>You are given $S(3,3) = 32$, $S(4,5) = 1052960$ and $S(5,7) \equiv 346547294 \pmod{1\ 000\ 000\ 007}$.</p>
<p>Find $S(199,199)$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="关灯"><a href="#关灯" class="headerlink" title="关灯"></a><strong>关灯</strong></h2><p>考虑一个$w\times h$的格阵，其中每一格有开或关两种状态。当某一格被选中时，这一格以及相邻格的状态会发生变化，若原本是开则变为关，若原本是关则变为开。下图展示了原本所有格均为开状态（表示为白色）的格阵在选中了一个角上的格、一个边上的格和一个中间的格后的情景。</p>
<p><img src="/resources/images/0707_LightsOutPic.jpg" alt="关灯"></p>
<p>从任意起始状态出发，并不是总能够将所有格变为关状态。如果能够做到，则称相应的起始状态为可解的。</p>
<p>记$F(w,h)$为$w\times h$格阵下可解起始状态的数目。已知$F(1,2)=2$，$F(3,3) = 512$，$F(4,4) = 4096$，$F(7,11) \equiv 270016253 \pmod{1\ 000\ 000\ 007}$。</p>
<p>考虑斐波那契数列$f_1=f_2 = 1$，$f_n=f_{n-1}+f_{n-2}, n \ge 3$，并记<br>$$ S(w,n) = \sum_{k=1}^n F(w,f_k)$$<br>已知$S(3,3) = 32$，$S(4,5) = 1052960$，$S(5,7) \equiv 346547294 \pmod{1\ 000\ 000\ 007}$。</p>
<p>求$S(199,199)$，并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 708</title>
    <url>/708/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-708"><a href="#Problem-708" class="headerlink" title="Problem 708"></a><a href="https://projecteuler.net/problem=708">Problem 708</a></h1><hr>
<h2 id="Twos-are-all-you-need"><a href="#Twos-are-all-you-need" class="headerlink" title="Twos are all you need"></a><strong>Twos are all you need</strong></h2><p>A positive integer, $n$, is factorised into prime factors. We define $f(n)$ to be the product when each prime factor is replaced with $2$. In addition we define $f(1)=1$.</p>
<p>For example, $90 = 2\times 3\times 3\times 5$, then replacing the primes, $2\times 2\times 2\times 2 = 16$, hence $f(90) = 16$.</p>
<p>Let $\displaystyle S(N)=\sum_{n=1}^{N} f(n)$. You are given $S(10^8)=9613563919$.</p>
<p>Find $S(10^{14})$.</p>
<hr>
<h2 id="只需要二"><a href="#只需要二" class="headerlink" title="只需要二"></a><strong>只需要二</strong></h2><p>对正整数$n$作质因数分解，并记$f(n)$为将所有质因数均替换为$2$时的新乘积；此外记$f(1)=1$。</p>
<p>例如，$90 = 2\times 3\times 3\times 5$，将质因数替换后得$2\times 2\times 2\times 2 = 16$，因此$f(90) = 16$。</p>
<p>记$\displaystyle S(N)=\sum_{n=1}^{N} f(n)$。已知$S(10^8)=9613563919$。</p>
<p>求$S(10^{14})$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 709</title>
    <url>/709/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-709"><a href="#Problem-709" class="headerlink" title="Problem 709"></a><a href="https://projecteuler.net/problem=709">Problem 709</a></h1><hr>
<h2 id="Even-Stevens"><a href="#Even-Stevens" class="headerlink" title="Even Stevens"></a><strong>Even Stevens</strong></h2><p>Every day for the past $n$ days Even Stevens brings home his groceries in a plastic bag. He stores these plastic bags in a cupboard. He either puts the plastic bag into the cupboard with the rest, or else he takes an <strong>even</strong> number of the existing bags (which may either be empty or previously filled with other bags themselves) and places these into the current bag.</p>
<p>After $4$ days there are $5$ possible packings and if the bags are numbered $1$ (oldest), $2$, $3$, $4$, they are:</p>
<ul>
<li>Four empty bags,</li>
<li>$1$ and $2$ inside $3$, $4$ empty,</li>
<li>$1$ and $3$ inside $4$, $2$ empty,</li>
<li>$1$ and $2$ inside $4$, $3$ empty,</li>
<li>$2$ and $3$ inside $4$, $1$ empty.</li>
</ul>
<p>Note that $1$, $2$, $3$ inside $4$ is invalid because every bag must contain an even number of bags.</p>
<p>Define $f(n)$ to be the number of possible packings of $n$ bags. Hence $f(4)=5$. You are also given $f(8)=1\ 385$.</p>
<p>Find $f(24\ 680)$ giving your answer modulo $1\ 020\ 202\ 009$.</p>
<hr>
<h2 id="伊文·“偶数”·史蒂芬斯"><a href="#伊文·“偶数”·史蒂芬斯" class="headerlink" title="伊文·“偶数”·史蒂芬斯"></a><strong>伊文·“偶数”·史蒂芬斯</strong></h2><p>过去$n$天中的每一天，伊文·“偶数”·史蒂芬斯都会将当天购买的杂货装在一个塑料袋里带回家。他把这些塑料袋存放在碗橱里，每次他要么将新的塑料袋直接单独放进去，要么先从碗橱里取出<strong>偶数</strong>个塑料袋（可以是空的，也可以是装有其它的塑料袋的）装进新塑料袋，再把新塑料袋放进去。</p>
<p>举个例子，假如过去了$4$天，碗橱中有编号依次为$1$、$2$、$3$、$4$的袋子，那么这些袋子可能的状态共有$5$种，分别是：</p>
<ul>
<li>四个空袋子；</li>
<li>$1$号和$2$号袋子在$3$号袋子中，$4$号袋子是空的；</li>
<li>$1$号和$3$号袋子在$4$号袋子中，$2$号袋子是空的；</li>
<li>$1$号和$2$号袋子在$4$号袋子中，$3$号袋子是空的；</li>
<li>$2$号和$3$号袋子在$4$号袋子中，$1$号袋子是空的。</li>
</ul>
<p>注意$1$号、$2$号和$3$号袋子都在$4$号袋子中的状态不可能出现，因为每个袋子中只能装有偶数个袋子。</p>
<p>记$f(n)$为$n$个袋子可能的状态，因此$f(4)=5$。已知$f(8)=1\ 385$。</p>
<p>求$f(24\ 680)$并将你的答案对$1\ 020\ 202\ 009$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 71</title>
    <url>/71/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-71"><a href="#Problem-71" class="headerlink" title="Problem 71"></a><a href="https://projecteuler.net/problem=71">Problem 71</a></h1><hr>
<h2 id="Ordered-Fractions"><a href="#Ordered-Fractions" class="headerlink" title="Ordered Fractions"></a><strong>Ordered Fractions</strong></h2><p>Consider the fraction, $n/d$, where $n$ and $d$ are positive integers. If $n &lt; d$ and $HCF(n,d)=1$, it is called a reduced proper fraction.</p>
<p>If we list the set of reduced proper fractions for $d \le 8$ in ascending order of size, we get:</p>
<p>$$1/8, 1/7, 1/6, 1/5, 1/4, 2/7, 1/3, 3/8, \textbf{2/5}, 3/7, 1/2,$$<br>$$4/7, 3/5, 5/8, 2/3, 5/7, 3/4, 4/5, 5/6, 6/7, 7/8$$</p>
<p>It can be seen that $2/5$ is the fraction immediately to the left of $3/7$.</p>
<p>By listing the set of reduced proper fractions for $d \le 1,000,000$ in ascending order of size, find the numerator of the fraction immediately to the left of $3/7$.</p>
<hr>
<h2 id="有序分数"><a href="#有序分数" class="headerlink" title="有序分数"></a><strong>有序分数</strong></h2><p>考虑形如$n/d$的分数，其中$n$和$d$均为正整数。如果$n&lt;d$且其最大公约数为$1$，则称该分数为最简真分数。</p>
<p>将所有$d\le8$的最简真分数构成的集合按大小升序排列：</p>
<p>$$1/8, 1/7, 1/6, 1/5, 1/4, 2/7, 1/3, 3/8, \textbf{2/5}, 3/7, 1/2,$$<br>$$4/7, 3/5, 5/8, 2/3, 5/7, 3/4, 4/5, 5/6, 6/7, 7/8$$</p>
<p>可以看出$2/5$是$3/7$直接左邻的分数。</p>
<p>将所有$d \le 1,000,000$的最简真分数按大小升序排列，求此时$3/7$直接左邻的分数的分子。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 710</title>
    <url>/710/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-710"><a href="#Problem-710" class="headerlink" title="Problem 710"></a><a href="https://projecteuler.net/problem=710">Problem 710</a></h1><hr>
<h2 id="One-Million-Members"><a href="#One-Million-Members" class="headerlink" title="One Million Members"></a><strong>One Million Members</strong></h2><p><strong>On Sunday 5 April 2020 the Project Euler membership first exceeded one million members. We would like to present this problem to celebrate that milestone. Thank you to everyone for being a part of Project Euler.</strong></p>
<p>The number $6$ can be written as a palindromic sum in exactly eight different ways:<br>$$(1, 1, 1, 1, 1, 1), (1, 1, 2, 1, 1), (1, 2, 2, 1), (1, 4, 1), (2, 1, 1, 2), (2, 2, 2), (3, 3), (6)$$</p>
<p>We shall define a <i>twopal</i> to be a palindromic tuple having at least one element with a value of $2$. It should also be noted that elements are not restricted to single digits. For example, $(3, 2, 13, 6, 13, 2, 3)$ is a valid twopal.</p>
<p>If we let $t(n)$ be the number of twopals whose elements sum to $n$, then it can be seen that $t(6) = 4$:<br>$$(1, 1, 2, 1, 1), (1, 2, 2, 1), (2, 1, 1, 2), (2, 2, 2)$$</p>
<p>Similarly, $t(20) = 824$.</p>
<p>In searching for the answer to the ultimate question of life, the universe, and everything, it can be verified that $t(42) = 1999923$, which happens to be the first value of $t(n)$ that exceeds one million.</p>
<p>However, your challenge to the “ultimatest” question of life, the universe, and everything is to find the least value of $n \gt 42$ such that $t(n)$ is divisible by one million.</p>
<hr>
<h2 id="一百万名用户"><a href="#一百万名用户" class="headerlink" title="一百万名用户"></a><strong>一百万名用户</strong></h2><p><strong>2020年4月5日星期日，欧拉计划的用户突破了一百万人。我们设计了本题以纪念这一里程碑。感谢各位参与欧拉计划！</strong></p>
<p>将$6$写成一个回文数组的元素之和，共有八种不同的方式：<br>$$(1, 1, 1, 1, 1, 1), (1, 1, 2, 1, 1), (1, 2, 2, 1), (1, 4, 1), (2, 1, 1, 2), (2, 2, 2), (3, 3), (6)$$</p>
<p>如果一个回文数组中至少有一个元素$2$，则称之为<i class=zh>二回数组</i>。注意数组的元素并未被限定为一位数，例如，$(3, 2, 13, 6, 13, 2, 3)$也是一个合法的二回数组。</p>
<p>记$t(n)$为元素之和为$n$的二回数组的数目，可以看出$t(6) = 4$：<br>$$(1, 1, 2, 1, 1), (1, 2, 2, 1), (2, 1, 1, 2), (2, 2, 2)$$</p>
<p>类似地，$t(20) = 824$。</p>
<p>在寻找生命、宇宙以及任何事情的终极答案的过程中，我们发现$t(42) = 1999923$，这恰好是第一个超过一百万的$t(n)$。</p>
<p>你的新挑战是，寻找生命、宇宙以及任何事情的“最终极”答案：在$n\gt 42$中，找出最小的使得$t(n)$被一百万整除的数$n$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 711</title>
    <url>/711/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-711"><a href="#Problem-711" class="headerlink" title="Problem 711"></a><a href="https://projecteuler.net/problem=711">Problem 711</a></h1><hr>
<h2 id="Binary-Blackboard"><a href="#Binary-Blackboard" class="headerlink" title="Binary Blackboard"></a><strong>Binary Blackboard</strong></h2><p>Oscar and Eric play the following game. First, they agree on a positive integer $n$, and they begin by writing its binary representation on a blackboard. They then take turns, with Oscar going first, to write a number on the blackboard in binary representation, such that the sum of all written numbers does not exceed $2n$.</p>
<p>The game ends when there are no valid moves left. Oscar wins if the number of $1$s on the blackboard is odd, and Eric wins if it is even.</p>
<p>Let $S(N)$ be the sum of all $n \le 2^N$ for which Eric can guarantee winning, assuming optimal play.</p>
<p>For example, the first few values of $n$ for which Eric can guarantee winning are $1,3,4,7,15,16$. Hence $S(4)=46$.<br>You are also given that $S(12) = 54532$ and $S(1234) \equiv 690421393 \pmod{1\ 000\ 000\ 007}$.</p>
<p>Find $S(12\ 345\ 678)$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="二进制黑板"><a href="#二进制黑板" class="headerlink" title="二进制黑板"></a><strong>二进制黑板</strong></h2><p>奥斯卡和埃里克正在玩游戏。首先，他们共同选择一个整数$n$，然后将其二进制表示写在黑板上。然后，由奥斯卡先行，两人轮流在黑板上写上一个数的二进制表示，同时要求所有写在黑板上的数之和不能超过$2n$。</p>
<p>当不能够再写任何数时，游戏结束。若游戏结束时黑板上的$1$的数目为奇数，则奥斯卡获胜，若为偶数则埃里克获胜。</p>
<p>在双方都采用最优策略的情况下，记$S(N)$为在$n \le 2^N$的范围内埃里克能够保证获胜的$n$之和。</p>
<p>例如，最小的几个埃里克能够保证获胜的$n$分别是$1,3,4,7,15,16$。因此$S(4)=46$。<br>已知$S(12) = 54532$，$S(1234) \equiv 690421393 \pmod{1\ 000\ 000\ 007}$。</p>
<p>求$S(12\ 345\ 678)$并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 713</title>
    <url>/713/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-713"><a href="#Problem-713" class="headerlink" title="Problem 713"></a><a href="https://projecteuler.net/problem=713">Problem 713</a></h1><hr>
<h2 id="Turan’s-water-heating-system"><a href="#Turan’s-water-heating-system" class="headerlink" title="Turán’s water heating system"></a><strong>Turán’s water heating system</strong></h2><p>Turán has the electrical water heating system outside his house in a shed. The electrical system uses two fuses in series, one in the house and one in the shed. (Nowadays old fashioned fuses are often replaced with reusable mini circuit breakers, but Turán’s system still uses old fashioned fuses.) For the heating system to work both fuses must work.</p>
<p>Turán has $N$ fuses. He knows that $m$ of them are working and the rest are blown. However, he doesn’t know which ones are blown. So he tries different combinations until the heating system turns on.<br>We denote by $T(N,m)$ the smallest number of tries required to <i>ensure</i> the heating system turns on.<br>$T(3,2)=3$ and $T(8,4)=7$.</p>
<p>Let $L(N)$ be the sum of all $T(N, m)$ for $2 \leq m \leq N$.<br>$L(10^3)=3281346$.</p>
<p>Find $L(10^7)$.</p>
<hr>
<h2 id="图兰的电热水器"><a href="#图兰的电热水器" class="headerlink" title="图兰的电热水器"></a><strong>图兰的电热水器</strong></h2><p>图兰的电热水器装在他家房子旁的木棚里。这套电热水器需要用到两根保险丝，房子里和木棚里各有一根。（如今这些过时的保险丝都被可重复使用的迷你断路器所替代，但是图兰的电热水器仍在用这些保险丝。）只有两根保险丝都工作时，电热水器才能正常使用。</p>
<p>图兰有$N$根保险丝，他知道这其中有$m$根仍能够工作而剩下的都坏了。然而，他并不知道哪些是坏的。因此，他依次尝试所有可能的组合直到打开电热水器为止。<br>记$T(N,m)$为<i class=zh>确保</i>电热水器能够工作所需的最少尝试次数。<br>已知$T(3,2)=3$，$T(8,4)=7$。</p>
<p>记$L(N)$为所有$2 \leq m \leq N$的$T(N, m)$之和。<br>已知$L(10^3)=3281346$。</p>
<p>求$L(10^7)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 712</title>
    <url>/712/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-712"><a href="#Problem-712" class="headerlink" title="Problem 712"></a><a href="https://projecteuler.net/problem=712">Problem 712</a></h1><hr>
<h2 id="Exponent-Difference"><a href="#Exponent-Difference" class="headerlink" title="Exponent Difference"></a><strong>Exponent Difference</strong></h2><p>For any integer $n&gt;0$ and prime number $p$, define $\nu_p(n)$ as the greatest integer $r$ such that $p^r$ divides $n$. </p>
<p>Define<br>$$D(n, m)  = \sum_{p \text{ prime}} \left| \nu_p(n) - \nu_p(m)\right|.$$<br>For example, $D(14,24) = 4$.</p>
<p>Furthermore, define<br>$$S(N) = \sum_{1 \le n, m \le N} D(n, m).$$<br>You are given $S(10) = 210$ and $S(10^2) = 37018$.</p>
<p>Find $S(10^{12})$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="指数差异"><a href="#指数差异" class="headerlink" title="指数差异"></a><strong>指数差异</strong></h2><p>对于任意整数$n&gt;0$和素数$p$，记$\nu_p(n)$为使得$p^r$整除$n$的最大整数$r$。</p>
<p>记<br>$$D(n, m)  = \sum_{p \text{为素数}} \left| \nu_p(n) - \nu_p(m)\right|.$$<br>例如，$D(14,24) = 4$。</p>
<p>进一步地，记<br>$$S(N) = \sum_{1 \le n, m \le N} D(n, m).$$<br>已知$S(10) = 210$，$S(10^2) = 37018$。</p>
<p>求$S(10^{12})$并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 714</title>
    <url>/714/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-714"><a href="#Problem-714" class="headerlink" title="Problem 714"></a><a href="https://projecteuler.net/problem=714">Problem 714</a></h1><hr>
<h2 id="Duodigits"><a href="#Duodigits" class="headerlink" title="Duodigits"></a><strong>Duodigits</strong></h2><p>We call a natural number a <i>duodigit</i> if its decimal representation uses no more than two different digits. For example, $12$, $110$ and $33333$ are duodigits, while $102$ is not.<br>It can be shown that every natural number has duodigit multiples. Let $d(n)$ be the smallest (positive) multiple of the number $n$ that happens to be a duodigit. For example, $d(12)=12$, $d(102)=1122$, $d(103)=515$, $d(290)=11011010$ and $d(317)=211122$.</p>
<p>Let $\displaystyle D(k)=\sum_{n=1}^k d(n)$. You are given $D(110)=11\ 047$, $D(150)=53\ 312$ and $D(500)=29\ 570\ 988$.</p>
<p>Find $D(50\ 000)$. Give your answer in scientific notation rounded to $13$ significant digits ($12$ after the decimal point). If, for example, we had asked for $D(500)$ instead, the answer format would have been $2.957098800000e7$.</p>
<hr>
<h2 id="双字数"><a href="#双字数" class="headerlink" title="双字数"></a><strong>双字数</strong></h2><p>如果一个自然数的十进制表示使用了不超过两种不同的数字，则称这个数为<i class=zh>双字数</i>。例如，$12$、$110$和$33333$都是双字数，而$102$则不是。<br>可以证明，任何自然数都存在一个为双字数的倍数。记$d(n)$为$n$的正倍数中最小的双字数。例如，$d(12)=12$，$d(102)=1122$，$d(103)=515$，$d(290)=11011010$，$d(317)=211122$。</p>
<p>记$\displaystyle D(k)=\sum_{n=1}^k d(n)$。已知$D(110)=11\ 047$，$D(150)=53\ 312$，$D(500)=29\ 570\ 988$。</p>
<p>求$D(50\ 000)$，并将你的答案用科学计数法表示，保留$13$位有效数字（也即小数点后$12$位）。例如，若我们要求的答案是$D(500)$，则答案应当写作$2.957098800000e7$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 715</title>
    <url>/715/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-715"><a href="#Problem-715" class="headerlink" title="Problem 715"></a><a href="https://projecteuler.net/problem=715">Problem 715</a></h1><hr>
<h2 id="Sextuplet-Norms"><a href="#Sextuplet-Norms" class="headerlink" title="Sextuplet Norms"></a><strong>Sextuplet Norms</strong></h2><p>Let $f(n)$ be the number of $6$-tuples $(x_1,x_2,x_3,x_4,x_5,x_6)$ such that:</p>
<ul>
<li>All $x_i$ are integers with $0 \leq x_i &lt; n$</li>
<li>$\gcd(x_1^2+x_2^2+x_3^2+x_4^2+x_5^2+x_6^2,\ n^2)=1$</li>
</ul>
<p>Let $\displaystyle G(n)=\displaystyle\sum_{k=1}^n \frac{f(k)}{k^2\varphi(k)}$<br>where $\varphi(n)$ is Euler’s totient function.</p>
<p>For example, $G(10)=3053$ and $G(10^5) \equiv 157612967 \pmod{1\ 000\ 000\ 007}$.</p>
<p>Find $G(10^{12})\bmod 1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="六元范数"><a href="#六元范数" class="headerlink" title="六元范数"></a><strong>六元范数</strong></h2><p>记$f(n)$为满足以下条件的$6$元组$(x_1,x_2,x_3,x_4,x_5,x_6)$的数目：</p>
<ul>
<li>所有$x_i$均为$0 \leq x_i &lt; n$内的整数</li>
<li>$\gcd(x_1^2+x_2^2+x_3^2+x_4^2+x_5^2+x_6^2,\ n^2)=1$</li>
</ul>
<p>记$\displaystyle G(n)=\displaystyle\sum_{k=1}^n \frac{f(k)}{k^2\varphi(k)}$<br>其中$\varphi(n)$代表欧拉总计函数。</p>
<p>例如，$G(10)=3053$，$G(10^5) \equiv 157612967 \pmod{1\ 000\ 000\ 007}$。</p>
<p>求$G(10^{12})\bmod 1\ 000\ 000\ 007$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 716</title>
    <url>/716/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-716"><a href="#Problem-716" class="headerlink" title="Problem 716"></a><a href="https://projecteuler.net/problem=716">Problem 716</a></h1><hr>
<h2 id="Grid-Graphs"><a href="#Grid-Graphs" class="headerlink" title="Grid Graphs"></a><strong>Grid Graphs</strong></h2><p>Consider a directed graph made from an orthogonal lattice of $H\times W$ nodes. The edges are the horizontal and vertical connections between adjacent nodes. $W$ vertical directed lines are drawn and all the edges on these lines inherit that direction. Similarly, $H$ horizontal directed lines are drawn and all the edges on these lines inherit that direction.</p>
<p>Two nodes, $A$ and $B$ in a directed graph, are <strong>strongly connected</strong> if there is both a path, along the directed edges, from $A$ to $B$ as well as from $B$ to $A$. Note that every node is strongly connected to itself.</p>
<p>A <strong>strongly connected component</strong> in a directed graph is a non-empty set $M$ of nodes satisfying the following two properties:</p>
<ul>
<li>All nodes in $M$ are strongly connected to each other.</li>
<li>$M$ is maximal, in the sense that no node in $M$ is strongly connected to any node outside of $M$.</li>
</ul>
<p>There are $2^H\times 2^W$ ways of drawing the directed lines. Each way gives a directed graph $\mathcal{G}$. We define $S(\mathcal{G})$ to be the number of strongly connected components in $\mathcal{G}$.</p>
<p>The illustration below shows a directed graph with $H=3$ and $W=4$ that consists of four different strongly connected components (indicated by the different colours).</p>
<p><img src="/resources/images/0716_gridgraphics.jpg" alt=""></p>
<p>Define $C(H,W)$ to be the sum of $S(\mathcal{G})$ for all possible graphs on a grid of $H\times W$. You are given $C(3,3) = 408$, $C(3,6) = 4696$ and $C(10,20) \equiv 988971143 \pmod{1\ 000\ 000\ 007}$.</p>
<p>Find $C(10\ 000,20\ 000)$ giving your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="格阵图"><a href="#格阵图" class="headerlink" title="格阵图"></a><strong>格阵图</strong></h2><p>考虑一张基于$H\times W$个结点组成的格阵所构成的有向图，图中的边水平或竖直连接着相邻的结点。在格阵上可以画出$W$条竖直的有向直线，所有落在直线上的边和相应直线的方向一致；同理，在格阵上可以画出$H$条水平的有向直线，所有落在直线上的边和相应直线的方向也一致。</p>
<p>在有向图中，如果在两个结点$A$和$B$之间，存在一条沿着有向边由$A$到$B$的路径，同时也存在一条沿着有向边由$B$到$A$的路径，则称这两个结点是<strong>强连通的</strong>。注意每个结点和其自身都是强连通的。</p>
<p>有向图中的一个<strong>强连通分支</strong>是指满足以下两条性质的非空结点集$M$：</p>
<ul>
<li>$M$中的任意两个结点之间都是强连通的。</li>
<li>$M$是极大的，这意味着不存在$M$之内的结点和$M$之外的结点之间是</li>
</ul>
<p>共有$2^H\times 2^W$种绘制有向直线的方式，每种方式确定了一张有向图$\mathcal{G}$。记$S(\mathcal{G})$为$\mathcal{G}$中强连通分支的数目。</p>
<p>下图展示了$H=3$、$W=4$时的一张有向图，这张图有四个不同的强连通分支（用不同颜色表示）。</p>
<p><img src="/resources/images/0716_gridgraphics.jpg" alt=""></p>
<p>记$C(H,W)$为所有基于$H\times W$的格阵的有向图对应$S(\mathcal{G})$之和。已知$C(3,3) = 408$，$C(3,6) = 4696$，$C(10,20) \equiv 988971143 \pmod{1\ 000\ 000\ 007}$。</p>
<p>求$C(10\ 000,20\ 000)$并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 717</title>
    <url>/717/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-717"><a href="#Problem-717" class="headerlink" title="Problem 717"></a><a href="https://projecteuler.net/problem=717">Problem 717</a></h1><hr>
<h2 id="Summation-of-a-Modular-Formula"><a href="#Summation-of-a-Modular-Formula" class="headerlink" title="Summation of a Modular Formula"></a><strong>Summation of a Modular Formula</strong></h2><p>For an odd prime $p$, define $f(p) = \left\lfloor\frac{2^{(2^p)}}{p}\right\rfloor\bmod{2^p}$.<br>For example, when $p=3$, $\lfloor 2^8/3\rfloor = 85 \equiv 5 \pmod 8$ and so $f(3) = 5$.</p>
<p>Further define $g(p) = f(p)\bmod p$. You are given $g(31) = 17$.</p>
<p>Now define $G(N)$ to be the summation of $g(p)$ for all odd primes less than $N$.<br>You are given $G(100) = 474$ and $G(10^4) = 2819236$.</p>
<p>Find $G(10^7)$.</p>
<hr>
<h2 id="余数求和"><a href="#余数求和" class="headerlink" title="余数求和"></a><strong>余数求和</strong></h2><p>对于奇素数$p$，记$f(p) = \left\lfloor\frac{2^{(2^p)}}{p}\right\rfloor\bmod{2^p}$。<br>例如，若$p=3$，$\lfloor 2^8/3\rfloor = 85 \equiv 5 \pmod 8$，因此$f(3) = 5$。</p>
<p>记$g(p) = f(p)\bmod p$。已知$g(31) = 17$。</p>
<p>记$G(N)$为所有小于$N$的奇素数$p$所对应$g(p)$之和。<br>已知$G(100) = 474$，$G(10^4) = 2819236$。</p>
<p>求$G(10^7)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 718</title>
    <url>/718/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-718"><a href="#Problem-718" class="headerlink" title="Problem 718"></a><a href="https://projecteuler.net/problem=718">Problem 718</a></h1><hr>
<h2 id="Unreachable-Numbers"><a href="#Unreachable-Numbers" class="headerlink" title="Unreachable Numbers"></a><strong>Unreachable Numbers</strong></h2><p>Consider the equation $17^pa+19^pb+23^pc = n$ where $a$, $b$, $c$ and $p$ are positive integers, i.e. $a,b,c,p&gt;0$.</p>
<p>For a given $p$ there are some values of $n&gt;0$ for which the equation cannot be solved. We call these <i>unreachable values</i>.</p>
<p>Define $G(p)$ to be the sum of all unreachable values of $n$ for the given value of $p$. For example $G(1) = 8253$ and $G(2)= 60258000$.</p>
<p>Find $G(6)$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="不可达数"><a href="#不可达数" class="headerlink" title="不可达数"></a><strong>不可达数</strong></h2><p>考虑等式$17^pa+19^pb+23^pc = n$，其中$a$、$b$、$c$和$p$均为正整数。</p>
<p>对于给定的$p$，有些取值$n&gt;0$会使得方程无解。我们称这些取值为<i class=zh>不可达数</i>。</p>
<p>记$G(p)$为对于给定$p$的所有不可达数$n$之和。例如，$G(1) = 8253$，$G(2)= 60258000$。</p>
<p>求$G(6)$，并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 719</title>
    <url>/719/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-719"><a href="#Problem-719" class="headerlink" title="Problem 719"></a><a href="https://projecteuler.net/problem=719">Problem 719</a></h1><hr>
<h2 id="Number-Splitting"><a href="#Number-Splitting" class="headerlink" title="Number Splitting"></a><strong>Number Splitting</strong></h2><p>We define an $S$-number to be a natural number, $n$, that is a perfect square and its square root can be obtained by splitting the decimal representation of $n$ into $2$ or more numbers then adding the numbers.</p>
<p>For example, $81$ is an $S$-number because $\sqrt{81} = 8+1$.<br>$6724$ is an $S$-number: $\sqrt{6724} = 6+72+4$.<br>$8281$ is an $S$-number: $\sqrt{8281} = 8+2+81 = 82+8+1$.<br>$9801$ is an $S$-number: $\sqrt{9801}=98+0+1$.</p>
<p>Further we define $T(N)$ to be the sum of all $S$-numbers $n\le N$. You are given $T(10^4) = 41333$.</p>
<p>Find $T(10^{12})$</p>
<hr>
<h2 id="数字分割"><a href="#数字分割" class="headerlink" title="数字分割"></a><strong>数字分割</strong></h2><p>若自然数$n$是个完全平方数，且其平方根可以表示为将$n$的十进制表示分成至少$2$部分再相加的和，则称其为$S$-数。</p>
<p>例如，$81$是个$S$-数，因为$\sqrt{81} = 8+1$。<br>$6724$是个$S$-数：$\sqrt{6724} = 6+72+4$。<br>$8281$是个$S$-数：$\sqrt{8281} = 8+2+81 = 82+8+1$。<br>$9801$是个$S$-数：$\sqrt{9801}=98+0+1$。</p>
<p>再记$T(N)$为所有满足$n\le N$的$S$-数之和。已知$T(10^4) = 41333$。</p>
<p>求$T(10^{12})$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 72</title>
    <url>/72/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-72"><a href="#Problem-72" class="headerlink" title="Problem 72"></a><a href="https://projecteuler.net/problem=72">Problem 72</a></h1><hr>
<h2 id="Counting-Fractions"><a href="#Counting-Fractions" class="headerlink" title="Counting Fractions"></a><strong>Counting Fractions</strong></h2><p>Consider the fraction, $n/d$, where $n$ and $d$ are positive integers. If $n &lt; d$ and $HCF(n,d)=1$, it is called a reduced proper fraction.</p>
<p>If we list the set of reduced proper fractions for $d \le 8$ in ascending order of size, we get:</p>
<p>$$1/8, 1/7, 1/6, 1/5, 1/4, 2/7, 1/3, 3/8, 2/5, 3/7, 1/2,$$<br>$$4/7, 3/5, 5/8, 2/3, 5/7, 3/4, 4/5, 5/6, 6/7, 7/8$$</p>
<p>It can be seen that there are $21$ elements in this set.</p>
<p>How many elements would be contained in the set of reduced proper fractions for $d \le 1,000,000$?</p>
<hr>
<h2 id="分数计数"><a href="#分数计数" class="headerlink" title="分数计数"></a><strong>分数计数</strong></h2><p>考虑形如$n/d$的分数，其中$n$和$d$均为正整数。如果$n&lt;d$且其最大公约数为$1$，则称该分数为最简真分数。</p>
<p>将所有$d\le8$的最简真分数构成的集合按大小升序排列：</p>
<p>$$1/8, 1/7, 1/6, 1/5, 1/4, 2/7, 1/3, 3/8, 2/5, 3/7, 1/2,$$<br>$$4/7, 3/5, 5/8, 2/3, 5/7, 3/4, 4/5, 5/6, 6/7, 7/8$$</p>
<p>可以看出该集合中共有$21$个元素。</p>
<p>所有$d \le 1,000,000$的最简真分数构成的集合中共有多少个元素？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 720</title>
    <url>/720/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-720"><a href="#Problem-720" class="headerlink" title="Problem 720"></a><a href="https://projecteuler.net/problem=720">Problem 720</a></h1><hr>
<h2 id="Unpredictable-Permutations"><a href="#Unpredictable-Permutations" class="headerlink" title="Unpredictable Permutations"></a><strong>Unpredictable Permutations</strong></h2><p>Consider all permutations of ${1, 2, \ldots N}$, listed in lexicographic order.<br>For example, for $N=4$, the list starts as follows:</p>
<p>$$\displaylines{<br>(1, 2, 3, 4) \<br>(1, 2, 4, 3) \<br>(1, 3, 2, 4) \<br>(1, 3, 4, 2) \<br>(1, 4, 2, 3) \<br>(1, 4, 3, 2) \<br>(2, 1, 3, 4) \<br>\vdots<br>}$$</p>
<p>Let us call a permutation $P$ <i>unpredictable</i> if there is no choice of three indices $i \lt j \lt k$ such that $P(i)$, $P(j)$ and $P(k)$ constitute an arithmetic progression.<br>For example, $P=(3, 4, 2, 1)$ is <i>not</i> unpredictable because $P(1), P(3), P(4)$ is an arithmetic progression.</p>
<p>Let $S(N)$ be the position within the list of the first unpredictable permutation.</p>
<p>For example, given $N = 4$, the first unpredictable permutation is $(1, 3, 2, 4)$ so $S(4) = 3$.<br>You are also given that $S(8) = 2295$ and $S(32) \equiv 641839205 \pmod{1\ 000\ 000\ 007}$.</p>
<p>Find $S(2^{25})$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="不可预测的排列"><a href="#不可预测的排列" class="headerlink" title="不可预测的排列"></a><strong>不可预测的排列</strong></h2><p>考虑集合${1, 2, \ldots N}$的所有排列，并按字典序组成列表。<br>例如，对于$N=4$，所有排列组成的列表如下所示：</p>
<p>$$\displaylines{<br>(1, 2, 3, 4) \<br>(1, 2, 4, 3) \<br>(1, 3, 2, 4) \<br>(1, 3, 4, 2) \<br>(1, 4, 2, 3) \<br>(1, 4, 3, 2) \<br>(2, 1, 3, 4) \<br>\vdots<br>}$$</p>
<p>对于排列$P$，如果不存在三个下标$i \lt j \lt k$使得$P(i), P(j), P(k)$构成等差数列，则称该排列为<i class=zh>不可预测的</i>。<br>例如，$P=(3, 4, 2, 1)$<i class=zh>不是</i>不可预测的，因为$P(1), P(3), P(4)$构成等差数列。</p>
<p>记$S(N)$为在上述列表中第一个不可预测排列的位置。</p>
<p>例如，对于$N = 4$，第一个不可预测排列是$(1, 3, 2, 4)$，因此$S(4) = 3$。<br>已知$S(8) = 2295$，$S(32) \equiv 641839205 \pmod{1\ 000\ 000\ 007}$。</p>
<p>求$S(2^{25})$，并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 721</title>
    <url>/721/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-721"><a href="#Problem-721" class="headerlink" title="Problem 721"></a><a href="https://projecteuler.net/problem=721">Problem 721</a></h1><hr>
<h2 id="High-powers-of-irrational-numbers"><a href="#High-powers-of-irrational-numbers" class="headerlink" title="High powers of irrational numbers"></a><strong>High powers of irrational numbers</strong></h2><p>Given is the function $f(a,n)=\lfloor{(\lceil{\sqrt{a}:\rceil}+\sqrt{a}:)^n}\rfloor$.<br>$\lfloor{.}\rfloor$ denotes the floor function and $\lceil{.}\rceil$ denotes the ceiling function.<br>$f(5,2)=27$ and $f(5,5)=3935$.</p>
<p>$G(n) = \displaystyle \sum_{a=1}^n f(a, a^2).$<br>$G(1000) \bmod 999\ 999\ 937=163861845. $<br>Find $G(5\ 000\ 000).$ Give your answer modulo $999\ 999\ 937$.</p>
<hr>
<h2 id="无理数的高次幂"><a href="#无理数的高次幂" class="headerlink" title="无理数的高次幂"></a><strong>无理数的高次幂</strong></h2><p>考虑函数$f(a,n)=\lfloor{(\lceil{\sqrt{a}:\rceil}+\sqrt{a}:)^n}\rfloor$，其中$\lfloor{.}\rfloor$代表下取整函数，$\lceil{.}\rceil$代表上取整函数。<br>已知$f(5,2)=27$，$f(5,5)=3935$。</p>
<p>记$G(n) = \displaystyle \sum_{a=1}^n f(a, a^2)$。<br>已知$G(1000) \bmod 999\ 999\ 937=163861845$。<br>求$G(5\ 000\ 000)$，并将你的答案对$999\ 999\ 937$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 722</title>
    <url>/722/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-722"><a href="#Problem-722" class="headerlink" title="Problem 722"></a><a href="https://projecteuler.net/problem=722">Problem 722</a></h1><hr>
<h2 id="Slowly-converging-series"><a href="#Slowly-converging-series" class="headerlink" title="Slowly converging series"></a><strong>Slowly converging series</strong></h2><p>For a non-negative integer $k$, define<br>$$E_k(q) = \sum\limits_{n = 1}^\infty \sigma_k(n)q^n$$<br>where $\sigma_k(n) = \sum_{d \mid n} d^k$ is the sum of the $k$-th powers of the positive divisors of $n$.</p>
<p>It can be shown that, for every $k$, the series $E_k(q)$ converges for any $0&lt;q&lt; 1$.</p>
<p>For example,<br>$E_1(1 - \frac{1}{2^4}) = \mathrm{3.872155809243e2}$<br>$E_3(1 - \frac{1}{2^8}) = \mathrm{2.767385314772e10}$<br>$E_7(1 - \frac{1}{2^{15}}) = \mathrm{6.725803486744e39}$<br>All the above values are given in scientific notation rounded to twelve digits after the decimal point.</p>
<p>Find the value of $E_{15}(1 - \frac{1}{2^{25}})$.<br>Give the answer in scientific notation rounded to twelve digits after the decimal point.</p>
<hr>
<h2 id="缓慢收敛级数"><a href="#缓慢收敛级数" class="headerlink" title="缓慢收敛级数"></a><strong>缓慢收敛级数</strong></h2><p>对于非负整数$k$，记<br>$$E_k(q) = \sum\limits_{n = 1}^\infty \sigma_k(n)q^n$$<br>其中$\sigma_k(n) = \sum_{d \mid n} d^k$表示$n$的所有正约数的$k$次幂之和。</p>
<p>可以证明，对于所有$k$和任意$0&lt;q&lt; 1$，级数$E_k(q)$始终收敛。</p>
<p>例如，<br>$E_1(1 - \frac{1}{2^4}) = \mathrm{3.872155809243e2}$<br>$E_3(1 - \frac{1}{2^8}) = \mathrm{2.767385314772e10}$<br>$E_7(1 - \frac{1}{2^{15}}) = \mathrm{6.725803486744e39}$<br>上述取值均以科学计数法表示并保留小数点后十二位。</p>
<p>求$E_{15}(1 - \frac{1}{2^{25}})$的值，以科学计数法表示并保留小数点后十二位。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 723</title>
    <url>/723/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-723"><a href="#Problem-723" class="headerlink" title="Problem 723"></a><a href="https://projecteuler.net/problem=723">Problem 723</a></h1><hr>
<h2 id="Pythagorean-Quadrilaterals"><a href="#Pythagorean-Quadrilaterals" class="headerlink" title="Pythagorean Quadrilaterals"></a><strong>Pythagorean Quadrilaterals</strong></h2><p>A pythagorean triangle with catheti $a$ and $b$ and hypotenuse $c$ is characterized by the well-known equation $a^2+b^2=c^2$. However, this can also be formulated differently:<br>When inscribed into a circle with radius $r$, a triangle with sides $a$, $b$ and $c$ is pythagorean, if and only if $a^2+b^2+c^2=8\  r^2$.</p>
<p>Analogously, we call a quadrilateral $ABCD$ with sides $a$, $b$, $c$ and $d$, inscribed in a circle with radius $r$, a <i>pythagorean quadrilateral</i>, if $a^2+b^2+c^2+d^2=8\  r^2$.<br>We further call a pythagorean quadrilateral a <i>pythagorean lattice grid quadrilateral</i>, if all four vertices are lattice grid points with the same distance $r$ from the origin $O$ (which then happens to be the centre of the circumcircle).</p>
<p>Let $f(r)$ be the number of different pythagorean lattice grid quadrilaterals for which the radius of the circumcircle is $r$. For example $f(1)=1$, $f(\sqrt 2)=1$, $f(\sqrt 5)=38$ and $f(5)=167$.<br>Two of the pythagorean lattice grid quadrilaterals with $r=\sqrt 5$ are illustrated below:</p>
<p><img src="/resources/images/0723_1.png" alt="PythagoreanQ_1"></p>
<p><img src="/resources/images/0723_2.png" alt="PythagoreanQ_2"></p>
<p>Let $\displaystyle S(n)=\sum_{d \vert n} f(\sqrt d)$. For example, $S(325)=S(5^2 \cdot 13)=f(1)+f(\sqrt 5)+f(5)+f(\sqrt {13})+f(\sqrt{65})+f(5\sqrt{13})=2370$ and $S(1105)=S(5\cdot 13 \cdot 17)=5535$.</p>
<p>Find $S(1411033124176203125)=S(5^6 \cdot 13^3 \cdot 17^2 \cdot 29 \cdot 37 \cdot 41 \cdot 53 \cdot 61)$.</p>
<hr>
<h2 id="毕达哥拉斯四边形"><a href="#毕达哥拉斯四边形" class="headerlink" title="毕达哥拉斯四边形"></a><strong>毕达哥拉斯四边形</strong></h2><p>若一个毕达哥拉斯三角形也即直角三角形的直角边为$a$和$b$，斜边为$c$，则它们满足著名的勾股定理$a^2+b^2=c^2$。不过，它们同时也满足另外一条公式：<br>若一个三边长为$a$、$b$、$c$的三角形内接于一个半径为$r$的圆，当且仅当$a^2+b^2+c^2=8\ r^2$时这个三角形是毕达哥拉斯三角形。</p>
<p>类似地，若一个四边长为$a$、$b$、$c$、$d$的四边形$ABCD$内接于一个半径为$r$的圆，且满足$a^2+b^2+c^2+d^2=8\  r^2$，则我们称之为<i class=zh>毕达哥拉斯四边形</i>。<br>进一步地，如果这个毕达哥拉斯四边形的四个顶点都在格点上，且距离原点$O$的距离均为$r$（此时原点恰好也是圆心），则称之为<i class=zh>毕达哥拉斯格点四边形</i>。</p>
<p>记$f(r)$为内接于半径为$r$的圆中的不同毕达哥拉斯格点四边形的数目。例如，$f(1)=1$，$f(\sqrt 2)=1$，$f(\sqrt 5)=38$，$f(5)=167$。<br>如下图所示为两个$r=\sqrt 5$时的毕达哥拉斯格点四边形：</p>
<p><img src="/resources/images/0723_1.png" alt="毕达哥拉斯格点四边形1"></p>
<p><img src="/resources/images/0723_2.png" alt="毕达哥拉斯格点四边形2"></p>
<p>记$\displaystyle S(n)=\sum_{d \vert n} f(\sqrt d)$。例如，$S(325)=S(5^2 \cdot 13)=f(1)+f(\sqrt 5)+f(5)+f(\sqrt {13})+f(\sqrt{65})+f(5\sqrt{13})=2370$，$S(1105)=S(5\cdot 13 \cdot 17)=5535$。</p>
<p>求$S(1411033124176203125)=S(5^6 \cdot 13^3 \cdot 17^2 \cdot 29 \cdot 37 \cdot 41 \cdot 53 \cdot 61)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 724</title>
    <url>/724/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-724"><a href="#Problem-724" class="headerlink" title="Problem 724"></a><a href="https://projecteuler.net/problem=724">Problem 724</a></h1><hr>
<h2 id="Drone-Delivery"><a href="#Drone-Delivery" class="headerlink" title="Drone Delivery"></a><strong>Drone Delivery</strong></h2><p>A depot uses $n$ drones to disperse packages containing essential supplies along a long straight road.<br>Initially all drones are stationary, loaded with a supply package.<br>Every second, the depot selects a drone at random and sends it this instruction:</p>
<ul>
<li>If you are stationary, start moving at one centimetre per second along the road.</li>
<li>If you are moving, increase your speed by one centimetre per second along the road without changing direction.</li>
</ul>
<p>The road is wide enough that drones can overtake one another without risk of collision.</p>
<p>Eventually, there will only be one drone left at the depot waiting to receive its first instruction. As soon as that drone has flown one centimetre along the road, all drones drop their packages and return to the depot.</p>
<p>Let $E(n)$ be the expected distance in centimetres from the depot that the supply packages land.<br>For example, $E(2) = \frac{7}{2}$, $E(5) = \frac{12019}{720}$, and $E(100) \approx 1427.193470$.</p>
<p>Find $E(10^8)$. Give your answer rounded to the nearest integer.</p>
<hr>
<h2 id="无人机快递"><a href="#无人机快递" class="headerlink" title="无人机快递"></a><strong>无人机快递</strong></h2><p>一家仓库使用$n$架无人机来沿着一条长直马路分发装有必需供给的包裹。<br>一开始所有的无人机都处于静止状态，各自装有一个供给包裹。<br>在每一秒，随机一架无人机会被选中并收到如下的指示：</p>
<ul>
<li>如果无人机处于静止状态，则开始沿着马路以每秒一厘米的速度前进；</li>
<li>如果无人机处于运动状态，则在不改变运动方向的基础上每秒速度提高一厘米。</li>
</ul>
<p>假设马路足够宽，因此无人机在加速后可以超过其它无人机而不会发生碰撞。</p>
<p>最终，仓库中只剩下一台无人机从未收到过指令。当这台无人机首次收到指令并沿着马路恰好前进了一厘米时，所有无人机立即在原地放下包裹，并返回仓库。</p>
<p>记$E(n)$为供给包裹落点距离仓库的期望距离，以厘米计。<br>例如，$E(2) = \frac{7}{2}$，$E(5) = \frac{12019}{720}$，$E(100) \approx 1427.193470$。</p>
<p>求$E(10^8)$，并将你的答案四舍五入取整。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 725</title>
    <url>/725/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-725"><a href="#Problem-725" class="headerlink" title="Problem 725"></a><a href="https://projecteuler.net/problem=725">Problem 725</a></h1><hr>
<h2 id="Digit-sum-numbers"><a href="#Digit-sum-numbers" class="headerlink" title="Digit sum numbers"></a><strong>Digit sum numbers</strong></h2><p>A number where one digit is the sum of the <strong>other</strong> digits is called a <i>digit sum number</i> or DS-number for short. For example, $352$, $3003$ and $32812$ are DS-numbers.</p>
<p>We define $S(n)$ to be the sum of all DS-numbers of $n$ digits or less.</p>
<p>You are given $S(3) = 63270$ and $S(7) = 85499991450$.</p>
<p>Find $S(2020)$. Give your answer modulo $10^{16}$.</p>
<hr>
<h2 id="数字和数"><a href="#数字和数" class="headerlink" title="数字和数"></a><strong>数字和数</strong></h2><p>若一个数中有一位数字是<strong>其它</strong>数字之和，则称这个数为<i class=zh>数字和数</i>或简称为DS-数。例如，$352$、$3003$和$32812$都是DS-数。</p>
<p>记$S(n)$为所有$n$位及$n$位以下的DS-数之和。</p>
<p>已知$S(3) = 63270$，$S(7) = 85499991450$。</p>
<p>求$S(2020)$，并将你的答案对$10^{16}$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 726</title>
    <url>/726/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-726"><a href="#Problem-726" class="headerlink" title="Problem 726"></a><a href="https://projecteuler.net/problem=726">Problem 726</a></h1><hr>
<h2 id="Falling-bottles"><a href="#Falling-bottles" class="headerlink" title="Falling bottles"></a><strong>Falling bottles</strong></h2><p>Consider a stack of bottles of wine. There are $n$ layers in the stack with the top layer containing only one bottle and the bottom layer containing $n$ bottles. For $n=4$ the stack looks like the picture below.</p>
<p><img src="/resources/images/0726_FallingBottles.jpg" alt=""></p>
<p>The <i>collapsing process</i> happens every time a bottle is taken. A space is created in the stack and that space is filled according to the following recursive steps:</p>
<ul>
<li>No bottle touching from above: nothing happens. For example, taking $F$.</li>
<li>One bottle touching from above: that will drop down to fill the space creating another space. For example, taking $D$.</li>
<li>Two bottles touching from above: one will drop down to fill the space creating another space. For example, taking $C$.</li>
</ul>
<p>This process happens recursively; for example, taking bottle $A$ in the diagram above. Its place can be filled with either $B$ or $C$. If it is filled with $C$ then the space that $C$ creates can be filled with $D$ or $E$. So there are $3$ different collapsing processes that can happen if $A$ is taken, although the final shape (in this case) is the same.</p>
<p>Define $f(n)$ to be the number of ways that we can take all the bottles from a stack with $n$ layers. Two ways are considered different if at any step we took a different bottle or the collapsing process went differently.</p>
<p>You are given $f(1) = 1$, $f(2) = 6$ and $f(3) = 1008$.</p>
<p>Also define<br>$$\displaystyle    S(n) = \sum_{k=1}^n f(k)$$</p>
<p>Find $S(10^4)$ and give your answer modulo $1\ 000\ 000\ 033$.</p>
<hr>
<h2 id="掉落的酒瓶"><a href="#掉落的酒瓶" class="headerlink" title="掉落的酒瓶"></a><strong>掉落的酒瓶</strong></h2><p>一堆酒瓶被摆成$n$层，其中最顶层只有一个酒瓶，而最底层有$n$个酒瓶。如下图所示为$n=4$时酒瓶的摆放示例。</p>
<p><img src="/resources/images/0726_FallingBottles.jpg" alt=""></p>
<p>每次从这堆酒瓶中拿走一瓶酒，就会触发一连串<i class=zh>掉落过程</i>。被拿走的酒瓶所留下的空位会根据以下规则填满：</p>
<ul>
<li>空位上方没有酒瓶，则什么都不会发生，比如在上图中拿走$F$。</li>
<li>空位上方只有一个酒瓶，则该酒瓶掉落填补空位，并在原位置留下一个新的空位，比如在上图中拿走$D$。</li>
<li>空位上方有两个酒瓶，则其中一个酒瓶掉落填补空位，并在原位置留下一个新的空位，比如在上图中拿走$C$。</li>
</ul>
<p>如果有新空位出现，则上述过程会持续进行；例如，在上图中拿走$A$，所留下的空位可以被$B$或$C$填补。若$C$填补了该空位，则$C$留下的新空位可以被$D$或$E$填补。因此，拿走$A$之后总共有$3$种不同的掉落过程，尽管它们最终导致的酒堆形状是相同的。</p>
<p>记$f(n)$为从$n$层酒堆中拿走所有瓶子的不同方式，这里的不同既指在每一步拿走的酒瓶的不同，也指拿走酒瓶后的掉落过程的不同。</p>
<p>已知$f(1) = 1$，$f(2) = 6$，$f(3) = 1008$。</p>
<p>再记<br>$$\displaystyle    S(n) = \sum_{k=1}^n f(k)$$</p>
<p>求$S(10^4)$，并将你的答案对$1\ 000\ 000\ 033$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 727</title>
    <url>/727/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-727"><a href="#Problem-727" class="headerlink" title="Problem 727"></a><a href="https://projecteuler.net/problem=727">Problem 727</a></h1><hr>
<h2 id="Triangle-of-Circular-Arcs"><a href="#Triangle-of-Circular-Arcs" class="headerlink" title="Triangle of Circular Arcs"></a><strong>Triangle of Circular Arcs</strong></h2><p>Let $r_a$, $r_b$ and $r_c$ be the radii of three circles that are mutually and externally tangent to each other. The three circles then form a <i>triangle of circular arcs</i> between their tangency points as shown for the three blue circles in the picture below.</p>
<p><img src="/resources/images/0727_circular_arcs.jpg" alt="CircularArcs"></p>
<p>Define the circumcircle of this triangle to be the red circle, with centre $D$, passing through their tangency points. Further define the incircle of this triangle to be the green circle, with centre $E$, that is mutually and externally tangent to all the three blue circles. Let $d=\vert DE \vert$ be the distance between the centres of the circumcircle and the incircle.</p>
<p>Let $\mathbb{E}(d)$ be the expected value of $d$ when $r_a$, $r_b$ and $r_c$ are integers chosen uniformly such that $1\leq r_a&lt;r_b&lt;r_c \le 100$ and $\text{gcd}(r_a,r_b,r_c)=1$.</p>
<p>Find $\mathbb{E}(d)$, rounded to eight places after the decimal point.</p>
<hr>
<h2 id="圆弧三角形"><a href="#圆弧三角形" class="headerlink" title="圆弧三角形"></a><strong>圆弧三角形</strong></h2><p>三个半径为$r_a$、$r_b$和$r_c$的圆两两外切，在切点之间构成了一个<i class=zh>圆弧三角形</i>，如下图的三个蓝色圆所示。</p>
<p><img src="/resources/images/0727_circular_arcs.jpg" alt="圆弧"></p>
<p>记圆弧三角形的外接圆为上图中的红色圆，圆心点为$D$且过三个切点。再记圆弧三角形的内切圆为上图中的绿色圆，圆心点为$E$且与三个蓝色圆外切。记$d=\vert DE \vert$为外接圆和内切圆的圆心距。</p>
<p>若$r_a$、$r_b$和$r_c$均为在$1\leq r_a&lt;r_b&lt;r_c \le 100$范围内随机均匀抽取的整数且满足$\text{gcd}(r_a,r_b,r_c)=1$，记$\mathbb{E}(d)$为$d$的期望值。</p>
<p>求$\mathbb{E}(d)$并保留小数点后八位数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 728</title>
    <url>/728/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-728"><a href="#Problem-728" class="headerlink" title="Problem 728"></a><a href="https://projecteuler.net/problem=728">Problem 728</a></h1><hr>
<h2 id="Circle-of-Coins"><a href="#Circle-of-Coins" class="headerlink" title="Circle of Coins"></a><strong>Circle of Coins</strong></h2><p>Consider $n$ coins arranged in a circle where each coin shows heads or tails. A move consists of turning over $k$ consecutive coins: tail-head or head-tail. Using a sequence of these moves the objective is to get all the coins showing heads.</p>
<p>Consider the example, shown below, where $n=8$ and $k=3$ and the initial state is one coin showing tails (black). The example shows a solution for this state.</p>
<p><img src="/resources/images/0728_coin_circle.jpg" alt=""></p>
<p>For given values of $n$ and $k$ not all states are solvable.  Let $F(n,k)$ be the number of states that are solvable. You are given that $F(3,2) = 4$, $F(8,3) = 256$ and $F(9,3) = 128$.</p>
<p>Further define:<br>$$\displaystyle S(N) = \sum_{n=1}^N\sum_{k=1}^n F(n,k)$$</p>
<p>You are also given that $S(3) = 22$, $S(10) = 10444$ and $S(10^3) \equiv 853837042 \pmod{1\ 000\ 000\ 007}$.</p>
<p>Find $S(10^7)$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="硬币圈"><a href="#硬币圈" class="headerlink" title="硬币圈"></a><strong>硬币圈</strong></h2><p>$n$枚硬币摆成一圈，初始状态下硬币任意地正面或反面朝上。每一次行动可以将相邻的$k$枚硬币翻面：正面变为反面，反面变为正面。最终目标是通过一系列行动将所有的硬币翻为正面朝上。</p>
<p>考虑如下所示这个例子，其中$n=8$，$k=3$，初始状态下只有一枚硬币为反面（用黑色表示）。下图展示了其中一种将初始状态变为全正面朝上的解法。</p>
<p><img src="/resources/images/0728_coin_circle.jpg" alt=""></p>
<p>对于给定的$n$和$k$的取值，不是所有的初始状态都能够完成目标。记$F(n,k)$为所有能够完成目标的初始状态数目。已知$F(3,2) = 4$，$F(8,3) = 256$，$F(9,3) = 128$。</p>
<p>进一步地，记<br>$$\displaystyle S(N) = \sum_{n=1}^N\sum_{k=1}^n F(n,k)$$</p>
<p>已知$S(3) = 22$，$S(10) = 10444$，$S(10^3) \equiv 853837042 \pmod{1\ 000\ 000\ 007}$。</p>
<p>求$S(10^7)$，并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 729</title>
    <url>/729/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-729"><a href="#Problem-729" class="headerlink" title="Problem 729"></a><a href="https://projecteuler.net/problem=729">Problem 729</a></h1><hr>
<h2 id="Range-of-periodic-sequence"><a href="#Range-of-periodic-sequence" class="headerlink" title="Range of periodic sequence"></a><strong>Range of periodic sequence</strong></h2><p>Consider the sequence of real numbers $a_n$ defined by the starting value $a_0$ and the recurrence $\displaystyle a_{n+1}=a_n-\frac 1 {a_n}$ for any $n  \ge 0$.</p>
<p>For some starting values $a_0$ the sequence will be periodic. For example, $a_0=\sqrt{\frac 1 2}$ yields the sequence: $\sqrt{\frac 1 2},-\sqrt{\frac 1 2},\sqrt{\frac 1 2}, \dots$</p>
<p>We are interested in the range of such a periodic sequence which is the difference between the maximum and minimum of the sequence. For example, the range of the sequence above would be $\sqrt{\frac 1 2}-(-\sqrt{\frac 1 2})=\sqrt{ 2}$.</p>
<p>Let $S(P)$ be the sum of the ranges of all such periodic sequences with a period not exceeding $P$.<br>For example, $S(2)=2\sqrt{2} \approx 2.8284$, being the sum of the ranges of the two sequences starting with $a_0=\sqrt{\frac 1 2}$ and $a_0=-\sqrt{\frac 1 2}$.<br>You are given $S(3) \approx 14.6461$ and $S(5) \approx 124.1056$.</p>
<p>Find $S(25)$, rounded to $4$ decimal places.</p>
<hr>
<h2 id="周期数列的极差"><a href="#周期数列的极差" class="headerlink" title="周期数列的极差"></a><strong>周期数列的极差</strong></h2><p>考虑实数数列$a_n$，初值为$a_0$，对于任意$n  \ge 0$的递推式为$\displaystyle a_{n+1}=a_n-\frac 1 {a_n}$。</p>
<p>对于某些初值$a_0$，该数列为周期数列。例如，若$a_0=\sqrt{\frac 1 2}$，则数列为：$\sqrt{\frac 1 2},-\sqrt{\frac 1 2},\sqrt{\frac 1 2}, \dots$</p>
<p>我们希望研究这类周期数列的极差，也即数列中的最大值和最小值之差。例如，在上述数列中，极差是$\sqrt{\frac 1 2}-(-\sqrt{\frac 1 2})=\sqrt{ 2}$。</p>
<p>记$S(P)$为所有周期不超过$P$的周期数列的极差之和。<br>例如，$S(2)=2\sqrt{2} \approx 2.8284$，对应的周期数列初值分别是$a_0=\sqrt{\frac 1 2}$和$a_0=-\sqrt{\frac 1 2}$。<br>已知$S(3) \approx 14.6461$，$S(5) \approx 124.1056$。</p>
<p>求$S(25)$，并保留$4$位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 73</title>
    <url>/73/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-73"><a href="#Problem-73" class="headerlink" title="Problem 73"></a><a href="https://projecteuler.net/problem=73">Problem 73</a></h1><hr>
<h2 id="Counting-Fractions-in-a-Range"><a href="#Counting-Fractions-in-a-Range" class="headerlink" title="Counting Fractions in a Range"></a><strong>Counting Fractions in a Range</strong></h2><p>Consider the fraction, $n/d$, where $n$ and $d$ are positive integers. If $n &lt; d$ and $HCF(n,d)=1$, it is called a reduced proper fraction.</p>
<p>If we list the set of reduced proper fractions for $d \le 8$ in ascending order of size, we get:</p>
<p>$$1/8, 1/7, 1/6, 1/5, 1/4, 2/7, 1/3, \textbf{3/8, 2/5, 3/7}, 1/2,$$<br>$$4/7, 3/5, 5/8, 2/3, 5/7, 3/4, 4/5, 5/6, 6/7, 7/8$$</p>
<p>It can be seen that there are $3$ fractions between $1/3$ and $1/2$.</p>
<p>How many fractions lie between $1/3$ and $1/2$ in the sorted set of reduced proper fractions for $d \le 12,000$?</p>
<hr>
<h2 id="分数有范围计数"><a href="#分数有范围计数" class="headerlink" title="分数有范围计数"></a><strong>分数有范围计数</strong></h2><p>考虑形如$n/d$的分数，其中$n$和$d$均为正整数。如果$n&lt;d$且其最大公约数为$1$，则称该分数为最简真分数。</p>
<p>将所有$d\le8$的最简真分数构成的集合按大小升序排列：</p>
<p>$$1/8, 1/7, 1/6, 1/5, 1/4, 2/7, 1/3, \textbf{3/8, 2/5, 3/7}, 1/2,$$<br>$$4/7, 3/5, 5/8, 2/3, 5/7, 3/4, 4/5, 5/6, 6/7, 7/8$$</p>
<p>可以看出在$1/3$和$1/2$之间有$3$个分数。</p>
<p>将$d \le 12,000$的最简真分数构成的集合排序后，在$1/3$和$1/2$之间有多少个分数？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 730</title>
    <url>/730/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-730"><a href="#Problem-730" class="headerlink" title="Problem 730"></a><a href="https://projecteuler.net/problem=730">Problem 730</a></h1><hr>
<h2 id="Shifted-Pythagorean-Triples"><a href="#Shifted-Pythagorean-Triples" class="headerlink" title="Shifted Pythagorean Triples"></a><strong>Shifted Pythagorean Triples</strong></h2><p>For a non-negative integer $k$, the triple $(p,q,r)$ of positive integers is called a <i>$k$-shifted Pythagorean triple</i> if $$p^2 + q^2 + k = r^2$$</p>
<p>$(p, q, r)$ is said to be primitive if $\gcd(p, q, r)=1$.</p>
<p>Let $P_k(n)$ be the number of primitive k-shifted Pythagorean triples such that $1 \le p \le q \le r$ and $p + q + r \le n$.<br>For example, $P_0(10^4) = 703$ and $P_{20}(10^4) = 1979$. </p>
<p>Define<br>$$\displaystyle S(m,n)=\sum_{k=0}^{m}P_k(n)$$<br>You are given that $S(10,10^4) = 10956$. </p>
<p>Find $S(10^2,10^8)$.</p>
<hr>
<h2 id="移位勾股数"><a href="#移位勾股数" class="headerlink" title="移位勾股数"></a><strong>移位勾股数</strong></h2><p>对于非负整数$k$，若正整数三元组$(p,q,r)$满足<br>$$p^2 + q^2 + k = r^2$$<br>则称之为<i class=zh>$k$-移位勾股数</i>。若进一步地$(p, q, r)$满足$\gcd(p, q, r)=1$，则称为$k$-移位本原勾股数。</p>
<p>记$P_k(n)$为满足$1 \le p \le q \le r$和$p + q + r \le n$的$k$-移位本原勾股数的数目。<br>例如，$P_0(10^4) = 703$，$P_{20}(10^4) = 1979$。</p>
<p>记<br>$$\displaystyle S(m,n)=\sum_{k=0}^{m}P_k(n)$$<br>已知$S(10,10^4) = 10956$。</p>
<p>求$S(10^2,10^8)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 731</title>
    <url>/731/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-731"><a href="#Problem-731" class="headerlink" title="Problem 731"></a><a href="https://projecteuler.net/problem=731">Problem 731</a></h1><hr>
<h2 id="A-Stoneham-Number"><a href="#A-Stoneham-Number" class="headerlink" title="A Stoneham Number"></a><strong>A Stoneham Number</strong></h2><p>$$A=\sum_{i=1}^{\infty} \frac{1}{3^i 10^{3^i}}$$</p>
<p>Define $A(n)$ to be the $10$ decimal digits from the $n$th digit onward. For example, $A(100) = 4938271604$ and $A(10^8)=2584642393$.</p>
<p>Find $A(10^{16})$.</p>
<hr>
<h2 id="斯托纳姆数"><a href="#斯托纳姆数" class="headerlink" title="斯托纳姆数"></a><strong>斯托纳姆数</strong></h2><p>$$A=\sum_{i=1}^{\infty} \frac{1}{3^i 10^{3^i}}$$</p>
<p>记$A(n)$为从$A$的小数点后$n$位开始的$10$个数字。例如，$A(100) = 4938271604$，$A(10^8)=2584642393$。</p>
<p>求$A(10^{16})$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 732</title>
    <url>/732/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-732"><a href="#Problem-732" class="headerlink" title="Problem 732"></a><a href="https://projecteuler.net/problem=732">Problem 732</a></h1><hr>
<h2 id="Standing-on-the-shoulders-of-trolls"><a href="#Standing-on-the-shoulders-of-trolls" class="headerlink" title="Standing on the shoulders of trolls"></a><strong>Standing on the shoulders of trolls</strong></h2><p>$N$ trolls are in a hole that is $D_N$ cm deep. The $n$-th troll is characterized by:</p>
<ul>
<li>the distance from his feet to his shoulders in cm, $h_n$</li>
<li>the length of his arms in cm, $l_n$</li>
<li>his IQ (Irascibility Quotient), $q_n$.</li>
</ul>
<p>Trolls can pile up on top of each other, with each troll standing on the shoulders of the one below him. A troll can climb out of the hole and escape if his hands can reach to the surface. Once a troll escapes he cannot participate any further in the escaping effort.</p>
<p>The trolls execute an optimal strategy for maximizing the total IQ of the escaping trolls, defined as $Q(N)$.</p>
<p>Let<br>$r_n = \left[ \left( 5^n \bmod (10^9 + 7) \right) \bmod 101 \right] + 50$<br>$h_n = r_{3n}$<br>$l_n = r_{3n+1}$<br>$q_n = r_{3n+2}$<br>$D_N = \frac{1}{\sqrt{2}} \sum_{n=0}^{N-1} h_n$.</p>
<p>For example, the first troll ($n=0$) is $51$cm tall to his shoulders, has $55$cm long arms, and has an IQ of $75$.</p>
<p>You are given that $Q(5) = 401$ and $Q(15)=941$.</p>
<p>Find $Q(1000)$.</p>
<hr>
<h2 id="站在巨魔的肩膀上"><a href="#站在巨魔的肩膀上" class="headerlink" title="站在巨魔的肩膀上"></a><strong>站在巨魔的肩膀上</strong></h2><p>$N$只巨魔（编号为$0$至$N-1$）掉进了深度为$D_N$厘米的洞中，其中编号为$n$的巨魔有三项特征：</p>
<ul>
<li>他的肩高为$h_n$厘米；</li>
<li>他的臂长为$l_n$厘米；</li>
<li>他的怒商（怒气商数，简称IQ）为$q_n$。</li>
</ul>
<p>巨魔们可以通过站在别的巨魔的肩膀上来搭起人梯，只要人梯最上方的巨魔的手臂能够够到地表，这只巨魔就能逃生。已经逃生的巨魔不能回洞中继续帮助其他巨魔逃生。</p>
<p>假设巨魔采用了能够使得所有逃出巨魔的IQ之和最高的策略，并记该策略下IQ之和为$Q(N)$。</p>
<p>记<br>$r_n = \left[ \left( 5^n \bmod (10^9 + 7) \right) \bmod 101 \right] + 50$<br>$h_n = r_{3n}$<br>$l_n = r_{3n+1}$<br>$q_n = r_{3n+2}$<br>$D_N = \frac{1}{\sqrt{2}} \sum_{n=0}^{N-1} h_n$.</p>
<p>例如，第一只（编号为$n=0$）巨魔的肩高为$51$厘米，臂长为$55$厘米，IQ为$75$。</p>
<p>已知$Q(5) = 401$，$Q(15)=941$。</p>
<p>求$Q(1000)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 733</title>
    <url>/733/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-733"><a href="#Problem-733" class="headerlink" title="Problem 733"></a><a href="https://projecteuler.net/problem=733">Problem 733</a></h1><hr>
<h2 id="Ascending-subsequences"><a href="#Ascending-subsequences" class="headerlink" title="Ascending subsequences"></a><strong>Ascending subsequences</strong></h2><p>Let $a_i$ be the sequence defined by $a_i=153^i \bmod 10\ 000\ 019$ for $i \ge 1$.<br>The first terms of $a_i$ are: $153, 23409, 3581577, 7980255, 976697, 9434375, \dots$</p>
<p>Consider the subsequences consisting of $4$ terms in ascending order. For the part of the sequence shown above, these are:<br>$153, 23409, 3581577, 7980255$<br>$153, 23409, 3581577, 9434375$<br>$153, 23409, 7980255, 9434375$<br>$153, 23409, 976697, 9434375$<br>$153, 3581577, 7980255, 9434375$ and<br>$23409, 3581577, 7980255, 9434375$.</p>
<p>Define $S(n)$ to be the sum of the terms for all such subsequences within the first $n$ terms of $a_i$. Thus $S(6)=94513710$.<br>You are given that $S(100)=4465488724217$.</p>
<p>Find $S(10^6)$ modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="递增子序列"><a href="#递增子序列" class="headerlink" title="递增子序列"></a><strong>递增子序列</strong></h2><p>对于任意$i \ge 1$，序列$a_i$满足$a_i=153^i \bmod 10\ 000\ 019$。<br>该序列的一开始几项为：$153, 23409, 3581577, 7980255, 976697, 9434375, \dots$</p>
<p>考虑该序列长度为$4$的递增子序列。只看上面列出的几项，这样的子序列包括：<br>$153, 23409, 3581577, 7980255$<br>$153, 23409, 3581577, 9434375$<br>$153, 23409, 7980255, 9434375$<br>$153, 23409, 976697, 9434375$<br>$153, 3581577, 7980255, 9434375$<br>$23409, 3581577, 7980255, 9434375$</p>
<p>记$S(n)$为序列$a_i$的前$n$项中，此类子序列的各项之和。因此$S(6)=94513710$。<br>已知$S(100)=4465488724217$。</p>
<p>求$S(10^6)$并对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 735</title>
    <url>/735/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-735"><a href="#Problem-735" class="headerlink" title="Problem 735"></a><a href="https://projecteuler.net/problem=735">Problem 735</a></h1><hr>
<h2 id="Divisors-of-2n-2"><a href="#Divisors-of-2n-2" class="headerlink" title="Divisors of $2n^2$"></a><strong>Divisors of $2n^2$</strong></h2><p>Let $f(n)$ be the number of divisors of $2n^2$ that are no greater than $n$. For example, $f(15)=8$ because there are $8$ such divisors: $1,2,3,5,6,9,10,15$. Note that $18$ is also a divisor of $2\times 15^2$ but it is not counted because it is greater than $15$.</p>
<p>Let $\displaystyle F(N) = \sum_{n=1}^N f(n)$. You are given $F(15)=63$, and $F(1000)=15066$.</p>
<p>Find $F(10^{12})$.</p>
<hr>
<h2 id="2n-2-的约数"><a href="#2n-2-的约数" class="headerlink" title="$2n^2$的约数"></a><strong>$2n^2$的约数</strong></h2><p>记$f(n)$为$2n^2$的不超过$n$的约数数目。例如，$f(15)=8$因为有$8$个满足条件的约数：$1,2,3,5,6,9,10,15$。注意尽管$18$也是$2\times 15^2$的约数，但是因为它大于$15$因此不被计算在内。</p>
<p>记$\displaystyle F(N) = \sum_{n=1}^N f(n)$。已知$F(15)=63$，$F(1000)=15066$。</p>
<p>求$F(10^{12})$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 734</title>
    <url>/734/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-734"><a href="#Problem-734" class="headerlink" title="Problem 734"></a><a href="https://projecteuler.net/problem=734">Problem 734</a></h1><hr>
<h2 id="A-bit-of-prime"><a href="#A-bit-of-prime" class="headerlink" title="A bit of prime"></a><strong>A bit of prime</strong></h2><p>The <i>logical-OR</i> of two bits is $0$ if both bits are $0$, otherwise it is $1$.<br>The <i>bitwise-OR</i> of two positive integers performs a <i>logical OR</i> operation on each pair of corresponding bits in the binary expansion of its inputs.</p>
<p>For example, the bitwise-OR of $10$ and $6$ is $14$ because $10 = 1010_2$, $6 = 0110_2$ and $14 = 1110_2$.</p>
<p>Let $T(n, k)$ be the number of $k$-tuples $(x_1, x_2,\cdots,x_k)$ such that</p>
<ul>
<li>every $x_i$ is a prime $\leq n$</li>
<li>the bitwise-OR of the tuple is a prime $\leq n$</li>
</ul>
<p>For example, $T(5, 2)=5$. The five $2$-tuples are $(2, 2)$, $(2, 3)$, $(3, 2)$, $(3, 3)$ and $(5, 5)$.</p>
<p>You are given $T(100, 3) = 3355$ and $T(1000, 10) \equiv 2071632 \pmod{1\ 000\ 000\ 007}$.</p>
<p>Find $T(10^6,999983)$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="质数与位运算"><a href="#质数与位运算" class="headerlink" title="质数与位运算"></a><strong>质数与位运算</strong></h2><p>在数的二进制表示下，每一位数字称为一个比特。两个比特之间的<i class-zh>逻辑或</i>定义如下：若这两个比特均为$0$，则结果为$0$，否则结果为$1$。<br>两个正整数的<i class=zh>按位或</i>定义如下：将这两个正整数表示成二进制，并将对应位置的比特进行<i class=zh>逻辑或</i>运算。</p>
<p>例如，$10$和$6$的按位或结果为$14$，这是因为$10 = 1010_2$，$6 = 0110_2$，而$14 = 1110_2$。</p>
<p>记$T(n, k)$为满足以下条件的$k$-元组$(x_1, x_2,\cdots,x_k)$的数目：</p>
<ul>
<li>每个$x_i$均为小于等于$n$的质数；</li>
<li>元组中所有数按位或的结果是一个小于等于$n$的质数。</li>
</ul>
<p>例如，$T(5, 2)=5$，这五个$2$-元组分别是$(2, 2)$、$(2, 3)$、$(3, 2)$、$(3, 3)$和$(5, 5)$。</p>
<p>已知$T(100, 3) = 3355$，$T(1000, 10) \equiv 2071632 \pmod{1\ 000\ 000\ 007}$。</p>
<p>求$T(10^6,999983)$，并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 736</title>
    <url>/736/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-736"><a href="#Problem-736" class="headerlink" title="Problem 736"></a><a href="https://projecteuler.net/problem=736">Problem 736</a></h1><hr>
<h2 id="Paths-to-Equality"><a href="#Paths-to-Equality" class="headerlink" title="Paths to Equality"></a><strong>Paths to Equality</strong></h2><p>Define two functions on lattice points:<br>$$r(x,y) = (x+1,2y)$$<br>$$s(x,y) = (2x,y+1)$$</p>
<p>A <i>path to equality</i> of length $n$ for a pair $(a,b)$ is a sequence $\Big((a_1,b_1),(a_2,b_2),\ldots,(a_n,b_n)\Big)$, where:</p>
<ul>
<li>$(a_1,b_1) = (a,b)$</li>
<li>$(a_k,b_k) = r(a_{k-1},b_{k-1})$ or $(a_k,b_k) = s(a_{k-1},b_{k-1})$ for $k &gt;1$</li>
<li>$a_k \ne b_k$ for $k&lt;n$</li>
<li>$a_n = b_n$</li>
</ul>
<p>$a_n = b_n$ is called the <i>final value</i>.</p>
<p>For example,<br>$$(45,90)\xrightarrow{r} (46,180)\xrightarrow{s}(92,181)\xrightarrow{s}(184,182)\xrightarrow{s}(368,183)\xrightarrow{s}(736,184)\xrightarrow{r}$$<br>$$(737,368)\xrightarrow{s}(1474,369)\xrightarrow{r}(1475,738)\xrightarrow{r}(1476,1476)$$</p>
<p>This is a path to equality for $(45,90)$ and is of length $10$ with final value $1476$. There is no path to equality of $(45,90)$ with smaller length.</p>
<p>Find the unique path to equality for $(45,90)$ with smallest <strong>odd</strong> length. Enter the final value as your answer.</p>
<hr>
<h2 id="趋等路径"><a href="#趋等路径" class="headerlink" title="趋等路径"></a><strong>趋等路径</strong></h2><p>对格点定义如下两个函数：<br>$$r(x,y) = (x+1,2y)$$<br>$$s(x,y) = (2x,y+1)$$</p>
<p>对于数对$(a,b)$，一条长度为$n$的<i class=zh>趋等路径</i>是指满足如下条件的序列$\Big((a_1,b_1),(a_2,b_2),\ldots,(a_n,b_n)\Big)$：</p>
<ul>
<li>$(a_1,b_1) = (a,b)$</li>
<li>对于所有$k&gt;1$，$(a_k,b_k) = r(a_{k-1},b_{k-1})$或$(a_k,b_k) = s(a_{k-1},b_{k-1})$</li>
<li>对于所有$k&lt;n$，$a_k \ne b_k$</li>
<li>$a_n = b_n$</li>
</ul>
<p>$a_n = b_n$被称为该路径的<i class=zh>终值</i>。</p>
<p>例如，<br>$$(45,90)\xrightarrow{r} (46,180)\xrightarrow{s}(92,181)\xrightarrow{s}(184,182)\xrightarrow{s}(368,183)\xrightarrow{s}(736,184)\xrightarrow{r}$$<br>$$(737,368)\xrightarrow{s}(1474,369)\xrightarrow{r}(1475,738)\xrightarrow{r}(1476,1476)$$<br>这是数对$(45,90)$的一条趋等路径，其长度为$10$，终值为$1476$。对于数对$(45,90)$，不存在更短的趋等路径。</p>
<p>对于数对$(45,90)$，求其长度为<strong>奇数</strong>的趋等路径中唯一最短的那条，并将其终值作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 737</title>
    <url>/737/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-737"><a href="#Problem-737" class="headerlink" title="Problem 737"></a><a href="https://projecteuler.net/problem=737">Problem 737</a></h1><hr>
<h2 id="Coin-Loops"><a href="#Coin-Loops" class="headerlink" title="Coin Loops"></a><strong>Coin Loops</strong></h2><p>A game is played with many identical, round coins on a flat table.</p>
<p>Consider a line perpendicular to the table.<br>The first coin is placed on the table touching the line.<br>Then, one by one, the coins are placed horizontally on top of the previous coin and touching the line.<br>The complete stack of coins must be balanced after every placement.</p>
<p>The diagram below [not to scale] shows a possible placement of $8$ coins where point $P$ represents the line.</p>
<p><img src="/resources/images/0737_coinloop.jpg" alt=""></p>
<p>It is found that a minimum of $31$ coins are needed to form a <i>coin loop</i> around the line, i.e. if in the projection of the coins on the table the centre of the $n$th coin is rotated $\theta_n$, about the line, from the centre of the $(n-1)$th coin then the sum of $\displaystyle\sum_{k=2}^n \theta_k$ is first larger than $360^\circ$ when $n=31$. In general, to loop $k$ times, $n$ is the smallest number for which the sum is greater than $360^\circ k$.</p>
<p>Also, $154$ coins are needed to loop two times around the line, and $6947$ coins to loop ten times.</p>
<p>Calculate the number of coins needed to loop $2020$ times around the line.</p>
<hr>
<h2 id="硬币环绕"><a href="#硬币环绕" class="headerlink" title="硬币环绕"></a><strong>硬币环绕</strong></h2><p>如下游戏需要一张平整的桌子和许多相同大小的圆形硬币。</p>
<p>想象在桌面上有一条竖直的线。<br>紧贴竖直线，在桌面上平放第一枚硬币。<br>接着，不断地在上一枚硬币上平放一枚硬币，新的硬币也必须紧贴竖直线。<br>在每次放上新的硬币时，堆叠的硬币必须始终保持平衡。</p>
<p>如下图展示了摆放$8$枚硬币的俯视示意图（并未精确绘制，仅供参考），其中点$P$表示竖直线。</p>
<p><img src="/resources/images/0737_coinloop.jpg" alt=""></p>
<p>已知，为了沿着竖直线让<i class=zh>硬币环绕</i>一整圈，至少需要$31$枚硬币，也就是说，在俯视图中，记第$n$枚硬币的圆心相对第$n-1$枚硬币绕着竖直线转过的角度为$\theta_n$，则当$n=31$时，$\displaystyle\sum_{k=2}^n \theta_k$第一次大于$360^\circ$。一般地，说需要$n$枚硬币以环绕竖直线$k$圈，表示$n$是使上述求和第一次大于$360^\circ k$的整数。</p>
<p>又已知，环绕竖直线两圈需要$154$枚硬币，环绕竖直线十圈需要$6947$枚硬币。</p>
<p>求环绕竖直线$2020$圈需要的硬币数目。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 738</title>
    <url>/738/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-738"><a href="#Problem-738" class="headerlink" title="Problem 738"></a><a href="https://projecteuler.net/problem=738">Problem 738</a></h1><hr>
<h2 id="Counting-Ordered-Factorisations"><a href="#Counting-Ordered-Factorisations" class="headerlink" title="Counting Ordered Factorisations"></a><strong>Counting Ordered Factorisations</strong></h2><p>Define $d(n,k)$ to be the number of ways to write $n$ as a product of $k$ ordered integers<br>$$n = x_1\times x_2\times x_3\times \ldots\times x_k\qquad 1\le x_1\le x_2\le\ldots\le x_k$$</p>
<p>Further define $D(N,K)$ to be the sum of $d(n,k)$ for $1\le n\le N$ and $1\le k\le K$.</p>
<p>You are given that $D(10, 10) = 153$ and $D(100, 100) = 35384$.</p>
<p>Find $D(10^{10},10^{10})$ giving your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="有序因数分解计数"><a href="#有序因数分解计数" class="headerlink" title="有序因数分解计数"></a><strong>有序因数分解计数</strong></h2><p>记$d(n,k)$为将$n$表示为$k$个递增整数之积的方式数<br>$$n = x_1\times x_2\times x_3\times \ldots\times x_k\qquad 1\le x_1\le x_2\le\ldots\le x_k$$</p>
<p>再记$D(N,K)$为所有$1\le n\le N$和$1\le k\le K$对应的$d(n,k)$之和。</p>
<p>已知$D(10, 10) = 153$，$D(100, 100) = 35384$。</p>
<p>求$D(10^{10},10^{10})$，并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 739</title>
    <url>/739/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-739"><a href="#Problem-739" class="headerlink" title="Problem 739"></a><a href="https://projecteuler.net/problem=739">Problem 739</a></h1><hr>
<h2 id="Summation-of-Summations"><a href="#Summation-of-Summations" class="headerlink" title="Summation of Summations"></a><strong>Summation of Summations</strong></h2><p>Take a sequence of length $n$. Discard the first term then make a sequence of the partial summations. Continue to do this over and over until we are left with a single term. We define this to be $f(n)$.</p>
<p>Consider the example where we start with a sequence of length $8$:</p>
<p>$$<br>\begin{array}{rrrrrrrr}<br>1 &amp; 1 &amp; 1 &amp; 1 &amp; 1 &amp; 1 &amp; 1 &amp; 1\<br>  &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp;  6  &amp; 7\<br>  &amp;   &amp; 2 &amp; 5 &amp; 9 &amp; 14 &amp; 20 &amp; 27\<br>  &amp;   &amp;   &amp; 5 &amp; 14 &amp; 28 &amp; 48 &amp; 75\<br>  &amp;   &amp;   &amp;   &amp; 14 &amp; 42 &amp; 90 &amp; 165\<br>  &amp;   &amp;   &amp;   &amp;   &amp;  42  &amp;  132  &amp;  297\<br>  &amp;   &amp;   &amp;   &amp;   &amp;   &amp;  132  &amp; 429\<br>  &amp;   &amp;   &amp;   &amp;   &amp;   &amp;   &amp; 429\<br>\end{array}<br>$$</p>
<p>Then the final number is $429$, so $f(8) = 429$.</p>
<p>For this problem we start with the sequence $1,3,4,7,11,18,29,47,\ldots$<br>This is the Lucas sequence where two terms are added to get the next term.<br>Applying the same process as above we get $f(8) = 2663$.<br>You are also given $f(20) \equiv 742296999 \bmod 1\ 000\ 000\ 007$.</p>
<p>Find $f(10^8)$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="求和再求和"><a href="#求和再求和" class="headerlink" title="求和再求和"></a><strong>求和再求和</strong></h2><p>考虑一个长度为$n$的数列，先去掉第一项并求部分和，再对部分和序列不断重复同样的操作，直到只剩下一项。我们记剩下的这一项为$f(n)$。</p>
<p>如下展示的例子中，初始序列为$8$个$1$：</p>
<p>$$<br>\begin{array}{rrrrrrrr}<br>1 &amp; 1 &amp; 1 &amp; 1 &amp; 1 &amp; 1 &amp; 1 &amp; 1\<br>  &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp;  6  &amp; 7\<br>  &amp;   &amp; 2 &amp; 5 &amp; 9 &amp; 14 &amp; 20 &amp; 27\<br>  &amp;   &amp;   &amp; 5 &amp; 14 &amp; 28 &amp; 48 &amp; 75\<br>  &amp;   &amp;   &amp;   &amp; 14 &amp; 42 &amp; 90 &amp; 165\<br>  &amp;   &amp;   &amp;   &amp;   &amp;  42  &amp;  132  &amp;  297\<br>  &amp;   &amp;   &amp;   &amp;   &amp;   &amp;  132  &amp; 429\<br>  &amp;   &amp;   &amp;   &amp;   &amp;   &amp;   &amp; 429\<br>\end{array}<br>$$</p>
<p>最后剩下的一项为$429$，因此该序列对应的$f(8) = 429$。</p>
<p>在本题中，我们选择的初始序列为$1,3,4,7,11,18,29,47,\ldots$<br>这一类每一项是前两项之和的序列统称卢卡斯序列。<br>按照上述步骤可得该数列对应的$f(8) = 2663$。<br>已知$f(20) \equiv 742296999 \bmod 1\ 000\ 000\ 007$。</p>
<p>求$f(10^8)$，并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 74</title>
    <url>/74/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-74"><a href="#Problem-74" class="headerlink" title="Problem 74"></a><a href="https://projecteuler.net/problem=74">Problem 74</a></h1><hr>
<h2 id="Digit-Factorial-Chains"><a href="#Digit-Factorial-Chains" class="headerlink" title="Digit Factorial Chains"></a><strong>Digit Factorial Chains</strong></h2><p>The number $145$ is well known for the property that the sum of the factorial of its digits is equal to $145$:</p>
<p>$$1! + 4! + 5! = 1 + 24 + 120 = 145$$</p>
<p>Perhaps less well known is $169$, in that it produces the longest chain of numbers that link back to $169$; it turns out that there are only three such loops that exist:</p>
<p>$$\begin{aligned}<br>&amp;169 \rightarrow 363601 \rightarrow 1454 \rightarrow 169\\<br>&amp;871 \rightarrow 45361 \rightarrow 871\\<br>&amp;872 \rightarrow 45362 \rightarrow 872\\<br>\end{aligned}$$</p>
<p>It is not difficult to prove that EVERY starting number will eventually get stuck in a loop. For example,</p>
<p>$$\begin{aligned}<br>&amp;69 \rightarrow 363600 \rightarrow 1454 \rightarrow 169 \rightarrow 363601 (\rightarrow 1454)\\<br>&amp;78 \rightarrow 45360 \rightarrow 871 \rightarrow 45361 (\rightarrow 871)\\<br>&amp;540 \rightarrow 145 (\rightarrow 145)\\<br>\end{aligned}$$</p>
<p>Starting with $69$ produces a chain of five non-repeating terms, but the longest non-repeating chain with a starting number below one million is sixty terms.</p>
<p>How many chains, with a starting number below one million, contain exactly sixty non-repeating terms?</p>
<hr>
<h2 id="数字阶乘链"><a href="#数字阶乘链" class="headerlink" title="数字阶乘链"></a><strong>数字阶乘链</strong></h2><p>众所周知，$145$的各位数字的阶乘之和恰好等于本身：</p>
<p>$$1! + 4! + 5! = 1 + 24 + 120 = 145$$</p>
<p>但很少有人注意到，从$169$开始不断地取各位数字的阶乘之和，将会进入循环回到$169$，而且这是所有循环中最长的一个。事实上，只存在三个这样的循环：</p>
<p>$$\begin{aligned}<br>&amp;169 \rightarrow 363601 \rightarrow 1454 \rightarrow 169\\<br>&amp;871 \rightarrow 45361 \rightarrow 871\\<br>&amp;872 \rightarrow 45362 \rightarrow 872\\<br>\end{aligned}$$</p>
<p>不难证明，从<i class=zh>任意数字</i>出发最终都会陷入循环。例如，</p>
<p>$$\begin{aligned}<br>&amp;69 \rightarrow 363600 \rightarrow 1454 \rightarrow 169 \rightarrow 363601 (\rightarrow 1454)\\<br>&amp;78 \rightarrow 45360 \rightarrow 871 \rightarrow 45361 (\rightarrow 871)\\<br>&amp;540 \rightarrow 145 (\rightarrow 145)\\<br>\end{aligned}$$</p>
<p>从$69$开始直到进入循环，会得到五个不同的项，而从任意一个小于一百万的数开始，最多能够得到六十个不同的项。</p>
<p>有多少个小于一百万的数满足，从这些数开始不断地取各位数字的阶乘之和，恰好能够得到六十个不同的项？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 740</title>
    <url>/740/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-740"><a href="#Problem-740" class="headerlink" title="Problem 740"></a><a href="https://projecteuler.net/problem=740">Problem 740</a></h1><hr>
<h2 id="Secret-Santa"><a href="#Secret-Santa" class="headerlink" title="Secret Santa"></a><strong>Secret Santa</strong></h2><p>Secret Santa is a process that allows $n$ people to give each other presents, so that each person gives a single present and receives a single present. At the beginning each of the $n$ people write their name on a slip of paper and put the slip into a hat. Each person takes a random slip from the hat. If the slip has their name they draw another random slip from the hat and then put the slip with their name back into the hat. At the end everyone buys a Christmas present for the person whose name is on the slip they are holding. This process will fail if the last person draws their own name.</p>
<p>In this variation each of the $n$ people gives and receives two presents. At the beginning each of the $n$ people writes their name on two slips of paper and puts the slips into a hat (there will be $2n$ slips of paper in the hat). As before each person takes from the hat a random slip that does not contain their own name. Then the same person repeats this process thus ending up with two slips, neither of which contains that person’s own name. Then the next person draws two slips in the same way, and so on. The process will fail if the last person gets at least one slip with their own name. </p>
<p>Define $q(n)$ to be the probability of this happening. You are given $q(3) = 0.3611111111$ and $q(5) = 0.2476095994$ both rounded to $10$ decimal places.</p>
<p>Find $q(100)$ rounded to $10$ decimal places.</p>
<hr>
<h2 id="神秘圣诞老人"><a href="#神秘圣诞老人" class="headerlink" title="神秘圣诞老人"></a><strong>神秘圣诞老人</strong></h2><p>神秘圣诞老人是一种$n$个人互送圣诞礼物的节日传统活动，其中每个人送出一份礼物并收到一份礼物。这个活动的流程如下：首先，$n$个参与活动的人各自在一张纸条上写上自己的名字，然后将所有这些纸条放进一个帽子里；然后，每个人依次从帽子中随机抽出一张纸条，若抽到自己的名字，则把纸条放回去并重新再抽；最后，每个人买一份圣诞礼物，送给自己抽到的纸条上写名字的那个人。可以看出，如果最后一个抽纸条的人不幸抽到了自己的名字，这个活动就失败了。</p>
<p>考虑上述活动的一个变种，其中每个人送出并收到两份礼物。首先，$n$个参与活动的人各自在两张纸条上写上自己的名字，然后将所有这些纸条放进一个帽子里（这样一来帽子中总共有$2n$张纸条）。然后，每个人依次从帽子中随机抽出两张纸条，若抽到自己的名字，则把纸条放回去重新再抽。在该变种中，如果最后一个抽纸条的人抽到至少一张有自己名字的纸条，就认为这个活动失败了。</p>
<p>记$q(n)$为活动失败的概率。已知$q(3) = 0.3611111111$，$q(5) = 0.2476095994$，均保留小数点后$10$位小数。</p>
<p>求$q(100)$，并保留小数点后$10$位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 741</title>
    <url>/741/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-741"><a href="#Problem-741" class="headerlink" title="Problem 741"></a><a href="https://projecteuler.net/problem=741">Problem 741</a></h1><hr>
<h2 id="Binary-grid-colouring"><a href="#Binary-grid-colouring" class="headerlink" title="Binary grid colouring"></a><strong>Binary grid colouring</strong></h2><p>Let $f(n)$ be the number of ways an $n\times n$ square grid can be coloured, each cell either black or white, such that each row and each column contains exactly two black cells.<br>For example, $f(4)=90$, $f(7) = 3110940$ and $f(8) = 187530840$.</p>
<p>Let $g(n)$ be the number of colourings in $f(n)$ that are unique up to rotations and reflections.<br>You are given $g(4)=20$, $g(7) = 390816$ and $g(8) = 23462347$ giving $g(7)+g(8) = 23853163$.</p>
<p>Find $g(7^7) + g(8^8)$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="网格黑白染色"><a href="#网格黑白染色" class="headerlink" title="网格黑白染色"></a><strong>网格黑白染色</strong></h2><p>对$n\times n$的网格进行黑白染色，记使得每行和每列都恰好有两个黑格的染色方法数目为$f(n)$。<br>例如，$f(4)=90$，$f(7) = 3110940$，$f(8) = 187530840$。</p>
<p>在$f(n)$中，将所有旋转或翻转后可重合的染色方法视为相同的方法，记不同染色方法数目为$g(n)$。<br>已知$g(4)=20$，$g(7) = 390816$，$g(8) = 23462347$，因此$g(7)+g(8) = 23853163$。</p>
<p>求$g(7^7) + g(8^8)$，并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 742</title>
    <url>/742/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-742"><a href="#Problem-742" class="headerlink" title="Problem 742"></a><a href="https://projecteuler.net/problem=742">Problem 742</a></h1><hr>
<h2 id="Minimum-area-of-a-convex-grid-polygon"><a href="#Minimum-area-of-a-convex-grid-polygon" class="headerlink" title="Minimum area of a convex grid polygon"></a><strong>Minimum area of a convex grid polygon</strong></h2><p>A <i>symmetrical convex grid polygon</i> is a polygon such that:</p>
<ul>
<li>All its vertices have integer coordinates.</li>
<li>All its internal angles are strictly smaller than $180^\circ$.</li>
<li>It has both horizontal and vertical symmetry.</li>
</ul>
<p>For example, the left polygon is a convex grid polygon which has neither horizontal nor vertical symmetry, while the right one is a valid symmetrical convex grid polygon with six vertices:</p>
<p><img src="/resources/images/0742_hexagons.jpg" alt=""></p>
<p>Define $A(N)$, the minimum area of a symmetrical convex grid polygon with $N$ vertices.</p>
<p>You are given $A(4) = 1$, $A(8) = 7$, $A(40) = 1039$ and $A(100) = 17473$.</p>
<p>Find $A(1000)$.</p>
<hr>
<h2 id="格点凸多边形的最小面积"><a href="#格点凸多边形的最小面积" class="headerlink" title="格点凸多边形的最小面积"></a><strong>格点凸多边形的最小面积</strong></h2><p><i class=zh>对称格点凸多边形</i>是指满足以下条件的多边形：</p>
<ul>
<li>所有顶点的坐标均为整数。</li>
<li>所有内角严格小于$180^\circ$。</li>
<li>在水平和竖直方向上对称。</li>
</ul>
<p>例如，下图左的多边形是格点凸多边形，但是在水平和竖直方向上均不对称；而下图右的多边形则是一个有六个顶点的对称格点凸多边形：</p>
<p><img src="/resources/images/0742_hexagons.jpg" alt=""></p>
<p>记$A(N)$为所有有$N$个顶点的对称格点凸多边形的最小面积。</p>
<p>已知$A(4) = 1$，$A(8) = 7$，$A(40) = 1039$，$A(100) = 17473$。</p>
<p>求$A(1000)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 743</title>
    <url>/743/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-743"><a href="#Problem-743" class="headerlink" title="Problem 743"></a><a href="https://projecteuler.net/problem=743">Problem 743</a></h1><hr>
<h2 id="Window-into-a-Matrix"><a href="#Window-into-a-Matrix" class="headerlink" title="Window into a Matrix"></a><strong>Window into a Matrix</strong></h2><p>A window into a matrix is a contiguous sub matrix.</p>
<p>Consider a $2\times n$ matrix where every entry is either $0$ or $1$.<br>Let $A(k,n)$ be the total number of these matrices such that the sum of the entries in every $2\times k$ window is $k$.</p>
<p>You are given that $A(3,9) = 560$ and $A(4,20) = 1060870$.</p>
<p>Find $A(10^8,10^{16})$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="矩阵窗口"><a href="#矩阵窗口" class="headerlink" title="矩阵窗口"></a><strong>矩阵窗口</strong></h2><p>矩阵的窗口是指矩阵中一个连续的子矩阵。</p>
<p>考虑一个$2\times n$的矩阵，其中的元素均为$0$或$1$。<br>若矩阵中任意一个$2\times k$的窗口中元素之和都为$k$，记所有这样的矩阵数目为$A(k,n)$。</p>
<p>已知$A(3,9) = 560$，$A(4,20) = 1060870$。</p>
<p>求$A(10^8,10^{16})$，并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 744</title>
    <url>/744/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-744"><a href="#Problem-744" class="headerlink" title="Problem 744"></a><a href="https://projecteuler.net/problem=744">Problem 744</a></h1><hr>
<h2 id="What-Where-When"><a href="#What-Where-When" class="headerlink" title="What? Where? When?"></a><strong>What? Where? When?</strong></h2><p>“What? Where? When?” is an TV game show in which an expert attempts to answer questions.</p>
<p>It begins with $2n+1$ envelopes. $2n$ of them contain a question and one contains a RED card.</p>
<p>In each round one of the remaining envelopes is randomly chosen. If the envelope contains the RED card the game ends. If the envelope contains a question the expert gives their answer. If their answer is correct they earn one point, otherwise the viewers earn one point. The game ends normally when either the expert obtains $n$ points or the viewers obtain $n$ points.</p>
<p>Assuming that the expert provides the correct answer with a fixed probability $p$, let $f(n,p)$ be the probability that the game ends normally (i.e. RED card never turns up).</p>
<p>You are given (rounded to $10$ decimal places) that<br>$f(6,\frac{1}{2})=0.2851562500$,<br>$f(10,\frac{3}{7})=0.2330040743$,<br>$f(10^4,0.3)=0.2857499982$.</p>
<p>Find $f(10^{11},0.4999)$. Give your answer rounded to $10$ places behind the decimal point.</p>
<hr>
<h2 id="什么？哪儿？啥时候？"><a href="#什么？哪儿？啥时候？" class="headerlink" title="什么？哪儿？啥时候？"></a><strong>什么？哪儿？啥时候？</strong></h2><p>“什么？哪儿？啥时候？”是一款专家与观众对抗的问答类真人秀电视节目。</p>
<p>节目开始时有$2n+1$个信封，其中$2n$个信封中装有问题，剩下的信封中装有一张红牌。</p>
<p>每一轮随机抽取一个未拆封的信封，如果信封里装有红牌，则游戏结束，若装有问题，则专家必须回答这个问题，答对则专家加一分，答错则观众加一分。如果一直没有抽到红牌，则当专家或观众任意一方获得$n$分时，游戏正常结束。</p>
<p>假设专家答对的概率为固定值$p$，并记$f(n,p)$为游戏正常结束的概率（也即游戏结束前未抽到红牌）。</p>
<p>已知（保留小数点后$10$位）<br>$f(6,\frac{1}{2})=0.2851562500$，<br>$f(10,\frac{3}{7})=0.2330040743$，<br>$f(10^4,0.3)=0.2857499982$。</p>
<p>求$f(10^{11},0.4999)$，并保留小数点后$10$位。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 745</title>
    <url>/745/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-745"><a href="#Problem-745" class="headerlink" title="Problem 745"></a><a href="https://projecteuler.net/problem=745">Problem 745</a></h1><hr>
<h2 id="Sum-of-Squares"><a href="#Sum-of-Squares" class="headerlink" title="Sum of Squares"></a><strong>Sum of Squares</strong></h2><p>For a positive integer, $n$, define $g(n)$ to be the maximum perfect square that divides $n$.<br>For example, $g(18) = 9$, $g(19) = 1$.</p>
<p>Also define<br>$$\displaystyle    S(N) = \sum_{n=1}^N g(n)$$</p>
<p>For example, $S(10) = 24$ and $S(100) = 767$.</p>
<p>Find $S(10^{14})$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="平方和"><a href="#平方和" class="headerlink" title="平方和"></a><strong>平方和</strong></h2><p>对于正整数$n$，记$g(n)$为整除$n$的最大完全平方数。<br>例如，$g(18) = 9$，$g(19) = 1$。</p>
<p>另记<br>$$\displaystyle    S(N) = \sum_{n=1}^N g(n)$$</p>
<p>例如，$S(10) = 24$，$S(100) = 767$。</p>
<p>求$S(10^{14})$，并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 746</title>
    <url>/746/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-746"><a href="#Problem-746" class="headerlink" title="Problem 746"></a><a href="https://projecteuler.net/problem=746">Problem 746</a></h1><hr>
<h2 id="A-Messy-Dinner"><a href="#A-Messy-Dinner" class="headerlink" title="A Messy Dinner"></a><strong>A Messy Dinner</strong></h2><p>$n$ families, each with four members, a father, a mother, a son and a daughter, were invited to a restaurant. They were all seated at a large circular table with $4n$ seats such that men and women alternate.</p>
<p>Let $M(n)$ be the number of ways the families can be seated such that none of the families were seated together. A family is considered to be seated together only when all the members of a family sit next to each other.</p>
<p>For example, $M(1)=0$, $M(2)=896$, $M(3)=890880$ and $M(10) \equiv 170717180 \pmod {1\ 000\ 000\ 007}$.</p>
<p>Let $S(n)=\displaystyle \sum_{k=2}^nM(k)$.</p>
<p>For example, $S(10) \equiv 399291975 \pmod {1\ 000\ 000\ 007}$.</p>
<p>Find $S(2021)$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="麻烦的晚餐"><a href="#麻烦的晚餐" class="headerlink" title="麻烦的晚餐"></a><strong>麻烦的晚餐</strong></h2><p>$n$个四口之家受邀到一家餐厅就餐，每个家庭都由父亲、母亲、儿子、女儿组成。他们围坐在一张有$4n$个座位的圆桌边，且男性和女性总是交替就座。</p>
<p>我们进一步要求同一家庭的四名成员不能坐在一起，并记所有满足条件的就座方式数为$M(n)$。</p>
<p>例如，$M(1)=0$，$M(2)=896$，$M(3)=890880$，$M(10) \equiv 170717180 \pmod {1\ 000\ 000\ 007}$。</p>
<p>记$S(n)=\displaystyle \sum_{k=2}^nM(k)$。</p>
<p>例如，$S(10) \equiv 399291975 \pmod {1\ 000\ 000\ 007}$。</p>
<p>求$S(2021)$，并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 748</title>
    <url>/748/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-748"><a href="#Problem-748" class="headerlink" title="Problem 748"></a><a href="https://projecteuler.net/problem=748">Problem 748</a></h1><hr>
<h2 id="Upside-down-Diophantine-equation"><a href="#Upside-down-Diophantine-equation" class="headerlink" title="Upside down Diophantine equation"></a><strong>Upside down Diophantine equation</strong></h2><p>Upside Down is a modification of the famous Pythagorean equation:<br>$$\frac{1}{x^2}+\frac{1}{y^2}=\frac{13}{z^2}$$</p>
<p>A solution $(x,y,z)$  to this equation with $x,y$ and $z$ positive integers is a primitive solution if $\gcd(x,y,z)=1$.</p>
<p>Let $S(N)$ be the sum of $x+y+z$ over primitive Upside Down solutions such that $1 \leq x,y,z \leq N$ and $x \le y$.<br>For $N=100$ the primitive solutions are $(2,3,6)$ and $(5,90,18)$, thus $S(10^2)=124$.<br>It can be checked that $S(10^3)=1470$ and $S(10^5)=2340084$.</p>
<p>Find $S(10^{16})$ and give the last $9$ digits as your answer.</p>
<hr>
<h2 id="颠倒不定方程"><a href="#颠倒不定方程" class="headerlink" title="颠倒不定方程"></a><strong>颠倒不定方程</strong></h2><p>把著名的毕达哥拉斯方程稍加修改就得到了如下的颠倒不定方程：<br>$$\frac{1}{x^2}+\frac{1}{y^2}=\frac{13}{z^2}$$</p>
<p>若上述方程的一组正整数解$(x,y,z)$满足$\gcd(x,y,z)=1$，则称之为该方程的本原解。</p>
<p>考虑该方程的所有本原解，并记$S(N)$为所有满足$1 \leq x,y,z \leq N$和$x \le y$的本原解对应$x+y+z$之和。<br>对于$N=100$，满足条件的本原解包括$(2,3,6)$和$(5,90,18)$，因此$S(10^2)=124$。<br>可以验证，$S(10^3)=1470$，$S(10^5)=2340084$。</p>
<p>求$S(10^{16})$，并给出最后$9$位数字作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 747</title>
    <url>/747/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-747"><a href="#Problem-747" class="headerlink" title="Problem 747"></a><a href="https://projecteuler.net/problem=747">Problem 747</a></h1><hr>
<h2 id="Triangular-Pizza"><a href="#Triangular-Pizza" class="headerlink" title="Triangular Pizza"></a><strong>Triangular Pizza</strong></h2><p>Mamma Triangolo baked a triangular pizza. She wants to cut the pizza into $n$ pieces. She first chooses a point $P$ in the interior (not boundary) of the triangle pizza, and then performs $n$ cuts, which all start from $P$ and extend straight to the boundary of the pizza so that the $n$ pieces are all triangles and all have the same area.</p>
<p>Let $\psi(n)$ be the number of different ways for Mamma Triangolo to cut the pizza, subject to the constraints.<br>For example, $\psi(3)=7$.</p>
<p><img src="/resources/images/0747_PizzaDiag.jpg" alt=""></p>
<p>Also $\psi(6)=34$, and $\psi(10)=90$.</p>
<p>Let $\Psi(m)=\displaystyle\sum_{n=3}^m \psi(n)$. You are given $\Psi(10)=345$ and $\Psi(1000)=172166601$.</p>
<p>Find $\Psi(10^8)$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="三角形披萨"><a href="#三角形披萨" class="headerlink" title="三角形披萨"></a><strong>三角形披萨</strong></h2><p>特莱格伦夫人打算把一块三角形的披萨分成$n$片。她先在三角形披萨的内部（而非边缘）选择一个点$P$，然后从点$P$出发切$n$刀至披萨边缘，将披萨分成$n$个面积相同的小三角形。</p>
<p>记$\psi(n)$为满足特莱格伦夫人上述要求的披萨切法。<br>例如，$\psi(3)=7$。</p>
<p><img src="/resources/images/0747_PizzaDiag.jpg" alt=""></p>
<p>此外，$\psi(6)=34$，$\psi(10)=90$。</p>
<p>记$\Psi(m)=\displaystyle\sum_{n=3}^m \psi(n)$。已知$\Psi(10)=345$，$\Psi(1000)=172166601$。</p>
<p>求$\Psi(10^8)$，并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 749</title>
    <url>/749/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-749"><a href="#Problem-749" class="headerlink" title="Problem 749"></a><a href="https://projecteuler.net/problem=749">Problem 749</a></h1><hr>
<h2 id="Near-Power-Sums"><a href="#Near-Power-Sums" class="headerlink" title="Near Power Sums"></a><strong>Near Power Sums</strong></h2><p>A positive integer, $n$, is a <i>near power sum</i> if there exists a positive integer, $k$, such that the sum of the $k$th powers of the digits in its decimal representation is equal to either $n+1$ or $n-1$. For example $35$ is a near power sum number because $3^2+5^2 = 34$.</p>
<p>Define $S(d)$ to be the sum of all near power sum numbers of $d$ digits or less.<br>Then $S(2) = 110$ and $S(6) = 2562701$.</p>
<p>Find $S(16)$.</p>
<hr>
<h2 id="近幂和数"><a href="#近幂和数" class="headerlink" title="近幂和数"></a><strong>近幂和数</strong></h2><p>对于正整数$n$，若存在正整数$k$使得$n$的各位数字的$k$次幂之和等于$n+1$或$n-1$，则我们称$n$为<i class=zh>近幂和数</i>。例如，$35$是近幂和数，因为$3^2+5^2 = 34$。</p>
<p>记$S(d)$为所有至多$d$位数字的近幂和数之和。<br>已知$S(2) = 110$，$S(6) = 2562701$。</p>
<p>求$S(16)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 75</title>
    <url>/75/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-75"><a href="#Problem-75" class="headerlink" title="Problem 75"></a><a href="https://projecteuler.net/problem=75">Problem 75</a></h1><hr>
<h2 id="Singular-Integer-Right-Triangles"><a href="#Singular-Integer-Right-Triangles" class="headerlink" title="Singular Integer Right Triangles"></a><strong>Singular Integer Right Triangles</strong></h2><p>It turns out that $12$ cm is the smallest length of wire that can be bent to form an integer sided right angle triangle in exactly one way, but there are many more examples.</p>
<blockquote>
<p><strong>$12$ cm</strong>: $(3,4,5)$<br /><br><strong>$24$ cm</strong>: $(6,8,10)$<br /><br><strong>$30$ cm</strong>: $(5,12,13)$<br /><br><strong>$36$ cm</strong>: $(9,12,15)$<br /><br><strong>$40$ cm</strong>: $(8,15,17)$<br /><br><strong>$48$ cm</strong>: $(12,16,20)$<br /></p>
</blockquote>
<p>In contrast, some lengths of wire, like $20$ cm, cannot be bent to form an integer sided right angle triangle, and other lengths allow more than one solution to be found; for example, using $120$ cm it is possible to form exactly three different integer sided right angle triangles.</p>
<blockquote>
<p><strong>$120$ cm</strong>: $(30,40,50), (20,48,52), (24,45,51)$</p>
</blockquote>
<p>Given that $L$ is the length of the wire, for how many values of $L \le 1,500,000$ can exactly one integer sided right angle triangle be formed?</p>
<hr>
<h2 id="唯一的整数边直角三角形"><a href="#唯一的整数边直角三角形" class="headerlink" title="唯一的整数边直角三角形"></a><strong>唯一的整数边直角三角形</strong></h2><p>若电线只能以唯一方式弯折成整数边直角三角形，则电线的最短长度是$12$厘米；当然，还有很多种长度的电线都只能以唯一方式弯折成整数边直角三角形，例如：</p>
<blockquote>
<p><strong>$12$厘米</strong>: $(3,4,5)$<br /><br><strong>$24$厘米</strong>: $(6,8,10)$<br /><br><strong>$30$厘米</strong>: $(5,12,13)$<br /><br><strong>$36$厘米</strong>: $(9,12,15)$<br /><br><strong>$40$厘米</strong>: $(8,15,17)$<br /><br><strong>$48$厘米</strong>: $(12,16,20)$<br /></p>
</blockquote>
<p>相反地，有些长度的电线，比如$20$厘米，不可能弯折成任何整数边直角三角形，而另一些长度的电线则有多种解法；例如，$120$厘米的电线可以弯折成三个不同的整数边直角三角形。</p>
<blockquote>
<p><strong>$120$厘米</strong>: $(30,40,50), (20,48,52), (24,45,51)$</p>
</blockquote>
<p>记电线长度为$L$，对于$L \le 1,500,000$，有多少种电线长度只能以唯一方式弯折成整数边直角三角形？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 750</title>
    <url>/750/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-750"><a href="#Problem-750" class="headerlink" title="Problem 750"></a><a href="https://projecteuler.net/problem=750">Problem 750</a></h1><hr>
<h2 id="Optimal-Card-Stacking"><a href="#Optimal-Card-Stacking" class="headerlink" title="Optimal Card Stacking"></a><strong>Optimal Card Stacking</strong></h2><p>Card Stacking is a game on a computer starting with an array of $N$ cards labelled $1,2,\ldots,N$.<br>A stack of cards can be moved by dragging horizontally with the mouse to another stack but only when the resulting stack is in sequence. The goal of the game is to combine the cards into a single stack using minimal total drag distance.</p>
<p><img src="/resources/images/0750_optimal_card_stacking.png" alt=""></p>
<p>For the given arrangement of $6$ cards the minimum total distance is $1 + 3 + 1 + 1 + 2 = 8$.</p>
<p>For $N$ cards, the cards are arranged so that the card at position $n$ is $3^n\bmod(N+1), 1\le n\le N$.</p>
<p>We define $G(N)$ to be the minimal total drag distance to arrange these cards into a single sequence.<br>For example, when $N = 6$ we get the sequence $3,2,6,4,5,1$ and $G(6) = 8$.<br>You are given $G(16) = 47$.</p>
<p>Find $G(976)$.</p>
<p>Note: $G(N)$ is not defined for all values of $N$.</p>
<hr>
<h2 id="最优卡牌堆叠"><a href="#最优卡牌堆叠" class="headerlink" title="最优卡牌堆叠"></a><strong>最优卡牌堆叠</strong></h2><p>卡牌堆叠是一款电脑游戏，初始状态为$N$张标记有$1,2,\ldots,N$并随机排列的卡牌，每一张卡牌视为一堆。每次行动时，可以将一堆卡牌横向移动到另一堆卡牌上，但移动后组成的新一堆卡牌必须从大到小有序排列。游戏的目标是将所有卡牌合并为一堆，且总的移动距离最小。</p>
<p><img src="/resources/images/0750_optimal_card_stacking.png" alt=""></p>
<p>对如上图所示的$6$张卡牌，最小总移动距离为$1 + 3 + 1 + 1 + 2 = 8$。</p>
<p>对于$N$张卡牌，我们要求位于第$n$位的卡牌标记为$3^n\bmod(N+1), 1\le n\le N$。</p>
<p>记$G(N)$为将这些卡牌合并为一堆所需的最小总移动距离。<br>例如，当$N = 6$时，卡牌标记依次为$3,2,6,4,5,1$，因此$G(6) = 8$。<br>已知$G(16) = 47$。</p>
<p>求$G(976)$。</p>
<p>注：并非所有的$N$都有对应的$G(N)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 751</title>
    <url>/751/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-751"><a href="#Problem-751" class="headerlink" title="Problem 751"></a><a href="https://projecteuler.net/problem=751">Problem 751</a></h1><hr>
<h2 id="Concatenation-Coincidence"><a href="#Concatenation-Coincidence" class="headerlink" title="Concatenation Coincidence"></a><strong>Concatenation Coincidence</strong></h2><p>A non-decreasing sequence of integers $a_n$ can be generated from any positive real value $\theta$ by the following procedure:</p>
<p>$$b_1=\theta$$<br>$$b_n = \left\lfloor b_{n-1} \right\rfloor \left(b_{n-1} - \left\lfloor b_{n-1} \right\rfloor + 1\right)\ \forall n\ge 2$$<br>$$a_n=\left\lfloor b_{n} \right\rfloor$$<br>Where $\left\lfloor . \right\rfloor$ is the floor function.</p>
<p>For example, $\theta=2.956938891377988\ldots$ generates the Fibonacci sequence: $2, 3, 5, 8, 13, 21, 34, 55, 89, \ldots$</p>
<p>The <i>concatenation</i> of a sequence of positive integers $a_n$ is a real value denoted $\tau$ constructed by concatenating the elements of the sequence after the decimal point, starting at $a_1$: $a_1.a_2a_3a_4\ldots$</p>
<p>For example, the Fibonacci sequence constructed from $\theta=2.956938891377988\ldots$ yields the concatenation $\tau=2.3581321345589\ldots$ Clearly, $\tau \neq \theta$ for this value of $\theta$.</p>
<p>Find the only value of $\theta$ for which the generated sequence starts at $a_1=2$ and the concatenation of the generated sequence equals the original value: $\tau = \theta$. Give your answer rounded to $24$ places after the decimal point.</p>
<hr>
<h2 id="拼接巧合"><a href="#拼接巧合" class="headerlink" title="拼接巧合"></a><strong>拼接巧合</strong></h2><p>给定任意正实数$\theta$，根据以下过程可以生成一个不下降的整数序列$a_n$：</p>
<p>$$b_1=\theta$$<br>$$b_n = \left\lfloor b_{n-1} \right\rfloor \left(b_{n-1} - \left\lfloor b_{n-1} \right\rfloor + 1\right)\ \forall n\ge 2$$<br>$$a_n=\left\lfloor b_{n} \right\rfloor$$<br>其中$\left\lfloor . \right\rfloor$表示下取整函数。</p>
<p>例如，$\theta=2.956938891377988\ldots$能够生成斐波那契数列：$2, 3, 5, 8, 13, 21, 34, 55, 89, \ldots$</p>
<p>数列$a_n$的<i class=zh>拼接</i>是指将$a_1$作为整数部分、将序列的其它元素拼接作为小数部分所生成的实数，记为$\tau$。</p>
<p>例如，由$\theta=2.956938891377988\ldots$构造的斐波那契数列，其拼接即为$\tau=2.3581321345589\ldots$。显然，对于$\theta$的这一取值，有$\tau \neq \theta$。</p>
<p>对于所有生成序列中$a_1=2$的$\theta$，求出唯一使得生成序列的拼接恰好等于原实数，也即使得$\tau = \theta$的$\theta$的取值，并将你的答案保留小数点后$24$位。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 752</title>
    <url>/752/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-752"><a href="#Problem-752" class="headerlink" title="Problem 752"></a><a href="https://projecteuler.net/problem=752">Problem 752</a></h1><hr>
<h2 id="Powers-of-1-sqrt-7"><a href="#Powers-of-1-sqrt-7" class="headerlink" title="Powers of $1+\sqrt{7}$"></a><strong>Powers of $1+\sqrt{7}$</strong></h2><p>When $(1+\sqrt 7)$ is raised to an integral power, $n$, we always get a number of the form $(a+b\sqrt 7)$.<br>We write $(1+\sqrt 7)^n = \alpha(n) + \beta(n)\sqrt 7$.</p>
<p>For a given number $x$ we define $g(x)$ to be the smallest positive integer $n$ such that:<br>$$\alpha(n) \equiv 1 \pmod x\quad \text{and}\quad \beta(n) \equiv 0 \pmod x$$<br>and $g(x) = 0$ if there is no such value of $n$. For example, $g(3) = 0$, $g(5) = 12$.</p>
<p>Further define<br>$$G(N) = \displaystyle \sum_{x=2}^{N} g(x)$$<br>You are given $G(10^2) = 28891$ and $G(10^3)  = 13131583$.</p>
<p>Find $G(10^6)$.</p>
<hr>
<h2 id="1-sqrt-7-的幂"><a href="#1-sqrt-7-的幂" class="headerlink" title="$1+\sqrt{7}$的幂"></a><strong>$1+\sqrt{7}$的幂</strong></h2><p>对于任意正整数$n$，$(1+\sqrt 7)$的$n$次幂总能写成$(a+b\sqrt 7)$的形式。<br>我们记$(1+\sqrt 7)^n = \alpha(n) + \beta(n)\sqrt 7$。</p>
<p>给定正整数$x$，我们记$g(x)$为满足下列条件的最小正整数$n$：<br>$$\alpha(n) \equiv 1 \pmod x\quad \text{and}\quad \beta(n) \equiv 0 \pmod x$$<br>若不存在这样的$n$，则$g(x) = 0$。例如，$g(3) = 0$，$g(5) = 12$。</p>
<p>进一步记<br>$$G(N) = \displaystyle \sum_{x=2}^{N} g(x)$$<br>已知$G(10^2) = 28891$，$G(10^3)  = 13131583$。</p>
<p>求$G(10^6)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 753</title>
    <url>/753/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-753"><a href="#Problem-753" class="headerlink" title="Problem 753"></a><a href="https://projecteuler.net/problem=753">Problem 753</a></h1><hr>
<h2 id="Fermat-Equation"><a href="#Fermat-Equation" class="headerlink" title="Fermat Equation"></a><strong>Fermat Equation</strong></h2><p>Fermat’s Last Theorem states that no three positive integers $a$, $b$, $c$ satisfy the equation<br>$$a^n+b^n=c^n$$<br>for any integer value of $n$ greater than $2$.</p>
<p>For this problem we are only considering the case $n=3$. For certain values of $p$, it is possible to solve the congruence equation:<br>$$a^3+b^3 \equiv c^3 \pmod{p}$$</p>
<p>For a prime $p$, we define $F(p)$ as the number of integer solutions to this equation for $1 \le a,b,c &lt; p$.</p>
<p>You are given $F(5) = 12$ and $F(7) = 0$.</p>
<p>Find the sum of $F(p)$ over all primes $p$ less than $6\ 000\ 000$.</p>
<hr>
<h2 id="费马方程"><a href="#费马方程" class="headerlink" title="费马方程"></a><strong>费马方程</strong></h2><p>费马大定理指出，不存在正整数$a$、$b$、$c$满足方程<br>$$a^n+b^n=c^n$$<br>其中$n$为大于$2$的正整数。</p>
<p>在本题中我们只考虑$n=3$的情况。对于特定的$p$，如下的同余方程可能有解：<br>$$a^3+b^3 \equiv c^3 \pmod{p}$$</p>
<p>对于素数$p$，我们记$F(p)$为上述同余方程满足$1 \le a,b,c &lt; p$的整数解的数目。</p>
<p>已知$F(5) = 12$，$F(7) = 0$。</p>
<p>求出所有小于$6\ 000\ 000$的素数$p$所对应$F(p)$之和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 754</title>
    <url>/754/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-754"><a href="#Problem-754" class="headerlink" title="Problem 754"></a><a href="https://projecteuler.net/problem=754">Problem 754</a></h1><hr>
<h2 id="Product-of-Gauss-Factorials"><a href="#Product-of-Gauss-Factorials" class="headerlink" title="Product of Gauss Factorials"></a><strong>Product of Gauss Factorials</strong></h2><p>The <b>Gauss Factorial</b> of a number $n$ is defined as the product of all positive numbers $\leq n$ that are relatively prime to $n$. For example $g(10)=1\times 3\times 7\times 9 = 189$. </p>
<p>Also we define<br>$$\displaystyle G(n) = \prod_{i=1}^{n}g(i)$$</p>
<p>You are given $G(10) = 23044331520000$.</p>
<p>Find $G(10^8)$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="高斯阶乘之积"><a href="#高斯阶乘之积" class="headerlink" title="高斯阶乘之积"></a><strong>高斯阶乘之积</strong></h2><p>整数$n$的<b>高斯阶乘</b>是指所有小于等于$n$且与$n$互质的正整数的乘积。例如，$g(10)=1\times 3\times 7\times 9 = 189$。</p>
<p>记<br>$$\displaystyle G(n) = \prod_{i=1}^{n}g(i)$$</p>
<p>已知$G(10) = 23044331520000$。</p>
<p>求$G(10^8)$，并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 755</title>
    <url>/755/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-755"><a href="#Problem-755" class="headerlink" title="Problem 755"></a><a href="https://projecteuler.net/problem=755">Problem 755</a></h1><hr>
<h2 id="Not-Zeckendorf"><a href="#Not-Zeckendorf" class="headerlink" title="Not Zeckendorf"></a><strong>Not Zeckendorf</strong></h2><p>Consider the Fibonacci sequence ${1,2,3,5,8,13,21,\ldots}$.</p>
<p>We let $f(n)$ be the number of ways of representing an integer $n\ge 0$ as the sum of different Fibonacci numbers.<br>For example, $16 = 3+13 = 1+2+13 = 3+5+8 = 1+2+5+8$ and hence $f(16) = 4$. By convention $f(0) = 1$.</p>
<p>Further we define<br>$$\displaystyle S(n) = \sum_{k=0}^n f(k)$$<br>You are given $S(100) = 415$ and $S(10^4) = 312807$.</p>
<p>Find $\displaystyle S(10^{13})$.</p>
<hr>
<h2 id="非齐肯多夫表示"><a href="#非齐肯多夫表示" class="headerlink" title="非齐肯多夫表示"></a><strong>非齐肯多夫表示</strong></h2><p>考虑斐波那契数列${1,2,3,5,8,13,21,\ldots}$。</p>
<p>记$f(n)$为将整数$n\ge 0$表示为不同斐波那契数之和的方法数。<br>例如，$16 = 3+13 = 1+2+13 = 3+5+8 = 1+2+5+8$，因此$f(16) = 4$。按照惯例，记$f(0) = 1$。</p>
<p>我们进一步定义<br>$$\displaystyle S(n) = \sum_{k=0}^n f(k)$$<br>已知$S(100) = 415$，$S(10^4) = 312807$。</p>
<p>求$\displaystyle S(10^{13})$。</p>
<p><i class=zh>译注</i>：齐肯多夫表示是指将一个整数表示为<i class=zh>不连续</i>的不同斐波那契数之和，根据齐肯多夫定理可知该表示唯一；而本题不要求不连续。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 756</title>
    <url>/756/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-756"><a href="#Problem-756" class="headerlink" title="Problem 756"></a><a href="https://projecteuler.net/problem=756">Problem 756</a></h1><hr>
<h2 id="Approximating-a-Sum"><a href="#Approximating-a-Sum" class="headerlink" title="Approximating a Sum"></a><strong>Approximating a Sum</strong></h2><p>Consider a function $f(k)$ defined for all positive integers $k&gt;0$. Let $S$ be the sum of the first $n$ values of $f$. That is,<br>$$\displaystyle S=f(1)+f(2)+f(3)+\cdots+f(n)=\sum_{k=1}^n f(k)$$</p>
<p>In this problem, we employ randomness to approximate this sum. That is, we choose a random, uniformly distributed, $m$-tuple of positive integers $(X_1,X_2,X_3,\cdots,X_m)$ such that $0=X_0 &lt; X_1 &lt; X_2&lt; \cdots &lt; X_m \le n$ and calculate a modified sum $S^*$ as follows.<br>$$\displaystyle S^* = \sum_{i=1}^m f(X_i)(X_i-X_{i-1})$$</p>
<p>We now define the error of this approximation to be $\Delta=S-S^*$.</p>
<p>Let $\mathbb{E}(\Delta|f(k),n,m)$ be the expected value of the error given the function $f(k)$, the number of terms $n$ in the sum and the length of random sample $m$.</p>
<p>For example, $\mathbb{E}(\Delta|k,100,50) = 2525/1326 \approx 1.904223$ and $\mathbb{E}(\Delta|\varphi(k),10^4,10^2)\approx 5842.849907$, where $\varphi(k)$ is Euler’s totient function.</p>
<p>Find $\mathbb{E}(\Delta|\varphi(k),12345678,12345)$ rounded to six places after the decimal point.</p>
<hr>
<h2 id="近似求和"><a href="#近似求和" class="headerlink" title="近似求和"></a><strong>近似求和</strong></h2><p>考虑定义在所有正整数$k&gt;0$上的函数$f(k)$。记$S$为函数$f$在前$n$个正整数上的取值之和。也就是说，<br>$$\displaystyle S=f(1)+f(2)+f(3)+\cdots+f(n)=\sum_{k=1}^n f(k)$$</p>
<p>在本题中，我们加入一些随机性来近似地求和。换言之，我们均匀地随机生成一个$m$元正整数组$(X_1,X_2,X_3,\cdots,X_m)$，且该数组满足$0=X_0 &lt; X_1 &lt; X_2&lt; \cdots &lt; X_m \le n$，然后按照以下方式求出近似和$S^*$。<br>$$\displaystyle S^* = \sum_{i=1}^m f(X_i)(X_i-X_{i-1})$$</p>
<p>我们定义近似误差为$\Delta=S-S^*$。</p>
<p>给定函数$f(k)$、所需计算的项数$n$和随机数组的长度$m$，记$\mathbb{E}(\Delta|f(k),n,m)$为近似误差的期望值。</p>
<p>例如，$\mathbb{E}(\Delta|k,100,50) = 2525/1326 \approx 1.904223$，$\mathbb{E}(\Delta|\varphi(k),10^4,10^2)\approx 5842.849907$，其中$\varphi(k)$为欧拉总计函数。</p>
<p>求$\mathbb{E}(\Delta|\varphi(k),12345678,12345)$，并将你的答案保留小数点后六位。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 757</title>
    <url>/757/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-757"><a href="#Problem-757" class="headerlink" title="Problem 757"></a><a href="https://projecteuler.net/problem=757">Problem 757</a></h1><hr>
<h2 id="Stealthy-Numbers"><a href="#Stealthy-Numbers" class="headerlink" title="Stealthy Numbers"></a><strong>Stealthy Numbers</strong></h2><p>A positive integer $N$ is <i>stealthy</i>, if there exist positive integers $a$, $b$, $c$, $d$ such that $ab = cd = N$ and $a+b = c+d+1$.<br>For example, $36 = 4\times 9 = 6\times 6$ is stealthy.</p>
<p>You are also given that there are $2851$ stealthy numbers not exceeding $10^6$.</p>
<p>How many stealthy numbers are there that don’t exceed $10^{14}$?</p>
<hr>
<h2 id="隐匿数"><a href="#隐匿数" class="headerlink" title="隐匿数"></a><strong>隐匿数</strong></h2><p>对于正整数$N$，若存在正整数$a$、$b$、$c$、$d$使得$ab=cd=N$且$a+b=c+d+1$，则称$N$为<i class=zh>隐匿数</i> 。<br>例如，$36 = 4\times 9 = 6\times 6$是一个隐匿数。</p>
<p>已知在不超过$10^6$的范围内有$2851$个隐匿数。</p>
<p>在不超过$10^{14}$的范围内，有多少个隐匿数？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 758</title>
    <url>/758/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-758"><a href="#Problem-758" class="headerlink" title="Problem 758"></a><a href="https://projecteuler.net/problem=758">Problem 758</a></h1><hr>
<h2 id="Buckets-of-Water"><a href="#Buckets-of-Water" class="headerlink" title="Buckets of Water"></a><strong>Buckets of Water</strong></h2><p>There are 3 buckets labelled $S$ (small) of $3$ litres, $M$ (medium) of $5$ litres and $L$ (large) of $8$ litres.<br>Initially $S$ and $M$ are full of water and $L$ is empty. By pouring water between the buckets exactly one litre of water can be measured.<br>Since there is no other way to measure, once a pouring starts it cannot stop until either the source bucket is empty or the destination bucket is full.<br>At least four pourings are needed to get one litre:</p>
<p>$$(3,5,0)\xrightarrow{M\to L} (3,0,5) \xrightarrow{S\to M} (0,3,5) \xrightarrow{L\to S}(3,3,2)<br>\xrightarrow{S\to M}(1,5,2)$$</p>
<p>After these operations, there is exactly one litre in bucket $S$.</p>
<p>In general the sizes of the buckets $S, M, L$ are $a$, $b$, $a + b$ litres, respectively. Initially $S$ and $M$ are full and $L$ is empty. If the above rule of pouring still applies and $a$ and $b$ are two coprime positive integers with $a\leq b$ then it is always possible to measure one litre in finitely many steps.</p>
<p>Let $P(a,b)$ be the minimal number of pourings needed to get one litre. Thus $P(3,5)=4$.<br>Also, $P(7, 31)=20$ and $P(1234, 4321)=2780$.</p>
<p>Find the sum of $P(2^{p^5}-1, 2^{q^5}-1)$ for all pairs of prime numbers $p,q$ such that $p &lt; q &lt; 1000$.<br>Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="水桶倒水"><a href="#水桶倒水" class="headerlink" title="水桶倒水"></a><strong>水桶倒水</strong></h2><p>现有三个水桶，标记$S$的小水桶可以装$3$升水，标记$M$的中水桶可以装$5$升水，标记$L$的大水桶可以装$8$升水。<br>一开始，小水桶和中水桶均装满了水，而大水桶则是空的。通过在水桶间互相倒水，我们希望量出恰好一升水。由于我们缺乏其他的测量手段，在倒水时只能要么将倒出的水桶倒空要么将倒入的水桶装满。<br>为了量出恰好一升水，至少需要倒四次：</p>
<p>$$(3,5,0)\xrightarrow{M\to L} (3,0,5) \xrightarrow{S\to M} (0,3,5) \xrightarrow{L\to S}(3,3,2)<br>\xrightarrow{S\to M}(1,5,2)$$</p>
<p>经过这些操作后，在小水桶中恰好有一升水。</p>
<p>考虑一般情况，即小、中、大水桶的容积分别为$a$、$b$和$a+b$升。一开始小水桶和中水桶均装满了水而大水桶是空的。采用相同的倒水规则，若$a$和$b$是两个互质的正整数且满足$a\leq b$，那么在有限步内总是能够量出恰好一升水。</p>
<p>记$P(a,b)$为量出一升水所需的最少倒水次数，因此$P(3,5)=4$。<br>此外，$P(7, 31)=20$，$P(1234, 4321)=2780$。</p>
<p>对于所有满足$p &lt; q &lt; 1000$的素数对$p, q$，求$P(2^{p^5}-1, 2^{q^5}-1)$之和，并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 759</title>
    <url>/759/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-759"><a href="#Problem-759" class="headerlink" title="Problem 759"></a><a href="https://projecteuler.net/problem=759">Problem 759</a></h1><hr>
<h2 id="A-squared-recurrence-relation"><a href="#A-squared-recurrence-relation" class="headerlink" title="A squared recurrence relation"></a><strong>A squared recurrence relation</strong></h2><p>The function $f$ is defined for all positive integers as follows:<br>$$f(1)=1$$<br>$$f(2n)=2f(n)$$<br>$$f(2n+1)=2n+1+2f(n)+\frac{1}{n}f(n)$$<br>It can be proven that $f(n)$ is integer for all values of $n$.</p>
<p>The function $S(n)$ is defined as $S(n) = \displaystyle \sum_{i=1}^n f(i) ^2$.</p>
<p>For example, $S(10)=1530$ and $S(10^2)=4798445$.</p>
<p>Find $S(10^{16})$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="递推数列的平方和"><a href="#递推数列的平方和" class="headerlink" title="递推数列的平方和"></a><strong>递推数列的平方和</strong></h2><p>定义在正整数上的函数$f$满足以下递推关系：<br>$$f(1)=1$$<br>$$f(2n)=2f(n)$$<br>$$f(2n+1)=2n+1+2f(n)+\frac{1}{n}f(n)$$<br>可以证明，对于任意$n$，$f(n)$的取值均为整数。</p>
<p>再定义函数$S(n)$为$S(n) = \displaystyle \sum_{i=1}^n f(i) ^2$。</p>
<p>例如，$S(10)=1530$，$S(10^2)=4798445$。</p>
<p>求$S(10^{16})$，并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 76</title>
    <url>/76/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-76"><a href="#Problem-76" class="headerlink" title="Problem 76"></a><a href="https://projecteuler.net/problem=76">Problem 76</a></h1><hr>
<h2 id="Counting-Summations"><a href="#Counting-Summations" class="headerlink" title="Counting Summations"></a><strong>Counting Summations</strong></h2><p>It is possible to write five as a sum in exactly six different ways:</p>
<p>$$<br>\begin{aligned}<br>&amp;4 + 1\\<br>&amp;3 + 2\\<br>&amp;3 + 1 + 1\\<br>&amp;2 + 2 + 1\\<br>&amp;2 + 1 + 1 + 1\\<br>&amp;1 + 1 + 1 + 1 + 1<br>\end{aligned}<br>$$</p>
<p>How many different ways can one hundred be written as a sum of at least two positive integers?</p>
<hr>
<h2 id="加和计数"><a href="#加和计数" class="headerlink" title="加和计数"></a><strong>加和计数</strong></h2><p>将$5$写成至少两个正整数的和，有$6$种不同的方式：</p>
<p>$$<br>\begin{aligned}<br>&amp;4 + 1\\<br>&amp;3 + 2\\<br>&amp;3 + 1 + 1\\<br>&amp;2 + 2 + 1\\<br>&amp;2 + 1 + 1 + 1\\<br>&amp;1 + 1 + 1 + 1 + 1<br>\end{aligned}<br>$$</p>
<p>将$100$写成至少两个正整数的和，有多少种不同的方式？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 760</title>
    <url>/760/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-760"><a href="#Problem-760" class="headerlink" title="Problem 760"></a><a href="https://projecteuler.net/problem=760">Problem 760</a></h1><hr>
<h2 id="Sum-over-Bitwise-Operators"><a href="#Sum-over-Bitwise-Operators" class="headerlink" title="Sum over Bitwise Operators"></a><strong>Sum over Bitwise Operators</strong></h2><p>Define<br>$$\displaystyle g(m,n) = (m\oplus n)+(m\vee n)+(m\wedge n)$$<br>where $\oplus, \vee, \wedge$ are the bitwise XOR, OR and AND operator respectively.</p>
<p>Also set<br>$$\displaystyle G(N) = \sum_{n=0}^N\sum_{k=0}^n g(k,n-k)$$</p>
<p>For example, $G(10) = 754$ and $G(10^2) = 583766$.</p>
<p>Find $G(10^{18})$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="位运算求和"><a href="#位运算求和" class="headerlink" title="位运算求和"></a><strong>位运算求和</strong></h2><p>记<br>$$\displaystyle g(m,n) = (m\oplus n)+(m\vee n)+(m\wedge n)$$<br>其中$\oplus, \vee, \wedge$分别代表“按位异或”、“按位或”和“按位与”运算。</p>
<p>再记<br>$$\displaystyle G(N) = \sum_{n=0}^N\sum_{k=0}^n g(k,n-k)$$</p>
<p>例如，$G(10) = 754$，$G(10^2) = 583766$。</p>
<p>求$G(10^{18})$，并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 761</title>
    <url>/761/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-761"><a href="#Problem-761" class="headerlink" title="Problem 761"></a><a href="https://projecteuler.net/problem=761">Problem 761</a></h1><hr>
<h2 id="Runner-and-Swimmer"><a href="#Runner-and-Swimmer" class="headerlink" title="Runner and Swimmer"></a><strong>Runner and Swimmer</strong></h2><p>Two friends, a runner and a swimmer, are playing a sporting game: The swimmer is swimming within a circular pool while the runner moves along the pool edge. While the runner tries to catch the swimmer at the very moment that the swimmer leaves the pool, the swimmer tries to reach the edge before the runner arrives there. They start the game with the swimmer located in the middle of the pool, while the runner is located anywhere at the edge of the pool.</p>
<p>We assume that the swimmer can move with any velocity up to $1$ in any direction and the runner can move with any velocity up to $v$ in either direction around the edge of the pool. Moreover we assume that both players can react immediately to any change of movement of their opponent.</p>
<p>Assuming optimal strategy of both players, it can be shown that the swimmer can always win by escaping the pool at some point at the edge before the runner gets there, if $v$ is less than the critical speed $V_{Circle} \approx 4.60333885$ and can never win if $v&gt;V_{Circle}$.</p>
<p>Now the two players play the game in a perfectly square pool. Again the swimmer starts in the middle of the pool, while the runner starts at the midpoint of one of the edges of the pool. It can be shown that the critical maximal speed of the runner below which the swimmer can always escape and above which the runner can always catch the swimmer when trying to leave the pool is $V_{Square} \approx 5.78859314$.</p>
<p>At last, both players decide to play the game in a pool in the form of regular hexagon. Giving the same conditions as above, with the swimmer starting in the middle of the pool and the runner at the midpoint of one of the edges of the pool, find the critical maximal speed $V_{Hexagon}$ of the runner, below which the swimmer can always escape and above which the runner can always catch the swimmer. Give your answer rounded to $8$ digits after the decimal point.</p>
<hr>
<h2 id="跑者与泳者"><a href="#跑者与泳者" class="headerlink" title="跑者与泳者"></a><strong>跑者与泳者</strong></h2><p>跑者与泳者这对好朋友正在进行一场运动比赛：泳者在一个圆形泳池中游泳，而跑者则沿着泳池边缘跑步；跑者试图在泳者离开泳池的瞬间抓住泳者，而泳者则努力在跑者到达之前抵达泳池边缘。比赛开始时，泳者位于泳池的正中心，而跑者则位于泳池边缘的任意位置。</p>
<p>我们假设泳者向任意方向游泳时的最高速率为$1$，而跑者沿着泳池边缘跑步的最高速率为$v$。我们进一步假设双方都能即时地根据对方的行动作出反应。</p>
<p>假设双方都采取最优策略，可以证明，如果$v$小于某个阈值$V_{Circle} \approx 4.60333885$，则泳者总是能够在跑者到达前抵达泳池边缘并离开，反之若$v&gt;V_{Circle}$，则泳者永远不可能获胜。</p>
<p>接着，双方在一个正方形泳池中再次进行比赛。同样地，比赛开始时，泳者位于泳池的正中心，但这次跑者位于泳池任意一条边的中点。可以计算出，此时决定跑者能否获胜的最高速率阈值为$V_{Square} \approx 5.78859314$。</p>
<p>最后，双方决定再到一个正六边形泳池中进行比赛。和之前的条件一样，比赛开始时，泳者位于泳池的正中心，跑者位于泳池任意一条边的重点，求此时跑者的最高速率的阈值$V_{Hexagon}$，并将你的答案保留小数点后$8$位。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 762</title>
    <url>/762/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-762"><a href="#Problem-762" class="headerlink" title="Problem 762"></a><a href="https://projecteuler.net/problem=762">Problem 762</a></h1><hr>
<h2 id="Amoebas-in-a-2D-grid"><a href="#Amoebas-in-a-2D-grid" class="headerlink" title="Amoebas in a 2D grid"></a><strong>Amoebas in a 2D grid</strong></h2><p>Consider a two dimensional grid of squares. The grid has $4$ rows but infinitely many columns.</p>
<p>An amoeba in square $(x, y)$ can divide itself into two amoebas to occupy the squares $(x+1,y)$ and $(x+1,(y+1) \bmod 4)$, provided these squares are empty.</p>
<p>The following diagrams show two cases of an amoeba placed in square <b>A</b> of each grid. When it divides, it is replaced with two amoebas, one at each of the squares marked with <b>B</b>:</p>
<p><img src="/resources/images/0762_table_a.png" alt=""><br><img src="/resources/images/0762_table_b.png" alt=""></p>
<p>Originally there is only one amoeba in the square $(0, 0)$. After $N$ divisions there will be $N+1$ amoebas arranged in the grid. An arrangement may be reached in several different ways but it is only counted once. Let $C(N)$ be the number of different possible arrangements after $N$ divisions.</p>
<p>For example, $C(2) = 2$, $C(10) = 1301$, $C(20)=5895236$ and the last nine digits of $C(100)$ are $125923036$.</p>
<p>Find $C(100\ 000)$, enter the last nine digits as your answer.</p>
<hr>
<h2 id="二维格阵中的阿米巴原虫"><a href="#二维格阵中的阿米巴原虫" class="headerlink" title="二维格阵中的阿米巴原虫"></a><strong>二维格阵中的阿米巴原虫</strong></h2><p>考虑一个有$4$行、无穷列的二维格阵。</p>
<p>原本位于方格$(x,y)$中的一只阿米巴原虫，在目标方格没有被占据的情况下，可以将自身分裂成两只阿米巴原虫，并分别占据方格$(x+1,y)$和$(x+1,(y+1) \bmod 4)$。</p>
<p>在下图所示的两种情况中，一只阿米巴原虫原本位于方格<b>A</b>。在分裂为两只阿米巴原虫后，则分别占据了两个标记有<b>B</b>的方格：</p>
<p><img src="/resources/images/0762_table_a.png" alt=""><br><img src="/resources/images/0762_table_b.png" alt=""></p>
<p>一开始只有一只阿米巴原虫位于方格$(0, 0)$。经过$N$次分裂之后，格阵中将会分布有$N+1$只阿米巴原虫。不同的分裂顺序可能形成相同的分布情况，这些分布均算作相同的分布。记$C(N)$为经过$N$次分裂后所有可能的不同分布的总数。</p>
<p>例如，$C(2) = 2$，$C(10) = 1301$，$C(20)=5895236$，而$C(100)$的最后九位数字是$125923036$。</p>
<p>求$C(100\ 000)$，并将其最后九位数字作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 763</title>
    <url>/763/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-763"><a href="#Problem-763" class="headerlink" title="Problem 763"></a><a href="https://projecteuler.net/problem=763">Problem 763</a></h1><hr>
<h2 id="Amoebas-in-a-3D-grid"><a href="#Amoebas-in-a-3D-grid" class="headerlink" title="Amoebas in a 3D grid"></a><strong>Amoebas in a 3D grid</strong></h2><p>Consider a three dimensional grid of cubes. An amoeba in cube $(x, y, z)$ can divide itself into three amoebas to occupy the cubes $(x + 1, y, z)$, $(x, y + 1, z)$ and $(x, y, z + 1)$, provided these cubes are empty.</p>
<p>Originally there is only one amoeba in the cube $(0, 0, 0)$. After $N$ divisions there will be $2N+1$ amoebas arranged in the grid. An arrangement may be reached in several different ways but it is only counted once. Let $D(N)$ be the number of different possible arrangements after $N$ divisions.</p>
<p>For example, $D(2) = 3$, $D(10) = 44499$, $D(20)=9204559704$ and the last nine digits of $D(100)$ are $780166455$.</p>
<p>Find $D(10\ 000)$, enter the last nine digits as your answer.</p>
<hr>
<h2 id="三维格阵中的阿米巴原虫"><a href="#三维格阵中的阿米巴原虫" class="headerlink" title="三维格阵中的阿米巴原虫"></a><strong>三维格阵中的阿米巴原虫</strong></h2><p>考虑一个三维格阵。原本位于方格$(x,y,z)$中的一只阿米巴原虫，在目标方格没有被占据的情况下，可以将自身分裂成三只阿米巴原虫，并分别占据方格$(x+1,y,z)$，$(x,y+1,z)$和$(x,y,z+1)$。</p>
<p>一开始只有一只阿米巴原虫位于方格$(0, 0,0)$。经过$N$次分裂之后，格阵中将会分布有$2N+1$只阿米巴原虫。不同的分裂顺序可能形成相同的分布情况，这些分布均算作相同的分布。记$D(N)$为经过$N$次分裂后所有可能的不同分布的总数。</p>
<p>例如，$D(2) = 3$，$D(10) = 44499$，$D(20)=9204559704$，而$D(100)$的最后九位数字是$780166455$。</p>
<p>求$D(10\ 000)$，并将其最后九位数字作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 764</title>
    <url>/764/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-764"><a href="#Problem-764" class="headerlink" title="Problem 764"></a><a href="https://projecteuler.net/problem=764">Problem 764</a></h1><hr>
<h2 id="Asymmetric-Diophantine-Equation"><a href="#Asymmetric-Diophantine-Equation" class="headerlink" title="Asymmetric Diophantine Equation"></a><strong>Asymmetric Diophantine Equation</strong></h2><p>Consider the following Diophantine equation:<br>$$16x^2+y^4=z^2$$<br>where $x$, $y$ and $z$ are positive integers.</p>
<p>Let $S(N) = \displaystyle{\sum(x+y+z)}$ where the sum is over all solutions $(x,y,z)$ such that $1 \leq x,y,z \leq N$ and $\gcd(x,y,z)=1$. </p>
<p>For $N=100$, there are only two such solutions: $(3,4,20)$ and $(10,3,41)$. So $S(10^2)=81$.</p>
<p>You are also given that $S(10^4)=112851$ (with $26$ solutions), and $S(10^7)\equiv 248876211 \pmod{10^9}$.</p>
<p>Find $S(10^{16})$. Give your answer modulo $10^9$.</p>
<hr>
<h2 id="不对称丢番图方程"><a href="#不对称丢番图方程" class="headerlink" title="不对称丢番图方程"></a><strong>不对称丢番图方程</strong></h2><p>考虑如下的丢番图方程：<br>$$16x^2+y^4=z^2$$<br>其中$x$、$y$和$z$均为正整数。</p>
<p>考虑所有满足$1 \leq x,y,z \leq N$和$\gcd(x,y,z)=1$的解$(x,y,z)$，记$S(N) = \displaystyle{\sum(x+y+z)}$在这些解上求和。</p>
<p>对于$N=100$，只有两组满足上述条件的解，分别是$(3,4,20)$和$(10,3,41)$，因此$S(10^2)=81$。</p>
<p>已知$S(10^4)=112851$（共有$26$组解），以及$S(10^7)\equiv 248876211 \pmod{10^9}$。</p>
<p>求$S(10^{16})$，并将你的答案对$10^9$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 765</title>
    <url>/765/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-765"><a href="#Problem-765" class="headerlink" title="Problem 765"></a><a href="https://projecteuler.net/problem=765">Problem 765</a></h1><hr>
<h2 id="Trillionaire"><a href="#Trillionaire" class="headerlink" title="Trillionaire"></a><strong>Trillionaire</strong></h2><p>Starting with $1$ gram of gold you play a game. Each round you bet a certain amount of your gold: if you have $x$ grams you can bet $b$ grams for any $0 \le b \le x$. You then toss an unfair coin: with a probability of $0.6$ you double your bet (so you now have $x+b$), otherwise you lose your bet (so you now have $x-b$).</p>
<p>Choosing your bets to maximize your probability of having at least a trillion $(10^{12})$ grams of gold after $1000$ rounds, what is the probability that you become a trillionaire?</p>
<p>All computations are assumed to be exact (no rounding), but give your answer rounded to $10$ digits behind the decimal point.</p>
<hr>
<h2 id="万亿富翁"><a href="#万亿富翁" class="headerlink" title="万亿富翁"></a><strong>万亿富翁</strong></h2><p>你正在玩一个游戏，游戏开始时你拥有$1$克黄金。每一轮，如果你拥有$x$克黄金，那么你可以下注任意$0 \le b \le x$克黄金，然后抛掷一枚不公平硬币：有$0.6$的概率你的赌注双倍奉还（此时你拥有$x+b$克黄金），其余的情况下则丧失你的赌注（此时你拥有$x-b$克黄金）。</p>
<p>你将进行$1000$轮游戏，而你的目标是最大化游戏结束时你拥有至少一万亿（$10^{12}$）克黄金的概率。请问在最优策略下，这个最大化的概率是多少？</p>
<p>假设游戏过程中的每次赌注计算都是精确的（没有四舍五入），但你的答案应当四舍五入至小数点后$10$位。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 766</title>
    <url>/766/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-766"><a href="#Problem-766" class="headerlink" title="Problem 766"></a><a href="https://projecteuler.net/problem=766">Problem 766</a></h1><hr>
<h2 id="Sliding-Block-Puzzle"><a href="#Sliding-Block-Puzzle" class="headerlink" title="Sliding Block Puzzle"></a><strong>Sliding Block Puzzle</strong></h2><p>A <strong>sliding block puzzle</strong> is a puzzle where pieces are confined to a grid and by sliding the pieces a final configuration is reached. In this problem the pieces can only be slid in multiples of one unit in the directions up, down, left, right. </p>
<p>A <em>reachable configuration</em> is any arrangement of the pieces that can be achieved by sliding the pieces from the initial configuration.</p>
<p>Two configurations are identical if the same shape pieces occupy the same position in the grid. So in the case below the red squares are indistinguishable. For this example the number of reachable configurations is $208$.</p>
<p><img src="/resources/images/0766_SlidingBlock1.jpg" alt=""></p>
<p>Find the number of reachable configurations for the puzzle below. Note that the red L-shaped pieces are considered different from the green L-shaped pieces.</p>
<p><img src="/resources/images/0766_SlidingBlock2.jpg" alt=""></p>
<hr>
<h2 id="滑块谜题"><a href="#滑块谜题" class="headerlink" title="滑块谜题"></a><strong>滑块谜题</strong></h2><p><strong>滑块谜题</strong>是一种在指定范围内滑动滑块以达成特定布局的谜题。在本题中，我们要求滑块每次向上、向下、向左或向右滑动时，必须移动单位距离的整数倍。</p>
<p>从初始布局出发，通过滑动滑块所能达成的布局统称为<i class=zh>可达布局</i>。</p>
<p>如果两个布局中，所有相同形状的滑块均占据相同的位置，则视为相同的布局。如下图所示，所有由红色标记的正方形滑块都是不可区分的，最终以此为初始布局的可达布局共有$208$种。</p>
<p><img src="/resources/images/0766_SlidingBlock1.jpg" alt=""></p>
<p>求以下图为初始布局的可达布局的总数。注意，由红色标记的L形滑块和由绿色标记的L形滑块应视为不同形状的滑块。</p>
<p><img src="/resources/images/0766_SlidingBlock2.jpg" alt=""></p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 767</title>
    <url>/767/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-767"><a href="#Problem-767" class="headerlink" title="Problem 767"></a><a href="https://projecteuler.net/problem=767">Problem 767</a></h1><hr>
<h2 id="Window-into-a-Matrix-II"><a href="#Window-into-a-Matrix-II" class="headerlink" title="Window into a Matrix II"></a><strong>Window into a Matrix II</strong></h2><p>A window into a matrix is a contiguous sub matrix.</p>
<p>Consider a $16\times n$ matrix where every entry is either $0$ or $1$.<br>Let $B(k,n)$ be the total number of these matrices such that the sum of the entries in every $2\times k$ window is $k$.</p>
<p>You are given that $B(2,4) = 65550$ and $B(3,9) \equiv 87273560 \pmod{1\ 000\ 000\ 007}$.</p>
<p>Find $B(10^5,10^{16})$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="矩阵窗口II"><a href="#矩阵窗口II" class="headerlink" title="矩阵窗口II"></a><strong>矩阵窗口II</strong></h2><p>矩阵的窗口是指矩阵中一个连续的子矩阵。</p>
<p>考虑一个$16\times n$的矩阵，其中的元素均为$0$或$1$。<br>若矩阵中任意一个$2\times k$的窗口中元素之和都为$k$，记所有这样的矩阵数目为$B(k,n)$。</p>
<p>已知$B(2,4) = 65550$以及$B(3,9) \equiv 87273560 \pmod{1\ 000\ 000\ 007}$。</p>
<p>求$B(10^5,10^{16})$，并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 768</title>
    <url>/768/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-768"><a href="#Problem-768" class="headerlink" title="Problem 768"></a><a href="https://projecteuler.net/problem=768">Problem 768</a></h1><hr>
<h2 id="Chandelier"><a href="#Chandelier" class="headerlink" title="Chandelier"></a><strong>Chandelier</strong></h2><p>A certain type of chandelier contains a circular ring of $n$ evenly spaced candleholders.<br><br>If only one candle is fitted, then the chandelier will be imbalanced. However, if a second identical candle is placed in the opposite candleholder (assuming $n$ is even) then perfect balance will be achieved and the chandelier will hang level.</p>
<p>Let $f(n,m)$ be the number of ways of arranging $m$ identical candles in distinct sockets of a chandelier with $n$ candleholders such that the chandelier is perfectly balanced.</p>
<p>For example, $f(4, 2) = 2$: assuming the chandelier’s four candleholders are aligned with the compass points, the two valid arrangements are “North &amp; South” and “East &amp; West”. Note that these are considered to be different arrangements even though they are related by rotation.</p>
<p>You are given that $f(12,4) = 15$ and $f(36, 6) = 876$.</p>
<p>Find $f(360, 20)$.</p>
<hr>
<h2 id="枝形吊灯"><a href="#枝形吊灯" class="headerlink" title="枝形吊灯"></a><strong>枝形吊灯</strong></h2><p>某种枝形吊灯上等距离安置了一圈共$n$个烛台。<br><br>如果只摆上一根蜡烛，那么吊灯将会失去平衡。必须在与第一根蜡烛相对的烛台上（假设$n$是偶数）摆上第二根完全相同的蜡烛，才能让吊灯保持平衡。</p>
<p>对于安置有$n$个烛台的吊灯，记$f(n,m)$为在不同的烛台上摆上共$m$根完全相同的蜡烛且仍能让吊灯保持平衡的方案总数。</p>
<p>例如，$f(4, 2) = 2$：不妨假设吊灯上的四个烛台恰好指向正东、正西、正南、正北方向，那么符合要求的两种方案是“正北和正南”以及“正东和正西”。注意尽管这两种方案可以经过旋转重合，但仍视为不同的方案。</p>
<p>此外，还已知$f(12,4) = 15$以及$f(36, 6) = 876$。</p>
<p>求$f(360, 20)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 769</title>
    <url>/769/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-769"><a href="#Problem-769" class="headerlink" title="Problem 769"></a><a href="https://projecteuler.net/problem=769">Problem 769</a></h1><hr>
<h2 id="Binary-Quadratic-Form-II"><a href="#Binary-Quadratic-Form-II" class="headerlink" title="Binary Quadratic Form II"></a><strong>Binary Quadratic Form II</strong></h2><p>Consider the following binary quadratic form:</p>
<p>$$f(x,y)=x^2+5xy+3y^2$$</p>
<p>A positive integer $q$ has a primitive representation if there exist positive integers $x$ and $y$ such that $q = f(x,y)$ and $\gcd(x,y)=1$.</p>
<p>We are interested in primitive representations of perfect squares. For example: <br /><br>$17^2=f(1,9)$ <br /><br>$87^2=f(13,40) = f(46,19)$</p>
<p>Define $C(N)$ as the total number of primitive representations of $z^2$ for $0 &lt; z \leq N$.<br /><br>Multiple representations are counted separately, so for example $z=87$ is counted twice.</p>
<p>You are given $C(10^3)=142$ and $C(10^{6})=142463$. </p>
<p>Find $C(10^{14})$.</p>
<hr>
<h2 id="二元二次型II"><a href="#二元二次型II" class="headerlink" title="二元二次型II"></a><strong>二元二次型II</strong></h2><p>考虑如下二元二次型：</p>
<p>$$f(x,y)=x^2+5xy+3y^2$$</p>
<p>对于正整数$q$，若存在正整数$x$和$y$使得$q=f(x,y)$且$\gcd(x,y)=1$，则称之为$q$的本原表达式。</p>
<p>我们感兴趣的是完全平方数的本原表达式。例如：<br /><br>$17^2=f(1,9)$ <br /><br>$87^2=f(13,40) = f(46,19)$</p>
<p>记$C(N)$为所有满足$0 &lt; z \leq N$的完全平方数$z^2$的本原表达式数目之和。<br /><br>同一个数的不同本原表达式单独计入，因此如$z=87$就有两组本原表达式。</p>
<p>已知$C(10^3)=142$和$C(10^{6})=142463$。</p>
<p>求$C(10^{14})$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 77</title>
    <url>/77/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-77"><a href="#Problem-77" class="headerlink" title="Problem 77"></a><a href="https://projecteuler.net/problem=77">Problem 77</a></h1><hr>
<h2 id="Prime-Summations"><a href="#Prime-Summations" class="headerlink" title="Prime Summations"></a><strong>Prime Summations</strong></h2><p>It is possible to write ten as the sum of primes in exactly five different ways:</p>
<p>$$<br>\begin{aligned}<br>&amp;7 + 3\\<br>&amp;5 + 5\\<br>&amp;5 + 3 + 2\\<br>&amp;3 + 3 + 2 + 2\\<br>&amp;2 + 2 + 2 + 2 + 2<br>\end{aligned}<br>$$</p>
<p>What is the first value which can be written as the sum of primes in over five thousand different ways?</p>
<hr>
<h2 id="素数加和"><a href="#素数加和" class="headerlink" title="素数加和"></a><strong>素数加和</strong></h2><p>将$10$写成素数的和，有$5$种不同的方式：</p>
<p>$$<br>\begin{aligned}<br>&amp;7 + 3\\<br>&amp;5 + 5\\<br>&amp;5 + 3 + 2\\<br>&amp;3 + 3 + 2 + 2\\<br>&amp;2 + 2 + 2 + 2 + 2<br>\end{aligned}<br>$$</p>
<p>最小的能以超过$5000$种不同的方式写成素数之和的数是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 770</title>
    <url>/770/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-770"><a href="#Problem-770" class="headerlink" title="Problem 770"></a><a href="https://projecteuler.net/problem=770">Problem 770</a></h1><hr>
<h2 id="Delphi-Flip"><a href="#Delphi-Flip" class="headerlink" title="Delphi Flip"></a><strong>Delphi Flip</strong></h2><p>A and B play a game. A has originally $1$ gram of gold and B has an unlimited amount. Each round goes as follows:</p>
<ul>
<li>A chooses and displays, $x$, a nonnegative real number no larger than the amount of gold that A has.</li>
<li>Either B chooses to TAKE. Then A gives B $x$ grams of gold.</li>
<li>Or B chooses to GIVE. Then B gives A $x$ grams of gold.</li>
</ul>
<p>B TAKEs $n$ times and GIVEs $n$ times after which the game finishes.</p>
<p>Define $g(X)$ to be the smallest value of $n$ so that A can guarantee to have at least $X$ grams of gold at the end of the game. You are given $g(1.7) = 10$.</p>
<p>Find $g(1.9999)$.</p>
<hr>
<h2 id="狡诈的先知"><a href="#狡诈的先知" class="headerlink" title="狡诈的先知"></a><strong>狡诈的先知</strong></h2><p>A和B正在玩一个游戏。游戏开始时，A持有$1$克黄金，而B则持有无穷的黄金。在每一轮游戏中：</p>
<ul>
<li>A选择并展示一个非负数实数$x$，且$x$不超过A持有的黄金数量。</li>
<li>B可以选择<i class=zh>拿走</i>，此时A必须将$x$克黄金交给B。</li>
<li>B也可以选择<i class=zh>赠予</i>，此时B必须将$x$克黄金交给A。</li>
</ul>
<p>当B选择了恰好各$n$次<i class=zh>拿走</i>和<i class=zh>赠予</i>后，游戏结束。</p>
<p>记$g(X)$为最小的$n$，使得A能保证游戏结束时至少持有$X$克黄金。已知$g(1.7) = 10$。</p>
<p>求$g(1.9999)$。</p>
<p><i class=zh>译注：本题源自《科学美国人》2001年8月刊同名谜题，大意是赌徒向先知请教接下来数次硬币抛掷的结果，先知虽然能够准确预测未来，但偶尔也会撒谎，赌徒需要决定如何下注以最大化收益。</i></p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 771</title>
    <url>/771/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-771"><a href="#Problem-771" class="headerlink" title="Problem 771"></a><a href="https://projecteuler.net/problem=771">Problem 771</a></h1><hr>
<h2 id="Pseudo-Geometric-Sequences"><a href="#Pseudo-Geometric-Sequences" class="headerlink" title="Pseudo Geometric Sequences"></a><strong>Pseudo Geometric Sequences</strong></h2><p>We define a <i>pseudo-geometric sequence</i> to be a finite sequence $a_0, a_1, \ldots, a_n$ of positive integers, satisfying the following conditions:</p>
<ul>
<li>$n \geq 4$, i.e. the sequence has at least 5 terms.</li>
<li>$0 &lt; a_0 &lt; a_1 &lt; \ldots &lt; a_n$, i.e. the sequence is strictly increasing.</li>
<li>$| a_i^2 - a_{i - 1}a_{i + 1} | \le 2$ for $1 \le i \le n-1$.</li>
</ul>
<p>Let $G(N)$ be the number of different pseudo-geometric sequences whose terms do not exceed $N$.<br /><br>For example, $G(6) = 4$, as the following $4$ sequences give a complete list:</p>
<p>$$1, 2, 3, 4, 5 \qquad 1, 2, 3, 4, 6 \qquad 2, 3, 4, 5, 6 \qquad 1, 2, 3, 4, 5, 6$$</p>
<p>Also, $G(10) = 26$, $G(100) = 4710$ and $G(1000) = 496805$.</p>
<p>Find $G(10^{18})$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="伪等比数列"><a href="#伪等比数列" class="headerlink" title="伪等比数列"></a><strong>伪等比数列</strong></h2><p>我们定义满足如下条件的有限正整数数列$a_0, a_1, \ldots, a_n$为<i class=zh>伪等比数列</i>：</p>
<ul>
<li>$n \geq 4$，即数列至少有5项。</li>
<li>$0 &lt; a_0 &lt; a_1 &lt; \ldots &lt; a_n$，即数列严格递增。</li>
<li>对于$1 \le i \le n-1$，均有$| a_i^2 - a_{i - 1}a_{i + 1} | \le 2$。</li>
</ul>
<p>记$G(N)$为各项均不超过$N$的不同伪等比数列的总数。<br /><br>例如，$G(6) = 4$，这$4$种数列如下所示：</p>
<p>$$1, 2, 3, 4, 5 \qquad 1, 2, 3, 4, 6 \qquad 2, 3, 4, 5, 6 \qquad 1, 2, 3, 4, 5, 6$$</p>
<p>此外还已知$G(10) = 26$，$G(100) = 4710$以及$G(1000) = 496805$。</p>
<p>求$G(10^{18})$，并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 772</title>
    <url>/772/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-772"><a href="#Problem-772" class="headerlink" title="Problem 772"></a><a href="https://projecteuler.net/problem=772">Problem 772</a></h1><hr>
<h2 id="Balanceable-k-bounded-partitions"><a href="#Balanceable-k-bounded-partitions" class="headerlink" title="Balanceable $k$-bounded partitions"></a><strong>Balanceable $k$-bounded partitions</strong></h2><p>A $k$-bounded partition of a positive integer $N$ is a way of writing $N$ as a sum of positive integers not exceeding $k$.</p>
<p>A balanceable partition is a partition that can be further divided into two parts of equal sums.</p>
<p>For example, $3 + 2 + 2 + 2 + 2 + 1$ is a balanceable $3$-bounded partition of $12$ since $3 + 2 + 1 = 2 + 2 + 2$. Conversely, $3 + 3 + 3 + 1$ is a $3$-bounded partition of $10$ which is not balanceable.</p>
<p>Let $f(k)$ be the smallest positive integer $N$ all of whose $k$-bounded partitions are balanceable. For example, $f(3) = 12$ and $f(30) \equiv 179092994 \pmod {1\ 000\ 000\ 007}$.</p>
<p>Find $f(10^8)$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="可平衡-k-有界分拆"><a href="#可平衡-k-有界分拆" class="headerlink" title="可平衡$k$-有界分拆"></a><strong>可平衡$k$-有界分拆</strong></h2><p>正整数$N$的分拆是指将$N$写作一系列正整数之和。若这些正整数均不超过$k$，则称之为$k$-有界分拆。若这些正整数能分成和相同的两组，则称之为可平衡分拆。</p>
<p>例如，$3 + 2 + 2 + 2 + 2 + 1$是$12$的一种可平衡$3$-有界分拆，因为$3 + 2 + 1 = 2 + 2 + 2$。反之，$3 + 3 + 3 + 1$是$10$的一种$3$-有界分拆，但不是可平衡分拆。</p>
<p>记$f(k)$是最小的正整数$N$，使得其所有的$k$-有界分拆都是可平衡分拆。例如，$f(3) = 12$，$f(30) \equiv 179092994 \pmod {1\ 000\ 000\ 007}$。</p>
<p>求$f(10^8)$，并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 773</title>
    <url>/773/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-773"><a href="#Problem-773" class="headerlink" title="Problem 773"></a><a href="https://projecteuler.net/problem=773">Problem 773</a></h1><hr>
<h2 id="Ruff-Numbers"><a href="#Ruff-Numbers" class="headerlink" title="Ruff Numbers"></a><strong>Ruff Numbers</strong></h2><p>Let $S_k$ be the set containing $2$ and $5$ and the first $k$ primes that end in $7$. For example, $S_3 = \{2,5,7,17,37\}$.</p>
<p>Define a $k$-<i>Ruff</i> number to be one that is not divisible by any element in $S_k$.</p>
<p>If $N_k$ is the product of the numbers in $S_k$ then define $F(k)$ to be the sum of all $k$-Ruff numbers less than $N_k$ that have last digit $7$. You are given $F(3) = 76101452$.</p>
<p>Find $F(97)$, give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="仿粗糙数"><a href="#仿粗糙数" class="headerlink" title="仿粗糙数"></a><strong>仿粗糙数</strong></h2><p>记$S_k$为$2$、$5$和前$k$个以$7$结尾的素数所构成的集合。例如，$S_3 = \{2,5,7,17,37\}$。</p>
<p>如果一个数不能被$S_k$中的任意元素整除，则称之为$k$-<i class=zh>仿粗糙数</i>。</p>
<p>若$N_k$为$S_k$中的元素之积，则定义$F(k)$为所有小于$N_k$且以$7$结尾的$k$-仿粗糙数之和。已知$F(3) = 76101452$。</p>
<p>求$F(97)$，并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 774</title>
    <url>/774/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-774"><a href="#Problem-774" class="headerlink" title="Problem 774"></a><a href="https://projecteuler.net/problem=774">Problem 774</a></h1><hr>
<h2 id="Conjunctive-Sequences"><a href="#Conjunctive-Sequences" class="headerlink" title="Conjunctive Sequences"></a><strong>Conjunctive Sequences</strong></h2><p>$\&amp;$ denote the bitwise AND operation.<br><br>For example, $10\ \&amp;\ 12 = 1010_2\ \&amp;\ 1100_2 = 1000_2 = 8$.</p>
<p>We shall call a finite sequence of non-negative integers $(a_1, a_2, \ldots, a_n)$ <i>conjunctive</i> if $a_i\ \&amp;\ a_{i+1} \neq 0$ for all $i=1\ldots n-1$.</p>
<p>Define $c(n,b)$ to be the number of conjunctive sequences of length $n$ in which all terms are $\le b$.</p>
<p>You are given that $c(3,4)=18$, $c(10,6)=2496120$, and $c(100,200) \equiv 268159379 \pmod {998244353}$.</p>
<p>Find $c(123,123456789)$. Give your answer modulo $998244353$.</p>
<hr>
<h2 id="合取数列"><a href="#合取数列" class="headerlink" title="合取数列"></a><strong>合取数列</strong></h2><p>$\&amp;$表示按位与操作。<br><br>例如，$10\ \&amp;\ 12 = 1010_2\ \&amp;\ 1100_2 = 1000_2 = 8$。</p>
<p>若有限非负整数列$(a_1, a_2, \ldots, a_n)$满足，对所有$i=1\ldots n-1$均有$a_i\ \&amp;\ a_{i+1} \neq 0$，则称之为<i class=zh>合取</i>数列。</p>
<p>记$c(n,b)$为所有长度为$n$且各项均$\le b$的合取数列的数目。</p>
<p>已知$c(3,4)=18$，$c(10,6)=2496120$，以及$c(100,200) \equiv 268159379 \pmod {998244353}$。</p>
<p>求$c(123,123456789)$，并将你的答案对$998244353$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 775</title>
    <url>/775/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-775"><a href="#Problem-775" class="headerlink" title="Problem 775"></a><a href="https://projecteuler.net/problem=775">Problem 775</a></h1><hr>
<h2 id="Saving-Paper"><a href="#Saving-Paper" class="headerlink" title="Saving Paper"></a><strong>Saving Paper</strong></h2><p>When wrapping several cubes in paper, it is more efficient to wrap them all together than to wrap each one individually. For example, with $10$ cubes of unit edge length, it would take $30$ units of paper to wrap them in the arrangement shown below, but $60$ units to wrap them separately.</p>
<p><img src="/resources/images/0775_wrapping_cubes.png" alt=""></p>
<p>Define $g(n)$ to be the maximum amount of paper that can be saved by wrapping $n$ identical $1\times 1\times 1$ cubes in a compact arrangement, compared with wrapping them individually. We insist that the wrapping paper is in contact with the cubes at all points, without leaving a void.</p>
<p>With $10$ cubes, the arrangement illustrated above is optimal, so $g(10)=60-30=30$. With $18$ cubes, it can be shown that the optimal arrangement is as a $3\times 3\times 2$, using $42$ units of paper, whereas wrapping individually would use $108$ units of paper; hence $g(18) = 66$.</p>
<p>Define<br>$$G(N) = \sum_{n=1}^N g(n)$$<br>You are given that $G(18) = 530$, and $G(10^6) \equiv 951640919 \pmod {1\ 000\ 000\ 007}$.</p>
<p>Find $G(10^{16})$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="节约用纸"><a href="#节约用纸" class="headerlink" title="节约用纸"></a><strong>节约用纸</strong></h2><p>在包装多个立方体时，将它们放在一起包装比起分别包装更省纸张。例如，如果有$10$个单位边长的立方体，按照如下方式堆叠后只需要$30$单位面积的包装纸，而将它们分别包装则需要$60$单位面积的包装纸。</p>
<p><img src="/resources/images/0775_wrapping_cubes.png" alt=""></p>
<p>记$g(n)$为包装$n$个$1\times 1\times 1$大小的立方体时，采用最紧凑的方式包装相比分别包装最多能省下多少单位面积的包装纸。我们要求包装纸必须和立方体紧密贴合，不能留出空隙。</p>
<p>包装$10$个立方体时，如上所示的包装方式是最优的，因此$g(10)=60-30=30$。包装$18$个立方体时，可以证明最优的包装方式是将其堆叠为$3\times 3\times 2$大小，此时需要$42$单位面积的包装纸，而分别包装则需要$108$单位面积的包装纸，因此$g(18) = 66$。</p>
<p>进一步定义<br>$$G(N) = \sum_{n=1}^N g(n)$$<br>已知$G(18) = 530$，$G(10^6) \equiv 951640919 \pmod {1\ 000\ 000\ 007}$。</p>
<p>求$G(10^{16})$，并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 776</title>
    <url>/776/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-776"><a href="#Problem-776" class="headerlink" title="Problem 776"></a><a href="https://projecteuler.net/problem=776">Problem 776</a></h1><hr>
<h2 id="Digit-Sum-Division"><a href="#Digit-Sum-Division" class="headerlink" title="Digit Sum Division"></a><strong>Digit Sum Division</strong></h2><p>For a positive integer $n$, $d(n)$ is defined to be the sum of the digits of $n$. For example, $d(12345)=15$.</p>
<p>Let $\displaystyle F(N)=\sum_{n=1}^N \frac{n}{d(n)}$. </p>
<p>You are given $F(10)=19$, $F(123)\approx 1.187764610390e3$ and $F(12345)\approx 4.855801996238e6$.</p>
<p>Find $F(1234567890123456789)$. Write your answer in scientific notation rounded to twelve significant digits after the decimal point. Use a lowercase $e$ to separate the mantissa and the exponent.</p>
<hr>
<h2 id="数字和除法"><a href="#数字和除法" class="headerlink" title="数字和除法"></a><strong>数字和除法</strong></h2><p>对于正整数$n$，记$d(n)$为$n$的各位数字和。例如，$d(12345)=15$。</p>
<p>令$\displaystyle F(N)=\sum_{n=1}^N \frac{n}{d(n)}$。</p>
<p>已知$F(10)=19$，$F(123)\approx 1.187764610390e3$，$F(12345)\approx 4.855801996238e6$。</p>
<p>求$F(1234567890123456789)$。将你的答案用科学计数法表示，保留小数点后十二位有效数字，并使用小写字母$e$分隔尾数和指数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 777</title>
    <url>/777/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-777"><a href="#Problem-777" class="headerlink" title="Problem 777"></a><a href="https://projecteuler.net/problem=777">Problem 777</a></h1><hr>
<h2 id="Lissajous-Curves"><a href="#Lissajous-Curves" class="headerlink" title="Lissajous Curves"></a><strong>Lissajous Curves</strong></h2><p>For coprime positive integers $a$ and $b$, let $C_{a,b}$ be the curve defined by:<br>$$<br>\begin{aligned}<br>x &amp; = \cos \left(at\right) \\<br>y &amp; = \cos \left(b\left(t-\frac{\pi}{10}\right)\right)<br>\end{aligned}<br>$$</p>
<p>where $t$ varies between $0$ and $2\pi$.</p>
<p>For example, the images below show $C_{2,5}$ (left) and $C_{7,4}$ (right):</p>
<p><img src="/resources/images/0777_lissajous-pair-25-74.png" alt=""></p>
<p>Define $d(a,b) = \sum (x^2 + y^2)$, where the sum is over all points $(x, y)$ at which $C_{a,b}$ crosses itself.</p>
<p>For example, in the case of $C_{2,5}$ illustrated above, the curve crosses itself at two points: $(0.31, 0)$ and $(-0.81, 0)$, rounding coordinates to two decimal places, yielding $d(2, 5)=0.75$. Some other examples are $d(2,3)=4.5$, $d(7,4)=39.5$, $d(7,5)=52$, and $d(10,7)=23.25$.</p>
<p>Let $s(m) = \sum d(a,b)$, where this sum is over all pairs of coprime integers $a,b$ with $2\le a\le m$ and $2\le b\le m$.<br>You are given that $s(10) = 1602.5$ and $s(100) = 24256505$.</p>
<p>Find $s(10^6)$. Give your answer in scientific notation rounded to $10$ significant digits; for example $s(100)$ would be given as $2.425650500e7$.</p>
<hr>
<h2 id="利萨茹曲线"><a href="#利萨茹曲线" class="headerlink" title="利萨茹曲线"></a><strong>利萨茹曲线</strong></h2><p>对于互质的正整数$a$和$b$，记$C_{a,b}$为由如下参数方程定义的曲线：<br>$$<br>\begin{aligned}<br>x &amp; = \cos \left(at\right) \\<br>y &amp; = \cos \left(b\left(t-\frac{\pi}{10}\right)\right)<br>\end{aligned}<br>$$<br>其中参数$t$的取值范围是$0$到$2\pi$。</p>
<p>例如，下图所示分别是曲线$C_{2,5}$（左）和曲线$C_{7,4}$（右）：</p>
<p><img src="/resources/images/0777_lissajous-pair-25-74.png" alt=""></p>
<p>对于曲线$C_{a,b}$与自身相交产生的所有交点$(x,y)$，记$d(a,b) = \sum (x^2 + y^2)$。</p>
<p>例如，对于如上所示曲线$C_{2,5}$，其与自身相交产生两个交点：$(0.31, 0)$和$(-0.81, 0)$，均保留两位小数，因此$d(2, 5)=0.75$。此外，$d(2,3)=4.5$，$d(7,4)=39.5$，$d(7,5)=52$，$d(10,7)=23.25$。</p>
<p>对于所有满足$2\le a\le m$和$2\le b\le m$的互质整数对$a,b$，记$s(m) = \sum d(a,b)$。<br>已知$s(10) = 1602.5$，$s(100) = 24256505$。</p>
<p>求$s(10^6)$。将你的答案用科学计数法表示并保留$10$位有效数字；例如，$s(100)$应表示为$2.425650500e7$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 778</title>
    <url>/778/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-778"><a href="#Problem-778" class="headerlink" title="Problem 778"></a><a href="https://projecteuler.net/problem=778">Problem 778</a></h1><hr>
<h2 id="Freshman’s-Product"><a href="#Freshman’s-Product" class="headerlink" title="Freshman’s Product"></a><strong>Freshman’s Product</strong></h2><p>If $a,b$ are two nonnegative integers with decimal representations $a=(\dots a_2a_1a_0)$ and $b=(\dots b_2b_1b_0)$ respectively, then the <i>freshman’s product</i> of $a$ and $b$, denoted $a\boxtimes b$, is the integer $c$ with decimal representation $c=(\dots c_2c_1c_0)$ such that $c_i$ is the last digit of $a_i\cdot b_i$.<br /><br>For example, $234 \boxtimes 765 = 480$.</p>
<p>Let $F(R,M)$ be the sum of $x_1 \boxtimes \dots \boxtimes x_R$ for all sequences of integers $(x_1,\dots,x_R)$ with $0\leq x_i \leq M$.<br /><br>For example, $F(2, 7) = 204$, and $F(23, 76) \equiv 5870548 \pmod{1\ 000\ 000\ 009}$.</p>
<p>Find $F(234567,765432)$, give your answer modulo $1\ 000\ 000\ 009$.</p>
<hr>
<h2 id="初学者乘积"><a href="#初学者乘积" class="headerlink" title="初学者乘积"></a><strong>初学者乘积</strong></h2><p>若$a$和$b$是两个非负整数，其十进制表示分别是$a=(\dots a_2a_1a_0)$和$b=(\dots b_2b_1b_0)$，则$a$和$b$的<i class=zh>初学者乘积</i>，记为$a\boxtimes b$，是另一个整数$c$，其十进制表示为$c=(\dots c_2c_1c_0)$，其中$c_i$是$a_i\cdot b_i$的末位数字。<br /><br>例如，$234 \boxtimes 765 = 480$。</p>
<p>对于所有满足$0\leq x_i \leq M$的整数列$(x_1,\dots,x_R)$，记$F(R,M)$为$x_1 \boxtimes \dots \boxtimes x_R$之和。<br /><br>例如，$F(2, 7) = 204$，$F(23, 76) \equiv 5870548 \pmod{1\ 000\ 000\ 009}$。</p>
<p>求$F(234567,765432)$，并将你的答案对$1\ 000\ 000\ 009$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 779</title>
    <url>/779/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-779"><a href="#Problem-779" class="headerlink" title="Problem 779"></a><a href="https://projecteuler.net/problem=779">Problem 779</a></h1><hr>
<h2 id="Prime-Factor-and-Exponent"><a href="#Prime-Factor-and-Exponent" class="headerlink" title="Prime Factor and Exponent"></a><strong>Prime Factor and Exponent</strong></h2><p>For a positive integer $n&gt;1$, let $p(n)$ be the smallest prime dividing $n$, and let $\alpha(n)$ be its <b><i>p</i>-adic order</b>, i.e. the largest integer such that $p(n)^{\alpha(n)}$ divides $n$.</p>
<p>For a positive integer $K$, define the function $f_K(n)$ by:</p>
<p>$$\displaystyle f_K(n)=\frac{\alpha(n)-1}{(p(n))^K}$$</p>
<p>Also define $\overline{f_K}$ by:</p>
<p>$$\displaystyle \overline{f_K}=\lim_{N \to \infty} \frac{1}{N}\sum_{n=2}^{N} f_K(n)$$</p>
<p>It can be verified that $\overline{f_1} \approx 0.282419756159$.</p>
<p>Find $\displaystyle \sum_{K=1}^{\infty}\overline{f_K}$. Give your answer rounded to $12$ digits after the decimal point.</p>
<hr>
<h2 id="质因数及其指数"><a href="#质因数及其指数" class="headerlink" title="质因数及其指数"></a><strong>质因数及其指数</strong></h2><p>对于正整数$n&gt;1$，记$p(n)$为整除$n$的最小质数，并记$\alpha(n)$为$n$的<b><i>p</i>进数</b>，也即使得$p(n)^{\alpha(n)}$整除$n$的最大整数。</p>
<p>对于正整数$K$，定义函数$f_K(n)$为：</p>
<p>$$\displaystyle f_K(n)=\frac{\alpha(n)-1}{(p(n))^K}$$</p>
<p>再定义$\overline{f_K}$为：</p>
<p>$$\displaystyle \overline{f_K}=\lim_{N \to \infty} \frac{1}{N}\sum_{n=2}^{N} f_K(n)$$</p>
<p>可以验证，$\overline{f_1} \approx 0.282419756159$。</p>
<p>求$\displaystyle \sum_{K=1}^{\infty}\overline{f_K}$，并将你的答案保留$12$位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 78</title>
    <url>/78/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-78"><a href="#Problem-78" class="headerlink" title="Problem 78"></a><a href="https://projecteuler.net/problem=78">Problem 78</a></h1><hr>
<h2 id="Coin-Partitions"><a href="#Coin-Partitions" class="headerlink" title="Coin Partitions"></a><strong>Coin Partitions</strong></h2><p>Let $p(n)$ represent the number of different ways in which $n$ coins can be separated into piles. For example, five coins can separated into piles in exactly seven different ways, so $p(5)=7$.</p>
<p>$$<br>\begin{aligned}<br>&amp;\text{OOOOO}\\<br>&amp;\text{OOOO   O}\\<br>&amp;\text{OOO   OO}\\<br>&amp;\text{OOO   O   O}\\<br>&amp;\text{OO   OO   O}\\<br>&amp;\text{OO   O   O   O}\\<br>&amp;\text{O   O   O   O   O}<br>\end{aligned}<br>$$</p>
<p>Find the least value of $n$ for which $p(n)$ is divisible by one million.</p>
<hr>
<h2 id="硬币分拆"><a href="#硬币分拆" class="headerlink" title="硬币分拆"></a><strong>硬币分拆</strong></h2><p>记$p(n)$是将$n$枚硬币分拆成堆的不同方式数。例如，$5$枚硬币分拆成堆有$7$种的不同方式，因此$p(5)=7$。</p>
<p>$$<br>\begin{aligned}<br>&amp;\text{OOOOO}\\<br>&amp;\text{OOOO   O}\\<br>&amp;\text{OOO   OO}\\<br>&amp;\text{OOO   O   O}\\<br>&amp;\text{OO   OO   O}\\<br>&amp;\text{OO   O   O   O}\\<br>&amp;\text{O   O   O   O   O}<br>\end{aligned}<br>$$</p>
<p>求最小的使$p(n)$能被一百万整除的$n$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 780</title>
    <url>/780/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-780"><a href="#Problem-780" class="headerlink" title="Problem 780"></a><a href="https://projecteuler.net/problem=780">Problem 780</a></h1><hr>
<h2 id="Toriangulations"><a href="#Toriangulations" class="headerlink" title="Toriangulations"></a><strong>Toriangulations</strong></h2><p>For positive real numbers $a,b$, an $a\times b$ <i>torus</i> is a rectangle of width $a$ and height $b$, with left and right sides identified, as well as top and bottom sides identified. In other words, when tracing a path on the rectangle, reaching an edge results in “wrapping round” to the corresponding point on the opposite edge.</p>
<p>A <i>tiling</i> of a torus is a way to dissect it into equilateral triangles of edge length $1$. For example, the following three diagrams illustrate respectively a $1\times \frac{\sqrt{3}}{2}$ torus with two triangles, a $\sqrt{3}\times 1$ torus with four triangles, and an approximately $2.8432\times 2.1322$ torus with fourteen triangles:</p>
<p><img src="/resources/images/0780_sample-small-1.png" alt=""><br><img src="/resources/images/0780_sample-small-2.png" alt=""><br><img src="/resources/images/0780_sample-small-3.png" alt=""></p>
<p>Two tilings of an $a\times b$ torus are called <i>equivalent</i> if it is possible to obtain one from the other by continuously moving all triangles so that no gaps appear and no triangles overlap at any stage during the movement. For example, the animation below shows an equivalence between two tilings:</p>
<p><img src="/resources/images/0780_animation.gif" alt=""></p>
<p>Let $F(n)$ be the total number of non-equivalent tilings of all possible tori with exactly $n$ triangles. For example, $F(6)=8$, with the eight non-equivalent tilings with six triangles listed below:</p>
<p><img src="/resources/images/0780_t6-all.png" alt=""></p>
<p>Let $G(N)=\sum_{n=1}^N F(n)$. You are given that $G(6)=14$, $G(100)=8090$, and $G(10^5)\equiv 645124048 \pmod{1\ 000\ 000\ 007}$.</p>
<p>Find $G(10^9)$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="环面三角形平铺"><a href="#环面三角形平铺" class="headerlink" title="环面三角形平铺"></a><strong>环面三角形平铺</strong></h2><p>对于正实数$a$和$b$，一个$a\times b$<i class=zh>环面</i>是将一个宽为$a$、高为$b$的长方形的左右两边和上下两边分别接合构成的图形。换言之，如果在这个长方形上移动，每当碰到一条边时，就会“穿越”到其相对边的同一位置。</p>
<p>环面上的一种<i class=zh>平铺</i>是指将换面分割为边长为$1$的等边三角形的一种方式。例如，下面三张图分别展示了一个$1\times \frac{\sqrt{3}}{2}$环面用两个三角形平铺，一个$\sqrt{3}\times 1$环面用四个三角形平铺，和一个约$2.8432\times 2.1322$环面用十四个三角形平铺：</p>
<p><img src="/resources/images/0780_sample-small-1.png" alt=""><br><img src="/resources/images/0780_sample-small-2.png" alt=""><br><img src="/resources/images/0780_sample-small-3.png" alt=""></p>
<p>在$a\times b$环面上，如果两种平铺可以通过连续、不留空隙、不相互覆盖地移动所有三角形相互转化，则认为这两种平铺是<i class=zh>等价</i>的。例如，如下动画展示了如何将一种平铺转化为等价的另一种平铺：</p>
<p><img src="/resources/images/0780_animation.gif" alt=""></p>
<p>记$F(n)$为所有使用$n$个三角形且互不等价的平铺的数量。例如，$F(6)=8$，而这八种使用了六个三角形且互不等价的平铺如下图所示：</p>
<p><img src="/resources/images/0780_t6-all.png" alt=""></p>
<p>记$G(N)=\sum_{n=1}^N F(n)$。已知$G(6)=14$，$G(100)=8090$，$G(10^5)\equiv 645124048 \pmod{1\ 000\ 000\ 007}$。</p>
<p>求$G(10^9)$，并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 781</title>
    <url>/781/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-781"><a href="#Problem-781" class="headerlink" title="Problem 781"></a><a href="https://projecteuler.net/problem=781">Problem 781</a></h1><hr>
<h2 id="Feynman-Diagrams"><a href="#Feynman-Diagrams" class="headerlink" title="Feynman Diagrams"></a><strong>Feynman Diagrams</strong></h2><p>Let $F(n)$ be the number of connected graphs with blue edges (directed) and red edges (undirected) containing:</p>
<ul>
<li>two vertices of degree $1$, one with a single outgoing blue edge and the other with a single incoming blue edge.</li>
<li>$n$ vertices of degree $3$, each of which has an incoming blue edge, a <b>different</b> outgoing blue edge and a red edge.</li>
</ul>
<p>For example, $F(4)=5$ because there are $5$ graphs with these properties:</p>
<p><img src="/resources/images/0781_feynman_diagrams.jpg" alt=""></p>
<p>You are also given $F(8)=319$.</p>
<p>Find $F(50\ 000)$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<p>NOTE: Feynman diagrams are a way of visualising the forces between elementary particles. Vertices represent interactions. The blue edges in our diagrams represent matter particles (e.g. electrons or positrons) with the arrow representing the flow of charge. The red edges (normally wavy lines) represent the force particles (e.g. photons). Feynman diagrams are used to predict the strength of particle interactions.</p>
<hr>
<h2 id="费曼图"><a href="#费曼图" class="headerlink" title="费曼图"></a><strong>费曼图</strong></h2><p>考虑由蓝色边（有向）和红色边（无向）组成的连通图，记$F(n)$为其中满足如下条件的图的数目：</p>
<ul>
<li>有两个度为$1$的顶点，其中一个只有一条蓝色出边，另一个只有一条蓝色入边。</li>
<li>有$n$个度为$3$的顶点，每一个均有一条蓝色入边，<b>另一条</b>蓝色出边，和一条红边。</li>
</ul>
<p>例如，$F(4)=5$，因为有$5$种满足上述条件的图：</p>
<p><img src="/resources/images/0781_feynman_diagrams.jpg" alt=""></p>
<p>已知$F(8)=319$。</p>
<p>求$F(50\ 000)$，并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<p>注：费曼图是一种形象化展示基本粒子之间相互作用的方法，其中：顶点代表相互作用；蓝色边代表实物粒子（例如电子和正电子），其方向表示电荷的移动方向；红色边（通常用曲线表示）代表力场粒子（例如光子）。费曼图通常用于预测粒子间相互作用的强度。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 782</title>
    <url>/782/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-782"><a href="#Problem-782" class="headerlink" title="Problem 782"></a><a href="https://projecteuler.net/problem=782">Problem 782</a></h1><hr>
<h2 id="Distinct-Rows-and-Columns"><a href="#Distinct-Rows-and-Columns" class="headerlink" title="Distinct Rows and Columns"></a><strong>Distinct Rows and Columns</strong></h2><p>The <i>complexity</i> of an $n\times n$ binary matrix is the number of distinct rows and columns.</p>
<p>For example, consider the $3\times 3$ matrices<br>$$        \mathbf{A} = \begin{pmatrix} 1 &amp; 0 &amp; 1\\0 &amp; 0 &amp; 0\\1 &amp; 0 &amp; 1\end{pmatrix}    \quad<br>        \mathbf{B} = \begin{pmatrix} 0 &amp; 0 &amp; 0\\0 &amp; 0 &amp; 0\\1 &amp; 1 &amp; 1\end{pmatrix}    $$<br>$\mathbf{A}$ has complexity $2$ because the set of rows and columns is ${000,101}$.<br /><br>$\mathbf{B}$ has complexity $3$ because the set of rows and columns is ${000,001,111}$.</p>
<p>For $0 \le k \le n^2$, let $c(n, k)$ be the <b>minimum</b> complexity of an $n\times n$ binary matrix with exactly $k$ ones.</p>
<p>Let<br>$$C(n) = \sum_{k=0}^{n^2} c(n, k)$$<br>For example, $C(2) = c(2, 0) + c(2, 1) + c(2, 2) + c(2, 3) + c(2, 4) = 1 + 2 + 2 + 2 + 1 = 8$.<br /><br>You are given $C(5) = 64$, $C(10) = 274$ and $C(20) = 1150$.</p>
<p>Find $C(10^4)$.</p>
<hr>
<h2 id="不同的行与列"><a href="#不同的行与列" class="headerlink" title="不同的行与列"></a><strong>不同的行与列</strong></h2><p>对于一个$n\times n$的$01$矩阵，其<i class=zh>复杂度</i>等于其不同的行与列的数量。</p>
<p>例如，考虑如下的$3\times 3$矩阵<br>$$        \mathbf{A} = \begin{pmatrix} 1 &amp; 0 &amp; 1\\0 &amp; 0 &amp; 0\\1 &amp; 0 &amp; 1\end{pmatrix}    \quad<br>        \mathbf{B} = \begin{pmatrix} 0 &amp; 0 &amp; 0\\0 &amp; 0 &amp; 0\\1 &amp; 1 &amp; 1\end{pmatrix}    $$<br>$\mathbf{A}$的复杂度为$2$，因为它不同的行与列构成的集合为${000,101}$。<br /><br>$\mathbf{B}$的复杂度为$3$，因为它不同的行与列构成的集合为${000,001,111}$。</p>
<p>对于$0 \le k \le n^2$，记$c(n, k)$为$n\times n$的$01$矩阵中，包含恰好$k$个$1$的此类矩阵的<b>最小</b>复杂度。</p>
<p>记<br>$$C(n) = \sum_{k=0}^{n^2} c(n, k)$$<br>例如，$C(2) = c(2, 0) + c(2, 1) + c(2, 2) + c(2, 3) + c(2, 4) = 1 + 2 + 2 + 2 + 1 = 8$。<br/><br>已知$C(5) = 64$，$C(10) = 274$，$C(20) = 1150$。</p>
<p>求$C(10^4)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 783</title>
    <url>/783/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-783"><a href="#Problem-783" class="headerlink" title="Problem 783"></a><a href="https://projecteuler.net/problem=783">Problem 783</a></h1><hr>
<h2 id="Urns"><a href="#Urns" class="headerlink" title="Urns"></a><strong>Urns</strong></h2><p>Given $n$ and $k$ two positive integers we begin with an urn that contains $kn$ white balls. We then proceed through $n$ turns where on each turn $k$ black balls are added to the urn and then $2k$ random balls are removed from the urn.</p>
<p>We let $B_t(n,k)$ be the number of black balls that are removed on turn $t$.</p>
<p>Further define $E(n,k)$ as the expectation of $\displaystyle \sum_{t=1}^n B_t(n,k)^2$.</p>
<p>You are given $E(2,2) = 9.6$</p>
<p>Find $E(10^6,10)$. Round your answer to the nearest whole number.</p>
<hr>
<h2 id="罐子"><a href="#罐子" class="headerlink" title="罐子"></a><strong>罐子</strong></h2><p>对于给定的正整数$n$和$k$，考虑一个一开始装有$kn$个白球的罐子。在之后的$n$轮中，每一轮我们向罐中加入$k$个黑球，再随机拿出$2k$个任意颜色的球，</p>
<p>记$B_t(n,k)$为在第$t$轮拿出的黑球的数目。</p>
<p>再记$E(n,k)$为$\displaystyle \sum_{t=1}^n B_t(n,k)^2$的期望值。</p>
<p>已知$E(2,2) = 9.6$。</p>
<p>求$E(10^6,10)$，并将你的答案四舍五入至整数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 784</title>
    <url>/784/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-784"><a href="#Problem-784" class="headerlink" title="Problem 784"></a><a href="https://projecteuler.net/problem=784">Problem 784</a></h1><hr>
<h2 id="Reciprocal-Pairs"><a href="#Reciprocal-Pairs" class="headerlink" title="Reciprocal Pairs"></a><strong>Reciprocal Pairs</strong></h2><p>Let’s call a pair of positive integers $p$, $q$ ($p \lt q$) <i>reciprocal</i>, if there is a positive integer $r\lt p$ such that $r$ equals both the inverse of $p$ modulo $q$ and the inverse of $q$ modulo $p$.</p>
<p>For example, $(3,5)$ is one reciprocal pair for $r=2$. <br /><br>Let $F(N)$ be the total sum of $p+q$ for all reciprocal pairs $(p,q)$ where $p \le N$.</p>
<p>$F(5)=59$ due to these four reciprocal pairs $(3,5)$, $(4,11)$, $(5,7)$ and $(5,19)$. <br /><br>You are also given $F(10^2) = 697317$.</p>
<p>Find $F(2\cdot 10^6)$.</p>
<hr>
<h2 id="模倒数对"><a href="#模倒数对" class="headerlink" title="模倒数对"></a><strong>模倒数对</strong></h2><p>对于正整数$p$和$q$（满足$p \lt q$），若存在正整数$r \lt p$使得$r$同时是$p$同余$q$的逆元和$q$同余$p$的逆元，则称这两个正整数互为<i class=zh>模倒数</i>。</p>
<p>例如，$(3,5)$是一组模倒数对，其对应的$r=2$。<br /><br>对所有满足$p\le N$的模倒数对$(p,q)$，记$F(N)$为所有$p+q$之和。</p>
<p>例如，$F(5)=59$，因为共有四组模倒数对$(3,5)$、$(4,11)$、$(5,7)$和$(5,19)$。<br /><br>已知$F(10^2) = 697317$。</p>
<p>求$F(2\cdot 10^6)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 785</title>
    <url>/785/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-785"><a href="#Problem-785" class="headerlink" title="Problem 785"></a><a href="https://projecteuler.net/problem=785">Problem 785</a></h1><hr>
<h2 id="Symmetric-Diophantine-equation"><a href="#Symmetric-Diophantine-equation" class="headerlink" title="Symmetric Diophantine equation"></a><strong>Symmetric Diophantine equation</strong></h2><p>Consider the following Diophantine equation:<br>$$15  (x^2 + y^2 + z^2) = 34  (xy + yz + zx)$$<br>where $x$, $y$ and $z$ are positive integers.</p>
<p>Let $S(N)$ be the sum of all solutions, $(x,y,z)$, of this equation such that, $1 \le x \le y \le z \le N$ and $\gcd(x, y, z) = 1$.</p>
<p>For $N = 10^2$, there are three such solutions - $(1, 7, 16), (8, 9, 39), (11, 21, 72)$. So $S(10^2) = 184$.</p>
<p>Find $S(10^9)$.</p>
<hr>
<h2 id="对称丢番图方程"><a href="#对称丢番图方程" class="headerlink" title="对称丢番图方程"></a><strong>对称丢番图方程</strong></h2><p>考虑如下丢番图方程：<br>$$15  (x^2 + y^2 + z^2) = 34  (xy + yz + zx)$$<br>其中$x$、$y$、$z$均为正整数。</p>
<p>对于上述方程满足$1 \le x \le y \le z \le N$和$\gcd(x, y, z) = 1$的解$(x,y,z)$，记$S(N)$为所有这些解之和。</p>
<p>对于$N = 10^2$，共有三组这样的解：$(1, 7, 16), (8, 9, 39), (11, 21, 72)$，因此$S(10^2) = 184$。</p>
<p>求$S(10^9)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 786</title>
    <url>/786/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-786"><a href="#Problem-786" class="headerlink" title="Problem 786"></a><a href="https://projecteuler.net/problem=786">Problem 786</a></h1><hr>
<h2 id="Billiard"><a href="#Billiard" class="headerlink" title="Billiard"></a><strong>Billiard</strong></h2><p>The following diagram shows a billiard table of a special quadrilateral shape. The four angles $A, B, C, D$ are $120^\circ, 90^\circ, 60^\circ, 90^\circ$ respectively, and the lengths $AB$ and $AD$ are equal.</p>
<p><img src="/resources/images/0786_billiard_shape.jpg" alt=""></p>
<p>The diagram on the left shows the trace of an infinitesimally small billiard ball, departing from point $A$, bouncing twice on the edges of the table, and finally returning back to point $A$. The diagram on the right shows another such trace, but this time bouncing eight times:</p>
<p><img src="/resources/images/0786_billiard_traces.jpg" alt=""></p>
<p>The table has no friction and all bounces are perfect elastic collisions.<br>Note that no bounce should happen on any of the corners, as the behaviour would be unpredictable.</p>
<p>Let $B(N)$ be the number of possible traces of the ball, departing from point $A$, bouncing at most $N$ times on the edges and returning back to point $A$.</p>
<p>For example, $B(10) = 6$, $B(100) = 478$, $B(1000) = 45790$.</p>
<p>Find $B(10^9)$.</p>
<hr>
<h2 id="台球"><a href="#台球" class="headerlink" title="台球"></a><strong>台球</strong></h2><p>下图展示了一张特别的四边形台球桌。其四个角$A, B, C, D$分别为$120^\circ, 90^\circ, 60^\circ, 90^\circ$，且边$AB$和$AD$等长。</p>
<p><img src="/resources/images/0786_billiard_shape.jpg" alt=""></p>
<p>下图左侧展示了由$A$点出发的一颗任意小的台球，沿桌边反弹两次后回到$A$点的路径。下图右侧则展示了另一条从$A$点出发反弹八次回到起点的路径。</p>
<p><img src="/resources/images/0786_billiard_traces.jpg" alt=""></p>
<p>假设桌面没有摩擦，且每次反弹均是完美碰撞。<br>注意反弹不能发生在任意一个角上，因为此时台球的运动行为将会无法预测。</p>
<p>记$B(N)$为台球从$A$点出发，反弹至多$N$次后返回$A$点的所有可能的路径数目。</p>
<p>例如，$B(10) = 6$，$B(100) = 478$，$B(1000) = 45790$。</p>
<p>求$B(10^9)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 787</title>
    <url>/787/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-787"><a href="#Problem-787" class="headerlink" title="Problem 787"></a><a href="https://projecteuler.net/problem=787">Problem 787</a></h1><hr>
<h2 id="Bezout’s-Game"><a href="#Bezout’s-Game" class="headerlink" title="Bézout’s Game"></a><strong>Bézout’s Game</strong></h2><p>Two players play a game with two piles of stones. They take alternating turns. If there are currently $a$ stones in the first pile and $b$ stones in the second, a turn consists of removing $c\ge 0$ stones from the first pile and $d\ge 0$ from the second in such a way that $ad-bc=\pm1$. The winner is the player who first empties one of the piles.</p>
<p>Note that the game is only playable if the sizes of the two piles are coprime.</p>
<p>A game state $(a, b)$ is a winning position if the next player can guarantee a win with optimal play. Define $H(N)$ to be the number of winning positions $(a, b)$ with $\gcd(a,b)=1$, $a &gt; 0$, $b &gt; 0$ and $a+b \leq N$. Note the order matters, so for example $(2,1)$ and $(1,2)$ are distinct positions.</p>
<p>You are given $H(4)=5$ and $H(100)=2043$.</p>
<p>Find $H(10^9)$.</p>
<hr>
<h2 id="裴蜀游戏"><a href="#裴蜀游戏" class="headerlink" title="裴蜀游戏"></a><strong>裴蜀游戏</strong></h2><p>两名玩家正在用两堆石子玩游戏。他们轮流行动，若当前第一堆有$a$枚石子而第二堆有$b$枚，则这一轮的玩家可以从第一堆移除$c \ge 0$枚石子并从第二堆移除$d \ge 0$枚石子且满足$ad-bc=\pm 1$。首先将其中一堆石子清空的玩家获胜。</p>
<p>注意这个游戏只有在两堆石子的数目互质时才能进行。</p>
<p>若玩家面对游戏状态$(a,b)$时按照最优策略必定获胜，则称该游戏状态为必胜态。记$H(N)$为满足$\gcd(a,b)=1$，$a&gt;0$，$b&gt;0$和$a+b \leq N$的必胜态$(a,b)$的数目。在计算数目时需要注意顺序，例如$(2,1)$和$(1,2)$应视为不同的游戏状态。</p>
<p>已知$H(4)=5$和$H(100)=2043$。</p>
<p>求$H(10^9)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 789</title>
    <url>/789/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-789"><a href="#Problem-789" class="headerlink" title="Problem 789"></a><a href="https://projecteuler.net/problem=789">Problem 789</a></h1><hr>
<h2 id="Minimal-pairing-modulo-p"><a href="#Minimal-pairing-modulo-p" class="headerlink" title="Minimal pairing modulo $p$"></a><strong>Minimal pairing modulo $p$</strong></h2><p>Given an odd prime $p$, put the numbers $1, \ldots, p-1$ into $\frac{p-1}{2}$ pairs such that each number appears exactly once. Each pair $(a,b)$ has a cost of $ab \bmod p$. For example, if $p=5$ the pair $(3,4)$ has a cost of $12 \bmod 5 = 2$.</p>
<p>The <i>total cost</i> of a pairing is the sum of the costs of its pairs. We say that such pairing is optimal if its total cost is minimal for that $p$.</p>
<p>For example, if $p = 5$, then there is a unique optimal pairing: $(1, 2), (3, 4)$, with total cost of $2 + 2 = 4$.</p>
<p>The <i>cost product</i> of a pairing is the product of the costs of its pairs. For example, the cost product of the optimal pairing for $p = 5$ is $2 \cdot 2 = 4$.</p>
<p>It turns out that all optimal pairings for $p = 2\ 000\ 000\ 011$ have the same cost product.</p>
<p>Find the value of this product.</p>
<hr>
<h2 id="模-p-余数的最优配对"><a href="#模-p-余数的最优配对" class="headerlink" title="模$p$余数的最优配对"></a><strong>模$p$余数的最优配对</strong></h2><p>对于给定的奇质数$p$，将整数$1, \ldots, p-1$分成$\frac{p-1}{2}$对并保证每个整数只出现一次。每一对$(a,b)$的成本为$ab \bmod p$。例如，若$p=5$，那么整数对$(3,4)$的成本为$12 \bmod 5 = 2$。</p>
<p>一组配对的<i class=zh>总成本</i>是其中每一整数对的成本之和。对于$p$，我们称总成本最小的配对为最优配对。</p>
<p>例如，若$p = 5$，存在唯一的最优配对$(1, 2), (3, 4)$，其总成本为$2 + 2 = 4$。</p>
<p>一组配对的<i class=zh>成本积</i>是其中每一整数对的成本的乘积。例如，上述$p=5$的最优配对的成本积是$2 \cdot 2 = 4$。</p>
<p>已知$p = 2\ 000\ 000\ 011$的所有最优配对都有相同的成本积。</p>
<p>求该成本积的值。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 788</title>
    <url>/788/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-788"><a href="#Problem-788" class="headerlink" title="Problem 788"></a><a href="https://projecteuler.net/problem=788">Problem 788</a></h1><hr>
<h2 id="Dominating-Numbers"><a href="#Dominating-Numbers" class="headerlink" title="Dominating Numbers"></a><strong>Dominating Numbers</strong></h2><p>A <i>dominating number</i> is a positive integer that has more than half of its digits equal.</p>
<p>For example, $2022$ is a dominating number because three of its four digits are equal to $2$. But $2021$ is not a dominating number.</p>
<p>Let $D(N)$ be how many dominating numbers are less than $10^N$. For example, $D(4) = 603$ and $D(10) = 21893256$.</p>
<p>Find $D(2022)$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="支配数"><a href="#支配数" class="headerlink" title="支配数"></a><strong>支配数</strong></h2><p><i class=zh>支配数</i>是指有一半以上数字相同的正整数。</p>
<p>例如，$2022$是支配数，因为其四个数字中有三个是$2$。反之，$2021$不是一个支配数。</p>
<p>记$D(N)$为小于$10^N$的支配数的数目。例如，$D(4) = 603$，$D(10) = 21893256$。</p>
<p>求$D(2022)$，并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 79</title>
    <url>/79/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-79"><a href="#Problem-79" class="headerlink" title="Problem 79"></a><a href="https://projecteuler.net/problem=79">Problem 79</a></h1><hr>
<h2 id="Passcode-Derivation"><a href="#Passcode-Derivation" class="headerlink" title="Passcode Derivation"></a><strong>Passcode Derivation</strong></h2><p>A common security method used for online banking is to ask the user for three random characters from a passcode. For example, if the passcode was $531278$, they may ask for the $2$nd, $3$rd, and $5$th characters; the expected reply would be: $317$.</p>
<p>The text file, <a href="https://projecteuler.net/project/resources/p079_keylog.txt">keylog.txt</a>, contains fifty successful login attempts.</p>
<p>Given that the three characters are always asked for in order, analyse the file so as to determine the shortest possible secret passcode of unknown length.</p>
<hr>
<h2 id="密码推断"><a href="#密码推断" class="headerlink" title="密码推断"></a><strong>密码推断</strong></h2><p>网上银行常用的一种密保手段是向用户询问密码中的随机三位字符。例如，如果密码是$531278$，询问第$2$、$3$、$5$位字符时，正确的回答应当是$317$。</p>
<p>在文本文件<a href="https://projecteuler.net/project/resources/p079_keylog.txt">keylog.txt</a>中包含了$50$次成功登陆的正确回答。</p>
<p>假设三个字符总是按顺序询问的，分析这个文本文件并求出最短的密码。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 790</title>
    <url>/790/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-790"><a href="#Problem-790" class="headerlink" title="Problem 790"></a><a href="https://projecteuler.net/problem=790">Problem 790</a></h1><hr>
<h2 id="Clock-Grid"><a href="#Clock-Grid" class="headerlink" title="Clock Grid"></a><strong>Clock Grid</strong></h2><p>There is a grid of length and width $50515093$ points. A clock is placed on each grid point. The clocks are all analogue showing a single hour hand initially pointing at $12$.</p>
<p>A sequence $S_t$ is created where:<br>$$<br>\begin{aligned}<br>S_0 &amp; = 290797 &amp;\\<br>S_t &amp; = S_{t-1}^2 \bmod 50515093 &amp; t&gt;0<br>\end{aligned}<br>$$<br>The four numbers $N_t = (S_{4t-4}, S_{4t-3}, S_{4t-2}, S_{4t-1})$ represent a range within the grid, with the first pair of numbers representing the x-bounds and the second pair representing the y-bounds. For example, if $N_t = (3,9,47,20)$, the range would be $3\le x\le 9$ and $20\le y\le47$, and would include $196$ clocks.</p>
<p>For each $t$ $(t&gt;0)$, the clocks within the range represented by $N_t$ are moved to the next hour $12\rightarrow 1\rightarrow 2\rightarrow \cdots $.</p>
<p>We define $C(t)$ to be the sum of the hours that the clock hands are pointing to after timestep $t$.<br>You are given $C(0) = 30621295449583788$, $C(1) =  30613048345941659$, $C(10) = 21808930308198471$ and $C(100) = 16190667393984172$.</p>
<p>Find $C(10^5)$.</p>
<hr>
<h2 id="时钟格阵"><a href="#时钟格阵" class="headerlink" title="时钟格阵"></a><strong>时钟格阵</strong></h2><p>考虑一个长和宽均包含$50515093$个点的格阵，每个格点上都放置有一台时钟。所有的时钟盘面上都只包含一根时针，且在开始时时针均指向$12$。</p>
<p>序列$S_t$按如下方式定义：<br>$$<br>\begin{aligned}<br>S_0 &amp; = 290797 &amp;\\<br>S_t &amp; = S_{t-1}^2 \bmod 50515093 &amp; t&gt;0<br>\end{aligned}<br>$$<br>四个数$N_t = (S_{4t-4}, S_{4t-3}, S_{4t-2}, S_{4t-1})$代表了格阵的一部分，其中第一对数表示横轴的范围，第二对数表示纵轴的范围。例如，若$N_t = (3,9,47,20)$，相应的格阵范围满足$3\le x\le 9$和$20\le y\le47$，其中包含$196$个时钟。</p>
<p>对于每个$t$ $(t&gt;0)$，包含在上述由$N_t$描述的格阵范围内的所有时钟均往后拨一小时，也即$12\rightarrow 1\rightarrow 2\rightarrow \cdots $。</p>
<p>记$C(t)$为经过第$t$步后，所有时钟时针所指向的数之和。<br>已知$C(0) = 30621295449583788$，$C(1) =  30613048345941659$，$C(10) = 21808930308198471$，$C(100) = 16190667393984172$。</p>
<p>求$C(10^5)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 792</title>
    <url>/792/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-792"><a href="#Problem-792" class="headerlink" title="Problem 792"></a><a href="https://projecteuler.net/problem=792">Problem 792</a></h1><hr>
<h2 id="Too-Many-Twos"><a href="#Too-Many-Twos" class="headerlink" title="Too Many Twos"></a><strong>Too Many Twos</strong></h2><p>We define $\nu_2(n)$ to be the largest integer $r$ such that $2^r$ divides $n$. For example, $\nu_2(24) = 3$.</p>
<p>Define $\displaystyle S(n)  = \sum_{k = 1}^n (-2)^k\binom{2k}k$ and $u(n) = \nu_2\Big(3S(n)+4\Big)$.</p>
<p>For example, when $n = 4$ then $S(4) = 980$ and $3S(4) + 4 = 2944 = 2^7 \cdot 23$, hence $u(4) = 7$.<br /><br>You are also given $u(20) = 24$.</p>
<p>Also define $\displaystyle U(N) = \sum_{n = 1}^N u(n^3)$. You are given $U(5) = 241$.</p>
<p>Find $U(10^4)$.</p>
<hr>
<h2 id="太多个二"><a href="#太多个二" class="headerlink" title="太多个二"></a><strong>太多个二</strong></h2><p>记$\nu_2(n)$为使得$2^r$整除$n$的最大整数$r$。例如，$\nu_2(24) = 3$。</p>
<p>定义函数$\displaystyle S(n)  = \sum_{k = 1}^n (-2)^k\binom{2k}k$和$u(n) = \nu_2\Big(3S(n)+4\Big)$。</p>
<p>例如，当$n = 4$时，有$S(4) = 980$，$3S(4) + 4 = 2944 = 2^7 \cdot 23$，因此$u(4) = 7$。<br /><br>已知$u(20) = 24$。</p>
<p>再定义函数$\displaystyle U(N) = \sum_{n = 1}^N u(n^3)$。已知$U(5) = 241$。</p>
<p>求$U(10^4)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 791</title>
    <url>/791/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-791"><a href="#Problem-791" class="headerlink" title="Problem 791"></a><a href="https://projecteuler.net/problem=791">Problem 791</a></h1><hr>
<h2 id="Average-and-Variance"><a href="#Average-and-Variance" class="headerlink" title="Average and Variance"></a><strong>Average and Variance</strong></h2><p>Denote the average of $k$ numbers $x_1, …, x_k$ by $\bar{x} = \frac{1}{k} \sum_i x_i$. Their variance is defined as $\frac{1}{k} \sum_i \left( x_i - \bar{x} \right) ^ 2$.</p>
<p>Let $S(n)$ be the sum of all quadruples of integers $(a,b,c,d)$ satisfying $1 \leq a \leq b \leq c \leq d \leq n$ such that their average is exactly twice their variance.</p>
<p>For $n=5$, there are $5$ such quadruples, namely: $(1, 1, 1, 3), (1, 1, 3, 3), (1, 2, 3, 4), (1, 3, 4, 4), (2, 2, 3, 5)$.</p>
<p>Hence $S(5)=48$. You are also given $S(10^3)=37048340$.</p>
<p>Find $S(10^8)$. Give your answer modulo $433494437$.</p>
<hr>
<h2 id="均值与方差"><a href="#均值与方差" class="headerlink" title="均值与方差"></a><strong>均值与方差</strong></h2><p>记$k$个数$x_1, …, x_k$的均值为$\bar{x} = \frac{1}{k} \sum_i x_i$，并记其方差为$\frac{1}{k} \sum_i \left( x_i - \bar{x} \right) ^ 2$。</p>
<p>考虑所有满足$1 \leq a \leq b \leq c \leq d \leq n$的整数四元组$(a,b,c,d)$，记$S(n)$为其中均值恰好为方差两倍的四元组之和。</p>
<p>对于$n=5$，共有$5$个满足上述条件的四元组，分别是$(1, 1, 1, 3), (1, 1, 3, 3), (1, 2, 3, 4), (1, 3, 4, 4), (2, 2, 3, 5)$。</p>
<p>因此，$S(5)=48$。已知$S(10^3)=37048340$。</p>
<p>求$S(10^8)$，并将你的答案对$433494437$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 793</title>
    <url>/793/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-793"><a href="#Problem-793" class="headerlink" title="Problem 793"></a><a href="https://projecteuler.net/problem=793">Problem 793</a></h1><hr>
<h2 id="Median-of-Products"><a href="#Median-of-Products" class="headerlink" title="Median of Products"></a><strong>Median of Products</strong></h2><p>Let $S_i$ be an integer sequence produced with the following pseudo-random number generator:</p>
<ul>
<li>$S_0 = 290797$</li>
<li>$S_{i+1} = S_i ^2 \bmod 50515093$</li>
</ul>
<p>Let $M(n)$ be the median of the pairwise products $ S_i S_j $ for $0 \le i \lt j \lt n$.</p>
<p>You are given $M(3) = 3878983057768$ and $M(103) = 492700616748525$.</p>
<p>Find $M(1\ 000\ 003)$.</p>
<hr>
<h2 id="乘积的中位数"><a href="#乘积的中位数" class="headerlink" title="乘积的中位数"></a><strong>乘积的中位数</strong></h2><p>记$S_i$为由如下伪随机数生成器给出的整数列：</p>
<ul>
<li>$S_0 = 290797$</li>
<li>$S_{i+1} = S_i ^2 \bmod 50515093$</li>
</ul>
<p>对于任意$0 \le i \lt j \lt n$，记$M(n)$为所有乘积$ S_i S_j $的中位数。</p>
<p>已知$M(3) = 3878983057768$，$M(103) = 492700616748525$。</p>
<p>求$M(1\ 000\ 003)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 795</title>
    <url>/795/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-795"><a href="#Problem-795" class="headerlink" title="Problem 795"></a><a href="https://projecteuler.net/problem=795">Problem 795</a></h1><hr>
<h2 id="Alternating-GCD-Sum"><a href="#Alternating-GCD-Sum" class="headerlink" title="Alternating GCD Sum"></a><strong>Alternating GCD Sum</strong></h2><p>For a positive integer $n$, the function $g(n)$ is defined as</p>
<p>$$\displaystyle g(n)=\sum_{i=1}^{n} (-1)^i \gcd \left(n,i^2\right)$$</p>
<p>For example, $g(4) = -\gcd \left(4,1^2\right) + \gcd \left(4,2^2\right) - \gcd \left(4,3^2\right) + \gcd \left(4,4^2\right) = -1+4-1+4=6$.<br /><br>You are also given $g(1234)=1233$.</p>
<p>Let $\displaystyle G(N) = \sum_{n=1}^N g(n)$. You are given $G(1234) = 2194708$.</p>
<p>Find $G(12345678)$.</p>
<hr>
<h2 id="交错最小公约数求和"><a href="#交错最小公约数求和" class="headerlink" title="交错最小公约数求和"></a><strong>交错最小公约数求和</strong></h2><p>对于正整数$n$，定义函数$g(n)$为</p>
<p>$$\displaystyle g(n)=\sum_{i=1}^{n} (-1)^i \gcd \left(n,i^2\right)$$</p>
<p>例如，$g(4) = -\gcd \left(4,1^2\right) + \gcd \left(4,2^2\right) - \gcd \left(4,3^2\right) + \gcd \left(4,4^2\right) = -1+4-1+4=6$。<br /><br>已知$g(1234)=1233$。</p>
<p>记$\displaystyle G(N) = \sum_{n=1}^N g(n)$。已知$G(1234) = 2194708$。</p>
<p>求$G(12345678)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 794</title>
    <url>/794/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-794"><a href="#Problem-794" class="headerlink" title="Problem 794"></a><a href="https://projecteuler.net/problem=794">Problem 794</a></h1><hr>
<h2 id="Seventeen-Points"><a href="#Seventeen-Points" class="headerlink" title="Seventeen Points"></a><strong>Seventeen Points</strong></h2><p>This problem uses half open interval notation where $[a,b)$ represents $a \le x \lt b$.</p>
<p>A real number, $x_1$, is chosen in the interval $[0,1)$.<br /><br>A second real number, $x_2$, is chosen such that each of $[0,\frac{1}{2})$ and $[\frac{1}{2},1)$ contains exactly one of $(x_1, x_2)$.<br /><br>Continue such that on the $n$-th step a real number, $x_n$, is chosen so that each of the intervals $[\frac{k-1}{n}, \frac{k}{n})$ for $k \in {1, …, n}$ contains exactly one of $(x_1, x_2, …, x_n)$.</p>
<p>Define $F(n)$ to be the minimal value of the sum $x_1 + x_2 + … + x_n$ of a tuple $(x_1, x_2, …, x_n)$ chosen by such a procedure. For example, $F(4) = 1.5$ obtained with $(x_1, x_2, x_3, x_4) = (0, 0.75, 0.5, 0.25)$.</p>
<p>Surprisingly, no more than $17$ points can be chosen by this procedure. </p>
<p>Find $F(17)$ and give your answer rounded to $12$ decimal places.</p>
<hr>
<h2 id="十七个点"><a href="#十七个点" class="headerlink" title="十七个点"></a><strong>十七个点</strong></h2><p>本题中使用的左闭右开区间记号$[a,b)$指的是满足$a \le x \lt b$的区间。</p>
<p>在区间$[0,1)$中选择第一个实数$x_1$。<br /><br>再选择第二个实数$x_2$，满足在区间$[0,\frac{1}{2})$和$[\frac{1}{2},1)$上各包含$(x_1, x_2)$中的恰好一个实数。<br /><br>继续这一选择过程，并始终满足在第$n$步时选择实数$x_n$，使得对于$k \in {1, …, n}$，每个区间$[\frac{k-1}{n}, \frac{k}{n})$都各包含$(x_1, x_2, …, x_n)$中的恰好一个实数。</p>
<p>记$F(n)$为根据上述流程选择的元组$(x_1, x_2, …, x_n)$之和$x_1 + x_2 + … + x_n$的最小值。例如，$F(4) = 1.5$，其对应的元组为$(x_1, x_2, x_3, x_4) = (0, 0.75, 0.5, 0.25)$。</p>
<p>令人惊奇的是，上述流程最多只能选择$17$个实数。</p>
<p>求$F(17)$，并将你的答案保留$12$位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 796</title>
    <url>/796/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-796"><a href="#Problem-796" class="headerlink" title="Problem 796"></a><a href="https://projecteuler.net/problem=796">Problem 796</a></h1><hr>
<h2 id="A-Grand-Shuffle"><a href="#A-Grand-Shuffle" class="headerlink" title="A Grand Shuffle"></a><strong>A Grand Shuffle</strong></h2><p>A standard $52$ card deck comprises thirteen ranks in four suits. However, modern decks have two additional Jokers, which neither have a suit nor a rank, for a total of $54$ cards. If we shuffle such a deck and draw cards without replacement, then we would need, on average, approximately $29.05361725$ cards so that we have at least one card for each rank.</p>
<p>Now, assume you have $10$ such decks, each with a different back design. We shuffle all $10 \times 54$ cards together and draw cards without replacement. What is the expected number of cards needed so every suit, rank and deck design have at least one card?</p>
<p>Give your answer rounded to eight places after the decimal point.</p>
<hr>
<h2 id="大洗牌"><a href="#大洗牌" class="headerlink" title="大洗牌"></a><strong>大洗牌</strong></h2><p>一副标准扑克牌包含$52$张点数牌，分为四个花色、十三种点数，另外还会有两张鬼牌（大小王），鬼牌不计花色和点数，共计$54$张牌。如果我们随机洗牌并不放回地抽牌，我们需要抽平均约$29.05361725$张牌才能抽齐每一种点数。</p>
<p>现在假设你有$10$副牌，每一副牌的背面花纹都不同。我们将全部共$10 \times 54$张扑克牌随机洗开，然后不放回地抽牌。为了抽齐每一种花色、点数和背面花纹，平均需要抽多少张牌？</p>
<p>将你的答案保留小数点后八位。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 797</title>
    <url>/797/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-797"><a href="#Problem-797" class="headerlink" title="Problem 797"></a><a href="https://projecteuler.net/problem=797">Problem 797</a></h1><hr>
<h2 id="Cyclogenic-Polynomials"><a href="#Cyclogenic-Polynomials" class="headerlink" title="Cyclogenic Polynomials"></a><strong>Cyclogenic Polynomials</strong></h2><p>A <b>monic polynomial</b> is a single-variable polynomial in which the coefficient of highest degree is equal to $1$.</p>
<p>Define $\mathcal{F}$ to be the set of all monic polynomials with integer coefficients (including the constant polynomial $p(x)=1$). A polynomial $p(x)\in\mathcal{F}$ is <i>cyclogenic</i> if there exists $q(x)\in\mathcal{F}$ and a positive integer $n$ such that $p(x)q(x)=x^n-1$. If $n$ is the smallest such positive integer then $p(x)$ is $n$<i>-cyclogenic</i>.</p>
<p>Define $P_n(x)$ to be the sum of all $n$-cyclogenic polynomials. For example, there exist ten $6$-cyclogenic polynomials (which divide $x^6-1$ and no smaller $x^k-1$):<br>$$\begin{aligned}<br>&amp; x^6-1               &amp; &amp; x^4+x^3-x-1 &amp; &amp; x^3+2x^2+2x+1 &amp; &amp; x^2-x+1\\<br>&amp; x^5+x^4+x^3+x^2+x+1 &amp; &amp; x^4-x^3+x-1 &amp; &amp; x^3-2x^2+2x-1 &amp; &amp; \\<br>&amp; x^5-x^4+x^3-x^2+x-1 &amp; &amp; x^4+x^2+1   &amp; &amp; x^3+1         &amp; &amp; 、、<br>\end{aligned}$$<br>giving<br>$$P_6(x)=x^6+2x^5+3x^4+5x^3+2x^2+5x$$<br>Also define<br>$$Q_N(x)=\sum_{n=1}^N P_n(x)$$<br>It’s given that $Q_{10}(x)=x^{10}+3x^9+3x^8+7x^7+8x^6+14x^5+11x^4+18x^3+12x^2+23x$ and $Q_{10}(2) = 5598$.</p>
<p>Find $Q_{10^7}(2)$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="成圆多项式"><a href="#成圆多项式" class="headerlink" title="成圆多项式"></a><strong>成圆多项式</strong></h2><p><b>首一多项式</b>是指最高次项系数为$1$的单变量多项式。</p>
<p>定义$\mathcal{F}$为所有整系数首一多项式（包括常数多项式$p(x)=1$）构成的集合。对于多项式$p(x)\in\mathcal{F}$，若存在$q(x)\in\mathcal{F}$和正整数$n$使得$p(x)q(x)=x^n-1$，则称$p(x)$为<i class=zh>成圆多项式</i>。若$n$是满足上述条件的最小正整数，则称$p(x)$是$n$<i class=zh>-成圆多项式</i>。</p>
<p>定义$P_n(x)$为所有$n$-成圆多项式的和。例如，总共有十个$6$-成圆多项式（整除$x^6-1$但不整除任意更小的$x^k-1$）：<br>$$\begin{aligned}<br>&amp; x^6-1               &amp; &amp; x^4+x^3-x-1 &amp; &amp; x^3+2x^2+2x+1 &amp; &amp; x^2-x+1\\<br>&amp; x^5+x^4+x^3+x^2+x+1 &amp; &amp; x^4-x^3+x-1 &amp; &amp; x^3-2x^2+2x-1 &amp; &amp; \\<br>&amp; x^5-x^4+x^3-x^2+x-1 &amp; &amp; x^4+x^2+1   &amp; &amp; x^3+1         &amp; &amp;<br>\end{aligned}$$<br>因此<br>$$P_6(x)=x^6+2x^5+3x^4+5x^3+2x^2+5x$$<br>再定义<br>$$Q_N(x)=\sum_{n=1}^N P_n(x)$$<br>已知$Q_{10}(x)=x^{10}+3x^9+3x^8+7x^7+8x^6+14x^5+11x^4+18x^3+12x^2+23x$和$Q_{10}(2) = 5598$。</p>
<p>求$Q_{10^7}(2)$，并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 798</title>
    <url>/798/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-798"><a href="#Problem-798" class="headerlink" title="Problem 798"></a><a href="https://projecteuler.net/problem=798">Problem 798</a></h1><hr>
<h2 id="Card-Stacking-Game"><a href="#Card-Stacking-Game" class="headerlink" title="Card Stacking Game"></a><strong>Card Stacking Game</strong></h2><p>Two players play a game with a deck of cards which contains $s$ suits with each suit containing $n$ cards numbered from $1$ to $n$.</p>
<p>Before the game starts, a set of cards (which may be empty) is picked from the deck and placed face-up on the table, with no overlap. These are called the visible cards.</p>
<p>The players then make moves in turn.<br>A move consists of choosing a card X from the rest of the deck and placing it face-up on top of a visible card Y, subject to the following restrictions:</p>
<ul>
<li>X and Y must be the same suit;</li>
<li>the value of X must be larger than the value of Y.</li>
</ul>
<p>The card X then covers the card Y and replaces Y as a visible card.<br>The player unable to make a valid move loses and play stops.</p>
<p>Let $C(n, s)$ be the number of different initial sets of cards for which the first player will lose given best play for both players.</p>
<p>For example, $C(3, 2) = 26$ and $C(13, 4) \equiv 540318329 \pmod {1\ 000\ 000\ 007}$.</p>
<p>Find $C(10^7, 10^7)$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="叠卡游戏"><a href="#叠卡游戏" class="headerlink" title="叠卡游戏"></a><strong>叠卡游戏</strong></h2><p>两位玩家正在玩一个游戏，这个游戏需要用到一副有$n$个花色、每个花色包含$1$到$n$共$n$种点数的牌。</p>
<p>在游戏开始前，从这副牌中拿出一部分（可以不拿），并将其面朝上互不接触地放在桌面上。这些牌被称为可见牌。</p>
<p>此后，两名玩家轮流行动。每一轮行动，玩家必须从剩下的牌中选择一张牌X，并将其面朝上放在一张可见牌Y上，且X和Y需要满足：</p>
<ul>
<li>X和Y的花色必须相同；</li>
<li>X的点数必须大于Y的点数。</li>
</ul>
<p>X会完全覆盖Y并取代Y成为可见牌。<br>首先无法进行合法行动的玩家失败，游戏结束。</p>
<p>若两位玩家均采取最优策略，记$C(n, s)$为先手玩家必败的可见牌布置局面的数目。</p>
<p>例如，$C(3, 2) = 26$，$C(13, 4) \equiv 540318329 \pmod {1\ 000\ 000\ 007}$。</p>
<p>求$C(10^7, 10^7)$，并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 799</title>
    <url>/799/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-799"><a href="#Problem-799" class="headerlink" title="Problem 799"></a><a href="https://projecteuler.net/problem=799">Problem 799</a></h1><hr>
<h2 id="Pentagonal-Puzzle"><a href="#Pentagonal-Puzzle" class="headerlink" title="Pentagonal Puzzle"></a><strong>Pentagonal Puzzle</strong></h2><p>Pentagonal numbers are generated by the formula: $P_n = \tfrac{1}{2} n(3n-1)$ giving the sequence:</p>
<p>$$1,5,12,22,35, 51,70,92,\ldots $$</p>
<p>Some pentagonal numbers can be expressed as the sum of two other pentagonal numbers.<br>For example:</p>
<p>$$P_8 = 92 = 22 + 70 = P_4 + P_7$$</p>
<p>$3577$ is the smallest pentagonal number that can be expressed as the sum of two pentagonal numbers in two different ways:</p>
<p>$$<br>\begin{aligned}<br>P_{49} = 3577 &amp; = 3432 + 145 = P_{48} + P_{10} \\<br>              &amp; = 3290 + 287 = P_{47} + P_{14}<br>\end{aligned}<br>$$</p>
<p>$107602$ is the smallest pentagonal number that can be expressed as the sum of two pentagonal numbers in three different ways.</p>
<p>Find the smallest pentagonal number that can be expressed as the sum of two pentagonal numbers in over $100$ different ways.</p>
<hr>
<h2 id="五边形谜题"><a href="#五边形谜题" class="headerlink" title="五边形谜题"></a><strong>五边形谜题</strong></h2><p>五边形数由公式$P_n = \tfrac{1}{2} n(3n-1)$生成：</p>
<p>$$1,5,12,22,35, 51,70,92,\ldots $$</p>
<p>有些五边形数可以表示成另外两个五边形数之和。<br>例如：</p>
<p>$$P_8 = 92 = 22 + 70 = P_4 + P_7$$</p>
<p>$3577$是最小的可以用两种不同方式表示成两个五边形数之和的五边形数：</p>
<p>$$<br>\begin{aligned}<br>P_{49} = 3577 &amp; = 3432 + 145 = P_{48} + P_{10} \\<br>              &amp; = 3290 + 287 = P_{47} + P_{14}<br>\end{aligned}<br>$$</p>
<p>$107602$是最小的可以用三种不同方式表示成两个五边形数之和的五边形数。</p>
<p>求最小的可以用超过$100$种不同方式表示成两个五边形数之和的五边形数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 8</title>
    <url>/8/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-8"><a href="#Problem-8" class="headerlink" title="Problem 8"></a><a href="https://projecteuler.net/problem=8">Problem 8</a></h1><hr>
<h2 id="Largest-Product-in-a-Series"><a href="#Largest-Product-in-a-Series" class="headerlink" title="Largest Product in a Series"></a><strong>Largest Product in a Series</strong></h2><p>The four adjacent digits in the $1000$-digit number that have the greatest product are $9 \times 9 \times 8 \times  9 = 5832$.</p>
<center style="font-family:'Courier New',monospace">
73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450
</center>

<p>Find the thirteen adjacent digits in the $1000$-digit number that have the greatest product. What is the value of this product?</p>
<hr>
<h2 id="连续数字最大乘积"><a href="#连续数字最大乘积" class="headerlink" title="连续数字最大乘积"></a><strong>连续数字最大乘积</strong></h2><p>在如下的$1000$位数中，连续四个数字的最大乘积是 $9 \times 9 \times 8 \times 9 = 5832$。</p>
<center style="font-family:'Courier New',monospace">
73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450
</center>

<p>求这个$1000$位数中连续十三个数字的最大乘积。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 80</title>
    <url>/80/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-80"><a href="#Problem-80" class="headerlink" title="Problem 80"></a><a href="https://projecteuler.net/problem=80">Problem 80</a></h1><hr>
<h2 id="Square-Root-Digital-Expansion"><a href="#Square-Root-Digital-Expansion" class="headerlink" title="Square Root Digital Expansion"></a><strong>Square Root Digital Expansion</strong></h2><p>It is well known that if the square root of a natural number is not an integer, then it is irrational. The decimal expansion of such square roots is infinite without any repeating pattern at all.</p>
<p>The square root of two is $1.41421356237309504880\ldots$, and the digital sum of the first one hundred decimal digits is $475$.</p>
<p>For the first one hundred natural numbers, find the total of the digital sums of the first one hundred decimal digits for all the irrational square roots.</p>
<hr>
<h2 id="平方根数字展开"><a href="#平方根数字展开" class="headerlink" title="平方根数字展开"></a><strong>平方根数字展开</strong></h2><p>众所周知，如果一个自然数的算术平方根不是整数，那么就一定是无理数，也即无限不循环小数。</p>
<p>$2$的算术平方根为$1.41421356237309504880\ldots$，它的前一百个数字（包括小数点前的$1$）的和是$475$。</p>
<p>考虑前一百个自然数的算术平方根，求其中所有无理数的前一百个数字的总和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 800</title>
    <url>/800/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-800"><a href="#Problem-800" class="headerlink" title="Problem 800"></a><a href="https://projecteuler.net/problem=800">Problem 800</a></h1><hr>
<h2 id="Hybrid-Integers"><a href="#Hybrid-Integers" class="headerlink" title="Hybrid Integers"></a><strong>Hybrid Integers</strong></h2><p>An integer of the form $p^q q^p$ with prime numbers $p \neq q$ is called a <i>hybrid-integer</i>.<br>For example, $800 = 2^5 5^2$ is a hybrid-integer.</p>
<p>We define $C(n)$ to be the number of hybrid-integers less than or equal to $n$.<br /><br>You are given $C(800) = 2$ and $C(800^{800}) = 10790$.</p>
<p>Find $C(800800^{800800})$.</p>
<hr>
<h2 id="混合整数"><a href="#混合整数" class="headerlink" title="混合整数"></a><strong>混合整数</strong></h2><p>若一个整数可以表示为$p^q q^p$的形式，且$p \neq q$均为质数，则称其为<i class=zh>混合整数</i>。<br>例如，$800 = 2^5 5^2$是一个混合整数。</p>
<p>定义$C(n)$为小于等于$n$的所有混合整数的数目。<br /><br>已知$C(800) = 2$，$C(800^{800}) = 10790$。</p>
<p>求$C(800800^{800800})$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 801</title>
    <url>/801/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-801"><a href="#Problem-801" class="headerlink" title="Problem 801"></a><a href="https://projecteuler.net/problem=801">Problem 801</a></h1><hr>
<h2 id="x-y-equiv-y-x"><a href="#x-y-equiv-y-x" class="headerlink" title="$x^y\equiv y^x$"></a><strong>$x^y\equiv y^x$</strong></h2><p>The positive integral solutions of the equation $x^y=y^x$ are $(2,4)$, $(4,2)$ and $(k,k)$ for all $k&gt;0$.</p>
<p>For a given positive integer $n$, let $f(n)$ be the number of integral values $0&lt;x,y \le n^2-n$ such that<br>$$x^y\equiv y^x \pmod n$$<br>For example, $f(5)=104$ and $f(97)=1614336$.</p>
<p>Let $S(M,N)=\sum f(p)$ where the sum is taken over all primes $p$ satisfying $M\le p\le N$.</p>
<p>You are given $S(1,10^2)=7381000$ and $S(1,10^5) \equiv 701331986 \pmod{993353399}$.</p>
<p>Find $S(10^{16}, 10^{16}+10^6)$. Give your answer modulo $993353399$.</p>
<hr>
<h2 id="x-y-equiv-y-x-1"><a href="#x-y-equiv-y-x-1" class="headerlink" title="$x^y\equiv y^x$"></a><strong>$x^y\equiv y^x$</strong></h2><p>方程$x^y=y^x$的正整数解有$(2,4)$、$(4,2)$和满足$k&gt;0$的任意$(k,k)$。</p>
<p>对于给定的正整数$n$，记$f(n)$为下列同余方程满足$0&lt;x,y \le n^2-n$的正整数解的数目：<br>$$x^y\equiv y^x \pmod n$$<br>例如，$f(5)=104$，$f(97)=1614336$。</p>
<p>对于所有满足$M\le p\le N$的质数$p$，记$S(M,N)=\sum f(p)$。</p>
<p>已知$S(1,10^2)=7381000$，$S(1,10^5) \equiv 701331986 \pmod{993353399}$。</p>
<p>求$S(10^{16}, 10^{16}+10^6)$，并将你的答案对$993353399$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 802</title>
    <url>/802/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-802"><a href="#Problem-802" class="headerlink" title="Problem 802"></a><a href="https://projecteuler.net/problem=802">Problem 802</a></h1><hr>
<h2 id="Iterated-Composition"><a href="#Iterated-Composition" class="headerlink" title="Iterated Composition"></a><strong>Iterated Composition</strong></h2><p>Let $\Bbb R^2$ be the set of pairs of real numbers $(x, y)$. Let $\pi = 3.14159\cdots$.</p>
<p>Consider the function $f$ from $\Bbb R^2$ to $\Bbb R^2$ defined by $f(x, y) = (x^2 - x - y^2, 2xy - y + \pi)$, and its $n$-th iterated composition $f^{(n)}(x, y) = f(f(\cdots f(x, y)\cdots))$. For example $f^{(3)}(x, y) = f(f(f(x, y)))$. A pair $(x, y)$ is said to have period $n$ if $n$ is the smallest positive integer such that $f^{(n)}(x, y) = (x, y)$.</p>
<p>Let $P(n)$ denote the sum of $x$-coordinates of all points having period not exceeding $n$. Interestingly, $P(n)$ is always an integer. For example, $P(1) = 2$, $P(2) = 2$, $P(3) = 4$.</p>
<p>Find $P(10^7)$ and give your answer modulo $1\ 020\ 340\ 567$.</p>
<hr>
<h2 id="迭代复合函数"><a href="#迭代复合函数" class="headerlink" title="迭代复合函数"></a><strong>迭代复合函数</strong></h2><p>记$\Bbb R^2$为所有实数对$(x, y)$构成的集合。记$\pi = 3.14159\cdots$。</p>
<p>考虑由$\Bbb R^2$映射到$\Bbb R^2$的函数$f$，其定义为$f(x, y) = (x^2 - x - y^2, 2xy - y + \pi)$，以及其$n$次迭代复合函数$f^{(n)}(x, y) = f(f(\cdots f(x, y)\cdots))$。举例来说，$f^{(3)}(x, y) = f(f(f(x, y)))$。对于实数对$(x, y)$，若存在最小的正整数$n$使得$f^{(n)}(x, y) = (x, y)$，则称该实数对的周期为$n$。</p>
<p>记$P(n)$为所有周期不超过$n$的实数对的$x$轴坐标之和。有趣的是，$P(n)$始终是整数。例如，$P(1) = 2$，$P(2) = 2$，$P(3) = 4$。</p>
<p>求$P(10^7)$并将你的答案对$1\ 020\ 340\ 567$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 803</title>
    <url>/803/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-803"><a href="#Problem-803" class="headerlink" title="Problem 803"></a><a href="https://projecteuler.net/problem=803">Problem 803</a></h1><hr>
<h2 id="Pseudorandom-sequence"><a href="#Pseudorandom-sequence" class="headerlink" title="Pseudorandom sequence"></a><strong>Pseudorandom sequence</strong></h2><p><b>Rand48</b> is a pseudorandom number generator used by some programming languages. It generates a sequence from any given integer $0 \le a_0 &lt; 2^{48}$ using the rule $a_n = (25214903917 \cdot a_{n - 1} + 11) \bmod 2^{48}$.</p>
<p>Let $b_n = \lfloor a_n / 2^{16} \rfloor \bmod 52$. The sequence $b_0, b_1, \dots$ is translated to an infinite string $c = c_0c_1\dots$ via the rule:<br /><br>$0 \rightarrow$ a, $1\rightarrow$ b, $\dots$, $25 \rightarrow$ z, $26 \rightarrow$ A, $27 \rightarrow$ B, $\dots$, $51 \rightarrow$ Z.</p>
<p>For example, if we choose $a_0 = 123456$, then the string $c$ starts with: “bQYicNGCY$\dots$”.<br /><br>Moreover, starting from index $100$, we encounter the substring “RxqLBfWzv” for the first time.</p>
<p>Alternatively, if $c$ starts with “EULERcats$\dots$”, then $a_0$ must be $78580612777175$.</p>
<p>Now suppose that the string $c$ starts with “PuzzleOne$\dots$”.<br /><br>Find the starting index of the first occurrence of the substring “LuckyText” in $c$.</p>
<hr>
<h2 id="伪随机序列"><a href="#伪随机序列" class="headerlink" title="伪随机序列"></a><strong>伪随机序列</strong></h2><p>许多编程语言都使用<b>Rand48</b>这种伪随机数生成器。对于任意给定整数$0 \le a_0 &lt; 2^{48}$，它会按照规则$a_n = (25214903917 \cdot a_{n - 1} + 11) \bmod 2^{48}$生成一组伪随机序列。</p>
<p>记$b_n = \lfloor a_n / 2^{16} \rfloor \bmod 52$。序列$b_0, b_1, \dots$会进一步按照以下规则翻译为无限长字符串$c = c_0c_1\dots$：<br /><br>$0 \rightarrow$ a，$1\rightarrow$ b，$\dots$，$25 \rightarrow$ z，$26 \rightarrow$ A，$27 \rightarrow$ B，$\dots$，$51 \rightarrow$ Z。</p>
<p>例如，如果我们选择$a_0 = 123456$，那么字符串$c$的开头部分为：”bQYicNGCY$\dots$”。<br /><br>进一步地，在字符串下标为$100$的位置，我们第一次得到子串”RxqLBfWzv”。</p>
<p>另一方面，如果我们希望字符串$c$的开头部分为”EULERcats$\dots$”，那么$a_0$必须选定为$78580612777175$。</p>
<p>现在假设字符串$c$的开头部分为”PuzzleOne$\dots$”。<br /><br>求我们第一次在字符串$c$中得到子串”LuckyText”的起始位置下标。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 804</title>
    <url>/804/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-804"><a href="#Problem-804" class="headerlink" title="Problem 804"></a><a href="https://projecteuler.net/problem=804">Problem 804</a></h1><hr>
<h2 id="Counting-Binary-Quadratic-Representations"><a href="#Counting-Binary-Quadratic-Representations" class="headerlink" title="Counting Binary Quadratic Representations"></a><strong>Counting Binary Quadratic Representations</strong></h2><p>Let $g(n)$ denote the number of ways a positive integer $n$ can be represented in the form:<br>$$x^2+xy+41y^2$$<br>where $x$ and $y$ are integers. For example, $g(53)=4$ due to $(x,y) \in {(-4,1),(-3,-1),(3,1),(4,-1)}$.</p>
<p>Define $\displaystyle T(N)=\sum_{n=1}^{N}g(n)$. You are given $T(10^3)=474$ and $T(10^6)=492128$.</p>
<p>Find $T(10^{16})$.</p>
<hr>
<h2 id="二元二次型表示计数"><a href="#二元二次型表示计数" class="headerlink" title="二元二次型表示计数"></a><strong>二元二次型表示计数</strong></h2><p>记$g(n)$为将正整数$n$表示成如下二元二次型的方式数目：<br>$$x^2+xy+41y^2$$<br>其中$x$和$y$均为整数。例如，$g(53)=4$，对应的方式为$(x,y) \in {(-4,1),(-3,-1),(3,1),(4,-1)}$。</p>
<p>定义$\displaystyle T(N)=\sum_{n=1}^{N}g(n)$。已知$T(10^3)=474$，$T(10^6)=492128$。</p>
<p>求$T(10^{16})$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 805</title>
    <url>/805/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-805"><a href="#Problem-805" class="headerlink" title="Problem 805"></a><a href="https://projecteuler.net/problem=805">Problem 805</a></h1><hr>
<h2 id="Shifted-Multiples"><a href="#Shifted-Multiples" class="headerlink" title="Shifted Multiples"></a><strong>Shifted Multiples</strong></h2><p>For a positive integer $n$, let $s(n)$ be the integer obtained by shifting the leftmost digit of the decimal representation of $n$ to the rightmost position.<br /><br>For example, $s(142857)=428571$ and $s(10)=1$.</p>
<p>For a positive rational number $r$, we define $N(r)$ as the smallest positive integer $n$ such that $s(n)=r\cdot n$.<br /><br>If no such integer exists, then $N(r)$ is defined as zero.<br /><br>For example, $N(3)=142857$, $N(\tfrac 1{10})=10$ and $N(2) = 0$.</p>
<p>Let $T(M)$ be the sum of $N(u^3/v^3)$ where $(u,v)$ ranges over all ordered pairs of coprime positive integers not exceeding $M$.<br /><br>For example, $T(3)\equiv 262429173 \pmod {1\ 000\ 000\ 007}$.</p>
<p>Find $T(200)$. Give your answer modulo $1\ 000\ 000\ 007$. </p>
<hr>
<h2 id="数字轮转倍数"><a href="#数字轮转倍数" class="headerlink" title="数字轮转倍数"></a><strong>数字轮转倍数</strong></h2><p>对于正整数$n$，记$s(n)$为将$n$的十进制表示下最左侧数字移到最右侧所得到的数。<br /><br>例如，$s(142857)=428571$，$s(10)=1$。</p>
<p>对于正有理数$r$，定义$N(r)$为满足$s(n)=r\cdot n$的最小正整数$n$。<br /><br>若不存在这样的正整数，则$N(r)$取零。<br /><br>例如，$N(3)=142857$，$N(\tfrac 1{10})=10$，$N(2) = 0$。</p>
<p>对于所有不超过$M$的互质正整数对$(u,v)$，记$T(M)$为所有$N(u^3/v^3)$之和。<br /><br>例如，$T(3)\equiv 262429173 \pmod {1\ 000\ 000\ 007}$。</p>
<p>求$T(200)$，并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 806</title>
    <url>/806/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-806"><a href="#Problem-806" class="headerlink" title="Problem 806"></a><a href="https://projecteuler.net/problem=806">Problem 806</a></h1><hr>
<h2 id="Nim-on-Towers-of-Hanoi"><a href="#Nim-on-Towers-of-Hanoi" class="headerlink" title="Nim on Towers of Hanoi"></a><strong>Nim on Towers of Hanoi</strong></h2><p>This problem combines the game of Nim with the Towers of Hanoi. For a brief introduction to the rules of these games, please refer to <a href="/301">Problem 301</a> and <a href="/497">Problem 497</a>, respectively.</p>
<p>The unique shortest solution to the Towers of Hanoi problem with $n$ disks and $3$ pegs requires $2^n-1$ moves. Number the positions in the solution from index $0$ (starting position, all disks on the first peg) to index $2^n-1$ (final position, all disks on the third peg).</p>
<p>Each of these $2^n$ positions can be considered as the starting configuration for a game of Nim, in which two players take turns to select a peg and remove any positive number of disks from it. The winner is the player who removes the last disk.</p>
<p>We define $f(n)$ to be the sum of the indices of those positions for which, when considered as a Nim game, the first player will lose (assuming an optimal strategy from both players).</p>
<p>For $n=4$, the indices of losing positions in the shortest solution are $3$,$6$,$9$ and $12$. So we have $f(4) = 30$.</p>
<p>You are given that $f(10) = 67518$.</p>
<p>Find $f(10^5)$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="汉诺塔取石子游戏"><a href="#汉诺塔取石子游戏" class="headerlink" title="汉诺塔取石子游戏"></a><strong>汉诺塔取石子游戏</strong></h2><p>本题结合了“取石子游戏”和“汉诺塔”这两种游戏，其规则介绍请分别参见<a href="/301">第301题</a>和<a href="/497">第497题</a>。</p>
<p>对于包含$n$个盘子和$3$根柱子的标准汉诺塔问题，其唯一的最优解法共需$2^n-1$步。将该解法中出现的所有状态分别编号，初始状态（所有盘子都在第一根柱子上）编号为$0$，最终状态（所有盘子都在第三根柱子上）编号为$2^n-1$。</p>
<p>这$2^n$种状态中的每一种都可以视为取石子游戏的一个初始布局。由此布局开始，两名玩家轮流选择一根柱子，并从中移走任意数量为正的盘子。移走最后一个盘子的玩家获胜。</p>
<p>考虑所有作为取石子游戏初始布局时先手玩家必败的状态（假设两名玩家均采用最优策略），记$f(n)$为这些状态的编号之和。</p>
<p>对于$n=4$，所有必败初始状态的编号为$3$、$6$、$9$和$12$，因此$f(4) = 30$。</p>
<p>已知$f(10) = 67518$。</p>
<p>求$f(10^5)$，并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 807</title>
    <url>/807/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-807"><a href="#Problem-807" class="headerlink" title="Problem 807"></a><a href="https://projecteuler.net/problem=807">Problem 807</a></h1><hr>
<h2 id="Loops-of-Ropes"><a href="#Loops-of-Ropes" class="headerlink" title="Loops of Ropes"></a><strong>Loops of Ropes</strong></h2><p>Given a circle $C$ and an integer $n &gt; 1$, we perform the following operations.</p>
<p>In step $0$, we choose two uniformly random points $R_0$ and $B_0$ on $C$.<br /><br>In step $i$ ($1 \leq i &lt; n$), we first choose a uniformly random point $R_i$ on $C$ and connect the points $R_{i - 1}$ and $R_i$ with a red rope; then choose a uniformly random point $B_i$ on $C$ and connect the points $B_{i - 1}$ and $B_i$ with a blue rope.<br /><br>In step $n$, we first connect the points $R_{n - 1}$ and $R_0$ with a red rope; then connect the points $B_{n - 1}$ and $B_0$ with a blue rope.<br /><br>Each rope is straight between its two end points, and lies above all previous ropes.</p>
<p>After step $n$, we get a loop of red ropes, and a loop of blue ropes.<br /><br>Sometimes the two loops can be separated, as in the left figure below; sometimes they are “linked”, hence cannot be separated, as in the middle and right figures below.</p>
<p><img src="/resources/images/0807.jpg" alt=""></p>
<p>Let $P(n)$ be the probability that the two loops can be separated.<br /><br>For example, $P(3) = \frac{11}{20}$ and $P(5) \approx 0.4304177690$.</p>
<p>Find $P(80)$, rounded to $10$ digits after decimal point.</p>
<hr>
<h2 id="绳环"><a href="#绳环" class="headerlink" title="绳环"></a><strong>绳环</strong></h2><p>考虑圆$C$和整数$n&gt;1$，我们进行如下操作。</p>
<p>在第$0$步，我们在圆$C$上均匀随机地选择两个点$R_0$和$B_0$。<br /><br>在第$i$步($1 \leq i &lt; n$）， 我们先在圆$C$上均匀随机地选择一个点$R_i$并将点$R_{i-1}$和点$R_i$用红绳连接，再在圆$C$上均匀随机地选择一个点$B_i$，并将点$B_{i-1}$和点$B_i$用蓝绳连接。<br /><br>在第$n$步，我们先将点$R_{n-1}$和点$R_0$用红绳连接，再将点$B_{n-1}$和点$B_0$用蓝绳连接。<br /><br>每条绳在其连接的端点之间都是直线，且都位于所有现有绳的上方。</p>
<p>在完成第$n$步之后，我们得到了一个红绳环和一个蓝绳环。<br /><br>有时这两个绳环可以拆开，如下图左所示。有时这两个绳环相互缠绕，无法拆开，如下图中和下图右所示。</p>
<p><img src="/resources/images/0807.jpg" alt=""></p>
<p>记$P(n)$为两个绳环可以拆开的概率。<br /><br>例如，$P(3) = \frac{11}{20}$，$P(5) \approx 0.4304177690$。</p>
<p>求$P(80)$，并将你的答案保留小数点后$10$位。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 808</title>
    <url>/808/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-808"><a href="#Problem-808" class="headerlink" title="Problem 808"></a><a href="https://projecteuler.net/problem=808">Problem 808</a></h1><hr>
<h2 id="Reversible-prime-squares"><a href="#Reversible-prime-squares" class="headerlink" title="Reversible prime squares"></a><strong>Reversible prime squares</strong></h2><p>Both $169$ and $961$ are the square of a prime. $169$ is the reverse of $961$.</p>
<p>We call a number a <i>reversible prime square </i> if:</p>
<ol>
<li>It is not a palindrome, and</li>
<li>It is the square of a prime, and</li>
<li>Its reverse is also the square of a prime.</li>
</ol>
<p>$169$ and $961$ are not palindromes, so both are reversible prime squares.</p>
<p>Find the sum of the first $50$ reversible prime squares.</p>
<hr>
<h2 id="可反转质数平方"><a href="#可反转质数平方" class="headerlink" title="可反转质数平方"></a><strong>可反转质数平方</strong></h2><p>$169$和$961$都是质数的平方，且将$169$的数字反转即可得到$961$。</p>
<p>我们称一个数为<i class=zh>可反转质数平方</i>，若其满足以下条件：</p>
<ol>
<li>它不是回文数，且</li>
<li>它是质数的平方，且</li>
<li>将它的数字反转所得的数也是质数的平方。</li>
</ol>
<p>$169$和$961$都不是回文数，因此它们都是可反转质数平方。</p>
<p>求前$50$个可反转质数平方的和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 809</title>
    <url>/809/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-809"><a href="#Problem-809" class="headerlink" title="Problem 809"></a><a href="https://projecteuler.net/problem=809">Problem 809</a></h1><hr>
<h2 id="Rational-Recurrence-Relation"><a href="#Rational-Recurrence-Relation" class="headerlink" title="Rational Recurrence Relation"></a><strong>Rational Recurrence Relation</strong></h2><p>The following is a function defined for all positive rational values of $x$.<br>$$    f(x)=\begin{cases} x  &amp; x\text{ is integral}\\<br>                    f(\frac 1{1-x})    &amp; x \lt 1\\<br>                    f\Big(\frac 1{\lceil x\rceil -x}-1+f(x-1)\Big)    &amp; \text{otherwise}\end{cases}    $$</p>
<p>For example, $f(3/2)=3$, $f(1/6) = 65533$ and $f(13/10) = 7625597484985$.</p>
<p>Find $f(22/7)$. Give your answer modulo $10^{15}$.</p>
<hr>
<h2 id="有理数递归关系式"><a href="#有理数递归关系式" class="headerlink" title="有理数递归关系式"></a><strong>有理数递归关系式</strong></h2><p>如下是定义在所有正有理数$x$上的函数：<br>$$    f(x)=\begin{cases} x  &amp; \text{若}x\text{是整数}\\<br>                    f(\frac 1{1-x})    &amp; \text{若}x \lt 1\\<br>                    f\Big(\frac 1{\lceil x\rceil -x}-1+f(x-1)\Big)    &amp; \text{其余情况}\end{cases}    $$</p>
<p>例如，$f(3/2)=3$，$f(1/6) = 65533$，$f(13/10) = 7625597484985$。</p>
<p>求$f(22/7)$，并将你的答案对$10^{15}$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 81</title>
    <url>/81/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-81"><a href="#Problem-81" class="headerlink" title="Problem 81"></a><a href="https://projecteuler.net/problem=81">Problem 81</a></h1><hr>
<h2 id="Path-Sum-Two-Ways"><a href="#Path-Sum-Two-Ways" class="headerlink" title="Path Sum: Two Ways"></a><strong>Path Sum: Two Ways</strong></h2><p>In the $5$ by $5$ matrix below, the minimal path sum from the top left to the bottom right, by <strong>only moving to the right and down</strong>, is indicated in bold red and is equal to $2427$.</p>
<p>$$<br>\begin{pmatrix}<br>\color{red}{131} &amp; 673 &amp; 234 &amp; 103 &amp; 18\\<br>\color{red}{201} &amp; \color{red}{96} &amp; \color{red}{342} &amp; 965 &amp; 150\\<br>630 &amp; 803 &amp; \color{red}{746} &amp; \color{red}{422} &amp; 111\\<br>537 &amp; 699 &amp; 497 &amp; \color{red}{121} &amp; 956\\<br>805 &amp; 732 &amp; 524 &amp; \color{red}{37} &amp; \color{red}{331}<br>\end{pmatrix}<br>$$</p>
<p>Find the minimal path sum from the top left to the bottom right by only moving right and down in <a href="https://projecteuler.net/project/resources/p081_matrix.txt">matrix.txt</a> (right click and “Save Link/Target As…”), a 31K text file containing a $80$ by $80$ matrix.</p>
<hr>
<h2 id="路径和：两个方向"><a href="#路径和：两个方向" class="headerlink" title="路径和：两个方向"></a><strong>路径和：两个方向</strong></h2><p>在如下的$5 \times 5$矩阵中，从左上方到右下方<strong>始终只向右或向下移动</strong>的最小路径和为$2427$，由标注红色的路径给出。</p>
<p>$$<br>\begin{pmatrix}<br>\color{red}{131} &amp; 673 &amp; 234 &amp; 103 &amp; 18\\<br>\color{red}{201} &amp; \color{red}{96} &amp; \color{red}{342} &amp; 965 &amp; 150\\<br>630 &amp; 803 &amp; \color{red}{746} &amp; \color{red}{422} &amp; 111\\<br>537 &amp; 699 &amp; 497 &amp; \color{red}{121} &amp; 956\\<br>805 &amp; 732 &amp; 524 &amp; \color{red}{37} &amp; \color{red}{331}<br>\end{pmatrix}<br>$$</p>
<p>在文本文件<a href="https://projecteuler.net/project/resources/p081_matrix.txt">matrix.txt</a>中包含了一个$80 \times 80$的矩阵，求从该矩阵的左上方到右下方始终只向右或向下移动的最小路径和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 810</title>
    <url>/810/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-810"><a href="#Problem-810" class="headerlink" title="Problem 810"></a><a href="https://projecteuler.net/problem=810">Problem 810</a></h1><hr>
<h2 id="XOR-Primes"><a href="#XOR-Primes" class="headerlink" title="XOR-Primes"></a><strong>XOR-Primes</strong></h2><p>We use $x\oplus y$ for the bitwise XOR of $x$ and $y$.</p>
<p>Define the <i>XOR-product</i> of $x$ and $y$, denoted by $x \otimes y$, similar to a long multiplication in base $2$, except that the intermediate results are XORed instead of the usual integer addition.</p>
<p>For example, $7 \otimes 3 = 9$, or in base $2$, $111_2 \otimes 11_2 = 1001_2$:</p>
<p>$$<br>\begin{aligned}<br>\phantom{\otimes 111} 111_2 \\<br>\otimes \phantom{1111} 11_2 \\<br>\hline<br>\phantom{\otimes 111} 111_2 \\<br>\oplus \phantom{11} 111_2  \phantom{9} \\<br>\hline<br>\phantom{\otimes 11} 1001_2 \\<br>\end{aligned}<br>$$</p>
<p>An <i>XOR-prime</i> is an integer $n$ greater than $1$ that is not an XOR-product of two integers greater than $1$. The above example shows that $9$ is not an XOR-prime. Similarly, $5 = 3 \otimes 3$ is not an XOR-prime. The first few XOR-primes are $2, 3, 7, 11, 13, …$ and the $10$th XOR-prime is $41$.</p>
<p>Find the $5\ 000\ 000$th XOR-prime.</p>
<hr>
<h2 id="异或质数"><a href="#异或质数" class="headerlink" title="异或质数"></a><strong>异或质数</strong></h2><p>记$x\oplus y$为$x$和$y$按位异或的结果。</p>
<p>我们定义一种新运算，称为$x$和$y$的<i class=zh>异或积</i>并记作$x \otimes y$。这种运算类似于对$x$和$y$的二进制表示做长乘法，但是将其中的相加替换为异或。</p>
<p>例如，$7 \otimes 3 = 9$，或用二进制表示写作$111_2 \otimes 11_2 = 1001_2$：<br>$$<br>\begin{aligned}<br>\phantom{\otimes 111} 111_2 \\<br>\otimes \phantom{1111} 11_2 \\<br>\hline<br>\phantom{\otimes 111} 111_2 \\<br>\oplus \phantom{11} 111_2  \phantom{9} \\<br>\hline<br>\phantom{\otimes 11} 1001_2 \\<br>\end{aligned}<br>$$</p>
<p>若大于$1$的整数$n$不是任意两个大于$1$的整数的异或积，则称之为<i class=zh>异或质数</i>。上面的例子说明$9$不是一个异或质数。类似地，$5 = 3 \otimes 3$也不是一个异或质数。较小的异或质数包括$2, 3, 7, 11, 13, …$，而第$10$个异或质数是$41$。</p>
<p>求第$5\ 000\ 000$个异或质数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 811</title>
    <url>/811/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-811"><a href="#Problem-811" class="headerlink" title="Problem 811"></a><a href="https://projecteuler.net/problem=811">Problem 811</a></h1><hr>
<h2 id="Bitwise-Recursion"><a href="#Bitwise-Recursion" class="headerlink" title="Bitwise Recursion"></a><strong>Bitwise Recursion</strong></h2><p>Let $b(n)$ be the largest power of $2$ that divides $n$. For example $b(24) = 8$.</p>
<p>Define the recursive function:<br>\begin{aligned}<br>\begin{split}<br>A(0) &amp; = 1\\<br>A(2n) &amp; = 3A(n) + 5A\big(2n - b(n)\big)  \qquad n \gt 0\\<br>A(2n+1) &amp; = A(n)<br>\end{split}<br>\end{aligned}<br>and let $H(t,r) = A\big((2^t+1)^r\big)$.</p>
<p>You are given $H(3,2) = A(81) = 636056$.</p>
<p>Find $H(10^{14}+31,62)$. Give your answer modulo $1\ 000\ 062\ 031$. </p>
<hr>
<h2 id="按位递归"><a href="#按位递归" class="headerlink" title="按位递归"></a><strong>按位递归</strong></h2><p>记$b(n)$为最大的整除$n$的$2$的幂，例如$b(24) = 8$。</p>
<p>定义如下递归关系式：<br>\begin{aligned}<br>\begin{split}<br>A(0) &amp; = 1\\<br>A(2n) &amp; = 3A(n) + 5A\big(2n - b(n)\big)  \qquad n \gt 0\\<br>A(2n+1) &amp; = A(n)<br>\end{split}<br>\end{aligned}<br>并记$H(t,r) = A\big((2^t+1)^r\big)$。</p>
<p>已知$H(3,2) = A(81) = 636056$。</p>
<p>求$H(10^{14}+31,62)$，并将你的答案对$1\ 000\ 062\ 031$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 812</title>
    <url>/812/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-812"><a href="#Problem-812" class="headerlink" title="Problem 812"></a><a href="https://projecteuler.net/problem=812">Problem 812</a></h1><hr>
<h2 id="Dynamical-Polynomials"><a href="#Dynamical-Polynomials" class="headerlink" title="Dynamical Polynomials"></a><strong>Dynamical Polynomials</strong></h2><p>A <i>dynamical polynomial</i> is a monic polynomial $f(x)$ with integer coefficients such that $f(x)$ divides $f(x^2-2)$.</p>
<p>For example, $f(x) = x^2 - x - 2$ is a dynamical polynomial because $f(x^2-2) = x^4-5x^2+4 = (x^2 + x -2)f(x)$.</p>
<p>Let $S(n)$ be the number of dynamical polynomials of degree $n$.<br /><br>For example, $S(2)=6$, as there are six dynamical polynomials of degree 2:<br>$$ x^2-4x+4 \quad x^2-x-2 \quad x^2-4 \quad x^2-1 \quad x^2+x-1 \quad x^2+2x+1 $$<br>Also, $S(5)=58$ and $S(20)=122087$.</p>
<p>Find $S(10\ 000)$. Give your answer modulo $998244353$.</p>
<hr>
<h2 id="动态多项式"><a href="#动态多项式" class="headerlink" title="动态多项式"></a><strong>动态多项式</strong></h2><p>若首一整系数多项式$f(x)$整除$f(x^2-2)$，则称之为<i class=zh>动态多项式</i>。</p>
<p>例如，$f(x) = x^2 - x - 2$是动态多项式，因为$f(x^2-2) = x^4-5x^2+4 = (x^2 + x -2)f(x)$。</p>
<p>记$S(n)$为最高次数为$n$的动态多项式的数目。<br /><br>例如，$S(2)=6$，因为共有六个最高次数为$2$的动态多项式：<br>$$ x^2-4x+4 \quad x^2-x-2 \quad x^2-4 \quad x^2-1 \quad x^2+x-1 \quad x^2+2x+1 $$<br>已知$S(5)=58$，$S(20)=122087$。</p>
<p>求$S(10\ 000)$，并将你的答案对$998244353$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 813</title>
    <url>/813/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-813"><a href="#Problem-813" class="headerlink" title="Problem 813"></a><a href="https://projecteuler.net/problem=813">Problem 813</a></h1><hr>
<h2 id="XOR-Powers"><a href="#XOR-Powers" class="headerlink" title="XOR-Powers"></a><strong>XOR-Powers</strong></h2><p>We use $x\oplus y$ to be the bitwise XOR of $x$ and $y$.</p>
<p>Define the <i>XOR-product</i> of $x$ and $y$, denoted by $x \otimes y$, similar to a long multiplication in base $2$, except that the intermediate results are XORed instead of the usual integer addition.</p>
<p>For example, $11 \otimes 11 = 69$, or in base $2$, $1011_2 \otimes 1011_2 = 1000101_2$:<br>$$<br>\begin{aligned}<br>\phantom{\otimes 1111} 1011_2 \\<br>\otimes \phantom{1111} 1011_2 \\<br>\hline<br>\phantom{\otimes 1111} 1011_2 \\<br>\phantom{\otimes 111} 1011_2 \phantom{9} \\<br>\oplus \phantom{1} 1011_2  \phantom{999} \\<br>\hline<br>\phantom{\otimes 11} 1000101_2 \\<br>\end{aligned}<br>$$<br>Further we define $P(n) = 11^{\otimes n} = \overbrace{11\otimes 11\otimes \ldots \otimes 11}^n$. For example $P(2)=69$.</p>
<p>Find $P(8^{12}\cdot 12^8)$. Give your answer modulo $10^9+7$.</p>
<hr>
<h2 id="异或幂"><a href="#异或幂" class="headerlink" title="异或幂"></a><strong>异或幂</strong></h2><p>记$x\oplus y$为$x$和$y$按位异或的结果。</p>
<p>我们定义一种新运算，称为$x$和$y$的<i class=zh>异或积</i>并记作$x \otimes y$。这种运算类似于对$x$和$y$的二进制表示做长乘法，但是将其中的相加替换为异或。</p>
<p>例如，$11 \otimes 11 = 69$，或用二进制表示写作$1011_2 \otimes 1011_2 = 1000101_2$：<br>$$<br>\begin{aligned}<br>\phantom{\otimes 1111} 1011_2 \\<br>\otimes \phantom{1111} 1011_2 \\<br>\hline<br>\phantom{\otimes 1111} 1011_2 \\<br>\phantom{\otimes 111} 1011_2 \phantom{9} \\<br>\oplus \phantom{1} 1011_2  \phantom{999} \\<br>\hline<br>\phantom{\otimes 11} 1000101_2 \\<br>\end{aligned}<br>$$<br>进一步定义$P(n) = 11^{\otimes n} = \overbrace{11\otimes 11\otimes \ldots \otimes 11}^n$，例如$P(2)=69$。</p>
<p>求$P(8^{12}\cdot 12^8)$，并将你的答案对$10^9+7$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 814</title>
    <url>/814/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-814"><a href="#Problem-814" class="headerlink" title="Problem 814"></a><a href="https://projecteuler.net/problem=814">Problem 814</a></h1><hr>
<h2 id="Mezzo-forte"><a href="#Mezzo-forte" class="headerlink" title="Mezzo-forte"></a><strong>Mezzo-forte</strong></h2><p>$4n$ people stand in a circle with their heads down. When the bell rings they all raise their heads and either look at the person immediately to their left, the person immediately to their right or the person diametrically opposite. If two people find themselves looking at each other they both scream.</p>
<p>Define $S(n)$ to be the number of ways that exactly half of the people scream. You are given $S(1) =  48$ and $S(10) \equiv 420121075 \pmod{998244353}$.</p>
<p>Find $S(10^3)$. Enter your answer modulo $998244353$.</p>
<hr>
<h2 id="中强音"><a href="#中强音" class="headerlink" title="中强音"></a><strong>中强音</strong></h2><p>$4n$个人低头站成一圈，当钟声响起时，每个人都抬起头，或者看向紧靠其左侧的人，或者看向紧靠其右侧的人，或者看向其正对面的人。如果两个人恰好对视，则会同时尖叫。</p>
<p>记$S(n)$为恰好有一半人尖叫的对视方案数量。已知$S(1) =  48$，$S(10) \equiv 420121075 \pmod{998244353}$。</p>
<p>求$S(10^3)$，并将你的答案对$998244353$取余。</p>
<p><i class=zh>译注：Mezzo-forte是意大利语音乐术语，表示“中等偏强”。</i></p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 816</title>
    <url>/816/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-816"><a href="#Problem-816" class="headerlink" title="Problem 816"></a><a href="https://projecteuler.net/problem=816">Problem 816</a></h1><hr>
<h2 id="Shortest-distance-among-points"><a href="#Shortest-distance-among-points" class="headerlink" title="Shortest distance among points"></a><strong>Shortest distance among points</strong></h2><p>We create an array of points $P_n$ in a two dimensional plane using the following random number generator:<br /><br>$s_0=290797$<br /><br>$s_{n+1}=s_n^2 \bmod 50515093$<br /><br>$P_n=(s_{2n},s_{2n+1})$</p>
<p>Let $d(k)$ be the shortest distance of any two (distinct) points among $P_0, \cdots, P_{k - 1}$.<br /><br>E.g. $d(14)=546446.466846479$</p>
<p>Find $d(2000000)$. Give your answer rounded to $9$ places after the decimal point.</p>
<hr>
<h2 id="随机点集最短距离"><a href="#随机点集最短距离" class="headerlink" title="随机点集最短距离"></a><strong>随机点集最短距离</strong></h2><p>使用下列随机数生成器生成二维随机点列$P_n$：<br /><br>$s_0=290797$<br /><br>$s_{n+1}=s_n^2 \bmod 50515093$<br /><br>$P_n=(s_{2n},s_{2n+1})$</p>
<p>记$d(k)$为$P_0, \cdots, P_{k - 1}$中任意（不同的）两点间最短距离。<br /><br>已知$d(14)=546446.466846479$。</p>
<p>求$d(2000000)$，并将你的答案四舍五入至小数点后$9$位。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 815</title>
    <url>/815/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-815"><a href="#Problem-815" class="headerlink" title="Problem 815"></a><a href="https://projecteuler.net/problem=815">Problem 815</a></h1><hr>
<h2 id="Group-by-Value"><a href="#Group-by-Value" class="headerlink" title="Group by Value"></a><strong>Group by Value</strong></h2><p>A pack of cards contains $4n$ cards with four identical cards of each value. The pack is shuffled and cards are dealt one at a time and placed in piles of equal value. If the card has the same value as any pile it is placed in that pile. If there is no pile of that value then it begins a new pile. When a pile has four cards of the same value it is removed.</p>
<p>Throughout the process the maximum number of non empty piles is recorded. Let $E(n)$ be its expected value. You are given $E(2) = 1.97142857$ rounded to $8$ decimal places.</p>
<p>Find $E(60)$. Give your answer rounded to $8$ digits after the decimal point. </p>
<hr>
<h2 id="点数分组"><a href="#点数分组" class="headerlink" title="点数分组"></a><strong>点数分组</strong></h2><p>一副共$4n$张牌有$n$种点数，每种点数四张。将这副牌洗牌后，每次打出一张牌，并根据点数加入牌堆：如果已有该点数的牌堆，则将牌加入该堆；如果没有该点数的牌堆，则将该牌单独作为新牌堆。如果某个牌堆集齐了四张牌，则将该牌堆移除。</p>
<p>记录在上述过程中任意时刻非空牌堆数量的最大值，并记$E(n)$为其期望值。已知$E(2) = 1.97142857$，四舍五入至小数点后$8$位。</p>
<p>求$E(60)$，并将你的答案四舍五入至小数点后$8$位。 </p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 817</title>
    <url>/817/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-817"><a href="#Problem-817" class="headerlink" title="Problem 817"></a><a href="https://projecteuler.net/problem=817">Problem 817</a></h1><hr>
<h2 id="Digits-in-Squares"><a href="#Digits-in-Squares" class="headerlink" title="Digits in Squares"></a><strong>Digits in Squares</strong></h2><p>Define $m = M(n, d)$ to be the smallest positive integer such that when $m^2$ is written in base $n$ it includes the base $n$ digit $d$. For example, $M(10,7) = 24$ because if all the squares are written out in base $10$ the first time the digit $7$ occurs is in $24^2 = 576$. $M(11,10) = 19$ as $19^2 = 361=2A9_{11}$.</p>
<p>Find $\displaystyle \sum_{d = 1}^{10^5}M(p, p - d)$ where $p = 10^9 + 7$.</p>
<hr>
<h2 id="平方中的数字"><a href="#平方中的数字" class="headerlink" title="平方中的数字"></a><strong>平方中的数字</strong></h2><p>考虑所有$n$进制表示包含数字$d$的平方数$m^2$，并记其算术平方根的最小值为$m = M(n, d)$。例如，$M(10,7) = 24$，因为$10$进制下最小的包含数字$7$的平方数是$25^2=576$。类似可得$M(11,10) = 19$，因为$19^2 = 361=2A9_{11}$。</p>
<p>求$\displaystyle \sum_{d = 1}^{10^5}M(p, p - d)$，其中$p = 10^9 + 7$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 818</title>
    <url>/818/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-818"><a href="#Problem-818" class="headerlink" title="Problem 818"></a><a href="https://projecteuler.net/problem=818">Problem 818</a></h1><hr>
<h2 id="SET"><a href="#SET" class="headerlink" title="SET"></a><strong>SET</strong></h2><p>The SET® card game is played with a pack of $81$ distinct cards. Each card has four features (Shape, Color, Number, Shading). Each feature has three different variants (e.g. Color can be red, purple, green).</p>
<p>A <i>SET</i> consists of three different cards such that each feature is either the same on each card or different on each card.</p>
<p>For a collection $C_n$ of $n$ cards, let $S(C_n)$ denote the number of <i>SET</i>s in $C_n$. Then define $F(n) = \sum\limits_{C_n} S(C_n)^4$ where $C_n$ ranges through all collections of $n$ cards (among the $81$ cards). You are given $F(3) = 1080$ and $F(6) = 159690960$.</p>
<p>Find $F(12)$.</p>
<p>Note: SET is a registered trademark of Cannei, LLC. All rights reserved. Used with permission from PlayMonster, LLC.</p>
<hr>
<h2 id="神奇形色牌"><a href="#神奇形色牌" class="headerlink" title="神奇形色牌"></a><strong>神奇形色牌</strong></h2><p>神奇形色牌（SET®）由$81$张不同的牌组成。每张牌有四个特征：形状、颜色、数字、阴影。每个特征有三种可能，例如颜色可以是红、黄、绿之一。</p>
<p>一个<i class=zh>组合</i>由三张牌构成，且对于任意特征，要么三张牌完全相同，要么三张牌完全不同。</p>
<p>考虑由$n$张牌组成的特定牌组$C_n$，记$S(C_n)$为这些牌可以组成的<i class=zh>组合</i>的数目。再记$F(n) = \sum\limits_{C_n} S(C_n)^4$，其中$C_n$遍历所有从$81$张牌中取出$n$张所能组成的牌组。已知$F(3) = 1080$，$F(6) = 159690960$。</p>
<p>求$F(12)$。</p>
<p>注：神奇形色牌(SET®)是Cannei有限公司的注册商标，保留所有权利；由PlayMonster有限公司授权使用。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 819</title>
    <url>/819/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-819"><a href="#Problem-819" class="headerlink" title="Problem 819"></a><a href="https://projecteuler.net/problem=819">Problem 819</a></h1><hr>
<h2 id="Iterative-Sampling"><a href="#Iterative-Sampling" class="headerlink" title="Iterative Sampling"></a><strong>Iterative Sampling</strong></h2><p>Given an $n$-tuple of numbers another $n$-tuple is created where each element of the new $n$-tuple is chosen randomly from the numbers in the previous $n$-tuple. For example, given $(2,2,3)$ the probability that $2$ occurs in the first position in the next $3$-tuple is $2/3$. The probability of getting all $2$’s would be $8/27$ while the probability of getting the same $3$-tuple (in any order) would be $4/9$.</p>
<p>Let $E(n)$ be the expected number of steps starting with $(1,2,\ldots,n)$ and ending with all numbers being the same.</p>
<p>You are given $E(3) = 27/7$ and $E(5) = 468125/60701 \approx 7.711982$ rounded to $6$ digits after the decimal place.</p>
<p>Find $E(10^3)$. Give the answer rounded to $6$ digits after the decimal place.</p>
<hr>
<h2 id="迭代抽样"><a href="#迭代抽样" class="headerlink" title="迭代抽样"></a><strong>迭代抽样</strong></h2><p>给定一个$n$元数组，考虑从中随机抽样得到的新$n$元数组。例如，当原数组是$(2,2,3)$时，新数组的第一位有$2/3$的概率是$2$，有$8/27$的概率全都是$2$，有$4/9$的概率获得原数组（不计顺序）。</p>
<p>从数组$(1,2,\ldots,n)$出发，不断随机抽样直至数组中所有的数都相同，记所需要的步数的期望为$E(n)$。</p>
<p>已知$E(3) = 27/7$，$E(5) = 468125/60701 \approx 7.711982$，保留小数点后$6$位。</p>
<p>求$E(10^3)$，并将你的答案保留小数点后$6$位。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 82</title>
    <url>/82/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-82"><a href="#Problem-82" class="headerlink" title="Problem 82"></a><a href="https://projecteuler.net/problem=82">Problem 82</a></h1><hr>
<h2 id="Path-Sum-Three-Ways"><a href="#Path-Sum-Three-Ways" class="headerlink" title="Path Sum: Three Ways"></a><strong>Path Sum: Three Ways</strong></h2><p>NOTE: This problem is a more challenging version of <a href="/81">Problem 81</a>.</p>
<p>The minimal path sum in the $5$ by $5$ matrix below, by starting in any cell in the left column and finishing in any cell in the right column, and only moving up, down, and right, is indicated in red and bold; the sum is equal to $994$.</p>
<p>$$<br>\begin{pmatrix}<br>131 &amp; 673 &amp; \color{red}{234} &amp; \color{red}{103} &amp; \color{red}{18}\\<br>\color{red}{201} &amp; \color{red}{96} &amp; \color{red}{342} &amp; 965 &amp; 150\\<br>630 &amp; 803 &amp; 746 &amp; 422 &amp; 111\\<br>537 &amp; 699 &amp; 497 &amp; 121 &amp; 956\\<br>805 &amp; 732 &amp; 524 &amp; 37 &amp; 331<br>\end{pmatrix}<br>$$</p>
<p>Find the minimal path sum from the left column to the right column in <a href="https://projecteuler.net/project/resources/p081_matrix.txt">matrix.txt</a> (right click and “Save Link/Target As…”), a 31K text file containing a $80$ by $80$ matrix.</p>
<hr>
<h2 id="路径和：三个方向"><a href="#路径和：三个方向" class="headerlink" title="路径和：三个方向"></a><strong>路径和：三个方向</strong></h2><p>注意：本题是<a href="/81">第81题</a>的升级版。</p>
<p>在如下的$5\times 5$矩阵中，从最左栏任意一格出发，始终只向右、向上或向下移动，到最右栏任意一格结束的最小路径和为$994$，由标注红色的路径给出。</p>
<p>$$<br>\begin{pmatrix}<br>131 &amp; 673 &amp; \color{red}{234} &amp; \color{red}{103} &amp; \color{red}{18}\\<br>\color{red}{201} &amp; \color{red}{96} &amp; \color{red}{342} &amp; 965 &amp; 150\\<br>630 &amp; 803 &amp; 746 &amp; 422 &amp; 111\\<br>537 &amp; 699 &amp; 497 &amp; 121 &amp; 956\\<br>805 &amp; 732 &amp; 524 &amp; 37 &amp; 331<br>\end{pmatrix}<br>$$</p>
<p>在文本文件<a href="https://projecteuler.net/project/resources/p081_matrix.txt">matrix.txt</a>中包含了一个$80\times80$的矩阵，求从该矩阵的最左栏到最右栏的最小路径和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 820</title>
    <url>/820/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-820"><a href="#Problem-820" class="headerlink" title="Problem 820"></a><a href="https://projecteuler.net/problem=820">Problem 820</a></h1><hr>
<h2 id="N-th-digit-of-Reciprocals"><a href="#N-th-digit-of-Reciprocals" class="headerlink" title="$N$th digit of Reciprocals"></a><strong>$N$<sup>th</sup> digit of Reciprocals</strong></h2><p>Let $d_n(x)$ be the $n$<sup>th</sup> decimal digit of the fractional part of $x$, or $0$ if the fractional part has fewer than $n$ digits.</p>
<p>For example:</p>
<ul>
<li>$d_7 \left( 1 \right) = d_7 \left( \frac 1 2 \right) = d_7 \left( \frac 1 4 \right) = d_7 \left( \frac 1 5 \right) = 0$</li>
<li>$d_7 \left( \frac 1 3 \right) = 3$ since $\frac 1 3 = 0.333333{\color{red}3}333\ldots$</li>
<li>$d_7 \left( \frac 1 6 \right) = 6$ since $\frac 1 6 = 0.166666{\color{red}6}666\ldots$</li>
<li>$d_7 \left( \frac 1 7 \right) = 1$ since $\frac 1 7 = 0.142857{\color{red}1}428\ldots$</li>
</ul>
<p>Let $\displaystyle  S(n) = \sum_{k=1}^n d_n \left( \frac 1 k \right)$.</p>
<p>You are given:</p>
<ul>
<li>$S(7) = 0 + 0 + 3 + 0 + 0 + 6 + 1 = 10$</li>
<li>$S(100) = 418$</li>
</ul>
<p>Find $S(10^7)$.</p>
<hr>
<h2 id="倒数的第-N-位数字"><a href="#倒数的第-N-位数字" class="headerlink" title="倒数的第$N$位数字"></a><strong>倒数的第$N$位数字</strong></h2><p>记$d_n(x)$为$x$的小数点后第$n$位数字；若其小数部分不满$n$位则记为$0$。</p>
<p>例如：</p>
<ul>
<li>$d_7 \left( 1 \right) = d_7 \left( \frac 1 2 \right) = d_7 \left( \frac 1 4 \right) = d_7 \left( \frac 1 5 \right) = 0$</li>
<li>$d_7 \left( \frac 1 3 \right) = 3$，因为$\frac 1 3 = 0.333333{\color{red}3}333\ldots$</li>
<li>$d_7 \left( \frac 1 6 \right) = 6$，因为$\frac 1 6 = 0.166666{\color{red}6}666\ldots$</li>
<li>$d_7 \left( \frac 1 7 \right) = 1$，因为$\frac 1 7 = 0.142857{\color{red}1}428\ldots$</li>
</ul>
<p>记$\displaystyle  S(n) = \sum_{k=1}^n d_n \left( \frac 1 k \right)$。</p>
<p>已知：</p>
<ul>
<li>$S(7) = 0 + 0 + 3 + 0 + 0 + 6 + 1 = 10$</li>
<li>$S(100) = 418$</li>
</ul>
<p>求$S(10^7)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 821</title>
    <url>/821/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-821"><a href="#Problem-821" class="headerlink" title="Problem 821"></a><a href="https://projecteuler.net/problem=821">Problem 821</a></h1><hr>
<h2 id="123-Separable"><a href="#123-Separable" class="headerlink" title="$123$-Separable"></a><strong>$123$-Separable</strong></h2><p>A set, $S$, of integers is called <i>$123$-separable</i> if $S$, $2S$ and $3S$ are disjoint. Here $2S$ and $3S$ are obtained by multiplying all the elements in $S$ by $2$ and $3$ respectively.</p>
<p>Define $F(n)$ to be the maximum number of elements of<br>$$(S\cup 2S \cup 3S)\cap \{1,2,3,\ldots,n\}$$<br>where $S$ ranges over all $123$-separable sets.</p>
<p>For example, $F(6) = 5$ can be achieved with either $S = \{1,4,5\}$ or $S = \{1,5,6\}$.<br /><br>You are also given $F(20) = 19$.</p>
<p>Find $F(10^{16})$.</p>
<hr>
<h2 id="123-可分离集合"><a href="#123-可分离集合" class="headerlink" title="$123$可分离集合"></a><strong>$123$可分离集合</strong></h2><p>若整数集合$S$满足$S$、$2S$和$3S$互不相交，则称其为<i class=zh>$123$可分离集合</i>。其中，$2S$和$3S$分别指将$S$中的所有元素乘以$2$或$3$所构成的集合。</p>
<p>考虑所有$123$可分离集合$S$，定义$F(n)$为集合<br>$$(S\cup 2S \cup 3S)\cap \{1,2,3,\ldots,n\}$$<br>中元素的最大数目。</p>
<p>例如，$F(6) = 5$，对应的集合为$S = \{1,4,5\}$或$S = \{1,5,6\}$。<br /><br>已知$F(20) = 19$。</p>
<p>求$F(10^{16})$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 822</title>
    <url>/822/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-822"><a href="#Problem-822" class="headerlink" title="Problem 822"></a><a href="https://projecteuler.net/problem=822">Problem 822</a></h1><hr>
<h2 id="Square-the-Smallest"><a href="#Square-the-Smallest" class="headerlink" title="Square the Smallest"></a><strong>Square the Smallest</strong></h2><p>A list initially contains the numbers $2, 3, \dots, n$.<br /><br>At each round, the smallest number in the list is replaced by its square. If there is more than one such number, then only one of them is replaced.</p>
<p>For example, below are the first three rounds for $n = 5$:<br>$$[2, 3, 4, 5] \xrightarrow{(1)} [4, 3, 4, 5] \xrightarrow{(2)} [4, 9, 4, 5] \xrightarrow{(3)} [16, 9, 4, 5].$$</p>
<p>Let $S(n, m)$ be the sum of all numbers in the list after $m$ rounds.</p>
<p>For example, $S(5, 3) = 16 + 9 + 4 + 5 = 34$. Also $S(10, 100) \equiv 845339386 \pmod{1234567891}$.</p>
<p>Find $S(10^4, 10^{16})$. Give your answer modulo $1234567891$.</p>
<hr>
<h2 id="平方最小数"><a href="#平方最小数" class="headerlink" title="平方最小数"></a><strong>平方最小数</strong></h2><p>考虑初始数列$2, 3, \dots, n$。<br /><br>在每一轮中，将数列中的最小值替换为其平方。如果有多个最小值，则只替换一个。</p>
<p>例如，当$n=5$时，前三轮的操作如下：<br>$$[2, 3, 4, 5] \xrightarrow{(1)} [4, 3, 4, 5] \xrightarrow{(2)} [4, 9, 4, 5] \xrightarrow{(3)} [16, 9, 4, 5]$$</p>
<p>记$S(n, m)$为进行$m$轮后数列中所有数之和。</p>
<p>例如，$S(5, 3) = 16 + 9 + 4 + 5 = 34$。已知$S(10, 100) \equiv 845339386 \pmod{1234567891}$。</p>
<p>求$S(10^4, 10^{16})$，并将你的答案对$1234567891$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 823</title>
    <url>/823/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-823"><a href="#Problem-823" class="headerlink" title="Problem 823"></a><a href="https://projecteuler.net/problem=823">Problem 823</a></h1><hr>
<h2 id="Factor-Shuffle"><a href="#Factor-Shuffle" class="headerlink" title="Factor Shuffle"></a><strong>Factor Shuffle</strong></h2><p>A list initially contains the numbers $2, 3, \dots, n$.<br /><br>At each round, every number in the list is divided by its smallest prime factor. Then the product of these smallest prime factors is added to the list as a new number. Finally, all numbers that become $1$ are removed from the list.</p>
<p>For example, below are the first three rounds for $n = 5$:<br>$$[2, 3, 4, 5] \xrightarrow{(1)} [2, 60] \xrightarrow{(2)} [30, 4] \xrightarrow{(3)} [15, 2, 4].$$<br>Let $S(n, m)$ be the sum of all numbers in the list after $m$ rounds.<br /><br>For example, $S(5, 3) = 15 + 2 + 4 = 21$. Also $S(10, 100) = 257$.</p>
<p>Find $S(10^4, 10^{16})$. Give your answer modulo $1234567891$.</p>
<hr>
<h2 id="因数重排"><a href="#因数重排" class="headerlink" title="因数重排"></a><strong>因数重排</strong></h2><p>考虑初始数列$2, 3, \dots, n$。<br /><br>在每一轮中，将数列中的每个数都除以其最小的质因数，再将这些质因数的乘积加入数列，最后将所有的$1$从数列中移除。</p>
<p>例如，当$n=5$时，前三轮的操作如下：<br>$$[2, 3, 4, 5] \xrightarrow{(1)} [2, 60] \xrightarrow{(2)} [30, 4] \xrightarrow{(3)} [15, 2, 4]$$<br>记$S(n, m)$为进行$m$轮后数列中所有数之和。<br /><br>例如，$S(5, 3) = 15 + 2 + 4 = 21$。已知$S(10, 100) = 257$。</p>
<p>求$S(10^4, 10^{16})$，并将你的答案对$1234567891$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 824</title>
    <url>/824/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-824"><a href="#Problem-824" class="headerlink" title="Problem 824"></a><a href="https://projecteuler.net/problem=824">Problem 824</a></h1><hr>
<h2 id="Chess-Sliders"><a href="#Chess-Sliders" class="headerlink" title="Chess Sliders"></a><strong>Chess Sliders</strong></h2><p>A <i>Slider</i> is a chess piece that can move one square left or right.</p>
<p>This problem uses a cylindrical chess board where the left hand edge of the board is connected to the right hand edge. This means that a Slider that is on the left hand edge of the chess board can move to the right hand edge of the same row and vice versa.</p>
<p>Let $L(N,K)$ be the number of ways $K$ non-attacking Sliders can be placed on an $N \times N$ cylindrical chess-board.</p>
<p>For example, $L(2,2)=4$ and $L(6,12)=4204761$.</p>
<p>Find $L(10^9,10^{15}) \bmod \left(10^7+19\right)^2$.</p>
<hr>
<h2 id="滑块"><a href="#滑块" class="headerlink" title="滑块"></a><strong>滑块</strong></h2><p>有一种新的国际象棋棋子<i class=zh>滑块</i>，每次可以向左或向右移动一格。</p>
<p>考虑一个圆柱形棋盘，其左侧边界和右侧边界相连。也就是说，一个位于棋盘最左侧的滑块可以移动一步到达同一行的最右侧，反之亦然。</p>
<p>记$L(N,K)$为在$N \times N$的圆柱形棋盘上摆放$K$个互不攻击的滑块的方案数。</p>
<p>例如，$L(2,2)=4$，$L(6,12)=4204761$。</p>
<p>求$L(10^9,10^{15}) \bmod \left(10^7+19\right)^2$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 825</title>
    <url>/825/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-825"><a href="#Problem-825" class="headerlink" title="Problem 825"></a><a href="https://projecteuler.net/problem=825">Problem 825</a></h1><hr>
<h2 id="Chasing-Game"><a href="#Chasing-Game" class="headerlink" title="Chasing Game"></a><strong>Chasing Game</strong></h2><p>Two cars are on a circular track of total length $2n$, facing the same direction, initially distance $n$ apart.<br /><br>They move in turn. At each turn, the moving car will advance a distance of $1$, $2$ or $3$, with equal probabilities.<br /><br>The chase ends when the moving car reaches or goes beyond the position of the other car. The moving car is declared the winner.</p>
<p>Let $S(n)$ be the difference between the winning probabilities of the two cars.<br /><br>For example, when $n = 2$, the winning probabilities of the two cars are $\frac 9 {11}$ and $\frac 2 {11}$, and thus $S(2) = \frac 7 {11}$.</p>
<p>Let $\displaystyle T(N) = \sum_{n = 2}^N S(n)$.</p>
<p>You are given that $T(10) = 2.38235282$ rounded to $8$ digits after the decimal point.</p>
<p>Find $T(10^{14})$, rounded to $8$ digits after the decimal point.</p>
<hr>
<h2 id="追逐游戏"><a href="#追逐游戏" class="headerlink" title="追逐游戏"></a><strong>追逐游戏</strong></h2><p>在长度为$2n$的环形赛道上有两辆汽车沿相同方向前进，初始距离为$n$。<br /><br>两辆汽车轮流行动，每次行动时会以相等概率随机向前移动距离$1$、$2$或$3$。<br /><br>当其中一辆汽车追上或超过另一辆汽车时，游戏结束，前者获胜。</p>
<p>记$S(n)$为两车获胜概率之差。<br /><br>例如，当$n = 2$时，两车获胜的概率分别是$\frac 9 {11}$和$\frac 2 {11}$，因此$S(2) = \frac 7 {11}$。</p>
<p>记$\displaystyle T(N) = \sum_{n = 2}^N S(n)$。</p>
<p>已知$T(10) = 2.38235282$，四舍五入至小数点后$8$位。</p>
<p>求$T(10^{14})$，并将你的答案四舍五入至小数点后$8$位。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 826</title>
    <url>/826/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-826"><a href="#Problem-826" class="headerlink" title="Problem 826"></a><a href="https://projecteuler.net/problem=826">Problem 826</a></h1><hr>
<h2 id="Birds-on-a-Wire"><a href="#Birds-on-a-Wire" class="headerlink" title="Birds on a Wire"></a><strong>Birds on a Wire</strong></h2><p>Consider a wire of length $1$ unit between two posts. Every morning $n$ birds land on it randomly with every point on the wire equally likely to host a bird. The interval from each bird to its closest neighbour is then painted.</p>
<p>Define $F(n)$ to be the expected length of the wire that is painted. You are given $F(3) = 0.5$.</p>
<p>Find the average of $F(n)$ where $n$ ranges through all odd prime less than a million. Give your answer rounded to $10$ places after the decimal point.</p>
<hr>
<h2 id="电线上的小鸟"><a href="#电线上的小鸟" class="headerlink" title="电线上的小鸟"></a><strong>电线上的小鸟</strong></h2><p>两根电线杆之间有长为$1$的电线。每天早上，$n$只小鸟均匀随机地落在这段电线上。将每只小鸟和其最近邻居之间的电线染上颜色。</p>
<p>记$F(n)$为被染色电线的总长度的期望值。已知$F(3) = 0.5$。</p>
<p>当$n$取遍所有小于一百万的奇素数时，求所有$F(n)$的平均值。将你的答案四舍五入至小数点后$10$位。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 827</title>
    <url>/827/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-827"><a href="#Problem-827" class="headerlink" title="Problem 827"></a><a href="https://projecteuler.net/problem=827">Problem 827</a></h1><hr>
<h2 id="Pythagorean-Triple-Occurrence"><a href="#Pythagorean-Triple-Occurrence" class="headerlink" title="Pythagorean Triple Occurrence"></a><strong>Pythagorean Triple Occurrence</strong></h2><p>Define $Q(n)$ to be the smallest number that occurs in exactly $n$ <b>Pythagorean triples</b> $(a,b,c)$ where $a \lt b \lt c$.</p>
<p>For example, $15$ is the smallest number occurring in exactly $5$ Pythagorean triples:<br>$$(9,12,\mathbf{15})\quad (8,\mathbf{15},17)\quad (\mathbf{15},20,25)\quad (\mathbf{15},36,39)\quad (\mathbf{15},112,113)$$<br>and so $Q(5) = 15$.</p>
<p>You are also given $Q(10)=48$ and $Q(10^3)=8064000$.</p>
<p>Find $\displaystyle \sum_{k=1}^{18} Q(10^k)$. Give your answer modulo $409120391$.</p>
<hr>
<h2 id="毕达哥拉斯三元组频数"><a href="#毕达哥拉斯三元组频数" class="headerlink" title="毕达哥拉斯三元组频数"></a><strong>毕达哥拉斯三元组频数</strong></h2><p>记$Q(n)$为最小的、恰好出现在$n$个<b>毕达哥拉斯三元组</b>$(a,b,c)$中的数，其中$a \lt b \lt c$。</p>
<p>例如，$15$是最小的、恰好出现在$5$个毕达哥拉斯三元组中的数：<br>$$(9,12,\mathbf{15})\quad (8,\mathbf{15},17)\quad (\mathbf{15},20,25)\quad (\mathbf{15},36,39)\quad (\mathbf{15},112,113)$$<br>因此$Q(5) = 15$。</p>
<p>已知$Q(10)=48$，$Q(10^3)=8064000$。</p>
<p>求$\displaystyle \sum_{k=1}^{18} Q(10^k)$，并将你的答案对$409120391$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 828</title>
    <url>/828/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-828"><a href="#Problem-828" class="headerlink" title="Problem 828"></a><a href="https://projecteuler.net/problem=828">Problem 828</a></h1><hr>
<h2 id="Numbers-Challenge"><a href="#Numbers-Challenge" class="headerlink" title="Numbers Challenge"></a><strong>Numbers Challenge</strong></h2><p>It is a common recreational problem to make a target number using a selection of other numbers. In this problem you will be given six numbers and a target number.</p>
<p>For example, given the six numbers $2$, $3$, $4$, $6$, $7$, $25$, and a target of $211$, one possible solution is:<br>$$211 = (3+6)\times 25 − (4\times7)\div 2$$<br>This uses all six numbers. However, it is not necessary to do so. Another solution that does not use the $7$ is:<br>$$211 = (25−2)\times (6+3) + 4$$</p>
<p>Define the <i>score</i> of a solution to be the sum of the numbers used. In the above example problem, the two given solutions have scores $47$ and $40$ respectively. It turns out that this problem has no solutions with score less than $40$.</p>
<p>When combining numbers, the following rules must be observed:</p>
<ul>
<li>Each available number may be used at most once.</li>
<li>Only the four basic arithmetic operations are permitted: $+$, $-$, $\times$, $\div$.</li>
<li>All intermediate values must be positive integers, so for example $(3\div 2)$ is never permitted as a subexpression (even if the final answer is an integer).</li>
</ul>
<p>The attached file <a href="https://projecteuler.net/project/resources/p828_number_challenges.txt">number-challenges.txt</a> contains $200$ problems, one per line in the format:<br>$$211:2,3,4,6,7,25$$<br>where the number before the colon is the target and the remaining comma-separated numbers are those available to be used.</p>
<p>Numbering the problems $1$, $2$, …, $200$, we let $s_n$ be the minimum score of the solution to the $n$th problem. For example, $s_1=40$, as the first problem in the file is the example given above. Note that not all problems have a solution; in such cases we take $s_n=0$.</p>
<p>Find $\displaystyle\sum_{n=1}^{200} 3^n s_n$. Give your answer modulo $1005075251$.</p>
<hr>
<h2 id="凑数挑战"><a href="#凑数挑战" class="headerlink" title="凑数挑战"></a><strong>凑数挑战</strong></h2><p>从一些数出发，经过运算得到某个目标数，是一种常见的数学趣题。在本题中，每道题都有六个起始数和一个目标数。</p>
<p>例如，给定起始数$2$、$3$、$4$、$6$、$7$、$25$和目标数$211$，其中一个解是：<br>$$211 = (3+6)\times 25 − (4\times7)\div 2$$<br>这个解用到了所有六个起始数，但这并不是必须的。另一个没有用到$7$的解是：<br>$$211 = (25−2)\times (6+3) + 4$$</p>
<p>记一个解的<i class=zh>得分</i>为所有用到的起始数之和。在如上的例子中，两个解的得分分别是$47$和$40$，而且这道题不存在得分低于$40$的解。</p>
<p>对于运算过程，我们作出如下规定：</p>
<ul>
<li>每个起始数至多被使用一次。</li>
<li>只能使用四则运算：$+$、$-$、$\times$、$\div$。</li>
<li>所有中间结果必须是整数，因此如$(3\div 2)$之类的数不能作为中间结果（即使最终结果是整数）。</li>
</ul>
<p>在文本文件<a href="https://projecteuler.net/project/resources/p828_number_challenges.txt">number-challenges.txt</a>中包含有$200$个此类趣题，每行一个，其格式为：<br>$$211:2,3,4,6,7,25$$<br>其中，冒号前的数是目标数，冒号后用逗号隔开的是起始数。</p>
<p>将这些题目编号为$1$、$2$、……、$200$，并记$s_n$为第$n$题的最小得分。例如，第一题就是上述例题，因此$s_1=40$。有些题可能无解，此时记$s_n=0$。</p>
<p>求$\displaystyle\sum_{n=1}^{200} 3^n s_n$，并将你的答案对$1005075251$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 829</title>
    <url>/829/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-829"><a href="#Problem-829" class="headerlink" title="Problem 829"></a><a href="https://projecteuler.net/problem=829">Problem 829</a></h1><hr>
<h2 id="Integral-Fusion"><a href="#Integral-Fusion" class="headerlink" title="Integral Fusion"></a><strong>Integral Fusion</strong></h2><p>Given any integer $n&gt;1$ a <i>binary factor tree</i> $T(n)$ is defined to be:</p>
<ul>
<li>A tree with the single node $n$ when $n$ is prime.</li>
<li>A binary tree that has root node $n$, left subtree $T(a)$ and right subtree $T(b)$, when $n$ is not prime. Here $a$ and $b$ are positive integers such that $n = ab$, $a\le b$ and $b-a$ is the smallest.</li>
</ul>
<p>For example $T(20)$:</p>
<cemter>
<img src="/resources/images/0829_example1.jpg" alt="p829_example1.jpg" />
</center>

<p>We define $M(n)$ to be the smallest number that has a factor tree identical in shape to the factor tree for $n!!$, the <b>double factorial</b> of $n$.</p>
<p>For example, consider $9!! = 9\times 7\times 5\times 3\times 1 = 945$. The factor tree for $945$ is shown below together with the factor tree for $72$ which is the smallest number that has a factor tree of the same shape. Hence $M(9) = 72$.</p>
<center>
<img src="/resources/images/0829_example2.jpg" alt="p829_example2.jpg" />
</center>

<p>Find $\displaystyle\sum_{n=2}^{31} M(n)$.</p>
<hr>
<h2 id="整数合成"><a href="#整数合成" class="headerlink" title="整数合成"></a><strong>整数合成</strong></h2><p>给定任意整数$n&gt;1$，定义其对应的<i class=zh>二叉因子树</i> $T(n)$如下：</p>
<ul>
<li>若$n$是质数，则该树只有一个单独的结点$n$。</li>
<li>若$n$不是质数，则该树有根结点$n$、左子树$T(a)$和右子树$T(b)$，其中$a$和$b$都是正整数，且满足$n=ab$，$a\le b$，$b-a$取得最小值。</li>
</ul>
<p>例如，$T(20)$如下图所示:</p>
<cemter>
<img src="/resources/images/0829_example1.jpg" alt="p829_example1.jpg" />
</center>

<p>记$M(n)$为二叉因子树和$n!!$的二叉因子树形状相同的最小正整数，其中$n!!$表示$n$的<b>双阶乘</b>。</p>
<p>例如，$9!! = 9\times 7\times 5\times 3\times 1 = 945$。如下图所示，$945$和$72$的二叉因子树形状相同，且$72$是满足该条件的最小整数，因此$M(9) = 72$。</p>
<center>
<img src="/resources/images/0829_example2.jpg" alt="p829_example2.jpg" />
</center>

<p>求$\displaystyle\sum_{n=2}^{31} M(n)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 83</title>
    <url>/83/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-83"><a href="#Problem-83" class="headerlink" title="Problem 83"></a><a href="https://projecteuler.net/problem=83">Problem 83</a></h1><hr>
<h2 id="Path-Sum-Four-Ways"><a href="#Path-Sum-Four-Ways" class="headerlink" title="Path Sum: Four Ways"></a><strong>Path Sum: Four Ways</strong></h2><p>NOTE: This problem is a significantly more challenging version of <a href="/81">Problem 81</a>.</p>
<p>In the $5$ by $5$ matrix below, the minimal path sum from the top left to the bottom right, by moving left, right, up, and down, is indicated in bold red and is equal to $2297$.</p>
<p>$$<br>\begin{pmatrix}<br>\color{red}{131} &amp; 673 &amp; \color{red}{234} &amp; \color{red}{103} &amp; \color{red}{18}\\<br>\color{red}{201} &amp; \color{red}{96} &amp; \color{red}{342} &amp; 965 &amp; \color{red}{150}\\<br>630 &amp; 803 &amp; 746 &amp; \color{red}{422} &amp; \color{red}{111}\\<br>537 &amp; 699 &amp; 497 &amp; \color{red}{121} &amp; 956\\<br>805 &amp; 732 &amp; 524 &amp; \color{red}{37} &amp; \color{red}{331}<br>\end{pmatrix}<br>$$</p>
<p>Find the minimal path sum from the top left to the bottom right by moving left, right, up, and down in <a href="https://projecteuler.net/project/resources/p081_matrix.txt">matrix.txt</a> (right click and “Save Link/Target As…”), a 31K text file containing a $80$ by $80$ matrix.</p>
<hr>
<h2 id="路径和：四个方向"><a href="#路径和：四个方向" class="headerlink" title="路径和：四个方向"></a><strong>路径和：四个方向</strong></h2><p>注意：这是<a href="/81">第81题</a>的究极升级版。</p>
<p>在如下的$5\times 5$矩阵中，从左上角到右下角任意地向上、向下、向左或向右移动的最小路径和为$2297$，由标注红色的路径给出。</p>
<p>$$<br>\begin{pmatrix}<br>\color{red}{131} &amp; 673 &amp; \color{red}{234} &amp; \color{red}{103} &amp; \color{red}{18}\\<br>\color{red}{201} &amp; \color{red}{96} &amp; \color{red}{342} &amp; 965 &amp; \color{red}{150}\\<br>630 &amp; 803 &amp; 746 &amp; \color{red}{422} &amp; \color{red}{111}\\<br>537 &amp; 699 &amp; 497 &amp; \color{red}{121} &amp; 956\\<br>805 &amp; 732 &amp; 524 &amp; \color{red}{37} &amp; \color{red}{331}<br>\end{pmatrix}<br>$$</p>
<p>在文本文件<a href="https://projecteuler.net/project/resources/p081_matrix.txt">matrix.txt</a>中包含了一个$80\times80$的矩阵，求从该矩阵的左上角到右下角任意地向上、向下、向左或向右移动的最小路径和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 830</title>
    <url>/830/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-830"><a href="#Problem-830" class="headerlink" title="Problem 830"></a><a href="https://projecteuler.net/problem=830">Problem 830</a></h1><hr>
<h2 id="Binomials-and-Powers"><a href="#Binomials-and-Powers" class="headerlink" title="Binomials and Powers"></a><strong>Binomials and Powers</strong></h2><p>Let $\displaystyle S(n)=\sum\limits_{k=0}^{n}\binom{n}{k}k^n$.</p>
<p>You are given, $S(10)=142469423360$.</p>
<p>Find $S(10^{18})$. Submit your answer modulo $83^3 89^3 97^3$.</p>
<hr>
<h2 id="二项式和幂"><a href="#二项式和幂" class="headerlink" title="二项式和幂"></a><strong>二项式和幂</strong></h2><p>记$\displaystyle S(n)=\sum\limits_{k=0}^{n}\binom{n}{k}k^n$。</p>
<p>已知$S(10)=142469423360$。</p>
<p>求$S(10^{18})$，并将你的答案对$83^3 89^3 97^3$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 831</title>
    <url>/831/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-831"><a href="#Problem-831" class="headerlink" title="Problem 831"></a><a href="https://projecteuler.net/problem=831">Problem 831</a></h1><hr>
<h2 id="Triple-Product"><a href="#Triple-Product" class="headerlink" title="Triple Product"></a><strong>Triple Product</strong></h2><p>Let $g(m)$ be the integer defined by the following double sum of products of binomial coefficients:</p>
<p>$$\sum_{j=0}^m\sum_{i = 0}^j (-1)^{j-i}\binom mj \binom ji \binom{j+5+6i}{j+5}.$$</p>
<p>You are given that $g(10) = 127278262644918$.<br /><br>Its first (most significant) five digits are $12727$.<br /><br>Find the first ten digits of $g(142857)$ when written in base $7$.</p>
<hr>
<h2 id="三个二项式系数的乘积"><a href="#三个二项式系数的乘积" class="headerlink" title="三个二项式系数的乘积"></a><strong>三个二项式系数的乘积</strong></h2><p>记$g(m)$为如下表达式（对一系列二项式系数的乘积进行双重求和）所定义的整数：</p>
<p>$$\sum_{j=0}^m\sum_{i = 0}^j (-1)^{j-i}\binom mj \binom ji \binom{j+5+6i}{j+5}.$$</p>
<p>已知$g(10) = 127278262644918$。<br /><br>它的前五位数字是$12727$。<br /><br>求$g(142857)$的$7$进制表示的前十位数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 833</title>
    <url>/833/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-833"><a href="#Problem-833" class="headerlink" title="Problem 833"></a><a href="https://projecteuler.net/problem=833">Problem 833</a></h1><hr>
<h2 id="Square-Triangle-Products"><a href="#Square-Triangle-Products" class="headerlink" title="Square Triangle Products"></a><strong>Square Triangle Products</strong></h2><p>Triangle numbers $T_k$ are integers of the form $k(k+1)/2$.<br /><br>A few triangle numbers happen to be perfect squares like $T_1=1$ and $T_8=36$, but more can be found when considering the product of two triangle numbers. For example, $T_2 \cdot T_{24}=3 \cdot 300=30^2$.</p>
<p>Let $S(n)$ be the sum of $c$ for all integers triples $(a, b, c)$ with $0\lt c \le n$, $c^2=T_a \cdot T_b$ and $0&lt;a&lt;b$. For example, $S(100)= \sqrt{T_1 T_8}+\sqrt{T_2 T_{24}}+\sqrt{T_1 T_{49}}+\sqrt{T_3 T_{48}}=6+30+35+84=155$.</p>
<p>You are given $S(10^5)=1479802$ and $S(10^9)=241614948794$.</p>
<p>Find $S(10^{35})$. Give your answer modulo $136101521$.</p>
<hr>
<h2 id="恰为平方数的三角形数乘积"><a href="#恰为平方数的三角形数乘积" class="headerlink" title="恰为平方数的三角形数乘积"></a><strong>恰为平方数的三角形数乘积</strong></h2><p>三角形数$T_k$是指能表达为$k(k+1)/2$的整数。<br /><br>有些三角形数恰好就是完全平方数，比如$T_1=1$和$T_8=36$。如果考虑两个三角形数的乘积，那么可以找到更多的完全平方数。例如，$T_2 \cdot T_{24}=3 \cdot 300=30^2$。</p>
<p>考虑所有同时满足$0 \lt c \le n$、$c^2=T_a \cdot T_b$和$0&lt;a&lt;b$的整数三元组$(a,b,c)$，并记$S(n)$为所有此类三元组中整数$c$之和。例如，$S(100)= \sqrt{T_1 T_8}+\sqrt{T_2 T_{24}}+\sqrt{T_1 T_{49}}+\sqrt{T_3 T_{48}}=6+30+35+84=155$。</p>
<p>已知$S(10^5)=1479802$，$S(10^9)=241614948794$。</p>
<p>求$S(10^{35})$，并将你的答案对$136101521$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 832</title>
    <url>/832/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-832"><a href="#Problem-832" class="headerlink" title="Problem 832"></a><a href="https://projecteuler.net/problem=832">Problem 832</a></h1><hr>
<h2 id="Mex-Sequence"><a href="#Mex-Sequence" class="headerlink" title="Mex Sequence"></a><strong>Mex Sequence</strong></h2><p>In this problem $\oplus$ is used to represent the bitwise <strong>exclusive or</strong> of two numbers.<br>Starting with blank paper repeatedly do the following:</p>
<ol>
<li>Write down the smallest positive integer $a$ which is currently not on the paper;</li>
<li>Find the smallest positive integer $b$ such that neither $b$ nor $(a \oplus b)$ is currently on the paper. Then write down both $b$ and $(a \oplus b)$.</li>
</ol>
<p>After the first round ${1,2,3}$ will be written on the paper. In the second round $a=4$ and because $(4 \oplus 5)$, $(4 \oplus 6)$ and $(4 \oplus 7)$ are all already written $b$ must be $8$.</p>
<p>After $n$ rounds there will be $3n$ numbers on the paper. Their sum is denoted by $M(n)$.<br /><br>For example, $M(10) = 642$ and $M(1000) = 5432148$.</p>
<p>Find $M(10^{18})$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="最小排除值序列"><a href="#最小排除值序列" class="headerlink" title="最小排除值序列"></a><strong>最小排除值序列</strong></h2><p>在本题中，符号$\oplus$被用于表示两个数的按位<strong>异或</strong>。<br>请拿一张空白的纸，并不断重复如下操作：</p>
<ol>
<li>写下最小的、未被写在纸上的正整数$a$；</li>
<li>求最小的、使得$b$和$(a \oplus b)$都未被写在纸上的正整数$b$，并将$b$和$(a \oplus b)$都写在纸上。</li>
</ol>
<p>经过第一轮操作，${1,2,3}$将被写在纸上。在第二轮中$a=4$，同时因为$(4 \oplus 5)$、$(4 \oplus 6)$和$(4 \oplus 7)$都已经写在纸上了，因此$b$只能是$8$。</p>
<p>经过$n$轮操作，纸上将会有$3n$个数，记这些数之和为$M(n)$。<br /><br>例如，$M(10) = 642$，$M(1000) = 5432148$。</p>
<p>求$M(10^{18})$，并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<p><i class=zh>译注：原标题中的“Mex”是“Minimum Excluded Value”的简写，因此翻译为“最小排除值”。</i></p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 834</title>
    <url>/834/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-834"><a href="#Problem-834" class="headerlink" title="Problem 834"></a><a href="https://projecteuler.net/problem=834">Problem 834</a></h1><hr>
<h2 id="Add-and-Divide"><a href="#Add-and-Divide" class="headerlink" title="Add and Divide"></a><strong>Add and Divide</strong></h2><p>A sequence is created by starting with a positive integer $n$ and incrementing by $(n+m)$ at the $m$th step. If $n=10$, the resulting sequence will be $21,33,46,60,75,91,108,126,\ldots$.</p>
<p>Let $S(n)$ be the set of indices $m$, for which the $m$th term in the sequence is divisible by $(n+m)$.<br /><br>For example, $S(10)={5,8,20,35,80}$.</p>
<p>Define $T(n)$ to be the sum of the indices in $S(n)$. For example, $T(10) = 148$ and $T(10^2)=21828$.</p>
<p>Let $\displaystyle U(N)=\sum_{n=3}^{N}T(n)$. You are given, $U(10^2)=612572$.</p>
<p>Find $U(1234567)$.</p>
<hr>
<h2 id="相加与整除"><a href="#相加与整除" class="headerlink" title="相加与整除"></a><strong>相加与整除</strong></h2><p>构造如下数列：选择任意正整数$n$，在第$m$步时给当前的整数增加$(n+m)$并作为数列的第$m$项。例如，若$n=10$，则构造的数列为$21,33,46,60,75,91,108,126,\ldots$</p>
<p>集合$S(n)$包含所有满足下列条件的下标$m$：数列的第$m$项能够被$(n+m)$整除。<br /><br>例如，$S(10)={5,8,20,35,80}$。</p>
<p>记$T(n)$为$S(n)$中所有下标之和。例如，$T(10) = 148$，$T(10^2)=21828$。</p>
<p>记$\displaystyle U(N)=\sum_{n=3}^{N}T(n)$。已知$U(10^2)=612572$。</p>
<p>求$U(1234567)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 835</title>
    <url>/835/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-835"><a href="#Problem-835" class="headerlink" title="Problem 835"></a><a href="https://projecteuler.net/problem=835">Problem 835</a></h1><hr>
<h2 id="Supernatural-Triangles"><a href="#Supernatural-Triangles" class="headerlink" title="Supernatural Triangles"></a><strong>Supernatural Triangles</strong></h2><p>A <strong>Pythagorean triangle</strong> is called <em>supernatural</em> if two of its three sides are consecutive integers.</p>
<p>Let $S(N)$ be the sum of the perimeters of all distinct supernatural triangles with perimeters less than or equal to $N$.<br /><br>For example, $S(100) = 258$ and $S(10000) = 172004$.</p>
<p>Find $S(10^{10^{10}})$. Give your answer modulo $1234567891$.</p>
<hr>
<h2 id="超自然三角形"><a href="#超自然三角形" class="headerlink" title="超自然三角形"></a><strong>超自然三角形</strong></h2><p>若一个<strong>毕达哥拉斯三角形</strong>（<i class=zh>译注：三边长均为正整数的直角三角形</i>）的三边中有两边长是连续整数，则称其为<i class=zh>超自然三角形</i>。</p>
<p>考虑所有不同的、周长小于等于$N$的超自然三角形，记其周长之和为$S(N)$。<br /><br>例如，$S(100) = 258$，$S(10000) = 172004$。</p>
<p>求$S(10^{10^{10}})$，并将你的答案对$1234567891$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 836</title>
    <url>/836/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-836"><a href="#Problem-836" class="headerlink" title="Problem 836"></a><a href="https://projecteuler.net/problem=836">Problem 836</a></h1><hr>
<h2 id="A-Bold-Proposition"><a href="#A-Bold-Proposition" class="headerlink" title="A Bold Proposition"></a><strong>A Bold Proposition</strong></h2><p>Let $A$ be an <strong>affine plane</strong> over a <strong>radically integral local field</strong> $F$ with residual characteristic $p$.</p>
<p>We consider an <strong>open oriented line section</strong> $U$ of $A$ with normalized Haar measure $m$.</p>
<p>Define $f(m, p)$ as the maximal possible discriminant of the <strong>jacobian</strong> associated to the <strong>orthogonal kernel embedding</strong> of $U$ into $A$.</p>
<p>Find $f(20230401, 57)$. Give as your answer the concatenation of the first letters of each bolded word.</p>
<hr>
<h2 id="加粗的命题"><a href="#加粗的命题" class="headerlink" title="加粗的命题"></a><strong>加粗的命题</strong></h2><p>考虑<strong>仿射平面(affine plane)</strong>$A$，定义在<strong>根式积分局部域(radically integral local field)</strong>$F$上，其剩余特征值为$p$。</p>
<p>考虑$A$的一个<strong>开有向直线截面(open oriented line section)</strong>$U$，其正规化哈尔测度为$m$。</p>
<p>定义$f(m, p)$为特定<strong>雅各比矩阵(jacobian)</strong>的判别式的最大值，该矩阵对应于$U$对$A$的<strong>正交核嵌入(orthogonal kernel embedding)</strong>。</p>
<p>求$f(20230401, 57)$，并将本文中所有加粗单词的首字母连起来作为你的答案。</p>
<p><i class=zh>译注：愚人节快乐！</i></p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 837</title>
    <url>/837/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-837"><a href="#Problem-837" class="headerlink" title="Problem 837"></a><a href="https://projecteuler.net/problem=837">Problem 837</a></h1><hr>
<h2 id="Amidakuji"><a href="#Amidakuji" class="headerlink" title="Amidakuji"></a><strong>Amidakuji</strong></h2><p><a href="https://en.wikipedia.org/wiki/Amidakuji">Amidakuji</a> (Japanese: 阿弥陀籤) is a method for producing a random permutation of a set of objects.</p>
<p>In the beginning, a number of parallel vertical lines are drawn, one for each object. Then a specified number of horizontal rungs are added, each lower than any previous rungs. Each rung is drawn as a line segment spanning a randomly select pair of adjacent vertical lines.</p>
<p>For example, the following diagram depicts an Amidakuji with three objects ($A$, $B$, $C$) and six rungs:</p>
<div style="text-align:center;">
<img src="/resources/images/0837_amidakuji.png" alt="0837_amidakuji.png">
</div>

<p>The coloured lines in the diagram illustrate how to form the permutation. For each object, starting from the top of its vertical line, trace downwards but follow any rung encountered along the way, and record which vertical we end up on. In this example, the resulting permutation happens to be the identity: $A\mapsto A$, $B\mapsto B$, $C\mapsto C$.</p>
<p>Let $a(m, n)$ be the number of different three-object Amidakujis that have $m$ rungs between $A$ and $B$, and $n$ rungs between $B$ and $C$, and whose outcome is the identity permutation. For example, $a(3, 3) = 2$, because the Amidakuji shown above and its mirror image are the only ones with the required property.</p>
<p>You are also given that $a(123, 321) \equiv 172633303 \pmod{1234567891}$.</p>
<p>Find $a(123456789, 987654321)$. Give your answer modulo $1234567891$.</p>
<hr>
<h2 id="阿弥陀签"><a href="#阿弥陀签" class="headerlink" title="阿弥陀签"></a><strong>阿弥陀签</strong></h2><p><a href="https://en.wikipedia.org/wiki/Amidakuji">阿弥陀签</a>是一种对物品进行随机重排的方法。</p>
<p>首先，对每一个待排列的物品绘制一条竖线。然后，在这些竖线间自上向下随机地绘制一些横档，每个横档连接任意两条相邻的竖线。</p>
<p>例如，下图绘制了对三个物品（$A$、$B$、$C$）进行重排的阿弥陀签，其中有六个横档：</p>
<div style="text-align:center;">
<img src="/resources/images/0837_amidakuji.png" alt="0837_amidakuji.png">
</div>

<p>图中的彩色折线展示了如何决定最终的重排结果。对于每个物品，首先从其对应的竖线顶端出发向下移动，每当遇到横档时则必须沿横档移动到另一竖线，直至抵达竖线底端。在这个例子中，最终的重排结果恰好保持不变：$A\mapsto A$，$B\mapsto B$，$C\mapsto C$。</p>
<p>考虑所有不同的、对三个物品进行重排的阿弥陀签，记$a(m,n)$为其中在竖线$A$与竖线$B$之间有$m$个横档、在竖线$B$与竖线$C$之间有$n$个横档且最终重排结果不变的阿弥陀签的数量。例如，$a(3, 3) = 2$，对应的阿弥陀签为上图所展示的这种以及其左右翻转的镜像。</p>
<p>已知$a(123, 321) \equiv 172633303 \pmod{1234567891}$。</p>
<p>求$a(123456789, 987654321)$，并将你的答案对$1234567891$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 838</title>
    <url>/838/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-838"><a href="#Problem-838" class="headerlink" title="Problem 838"></a><a href="https://projecteuler.net/problem=838">Problem 838</a></h1><hr>
<h2 id="Not-Coprime"><a href="#Not-Coprime" class="headerlink" title="Not Coprime"></a><strong>Not Coprime</strong></h2><p>Let $f(N)$ be the smallest positive integer that is not coprime to any positive integer $n \le N$ whose least significant digit is $3$.</p>
<p>For example $f(40)$ equals to $897 = 3 \cdot 13 \cdot 23$ since it is not coprime to any of $3,13,23,33$. By taking the <strong><a href="https://en.wikipedia.org/wiki/Natural_logarithm">natural logarithm</a></strong> (log to base $e$) we obtain $\ln f(40) = \ln 897 \approx 6.799056$ when rounded to six digits after the decimal point.</p>
<p>You are also given $\ln f(2800) \approx 715.019337$.</p>
<p>Find $f(10^6)$. Enter its natural logarithm rounded to six digits after the decimal point.</p>
<hr>
<h2 id="不互质"><a href="#不互质" class="headerlink" title="不互质"></a><strong>不互质</strong></h2><p>记$f(N)$为最小的、与所有小于等于$N$且末位为$3$的数都不互质的正整数。</p>
<p>例如，$f(40)$等于$897 = 3 \cdot 13 \cdot 23$，因为它和$3,13,23,33$中的任意一个都不互质。对这个数取<strong><a href="https://en.wikipedia.org/wiki/Natural_logarithm">自然对数</a></strong>（以$e$为底的对数）并保留六位小数，可得$\ln f(40) = \ln 897 \approx 6.799056$。</p>
<p>已知$\ln f(2800) \approx 715.019337$。</p>
<p>求$f(10^6)$，取其自然对数并保留六位小数作为答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 839</title>
    <url>/839/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-839"><a href="#Problem-839" class="headerlink" title="Problem 839"></a><a href="https://projecteuler.net/problem=839">Problem 839</a></h1><hr>
<h2 id="Beans-in-Bowls"><a href="#Beans-in-Bowls" class="headerlink" title="Beans in Bowls"></a><strong>Beans in Bowls</strong></h2><p>The sequence $S_n$ is defined by $S_0 = 290797$ and $S_n = S_{n - 1}^2 \bmod 50515093$ for $n&gt;0$.</p>
<p>There are $N$ bowls indexed $0,1,\dots ,N-1$. Initially there are $S_n$ beans in bowl $n$.</p>
<p>At each step, the smallest index $n$ is found such that bowl $n$ has strictly more beans than bowl $n+1$. Then one bean is moved from bowl $n$ to bowl $n+1$.</p>
<p>Let $B(N)$ be the number of steps needed to sort the bowls into non-descending order.<br /><br>For example, $B(5) = 0$, $B(6) = 14263289$ and $B(100)=3284417556$.</p>
<p>Find $B(10^7)$.</p>
<hr>
<h2 id="碗中豆"><a href="#碗中豆" class="headerlink" title="碗中豆"></a><strong>碗中豆</strong></h2><p>序列$S_n$按如下方式定义：$S_0 = 290797$；对于$n&gt;0$，$S_n = S_{n - 1}^2 \bmod 50515093$。</p>
<p>有$N$个碗，其编号分别为$0,1,\dots,N-1$。一开始，编号为$n$的碗中放有$S_n$颗豆子。</p>
<p>接下来的每一步中，先选择编号最小的、豆子数目比后一个碗严格更多的碗$n$，再从碗$n$中移动一颗豆子到碗$n+1$。</p>
<p>记$B(N)$为将碗中豆子数目调整为非递降序列所需的步数。<br /><br>例如，$B(5) = 0$，$B(6) = 14263289$，$B(100)=3284417556$。</p>
<p>求$B(10^7)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 840</title>
    <url>/840/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-840"><a href="#Problem-840" class="headerlink" title="Problem 840"></a><a href="https://projecteuler.net/problem=840">Problem 840</a></h1><hr>
<h2 id="Sum-of-Products"><a href="#Sum-of-Products" class="headerlink" title="Sum of Products"></a><strong>Sum of Products</strong></h2><p>A <strong>partition</strong> of $n$ is a set of positive integers for which the sum equals $n$.<br /><br>The partitions of $5$ are:<br /><br>$\{5\},\{1,4\},\{2,3\},\{1,1,3\},\{1,2,2\},\{1,1,1,2\}$ and $\{1,1,1,1,1\}$.</p>
<p>Further we define the function $D(p)$ as:<br>$$<br>\begin{align}<br>D(1) &amp; = 1 \\<br>D(p) &amp; = 1, \text{ for any prime } p \\<br>D(pq) &amp; = D(p)q + pD(q), \text{ for any positive integers } p,q &gt; 1.<br>\end{align}<br>$$</p>
<p>Now let ${a_1, a_2,\ldots,a_k}$ be a partition of $n$.<br /><br>We assign to this particular partition the value:<br>$$P=\prod_{j=1}^{k}D(a_j). $$</p>
<p>$G(n)$ is the sum of $P$ for all partitions of $n$.<br /><br>We can verify that $G(10) = 164$.</p>
<p>We also define:<br>$$S(N)=\sum_{n=1}^{N}G(n).$$<br>You are given $S(10)=396$.<br /><br>Find $S(5\times 10^4) \mod 999676999$.</p>
<hr>
<h2 id="乘积之和"><a href="#乘积之和" class="headerlink" title="乘积之和"></a><strong>乘积之和</strong></h2><p>$n$的一个<strong>分拆</strong>是指一组无序且和为$n$的正整数。<br /><br>例如，$5$的分拆包括：<br /><br>$\{5\}$、$\{1,4\}$、$\{2,3\}$、$\{1,1,3\}$、$\{1,2,2\}$、$\{1,1,1,2\}$和$\{1,1,1,1,1\}$。</p>
<p>进一步定义函数$D(p)$如下：<br>$$<br>\begin{align}<br>D(1) &amp; = 1 \\<br>D(p) &amp; = 1, \text{对于任意质数} p \\<br>D(pq) &amp; = D(p)q + pD(q), \text{对于任意正整数} p,q &gt; 1.<br>\end{align}<br>$$</p>
<p>考虑$n$的分拆${a_1, a_2,\ldots,a_k}$。<br /><br>这一分拆的得分是：<br>$$P=\prod_{j=1}^{k}D(a_j)$$</p>
<p>记$G(n)$为$n$的所有分拆的得分$P$之和。<br /><br>可以验证$G(10) = 164$。</p>
<p>再定义：<br>$$S(N)=\sum_{n=1}^{N}G(n)$$<br>已知$S(10)=396$。<br /><br>求$S(5\times 10^4) \mod 999676999$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 84</title>
    <url>/84/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-84"><a href="#Problem-84" class="headerlink" title="Problem 84"></a><a href="https://projecteuler.net/problem=84">Problem 84</a></h1><hr>
<h2 id="Monopoly-Odds"><a href="#Monopoly-Odds" class="headerlink" title="Monopoly Odds"></a><strong>Monopoly Odds</strong></h2><p>In the game, <i>Monopoly</i>, the standard board is set up in the following way:</p>
<center>
<img src="/resources/images/0084_monopoly_board.png" />
</center>

<p>A player starts on the GO square and adds the scores on two $6$-sided dice to determine the number of squares they advance in a clockwise direction. Without any further rules we would expect to visit each square with equal probability: $2.5\%$. However, landing on G2J (Go To Jail), CC (community chest), and CH (chance) changes this distribution.</p>
<p>In addition to G2J, and one card from each of CC and CH, that orders the player to go directly to jail, if a player rolls three consecutive doubles, they do not advance the result of their $3$rd roll. Instead they proceed directly to jail.</p>
<p>At the beginning of the game, the CC and CH cards are shuffled. When a player lands on CC or CH they take a card from the top of the respective pile and, after following the instructions, it is returned to the bottom of the pile. There are sixteen cards in each pile, but for the purpose of this problem we are only concerned with cards that order a movement; any instruction not concerned with movement will be ignored and the player will remain on the CC/CH square.</p>
<ul>
<li>Community Chest ($2/16$ cards):<ol>
<li>Advance to GO</li>
<li>Go to JAIL</li>
</ol>
</li>
<li>Chance ($10/16$ cards)<ol>
<li>Advance to GO</li>
<li>Go to JAIL</li>
<li>Go to C1</li>
<li>Go to E3</li>
<li>Go to H2</li>
<li>Go to R1</li>
<li>Go to next R (railway company)</li>
<li>Go to next R</li>
<li>Go to next U (utility company)</li>
<li>Go back $3$ squares</li>
</ol>
</li>
</ul>
<p>The heart of this problem concerns the likelihood of visiting a particular square. That is, the probability of finishing at that square after a roll. For this reason it should be clear that, with the exception of G2J for which the probability of finishing on it is zero, the CH squares will have the lowest probabilities, as $5/8$ request a movement to another square, and it is the final square that the player finishes at on each roll that we are interested in. We shall make no distinction between “Just Visiting” and being sent to JAIL, and we shall also ignore the rule about requiring a double to “get out of jail”, assuming that they pay to get out on their next turn.</p>
<p>By starting at GO and numbering the squares sequentially from $00$ to $39$ we can concatenate these two-digit numbers to produce strings that correspond with sets of squares.</p>
<p>Statistically it can be shown that the three most popular squares, in order, are JAIL ($6.24\%$) = Square $10$, E3 ($3.18\%$) = Square $24$, and GO ($3.09\%$) = Square $00$. So these three most popular squares can be listed with the six-digit modal string: $102400$.</p>
<p>If, instead of using two $6$-sided dice, two $4$-sided dice are used, find the six-digit modal string.</p>
<hr>
<h2 id="大富翁几率"><a href="#大富翁几率" class="headerlink" title="大富翁几率"></a><strong>大富翁几率</strong></h2><p><i class=zh>大富翁</i>游戏的标准棋盘大致如下图所示：</p>
<center>
<img src="/resources/images/0084_monopoly_board.png" />
</center>

<p>玩家从起点GO出发，掷两个六面的骰子并将点数和相加，作为本轮前进的步数。如果没有其它规则，那么落在每一格上的概率应该是$2.5\%$。但是，由于G2J（入狱）、CC（宝箱卡）和CH（机会卡）的存在，这个分布会有所改变。</p>
<p>除了落在G2J上，或者在CC或CH上抽到入狱卡之外，如果玩家连续三次都掷出两个相同的点数，则在第三次时将会直接入狱。</p>
<p>游戏开始时，宝箱卡和机会卡将被洗牌打乱。当一个玩家落在CC或CH上时，他们从宝箱卡和机会卡的牌堆最上方取一张卡，遵循指令行动，并将该卡放回牌堆的最下方。宝箱卡和机会卡都各有$16$张，但我们只关心会移动位置的卡片，其它的卡片我们都将无视它们的效果。</p>
<ul>
<li>宝箱卡 ($2/16$ 张卡):<ul>
<li>回到起点GO</li>
<li>进入监狱JAIL</li>
</ul>
</li>
<li>机会卡 ($10/16$ 张卡):<ul>
<li>回到起点GO</li>
<li>进入监狱JAIL</li>
<li>移动到C1</li>
<li>移动到E3</li>
<li>移动到H2</li>
<li>移动到R1</li>
<li>移动到下一个R（铁路公司）</li>
<li>移动到下一个R</li>
<li>移动到下一个U（公共服务公司）</li>
<li>后退三步</li>
</ul>
</li>
</ul>
<p>这道题主要考察掷出骰子后停在某个特定方格上的概率。显然，除了停在G2J上的可能性为$0$之外，停在CH格的可能性最小，因为有$5/8$的情况下玩家会移动到另一格。我们不区分是被送进监狱还是恰好移动到监狱这一格，而且不考虑需要掷出两个相同的点数才能出狱的要求，而是假定进入监狱的第二轮就会自动出狱。</p>
<p>从起点GO开始，将方格依次标记$00$到$39$，我们就可以将这些两位数连接起来表示方格的序列。</p>
<p>统计学上来说，三个最有可能停下的方格分别是JAIL（$6.24\%$）或方格$10$，E3（$3.18\%$）或方格$24$，以及GO（$3.09\%$）或方格$00$。这三个方格可以用一个六位数字串表示：$102400$。</p>
<p>假设我们不用两个六面的骰子，而是用两个四面的骰子进行游戏，求出三个最有可能停下的方格所构成的六位数字串。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 841</title>
    <url>/841/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-841"><a href="#Problem-841" class="headerlink" title="Problem 841"></a><a href="https://projecteuler.net/problem=841">Problem 841</a></h1><hr>
<h2 id="Regular-Star-Polygons"><a href="#Regular-Star-Polygons" class="headerlink" title="Regular Star Polygons"></a><strong>Regular Star Polygons</strong></h2><p>The regular star polygon $\{p/q\}$, for coprime integers $p,q$ with $p &gt; 2q &gt; 0$, is a polygon formed from $p$ edges of equal length and equal internal angles, such that tracing the complete polygon wraps $q$ times around the centre. For example, $\{8/3\}$ is illustrated below:</p>
<div align="center"><img src="/resources/images/0841_star_polygon_8_3.png" alt="{8/3}" height="250"></div>


<p>The edges of a regular star polygon intersect one another, dividing the interior into several regions. Define the <em>alternating shading</em> of a regular star polygon to be a selection of such regions to shade, such that every piece of every edge has a shaded region on one side and an unshaded region on the other, with the exterior of the polygon unshaded. For example, the above image shows the alternating shading (in green) of $\{8/3\}$.</p>
<p>Let $A(p, q)$ be the area of the alternating shading of $\{p/q\}$, assuming that its inradius is $1$. (The <strong>inradius</strong> of a regular polygon, star or otherwise, is the distance from its centre to the midpoint of any of its edges.) For example, in the diagram above, it can be shown that central shaded octagon has area $8(\sqrt{2}-1)$ and each point’s shaded kite has area $2(\sqrt{2}-1)$, giving $A(8,3) = 24(\sqrt{2}-1) \approx 9.9411254970$.</p>
<p>You are also given that $A(130021, 50008)\approx 10.9210371479$, rounded to $10$ digits after the decimal point.</p>
<p>Find $\sum_{n=3}^{34} A(F_{n+1},F_{n-1})$, where $F_j$ is the Fibonacci sequence with $F_1=F_2=1$ (so $A(F_{5+1},F_{5-1}) = A(8,3)$). Give your answer rounded to $10$ digits after the decimal point.</p>
<hr>
<h2 id="星形正多边形"><a href="#星形正多边形" class="headerlink" title="星形正多边形"></a><strong>星形正多边形</strong></h2><p>对于互质且满足$p&gt;2q&gt;0$的整数对$p,q$，可以绘制星形正多边形$\{p/q\}$。这一多边形有$p$条等长的边和$p$个相等的内角，且沿多边形移动时环绕其中心恰好$q$圈。例如，星形正多边形$\{8/3\}$如下图所示：</p>
<div align="center"><img src="/resources/images/0841_star_polygon_8_3.png" alt="{8/3}" height="250"></div>

<p>星形正多边形的边可以彼此相交，将其内部分成多个区域。对星形正多边形进行<i class=zh>交替上色</i>，是指对其中一部分区域进行上色，使得每一条边的每一截都恰好只有一侧被上色而另一侧未上色（多边形外部不上色）。例如，上图展示的是对星形正多边形$\{8/3\}$进行交替上色（绿色部分）的结果。</p>
<p>对内半径为$1$的星形正多边形$\{p/q\}$进行交替上色后，记上色区域的面积为$A(p, q)$。（任意正多边形或星形正多边形的<strong>内半径</strong>是指其中心和任意一条边的中点的距离。）例如，在上图中，正中位置被上色的八边形面积为$8(\sqrt{2}-1)$，每个顶点处被上色的筝形面积为$2(\sqrt{2}-1)$，因此$A(8,3) = 24(\sqrt{2}-1) \approx 9.9411254970$。</p>
<p>已知$A(130021, 50008)\approx 10.9210371479$，保留$10$位小数。</p>
<p>求$\sum_{n=3}^{34} A(F_{n+1},F_{n-1})$，其中$F_j$是由$F_1=F_2=1$开始的斐波那契数列的第$j$项（例如，$A(F_{5+1},F_{5-1}) = A(8,3)$），并将你的答案保留$10$位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 842</title>
    <url>/842/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-842"><a href="#Problem-842" class="headerlink" title="Problem 842"></a><a href="https://projecteuler.net/problem=842">Problem 842</a></h1><hr>
<h2 id="Irregular-Star-Polygons"><a href="#Irregular-Star-Polygons" class="headerlink" title="Irregular Star Polygons"></a><strong>Irregular Star Polygons</strong></h2><p>Given $n$ equally spaced points on a circle, we define an $n$<em>-star polygon</em> as an $n$-gon having those $n$ points as vertices. Two $n$-star polygons differing by a rotation/reflection are considered <strong>different</strong>.</p>
<p>For example, there are twelve $5$-star polygons shown below.</p>
<div style="text-align:center"><img src="/resources/images/0842_5-agons.jpg" alt="0842_5-agons.jpg"></div>

<p>For an $n$-star polygon $S$, let $I(S)$ be the number of its self intersection points.<br /><br>Let $T(n)$ be the sum of $I(S)$ over all $n$-star polygons $S$.<br /><br>For the example above $T(5) = 20$ because in total there are $20$ self intersection points.</p>
<p>Some star polygons may have intersection points made from more than two lines. These are only counted once. For example, $S$, shown below is one of the sixty $6$-star polygons. This one has $I(S) = 4$.</p>
<div style="text-align:center"><img src="/resources/images/0842_6-agon.jpg" alt="0842_6-agon.jpg"></div>

<p>You are also given that $T(8) = 14640$.</p>
<p>Find $\displaystyle \sum_{n = 3}^{60}T(n)$. Give your answer modulo $(10^9 + 7)$.</p>
<hr>
<h2 id="不规则星形多边形"><a href="#不规则星形多边形" class="headerlink" title="不规则星形多边形"></a><strong>不规则星形多边形</strong></h2><p>在圆上取$n$个等距离的点，称以这$n$个点为顶点的$n$边形为$n$<i class=zh>星多边形</i>。若两个$n$星多边形可以通过旋转或翻折重合，仍视为<strong>不同的</strong>$n$星多边形。</p>
<p>例如，共有十二个不同的$5$星多边形，如下图所示：</p>
<div style="text-align:center"><img src="/resources/images/0842_5-agons.jpg" alt="0842_5-agons.jpg"></div>

<p>对于任意$n$星多边形$S$，记$I(S)$为其各边自交产生的交点数目。<br /><br>记$T(n)$为所有$n$星多边形$S$对应的$I(S)$之和。<br /><br>如上图所示，$T(5) = 20$，因为所有$5$星多边形各边自交共产生$20$个交点。</p>
<p>有些交点可能由多条边同时相交产生，这样的交点只被计算一次。例如，下图所示是六十种$6$星多边形的其中之一，其对应的$I(S)=4$。</p>
<div style="text-align:center"><img src="/resources/images/0842_6-agon.jpg" alt="0842_6-agon.jpg"></div>

<p>已知$T(8) = 14640$。</p>
<p>求$\displaystyle \sum_{n = 3}^{60}T(n)$，并将你的答案对$(10^9 + 7)$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 843</title>
    <url>/843/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-843"><a href="#Problem-843" class="headerlink" title="Problem 843"></a><a href="https://projecteuler.net/problem=843">Problem 843</a></h1><hr>
<h2 id="Periodic-Circles"><a href="#Periodic-Circles" class="headerlink" title="Periodic Circles"></a><strong>Periodic Circles</strong></h2><p>This problem involves an iterative procedure that begins with a circle of $n\ge 3$ integers. At each step every number is simultaneously replaced with the absolute difference of its two neighbours.</p>
<p>For any initial values, the procedure eventually becomes periodic.</p>
<p>Let $S(N)$ be the sum of all possible periods for $3\le n \le N$. For example, $S(6) = 6$, because the possible periods for $3\le n \le 6$ are $1, 2, 3$. Specifically, $n=3$ and $n=4$ can each have period $1$ only, while $n=5$ can have period $1$ or $3$, and $n=6$ can have period $1$ or $2$.</p>
<p>You are also given $S(30) = 20381$.</p>
<p>Find $S(100)$.</p>
<hr>
<h2 id="周期性的环形数列"><a href="#周期性的环形数列" class="headerlink" title="周期性的环形数列"></a><strong>周期性的环形数列</strong></h2><p>从一个包含$n\ge3$个整数的环形数列开始，不断重复以下过程：在每一步中，同时将每一个数替换为与其相邻的两个数之差的绝对值。</p>
<p>无论初始数列的取值，这一过程最终都会进入周期性的循环。</p>
<p>记$S(N)$为所有$3\le n \le N$的环形数列可能进入的循环周期之和。例如，$S(6) = 6$，因为对于所有$3 \le n \le 6$的环形数列，其可能进入的循环周期只有$1$、$2$、$3$。具体来说，$n=3$和$n=4$时只会进入周期为$1$的循环，$n=5$时可能进入周期为$1$或$3$的循环，而$n=6$时可能进入周期为$1$或$2$的循环。</p>
<p>已知$S(30) = 20381$。</p>
<p>求$S(100)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 844</title>
    <url>/844/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-844"><a href="#Problem-844" class="headerlink" title="Problem 844"></a><a href="https://projecteuler.net/problem=844">Problem 844</a></h1><hr>
<h2 id="k-Markov-Numbers"><a href="#k-Markov-Numbers" class="headerlink" title="$k$-Markov Numbers"></a><strong>$k$-Markov Numbers</strong></h2><p>Consider positive integer solutions to<br>$$a^2+b^2+c^2 = 3abc$$</p>
<p>For example, $(1,5,13)$ is a solution. We define a $3$-Markov number to be any part of a solution, so $1$, $5$ and $13$ are all $3$-Markov numbers. Adding distinct $3$-Markov numbers $\le 10^3$ would give $2797$.</p>
<p>Now we define a $k$-Markov number to be a positive integer that is part of a solution to:<br>$$\displaystyle \sum_{i=1}^{k}x_i^2=k\prod_{i=1}^{k}x_i,\quad x_i\text{ are positive integers}$$</p>
<p>Let $M_k(N)$ be the sum of $k$-Markov numbers $\le N$. Hence $M_3(10^{3})=2797$, also $M_8(10^8) = 131493335$.</p>
<p>Define $\displaystyle S(K,N)=\sum_{k=3}^{K}M_k(N)$. You are given $S(4, 10^2)=229$ and $S(10, 10^8)=2383369980$.</p>
<p>Find $S(10^{18}, 10^{18})$. Give your answer modulo $1\ 405\ 695\ 061$.</p>
<hr>
<h2 id="k-马尔科夫数"><a href="#k-马尔科夫数" class="headerlink" title="$k$-马尔科夫数"></a><strong>$k$-马尔科夫数</strong></h2><p>考虑如下方程的正整数解：<br>$$a^2+b^2+c^2 = 3abc$$</p>
<p>例如，其中一组解是$(1,5,13)$。定义$3$-马尔科夫数为上述解中的任意一个数，因此$1$、$5$和$13$都是$3$-马尔科夫数。<br>所有不同的、小于等于$10^3$的$3$-马尔科夫数之和为$2797$。</p>
<p>进一步定义$k$-马尔科夫数为下列方程的解中的任意一个数：<br>$$\displaystyle \sum_{i=1}^{k}x_i^2=k\prod_{i=1}^{k}x_i,\quad x_i\text{为正整数}$$</p>
<p>记$M_k(N)$为所有小于等于$N$的$k$-马尔科夫数之和。因此，$M_3(10^{3})=2797$，$M_8(10^8) = 131493335$。</p>
<p>定义$\displaystyle S(K,N)=\sum_{k=3}^{K}M_k(N)$。已知$S(4, 10^2)=229$，$S(10, 10^8)=2383369980$。</p>
<p>求$S(10^{18}, 10^{18})$，并将你的答案对$1\ 405\ 695\ 061$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 845</title>
    <url>/845/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-845"><a href="#Problem-845" class="headerlink" title="Problem 845"></a><a href="https://projecteuler.net/problem=845">Problem 845</a></h1><hr>
<h2 id="Prime-Digit-Sum"><a href="#Prime-Digit-Sum" class="headerlink" title="Prime Digit Sum"></a><strong>Prime Digit Sum</strong></h2><p>Let $D(n)$ be the $n$-th positive integer that has the sum of its digits a prime.<br /><br>For example, $D(61) = 157$ and $D(10^8) = 403539364$.</p>
<p>Find $D(10^{16})$.</p>
<hr>
<h2 id="数字和为质数"><a href="#数字和为质数" class="headerlink" title="数字和为质数"></a><strong>数字和为质数</strong></h2><p>记$D(n)$为第$n$个各位数字和为质数的正整数。<br /><br>例如，$D(61) = 157$，$D(10^8) = 403539364$。</p>
<p>求$D(10^{16})$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 846</title>
    <url>/846/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-846"><a href="#Problem-846" class="headerlink" title="Problem 846"></a><a href="https://projecteuler.net/problem=846">Problem 846</a></h1><hr>
<h2 id="Magic-Bracelets"><a href="#Magic-Bracelets" class="headerlink" title="Magic Bracelets"></a><strong>Magic Bracelets</strong></h2><p>A <i>bracelet</i> is made by connecting at least three numbered beads in a circle. Each bead can only display $1$, $2$, or any number of the form $p^k$ or $2p^k$ for odd prime $p$.</p>
<p>In addition a <i>magic bracelet</i> must satisfy the following two conditions:</p>
<ul>
<li>no two beads display the same number</li>
<li>the product of the numbers of any two adjacent beads is of the form $x^2+1$</li>
</ul>
<div style="text-align:center;">
<img src="/resources/images/0846_diagram.jpg" alt="0846_diagram.jpg" width="640">
</div>

<p>Define the <i>potency</i> of a magic bracelet to be the sum of numbers on its beads. </p>
<p>The example is a magic bracelet with five beads which has a potency of $155$. </p>
<p>Let $F(N)$ be the sum of the potency of each magic bracelet which can be formed using positive integers not exceeding $N$, where rotations and reflections of an arrangement are considered equivalent. You are given $F(20)=258$ and $F(10^2)=538768$.</p>
<p>Find $F(10^6)$.</p>
<hr>
<h2 id="魔法手镯"><a href="#魔法手镯" class="headerlink" title="魔法手镯"></a><strong>魔法手镯</strong></h2><p>将至少三颗有编号的珠子穿成一圈就构成了<i class=zh>手镯</i>。每颗珠子的编号只能是$1$、$2$或任何形如$p^k$或$2p^k$的整数且满足$p$为奇素数。</p>
<p><i class=zh>魔法手镯</i>则必须额外满足以下两个条件：</p>
<ul>
<li>任意两颗珠子的编号都不同</li>
<li>两颗相邻珠子的编号的乘积可以写成$x^2+1$的形式</li>
</ul>
<div style="text-align:center;">
<img src="/resources/images/0846_diagram.jpg" alt="0846_diagram.jpg" width="640">
</div>

<p>记魔法手镯的<i class=zh>效力</i>为其所有珠子的编号之和。</p>
<p>如上图所示是一枚有五颗珠子、效力为$155$的魔法手镯。</p>
<p>记$F(N)$为所有由编号不超过$N$的珠子串成的魔法手镯的效力之和，其中经旋转或翻折可以重合的编号方案视为等价的方案。已知$F(20)=258$，$F(10^2)=538768$。</p>
<p>求$F(10^6)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 847</title>
    <url>/847/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-847"><a href="#Problem-847" class="headerlink" title="Problem 847"></a><a href="https://projecteuler.net/problem=847">Problem 847</a></h1><hr>
<h2 id="Jack’s-Bean"><a href="#Jack’s-Bean" class="headerlink" title="Jack’s Bean"></a><strong>Jack’s Bean</strong></h2><p>Jack has three plates in front of him. The giant has $N$ beans that he distributes to the three plates. All the beans look the same, but one of them is a magic bean. Jack doesn’t know which one it is, but the giant knows.</p>
<p>Jack can ask the giant questions of the form: “Does this subset of the beans contain the magic bean?” In each question Jack may choose any subset of beans from a single plate, and the giant will respond truthfully.</p>
<p>If the three plates contain $a$, $b$ and $c$ beans respectively, we let $h(a, b, c)$ be the minimal number of questions Jack needs to ask in order to guarantee he locates the magic bean. For example, $h(1, 2, 3) = 3$ and $h(2, 3, 3) = 4$.</p>
<p>Let $H(N)$ be the sum of $h(a, b, c)$ over all triples of non-negative integers $a$, $b$, $c$ with $1 \leq a + b + c \leq N$.<br /><br>You are given: $H(6) = 203$ and $H(20) = 7718$.</p>
<p>A <strong>repunit</strong>, $R_n$, is a number made up with $n$ digits all ‘$1$’. For example, $R_3 = 111$ and $H(R_3) = 1634144$.</p>
<p>Find $H(R_{19})$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="杰克的魔法豆子"><a href="#杰克的魔法豆子" class="headerlink" title="杰克的魔法豆子"></a><strong>杰克的魔法豆子</strong></h2><p>杰克面前有三个盘子，巨人将$N$颗豆子分在三个盘子中。这些豆子看起来都一样，但其中有一颗是魔法豆子。杰克不知道哪一颗才是魔法豆子，但巨人知道。</p>
<p>杰克可以从任意一个盘子中选择任意一部分豆子，并向巨人提问：“在这些豆子中有魔法豆子吗？”巨人总是如实回答。</p>
<p>若三个盘子中分别由$a$、$b$、$c$颗豆子，记$h(a, b, c)$为杰克能够保证找到魔法豆子最少需要提问的次数。例如，$h(1, 2, 3) = 3$，$h(2, 3, 3) = 4$。</p>
<p>记$H(N)$为所有满足$1\le a+b+c \le N$的非负整数三元组$a$、$b$、$c$对应的$h(a,b,c)$之和。<br /><br>已知：$H(6) = 203$，$H(20) = 7718$。</p>
<p><strong>循环单位数</strong>$R_n$是指由$n$个数字$1$组成的数。例如，$R_3 = 111$，$H(R_3) = 1634144$。</p>
<p>求$H(R_{19})$，并将你的答案对$1\ 000\ 000\ 007$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 848</title>
    <url>/848/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-848"><a href="#Problem-848" class="headerlink" title="Problem 848"></a><a href="https://projecteuler.net/problem=848">Problem 848</a></h1><hr>
<h2 id="Guessing-with-Sets"><a href="#Guessing-with-Sets" class="headerlink" title="Guessing with Sets"></a><strong>Guessing with Sets</strong></h2><p>Two players play a game. At the start of the game each player secretly chooses an integer; the first player from $1,\ldots,n$ and the second player from $1,\ldots,m$. Then they take alternate turns, starting with the first player. The player, whose turn it is, displays a set of numbers and the other player tells whether their secret number is in the set or not. The player to correctly guess a set with a single number is the winner and the game ends.</p>
<p>Let $p(m,n)$ be the winning probability of the first player assuming both players play optimally. For example $p(1, n) = 1$ and $p(m, 1) = 1/m$.</p>
<p>You are also given $p(7,5) \approx 0.51428571$.</p>
<p>Find $\displaystyle \sum_{i=0}^{20}\sum_{j=0}^{20} p(7^i, 5^j)$ and give your answer rounded to $8$ digits after the decimal point.</p>
<hr>
<h2 id="猜数游戏"><a href="#猜数游戏" class="headerlink" title="猜数游戏"></a><strong>猜数游戏</strong></h2><p>两位玩家正在进行如下游戏：游戏开始时，每位玩家需要秘密地选择一个整数，其中一号玩家在$1,\ldots,n$中选，而二号玩家在$1,\ldots,m$。然后，由一号玩家先开始，双方轮流进行猜测：轮到某位玩家时，他需要选择一个整数集合，并由另一位玩家告知其秘密选择的数是否在该集合中。若某位玩家选择的集合恰好只包含另一位玩家秘密选择的数，则该玩家获胜，游戏结束。</p>
<p>假设双方都采取最优策略，记$p(m,n)$为一号玩家获胜的概率。例如，$p(1, n) = 1$，$p(m, 1) = 1/m$。</p>
<p>已知$p(7,5) \approx 0.51428571$。</p>
<p>求$\displaystyle \sum_{i=0}^{20}\sum_{j=0}^{20} p(7^i, 5^j)$并将你的答案保留$8$位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 849</title>
    <url>/849/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-849"><a href="#Problem-849" class="headerlink" title="Problem 849"></a><a href="https://projecteuler.net/problem=849">Problem 849</a></h1><hr>
<h2 id="The-Tournament"><a href="#The-Tournament" class="headerlink" title="The Tournament"></a><strong>The Tournament</strong></h2><p>In a tournament there are $n$ teams and each team plays each other team twice. A team gets two points for a win, one point for a draw and no points for a loss.</p>
<p>With two teams there are three possible outcomes for the total points. $(4,0)$ where a team wins twice, $(3,1)$ where a team wins and draws, and $(2,2)$ where either there are two draws or a team wins one game and loses the other. Here we do not distinguish the teams and so $(3,1)$ and $(1,3)$ are considered identical.</p>
<p>Let $F(n)$ be the total number of possible final outcomes with $n$ teams, so that $F(2) = 3$.<br /><br>You are also given $F(7) = 32923$.</p>
<p>Find $F(100)$. Give your answer modulo $10^9+7$.</p>
<hr>
<h2 id="锦标赛"><a href="#锦标赛" class="headerlink" title="锦标赛"></a><strong>锦标赛</strong></h2><p>在一场锦标赛中，共有$n$支队伍参赛，每支队伍需与任意其它队伍各对战两次。获胜的队伍得两分，平局得一分，落败不得分。</p>
<p>只有两支队伍时，共有三种可能的得分结果。若一支队伍两次都获胜则结果是$(4,0)$，若一支队伍赢一次平一次则结果是$(3,1)$，若两次都是平局或者各自一胜一负则结果是$(2,2)$。得分结果不区分队伍，因此$(3,1)$和$(1,3)$视为相同的结果。</p>
<p>记$F(n)$为有$n$支队伍时所有可能的最终得分结果的数目，因此$F(2) = 3$。<br /><br>已知$F(7) = 32923$。</p>
<p>求$F(100)$，并将你的答案对$10^9+7$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 85</title>
    <url>/85/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-85"><a href="#Problem-85" class="headerlink" title="Problem 85"></a><a href="https://projecteuler.net/problem=85">Problem 85</a></h1><hr>
<h2 id="Counting-Rectangles"><a href="#Counting-Rectangles" class="headerlink" title="Counting Rectangles"></a><strong>Counting Rectangles</strong></h2><p>By counting carefully it can be seen that a rectangular grid measuring $3$ by $2$ contains eighteen rectangles:</p>
<center>
<img src="/resources/images/0085.png" />
</center>

<p>Although there exists no rectangular grid that contains exactly two million rectangles, find the area of the grid with the nearest solution.</p>
<hr>
<h2 id="数长方形"><a href="#数长方形" class="headerlink" title="数长方形"></a><strong>数长方形</strong></h2><p>在一个$3\times2$的长方形网格中包含有$18$个不同大小的长方形，如下图所示：</p>
<center>
<img src="/resources/images/0085.png" />
</center>

<p>不存在任意大小的长方形网格中包含有恰好两百万个长方形。求包含长方形的数目最接近两百万的长方形网格的面积。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 850</title>
    <url>/850/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-850"><a href="#Problem-850" class="headerlink" title="Problem 850"></a><a href="https://projecteuler.net/problem=850">Problem 850</a></h1><hr>
<h2 id="Fractions-of-Powers"><a href="#Fractions-of-Powers" class="headerlink" title="Fractions of Powers"></a><strong>Fractions of Powers</strong></h2><p>Any positive real number $x$ can be decomposed into integer and fractional parts $\lfloor x \rfloor + \{x\}$, where $\lfloor x \rfloor$ (the floor function) is an integer, and $0\le \{x\} &lt; 1$.</p>
<p>For positive integers $k$ and $n$, define the function<br>$$f_k(n) = \sum_{i=1}^{n}\left\{ \frac{i^k}{n} \right\}$$<br>For example, $f_5(10)=4.5$ and $f_7(1234)=616.5$.</p>
<p>Let<br>$$S(N) = \sum_{\substack{k=1 \\ k\text{ odd}}}^{N} \sum_{n=1}^{N}  f_k(n)$$<br>You are given that $S(10)=100.5$ and $S(10^3)=123687804$.</p>
<p>Find $\lfloor S(33557799775533) \rfloor$. Give your answer modulo $977676779$.</p>
<hr>
<h2 id="幂的小数部分"><a href="#幂的小数部分" class="headerlink" title="幂的小数部分"></a><strong>幂的小数部分</strong></h2><p>任意正实数$x$都可以分解成整数部分和小数部分$\lfloor x \rfloor + \{x\}$，其中$\lfloor x \rfloor$（下取整函数）是一个整数，而$0\le \{x\} &lt; 1$。</p>
<p>对于正整数$k$和$n$，定义函数<br>$$f_k(n) = \sum_{i=1}^{n}\left\{ \frac{i^k}{n} \right\}$$<br>例如，$f_5(10)=4.5$，$f_7(1234)=616.5$。</p>
<p>记<br>$$S(N) = \sum_{\substack{k=1 \\ k\text{为奇数}}}^{N} \sum_{n=1}^{N}  f_k(n)$$<br>已知$S(10)=100.5$，$S(10^3)=123687804$。</p>
<p>求$\lfloor S(33557799775533) \rfloor$，并将你的答案对$977676779$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 851</title>
    <url>/851/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-851"><a href="#Problem-851" class="headerlink" title="Problem 851"></a><a href="https://projecteuler.net/problem=851">Problem 851</a></h1><hr>
<h2 id="SOP-and-POS"><a href="#SOP-and-POS" class="headerlink" title="SOP and POS"></a><strong>SOP and POS</strong></h2><p>Let $n$ be a positive integer and let $E_n$ be the set of $n$-tuples of strictly positive integers.</p>
<p>For $u = (u_1, \cdots, u_n)$ and $v = (v_1, \cdots, v_n)$ two elements of $E_n$, we define:</p>
<ul>
<li>the <i>Sum Of Products</i> of $u$ and $v$, denoted by $\langle u, v\rangle$, as the sum $\displaystyle\sum_{i = 1}^n u_i v_i$;</li>
<li>the <i>Product Of Sums</i> of $u$ and $v$, denoted by $u \star v$, as the product $\displaystyle\prod_{i = 1}^n (u_i + v_i)$.</li>
</ul>
<p>Let $R_n(M)$ be the sum of $u \star v$ over all ordered pairs $(u, v)$ in $E_n$ such that $\langle u, v\rangle = M$.<br /><br>For example: $R_1(10) = 36$, $R_2(100) = 1873044$, $R_2(100!) \equiv 446575636 \bmod 10^9 + 7$.</p>
<p>Find $R_6(10000!)$. Give your answer modulo $10^9+7$.</p>
<hr>
<h2 id="积之和与和之积"><a href="#积之和与和之积" class="headerlink" title="积之和与和之积"></a><strong>积之和与和之积</strong></h2><p>对于正整数$n$，记$E_n$为所有$n$元正整数组构成的集合。</p>
<p>对于$E_n$的任意两个元素$u = (u_1, \cdots, u_n)$和$v = (v_1, \cdots, v_n)$，定义：</p>
<ul>
<li>$u$和$v$的<i class=zh>积之和</i>，记作$\langle u, v\rangle$，为$\displaystyle\sum_{i = 1}^n u_i v_i$；</li>
<li>$u$和$v$的<i class=zh>和之积</i>，记作$u \star v$，为$\displaystyle\prod_{i = 1}^n (u_i + v_i)$。</li>
</ul>
<p>考虑所有$E_n$中满足$\langle u, v\rangle = M$的有序对$(u,v)$，并记其对应的$u \star v$之和为$R_n(M)$。<br /><br>例如，$R_1(10) = 36$，$R_2(100) = 1873044$，$R_2(100!) \equiv 446575636 \bmod 10^9 + 7$。</p>
<p>求$R_6(10000!)$，并将你的答案对$10^9+7$取余。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 852</title>
    <url>/852/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-852"><a href="#Problem-852" class="headerlink" title="Problem 852"></a><a href="https://projecteuler.net/problem=852">Problem 852</a></h1><hr>
<h2 id="Coins-in-a-Box"><a href="#Coins-in-a-Box" class="headerlink" title="Coins in a Box"></a><strong>Coins in a Box</strong></h2><p>This game has a box of $N$ unfair coins and $N$ fair coins. Fair coins have probability $50\%$ of landing heads while unfair coins have probability $75\%$ of landing heads.</p>
<p>The player begins with a score of $0$ which may become negative during play.</p>
<p>At each round the player randomly picks a coin from the box and guesses its type: fair or unfair. Before guessing they may toss the coin any number of times; however, each toss subtracts $1$ from their score. The decision to stop tossing and make a guess can be made at any time. After guessing the player’s score is increased by $20$ if they are right and decreased by $50$ if they are wrong. Then the coin type is revealed to the player and the coin is discarded.</p>
<p>After $2N$ rounds the box will be empty and the game is over. Let $S(N)$ be the expected score of the player at the end of the game assuming that they play optimally in order to maximize their expected score.</p>
<p>You are given $S(1) = 20.558591$ rounded to $6$ digits after the decimal point.</p>
<p>Find $S(50)$. Give your answer rounded to $6$ digits after the decimal point.</p>
<hr>
<h2 id="盒中硬币"><a href="#盒中硬币" class="headerlink" title="盒中硬币"></a><strong>盒中硬币</strong></h2><p>盒中有$N$枚公平硬币和$N$枚不公平硬币。公平硬币有$50\%$的概率正面朝上，而不公平硬币有$75\%$的概率正面朝上。</p>
<p>游戏开始时，玩家的分数为$0$，在游戏过程中其分数可以为负。</p>
<p>每一轮，玩家从盒中随机选择一枚硬币，并猜测它是否公平。在猜测之前，玩家可以任意次抛掷这枚硬币，但是每次抛掷会扣$1$分。玩家可以随时停止抛掷并给出猜测，猜对得$20$分，猜错扣$50$分。揭晓猜测结果后，这枚硬币会被移出游戏。</p>
<p>在$2N$轮之后，盒中将没有硬币，游戏结束。假设玩家总是采取最优策略以最大化期望分数，并记游戏结束时玩家的期望分数为$S(N)$。</p>
<p>已知$S(1) = 20.558591$，保留$6$位小数。</p>
<p>求$S(50)$并保留$6$位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 853</title>
    <url>/853/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-853"><a href="#Problem-853" class="headerlink" title="Problem 853"></a><a href="https://projecteuler.net/problem=853">Problem 853</a></h1><hr>
<h2 id="Pisano-Periods-1"><a href="#Pisano-Periods-1" class="headerlink" title="Pisano Periods 1"></a><strong>Pisano Periods 1</strong></h2><p>For every positive integer $n$ the Fibonacci sequence modulo $n$ is periodic. The period depends on the value of $n$. This period is called the <strong>Pisano period</strong> for $n$, often shortened to $\pi(n)$.</p>
<p>There are three values of $n$ for which $\pi(n)$ equals $18$: $19$, $38$ and $76$. The sum of those smaller than $50$ is $57$.</p>
<p>Find the sum of the values of $n$ smaller than $1\ 000\ 000\ 000$ for which $\pi(n)$ equals $120$.</p>
<hr>
<h2 id="皮萨诺周期（一）"><a href="#皮萨诺周期（一）" class="headerlink" title="皮萨诺周期（一）"></a><strong>皮萨诺周期（一）</strong></h2><p>对任意正整数$n$，斐波那契数列对$n$取余的结果都是周期数列，其周期取决于$n$的取值。这一周期被称为$n$的<strong>皮萨诺周期</strong>，通常记为$\pi(n)$。</p>
<p>有三个$n$满足$\pi(n)$等于$18$，分别是$19$、$38$和$76$，其中小于$50$的两个之和为$57$。</p>
<p>求所有小于$1\ 000\ 000\ 000$且满足$\pi(n)$等于$120$的$n$之和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 854</title>
    <url>/854/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-854"><a href="#Problem-854" class="headerlink" title="Problem 854"></a><a href="https://projecteuler.net/problem=854">Problem 854</a></h1><hr>
<h2 id="Pisano-Periods-2"><a href="#Pisano-Periods-2" class="headerlink" title="Pisano Periods 2"></a><strong>Pisano Periods 2</strong></h2><p>For every positive integer $n$ the Fibonacci sequence modulo $n$ is periodic. The period depends on the value of $n$. This period is called the <strong>Pisano period</strong> for $n$, often shortened to $\pi(n)$.</p>
<p>Define $M(p)$ as the largest integer $n$ such that $\pi(n) = p$, and define $M(p) = 1$ if there is no such $n$.<br /><br>For example, there are three values of $n$ for which $\pi(n)$ equals $18$: $19, 38, 76$. Therefore $M(18) = 76$.</p>
<p>Let the product function $P(n)$ be:<br>$$P(n)=\prod_{p = 1}^{n}M(p).$$<br>You are given: $P(10)=264$.</p>
<p>Find $P(1\ 000\ 000)\bmod 1\ 234\ 567\ 891$.</p>
<hr>
<h2 id="皮萨诺周期（二）"><a href="#皮萨诺周期（二）" class="headerlink" title="皮萨诺周期（二）"></a><strong>皮萨诺周期（二）</strong></h2><p>对任意正整数$n$，斐波那契数列对$n$取余的结果都是周期数列，其周期取决于$n$的取值。这一周期被称为$n$的<strong>皮萨诺周期</strong>，通常记为$\pi(n)$。</p>
<p>定义$M(p)$为最大的、满足$\pi(n) = p$的整数$n$。若不存在这样的$n$，定义$M(p)=1$。<br /><br>例如，有三个$n$满足$\pi(n)$等于$18$，分别是$19$、$38$和$76$，因此$M(18) = 76$。</p>
<p>记函数$P(n)$为：<br>$$P(n)=\prod_{p = 1}^{n}M(p)$$<br>已知$P(10)=264$。</p>
<p>求$P(1\ 000\ 000)\bmod 1\ 234\ 567\ 891$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 855</title>
    <url>/855/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-855"><a href="#Problem-855" class="headerlink" title="Problem 855"></a><a href="https://projecteuler.net/problem=855">Problem 855</a></h1><hr>
<h2 id="Delphi-Paper"><a href="#Delphi-Paper" class="headerlink" title="Delphi Paper"></a><strong>Delphi Paper</strong></h2><p>Given two positive integers $a,b$, Alex and Bianca play a game in $ab$ rounds. They begin with a square piece of paper of side length $1$.</p>
<p>In each round Alex divides the current rectangular piece of paper into $a \times b$ pieces using $a-1$ horizontal cuts and $b-1$ vertical ones. The cuts do not need to be evenly spaced. Moreover, a piece can have zero width/height when a cut coincides with another cut or the edge of the paper. The pieces are then numbered $1, 2, \ldots, ab$ starting from the left top corner, moving from left to right and starting from the left of the next row when a row is finished.</p>
<p>Then Bianca chooses one of the pieces for the game to continue on. However, Bianca must not choose a piece with a number she has already chosen during the game.</p>
<p>Bianca wants to minimize the area of the final piece of paper while Alex wants to maximize it. Let $S(a,b)$ be the area of the final piece assuming optimal play.</p>
<p>For example, $S(2,2) = 1/36$ and $S(2, 3) = 1/1800 \approx 5.5555555556\mathrm{e}{-4}$.</p>
<p>Find $S(5,8)$. Give your answer in scientific notation rounded to ten significant digits after the decimal point. Use a lowercase e to separate the mantissa and the exponent.</p>
<hr>
<h2 id="德尔菲分纸法"><a href="#德尔菲分纸法" class="headerlink" title="德尔菲分纸法"></a><strong>德尔菲分纸法</strong></h2><p>亚历克斯和比安卡在玩游戏，这个游戏需要进行$ab$轮，其中$a$和$b$均为正整数。游戏开始时，需要一张边长为$1$的正方形纸。</p>
<p>在每一轮中，亚历克斯在纸上横切$a-1$刀，竖切$b-1$刀，将其分成$a\times b$块长方形纸片。刀与刀间的距离无需相同，而且可以相互重合，此时对应的长方形长度或宽度为零。随后，从纸的左上角开始，从上至下、从左至右依次将长方形纸片编号为$1, 2, \ldots, ab$。</p>
<p>随后，比安卡选择其中一张长方形纸片并下一轮游戏，但比安卡所选纸片的编号不能与之前轮数中的选择相同。</p>
<p>比安卡的目标是使游戏结束时纸片的面积尽可能小，而亚历克斯的目标则是使之尽可能大。记$S(a,b)$为双方都采取最优策略时最终的纸片面积。</p>
<p>例如，$S(2,2) = 1/36$，$S(2, 3) = 1/1800 \approx 5.5555555556\mathrm{e}{-4}$。</p>
<p>求$S(5,8)$，并将你的答案用科学计数法表示（用小写字母e分隔尾数和指数），保留十位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 857</title>
    <url>/857/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-857"><a href="#Problem-857" class="headerlink" title="Problem 857"></a><a href="https://projecteuler.net/problem=857">Problem 857</a></h1><hr>
<h2 id="Beautiful-Graphs"><a href="#Beautiful-Graphs" class="headerlink" title="Beautiful Graphs"></a><strong>Beautiful Graphs</strong></h2><p>A graph is made up of vertices and coloured edges. Between every two distinct vertices there must be exactly one of the following:</p>
<ul>
<li>A red directed edge one way, and a blue directed edge the other way </li>
<li>A green undirected edge</li>
<li>A brown undirected edge</li>
</ul>
<p>Such a graph is called <i>beautiful</i> if </p>
<ul>
<li>A cycle of edges contains a red edge <b>if and only if</b> it also contains a blue edge</li>
<li>No triangle of edges is made up of entirely green or entirely brown edges</li>
</ul>
<p>Below are four distinct examples of beautiful graphs on three vertices:</p>
<div style="text-align:center">
<img src="/resources/images/0857_GoodGraphs.jpg" alt="0857_GoodGraphs.jpg">
</div>

<p>Below are four examples of graphs that are not beautiful:</p>
<div style="text-align:center">
<img src="/resources/images/0857_BadGraphs.jpg" alt="0857_BadGraphs.jpg">
</div>

<p>Let $G(n)$ be the number of beautiful graphs on the labelled vertices: $1,2,\ldots,n$. You are given $G(3)=24$, $G(4)=186$ and $G(15)=12472315010483328$.</p>
<p>Find $G(10^7)$. Give your answer modulo $10^9+7$.</p>
<hr>
<h2 id="美丽图"><a href="#美丽图" class="headerlink" title="美丽图"></a><strong>美丽图</strong></h2><p>考虑由顶点和染色的边构成的图，任意两个顶点间必由以下三种情况之一相连：</p>
<ul>
<li>一条红色的有向边和一条蓝色的有向边，两者方向相反</li>
<li>一条绿色的无向边</li>
<li>一条棕色的无向边</li>
</ul>
<p>若进一步满足以下条件，则称之为<i class=zh>美丽图</i>： </p>
<ul>
<li>任意环包含红色边<b>当且仅当</b>它也包含蓝色边</li>
<li>不存在仅由绿色边或仅由棕色边构成的三角形</li>
</ul>
<p>如下所示的四张图均为包含三个顶点的美丽图：</p>
<div style="text-align:center">
<img src="/resources/images/0857_GoodGraphs.jpg" alt="0857_GoodGraphs.jpg">
</div>

<p>如下所示的四张图均不是美丽图：</p>
<div style="text-align:center">
<img src="/resources/images/0857_BadGraphs.jpg" alt="0857_BadGraphs.jpg">
</div>

<p>将顶点依次编号为$1,2,\ldots,n$，记$G(n)$为所有构造在这些顶点上的美丽图的数目。已知$G(3)=24$，$G(4)=186$，$G(15)=12472315010483328$。</p>
<p>求$G(10^7)$，并对$10^9+7$取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 856</title>
    <url>/856/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-856"><a href="#Problem-856" class="headerlink" title="Problem 856"></a><a href="https://projecteuler.net/problem=856">Problem 856</a></h1><hr>
<h2 id="Waiting-for-a-Pair"><a href="#Waiting-for-a-Pair" class="headerlink" title="Waiting for a Pair"></a><strong>Waiting for a Pair</strong></h2><p>A standard $52$-card deck comprises $13$ ranks in four suits. A <i>pair</i> is a set of two cards of the same rank.</p>
<p>Cards are drawn, without replacement, from a well shuffled $52$-card deck waiting for consecutive cards that form a pair. For example, the probability of finding a pair in the first two draws is $1/17$.</p>
<p>Cards are drawn until either such a pair is found or the pack is exhausted waiting for one. In the latter case we say that all $52$ cards were drawn.</p>
<p>Find the expected number of cards that were drawn. Give your answer rounded to eight places after the decimal point.</p>
<hr>
<h2 id="等待对子"><a href="#等待对子" class="headerlink" title="等待对子"></a><strong>等待对子</strong></h2><p>一副标准的$52$张扑克牌由四个花色各$13$个点数的牌组成。<i class=zh>对子</i>是指两张点数相同的牌。</p>
<p>从一副洗好的扑克牌中无放回地抽牌，目标是连续抽出的两张牌组成对子。例如，前两次抽牌就恰好抽出对子的概率是$1/17$。</p>
<p>持续抽牌直到抽出对子或所有的牌都已抽完，在后一种情况下抽牌数记为$52$。</p>
<p>求停止抽牌时抽牌数的期望值，并四舍五入保留八位小数作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 858</title>
    <url>/858/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-858"><a href="#Problem-858" class="headerlink" title="Problem 858"></a><a href="https://projecteuler.net/problem=858">Problem 858</a></h1><hr>
<h2 id="LCM"><a href="#LCM" class="headerlink" title="LCM"></a><strong>LCM</strong></h2><p>Define $G(N) = \sum_S \operatorname{lcm}(S)$ where $S$ ranges through all subsets of ${1, \dots, N}$ and $\operatorname{lcm}$ denotes the lowest common multiple. Note that the $\operatorname{lcm}$ of the empty set is $1$.</p>
<p>You are given $G(5) = 528$ and $G(20) = 8463108648960$.</p>
<p>Find $G(800)$. Give your answer modulo $10^9 + 7$.</p>
<hr>
<h2 id="最小公倍数"><a href="#最小公倍数" class="headerlink" title="最小公倍数"></a><strong>最小公倍数</strong></h2><p>定义$G(N) = \sum_S \operatorname{lcm}(S)$，其中$S$取遍${1, \dots, N}$的所有子集，$\operatorname{lcm}$表示最小公倍数。注意对空集取$\operatorname{lcm}$的结果为$1$。</p>
<p>已知$G(5) = 528$，$G(20) = 8463108648960$。</p>
<p>求$G(800)$，并对$10^9 + 7$取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 859</title>
    <url>/859/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-859"><a href="#Problem-859" class="headerlink" title="Problem 859"></a><a href="https://projecteuler.net/problem=859">Problem 859</a></h1><hr>
<h2 id="Cookie-Game"><a href="#Cookie-Game" class="headerlink" title="Cookie Game"></a><strong>Cookie Game</strong></h2><p>Odd and Even are playing a game with $N$ cookies.</p>
<p>The game begins with the $N$ cookies divided into one or more piles, not necessarily of the same size. They then make moves in turn, starting with Odd.<br /><br>Odd’s turn: Odd may choose any pile with an <b>odd</b> number of cookies, eat one and divide the remaining (if any) into two equal piles.<br>Even’s turn: Even may choose any pile with an <b>even</b> number of cookies, eat two of them and divide the remaining (if any) into two equal piles.<br>The player that does not have a valid move loses the game.</p>
<p>Let $C(N)$ be the number of ways that $N$ cookies can be divided so that Even has a winning strategy.<br /><br>For example, $C(5) = 2$ because there are two winning configurations for Even: a single pile containing all five cookies; three piles containing one, two and two cookies.<br /><br>You are also given $C(16) = 64$.</p>
<p>Find $C(300)$.</p>
<hr>
<h2 id="饼干游戏"><a href="#饼干游戏" class="headerlink" title="饼干游戏"></a><strong>饼干游戏</strong></h2><p>小奇和小偶在玩一个游戏，需要用到$N$块饼干。</p>
<p>游戏开始时，将$N$块饼干分成若干堆，每一堆的数量不必相同。两人轮流行动，由小奇先开始。<br /><br>轮到小奇时：小奇可以任选一堆有<b>奇数</b>块的饼干，吃掉一块，并将剩下的饼干（若有）分成相等的两堆。<br>轮到小偶时：小偶可以任选一堆有<b>偶数</b>块的饼干，吃掉两块，并将剩下的饼干（若有）分成相等的两堆。<br>首先无法行动的玩家输掉游戏。</p>
<p>记$C(N)$为小偶有必胜策略的初始局面的数目。<br /><br>例如，$C(5) = 2$，对应的两种初始局面是：所有五块饼干划分为一堆，或者划分为三堆，分别包含一、二、二块饼干。<br /><br>已知$C(16) = 64$。</p>
<p>求$C(300)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 86</title>
    <url>/86/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-86"><a href="#Problem-86" class="headerlink" title="Problem 86"></a><a href="https://projecteuler.net/problem=86">Problem 86</a></h1><hr>
<h2 id="Cuboid-Route"><a href="#Cuboid-Route" class="headerlink" title="Cuboid Route"></a><strong>Cuboid Route</strong></h2><p>A spider, S, sits in one corner of a cuboid room, measuring $6$ by $5$ by $3$, and a fly, F, sits in the opposite corner. By travelling on the surfaces of the room the shortest “straight line” distance from S to F is $10$ and the path is shown on the diagram.</p>
<center><img src="/resources/images/0086.png" alt=""></center>

<p>However, there are up to three “shortest” path candidates for any given cuboid and the shortest route doesn’t always have integer length.</p>
<p>It can be shown that there are exactly $2060$ distinct cuboids, ignoring rotations, with integer dimensions, up to a maximum size of $M$ by $M$ by $M$, for which the shortest route has integer length when $M = 100$. This is the least value of $M$ for which the number of solutions first exceeds two thousand; the number of solutions when $M = 99$ is $1975$.</p>
<p>Find the least value of $M$ such that the number of solutions first exceeds one million.</p>
<hr>
<h2 id="长方体路径"><a href="#长方体路径" class="headerlink" title="长方体路径"></a><strong>长方体路径</strong></h2><p>蜘蛛S位于一个大小为$6 \times 5 \times 3$的长方体房间的一角，而苍蝇F则恰好位于其对角。沿着房间的墙面，从S到F的最短“直线”距离是$10$，路径如下图所示：</p>
<center><img src="/resources/images/0086.png" alt=""></center>

<p>对于任意长方体房间，对角顶点间的“最短”路径总是有三种可能的方案；此外，最短路径的长度也并不一定为整数。</p>
<p>当$M=100$时，若不考虑旋转，在所有长、宽、高均不超过$M$且为整数的长方体中，对角顶点之间的最短距离是整数的恰好有$2060$个。$M=100$也是使得满足条件的长方体数目超过两千的最小值：当$M=99$时，该数目为$1975$。</p>
<p>求使得满足条件的长方体数目超过一百万的最小$M$值。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 860</title>
    <url>/860/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-860"><a href="#Problem-860" class="headerlink" title="Problem 860"></a><a href="https://projecteuler.net/problem=860">Problem 860</a></h1><hr>
<h2 id="Gold-and-Silver-Coin-Game"><a href="#Gold-and-Silver-Coin-Game" class="headerlink" title="Gold and Silver Coin Game"></a><strong>Gold and Silver Coin Game</strong></h2><p>Gary and Sally play a game using gold and silver coins arranged into a number of vertical stacks, alternating turns. On Gary’s turn he chooses a gold coin and removes it from the game along with any other coins sitting on top. Sally does the same on her turn by removing a silver coin. The first player unable to make a move loses.</p>
<p>An arrangement is called <i>fair</i> if the person moving first, whether it be Gary or Sally, will lose the game if both play optimally.</p>
<p>Define $F(n)$ to be the number of fair arrangements of $n$ stacks, all of size $2$. Different orderings of the stacks are to be counted separately, so $F(2) = 4$ due to the following four arrangements:</p>
<div style="text-align:center">
<img src="/resources/images/0860_diag3.jpg" alt="0860_diag3.jpg">
</div>

<p>You are also given $F(10) = 63594$.</p>
<p>Find $F(9898)$. Give your answer modulo $989898989$.</p>
<hr>
<h2 id="金银硬币游戏"><a href="#金银硬币游戏" class="headerlink" title="金银硬币游戏"></a><strong>金银硬币游戏</strong></h2><p>盖瑞和萨利在玩一个游戏，游戏开始时有若干堆竖直堆放的金币和银币，两人轮流行动。轮到盖瑞时，他可以任选一枚金币，并将这枚金币和所有堆放在其上方的硬币移出游戏；轮到萨利时则是可以任选一枚银币。首先无法行动的玩家输掉游戏。</p>
<p>如果一个初始局面使得，无论先行玩家是盖瑞还是萨利，他在采取最优策略的情况下都必败，则称之为<i class=zh>公平</i>初始局面。</p>
<p>定义$F(n)$为所有包含$n$堆、每堆各$2$枚硬币的公平初始局面的数目。堆的顺序不同时视为不同的初始局面，因此$F(2) = 4$，相应的四种初始局面如下所示：</p>
<div style="text-align:center">
<img src="/resources/images/0860_diag3.jpg" alt="0860_diag3.jpg">
</div>

<p>已知$F(10) = 63594$。</p>
<p>求$F(9898)$，并对$989898989$取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 861</title>
    <url>/861/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-861"><a href="#Problem-861" class="headerlink" title="Problem 861"></a><a href="https://projecteuler.net/problem=861">Problem 861</a></h1><hr>
<h2 id="Products-of-Bi-Unitary-Divisors"><a href="#Products-of-Bi-Unitary-Divisors" class="headerlink" title="Products of Bi-Unitary Divisors"></a><strong>Products of Bi-Unitary Divisors</strong></h2><p>A <i>unitary divisor</i> of a positive integer $n$ is a divisor $d$ of $n$ such that $\gcd(d,n/d)=1$.</p>
<p>A <i>bi-unitary divisor</i> of $n$ is a divisor $d$ for which $1$ is the only unitary divisor of $d$ that is also a unitary divisor of $n/d$.</p>
<p>For example, $2$ is a bi-unitary divisor of $8$, because the unitary divisors of $2$ are $\{1,2\}$, and the unitary divisors of $8/2$ are $\{1,4\}$, with $1$ being the only unitary divisor in common.</p>
<p>The bi-unitary divisors of $240$ are $\{1,2,3,5,6,8,10,15,16,24,30,40,48,80,120,240\}$.</p>
<p>Let $P(n)$ be the product of all bi-unitary divisors of $n$. Define $Q_k(N)$ as the number of positive integers $1 &lt; n \leq N$ such that $P(n)=n^k$. For example, $Q_2\left(10^2\right)=51$ and $Q_6\left(10^6\right)=6189$.</p>
<p>Find $\sum_{k=2}^{10}Q_k\left(10^{12}\right)$.</p>
<hr>
<h2 id="双元因数的乘积"><a href="#双元因数的乘积" class="headerlink" title="双元因数的乘积"></a><strong>双元因数的乘积</strong></h2><p>若正整数$n$的因数$d$满足$\gcd(d,n/d)=1$，则称$d$为$n$的<i class=zh>元因数</i>。</p>
<p>若$1$是$d$和$n/d$唯一的公共元因数，则称$d$为$n$的<i class=zh>双元因数</i>。</p>
<p>例如，$2$是$8$的双元因数，因为$2$的元因数有$\{1,2\}$，而$8/2$的元因数有$\{1,4\}$，只有$1$是唯一的公共元因数。</p>
<p>$240$的双元因数有$\{1,2,3,5,6,8,10,15,16,24,30,40,48,80,120,240\}$。</p>
<p>令$P(n)$为$n$的所有双元因数之积。定义$Q_k(N)$为满足$1 &lt; n \leq N$和$P(n)=n^k$的正整数$n$的数量。例如，$Q_2\left(10^2\right)=51$，$Q_6\left(10^6\right)=6189$。</p>
<p>求$\sum_{k=2}^{10}Q_k\left(10^{12}\right)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 862</title>
    <url>/862/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-862"><a href="#Problem-862" class="headerlink" title="Problem 862"></a><a href="https://projecteuler.net/problem=862">Problem 862</a></h1><hr>
<h2 id="Larger-Digit-Permutation"><a href="#Larger-Digit-Permutation" class="headerlink" title="Larger Digit Permutation"></a><strong>Larger Digit Permutation</strong></h2><p>For a positive integer $n$ define $T(n)$ to be the number of strictly larger integers which can be formed by permuting the digits of $n$.</p>
<p>Leading zeros are not allowed and so for $n = 2302$ the total list of permutations would be:<br>$$2023,2032,2203,2230,\mathbf{2302},2320,3022,3202,3220$$<br>giving $T(2302)=4$.</p>
<p>Further define $S(k)$ to be the sum of $T(n)$ for all $k$-digit numbers $n$. You are given $S(3) = 1701$.</p>
<p>Find $S(12)$.</p>
<hr>
<h2 id="更大的数字重排（一）"><a href="#更大的数字重排（一）" class="headerlink" title="更大的数字重排（一）"></a><strong>更大的数字重排（一）</strong></h2><p>对于正整数$n$，定义$T(n)$为对$n$的数字进行重排所能得到的严格大于$n$的整数数量。</p>
<p>重排不允许有前导零，因此对于$n = 2302$，所有的合法重排包括：<br>$$2023,2032,2203,2230,\mathbf{2302},2320,3022,3202,3220$$<br>因此可得$T(2302)=4$。</p>
<p>再定义$S(k)$为所有的$k$位整数$n$对应的$T(n)$之和。已知$S(3) = 1701$。</p>
<p>求$S(12)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 863</title>
    <url>/863/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-863"><a href="#Problem-863" class="headerlink" title="Problem 863"></a><a href="https://projecteuler.net/problem=863">Problem 863</a></h1><hr>
<h2 id="Different-Dice"><a href="#Different-Dice" class="headerlink" title="Different Dice"></a><strong>Different Dice</strong></h2><p>Using only a six-sided fair dice and a five-sided fair dice, we would like to emulate an $n$-sided fair dice.</p>
<p>For example, one way to emulate a $28$-sided dice is to follow this procedure:</p>
<ol>
<li>Roll both dice, obtaining integers $1\le p\le 6$ and $1\le q\le 5$.</li>
<li>Combine them using $r = 5(p-1) + q$ to obtain an integer $1\le r\le 30$.</li>
<li>If $r\le 28$, return the value $r$ and stop.</li>
<li>Otherwise ($r$ being $29$ or $30$), roll both dice again, obtaining integers $1\le s\le 6$ and $1\le t\le 5$.</li>
<li>Compute $u = 30(r-29) + 5(s-1) + t$ to obtain an integer $1\le u\le 60$.</li>
<li>If $u&gt;4$, return the value $((u-5)\bmod 28) + 1$ and stop.</li>
<li>Otherwise (with $1\le u\le 4$), roll the six-sided dice twice, obtaining integers $1\le v\le 6$ and $1\le w\le 6$.</li>
<li>Compute $x = 36(u-1) + 6(v-1) + w$ to obtain an integer $1\le x\le 144$.</li>
<li>If $x&gt;4$, return the value $((x-5)\bmod 28) + 1$ and stop.</li>
<li>Otherwise (with $1\le x\le 4$), assign $u:=x$ and go back to step $7$.</li>
</ol>
<p>The expected number of dice rolls in following this procedure is $2.142476$ (rounded to $6$ decimal places). Note that rolling both dice at the same time is still counted as two dice rolls.</p>
<p>There exist other more complex procedures for emulating a $28$-sided dice that entail a smaller average number of dice rolls. However, the above procedure has the attractive property that the sequence of dice rolled is predetermined: regardless of the outcome, it follows $(D5,D6,D5,D6,D6,D6,D6,\ldots)$, truncated wherever the process stops. In fact, amongst procedures for $n=28$ with this restriction, this one is optimal in the sense of minimising the expected number of rolls needed.</p>
<p>Different values of $n$ will in general use different predetermined sequences. For example, for $n=8$, the sequence $(D5,D5,D5,\ldots)$ gives an optimal procedure, taking $2.083333\ldots$ dice rolls on average.</p>
<p>Define $R(n)$ to be the expected number of dice rolls for an optimal procedure for emulating an $n$-sided dice using only a five-sided and a six-sided dice, considering only those procedures where the sequence of dice rolled is predetermined. So, $R(8) \approx 2.083333$ and $R(28) \approx 2.142476$.</p>
<p>Let $S(n) = \displaystyle\sum_{k=2}^n R(k)$. You are given that $S(30) \approx 56.054622$.</p>
<p>Find $S(1000)$. Give your answer rounded to $6$ decimal places.</p>
<hr>
<h2 id="不同的骰子"><a href="#不同的骰子" class="headerlink" title="不同的骰子"></a><strong>不同的骰子</strong></h2><p>我们尝试用一枚公平的六面骰和一枚公平的五面骰来模拟一枚公平的$n$面骰。</p>
<p>例如，遵照如下方案，我们可以模拟一枚$28$面骰：</p>
<ol>
<li>同时抛掷这两枚骰子，得到整数$1\le p\le 6$和$1\le q\le 5$。</li>
<li>计算$r = 5(p-1) + q$，得到整数$1\le r\le 30$。</li>
<li>若$r\le 28$，给出$r$并停止。</li>
<li>否则（若$r$为$29$或$30$），再次同时抛掷这两枚骰子，得到整数$1\le s\le 6$和$1\le t\le 5$。</li>
<li>计算$u = 30(r-29) + 5(s-1) + t$，得到整数$1\le u\le 60$。</li>
<li>若$u&gt;4$，给出$((u-5)\bmod 28) + 1$并停止。</li>
<li>否则（若$1\le u\le 4$），抛掷六面骰两次，得到$1\le v\le 6$和$1\le w\le 6$。</li>
<li>计算$x = 36(u-1) + 6(v-1) + w$，得到整数$1\le x\le 144$。</li>
<li>若$x&gt;4$，给出$((x-5)\bmod 28) + 1$并停止。</li>
<li>否则（若$1\le x\le 4$），令$u:=x$并回到第$7$步。</li>
</ol>
<p>遵照上述方案，抛掷骰子次数的期望为$2.142476$（四舍五入保留$6$位小数）。注意同时抛掷两枚骰子被算作抛掷两次。</p>
<p>对于模拟$28$面骰的问题，存在更复杂但抛掷次数期望更小的方案。然而，上述方案的特点之一是，无论结果如何，抛掷骰子的序列是事先确定的，在停止前总是遵循$(D5,D6,D5,D6,D6,D6,D6,\ldots)$。事实上，在所有考虑这一额外规则的模拟$28$面骰的方案中，上述方案所需的抛掷次数期望最小。</p>
<p>对于不同的$n$，事先确定的抛掷序列也会不同。例如，对于$n=8$，最优方案中的抛掷序列为$(D5,D5,D5,\ldots)$，对应抛掷次数的期望为$2.083333\ldots$。</p>
<p>定义$R(n)$为仅使用一枚五面骰和一枚六面骰，且遵循上述“抛掷序列必须事先确定”的额外规则，以模拟$n$面骰所需的最小期望抛掷次数。因此，$R(8) \approx 2.083333$，$R(28) \approx 2.142476$。</p>
<p>记$S(n) = \displaystyle\sum_{k=2}^n R(k)$。已知$S(30) \approx 56.054622$。</p>
<p>求$S(1000)$，并四舍五入保留$6$位小数作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 864</title>
    <url>/864/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-864"><a href="#Problem-864" class="headerlink" title="Problem 864"></a><a href="https://projecteuler.net/problem=864">Problem 864</a></h1><hr>
<h2 id="Square-1-Squarefree"><a href="#Square-1-Squarefree" class="headerlink" title="Square + 1 = Squarefree"></a><strong>Square + 1 = Squarefree</strong></h2><p>Let $C(n)$ be the number of squarefree integers of the form $x^2 + 1$ such that $1 \le x \le n$.</p>
<p>For example, $C(10) = 9$ and $C(1000) = 895$.</p>
<p>Find $C(123567101113)$.</p>
<hr>
<h2 id="平方数-1-无平方因子数"><a href="#平方数-1-无平方因子数" class="headerlink" title="平方数 + 1 = 无平方因子数"></a><strong>平方数 + 1 = 无平方因子数</strong></h2><p>记$C(n)$为所有形如$x^2 + 1$的无平方因子数的数目，其中$1 \le x \le n$。</p>
<p>例如，$C(10) = 9$，$C(1000) = 895$。</p>
<p>求$C(123567101113)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 865</title>
    <url>/865/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-865"><a href="#Problem-865" class="headerlink" title="Problem 865"></a><a href="https://projecteuler.net/problem=865">Problem 865</a></h1><hr>
<h2 id="Triplicate-Numbers"><a href="#Triplicate-Numbers" class="headerlink" title="Triplicate Numbers"></a><strong>Triplicate Numbers</strong></h2><p>A <i>triplicate number</i> is a positive integer such that, after repeatedly removing three consecutive identical digits from it, all its digits can be removed.</p>
<p>For example, the integer $122555211$ is a triplicate number:<br>$$122{\color{red}555}211 \rightarrow 1{\color{red}222}11\rightarrow{\color{red}111}\rightarrow.$$<br>On the other hand, neither $663633$ nor $9990$ are triplicate numbers.</p>
<p>Let $T(n)$ be how many triplicate numbers are less than $10^n$.</p>
<p>For example, $T(6) = 261$ and $T(30) = 5576195181577716$.</p>
<p>Find $T(10^4)$. Give your answer modulo $998244353$.</p>
<hr>
<h2 id="三消数"><a href="#三消数" class="headerlink" title="三消数"></a><strong>三消数</strong></h2><p>对于任意正整数，不断地从中消除连续三个相同数字，若最终可以将其完全消除，则称之为<i class=zh>三消数</i>。</p>
<p>例如，整数$122555211$是三消数：<br>$$122{\color{red}555}211 \rightarrow 1{\color{red}222}11\rightarrow{\color{red}111}\rightarrow.$$<br>反之，$663633$和$9990$都不是三消数。</p>
<p>记$T(n)$为所有小于$10^n$的三消数的数量.</p>
<p>例如，$T(6) = 261$，$T(30) = 5576195181577716$。</p>
<p>求$T(10^4)$，并对$998244353$取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 866</title>
    <url>/866/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-866"><a href="#Problem-866" class="headerlink" title="Problem 866"></a><a href="https://projecteuler.net/problem=866">Problem 866</a></h1><hr>
<h2 id="Tidying-Up-B"><a href="#Tidying-Up-B" class="headerlink" title="Tidying Up B"></a><strong>Tidying Up B</strong></h2><p>A small child has a “number caterpillar” consisting of $N$ jigsaw pieces, each with one number on it, which, when connected together in a line, reveal the numbers $1$ to $N$ in order.</p>
<p>Every night, the child’s father has to pick up the pieces of the caterpillar that have been scattered across the play room. He picks up the pieces at random and places them in the correct order.<br>As the caterpillar is built up in this way, it forms distinct segments that gradually merge together.</p>
<p>Any time the father places a new piece in its correct position, a segment of length $k$ is formed and he writes down the $k$th hexagonal number $k\cdot(2k-1)$. Once all pieces have been placed and the full caterpillar constructed he calculates the product of all the numbers written down. Interestingly, the expected value of this product is always an integer. For example if $N=4$ then the expected value is $994$.</p>
<p>Find the expected value of the product for a caterpillar of $N=100$ pieces. Give your answer modulo $987654319$.</p>
<hr>
<h2 id="清理（二）"><a href="#清理（二）" class="headerlink" title="清理（二）"></a><strong>清理（二）</strong></h2><p>小朋友有一个“数字毛毛虫”玩具，包含有$N$片拼板，分别标有编号；如果把它们都拼起来，将会组成一条直线，且按照$1$到$N$顺序排列。</p>
<p>每天晚上，小朋友的爸爸都要把玩具房里撒了一地的毛毛虫拼板捡起来。他捡的时候是完全随机的，捡起来之后，再按照正确的顺序拼好。<br>这样一来，毛毛虫拼板将会构成分离的片段，并且不断合并直到组成完整的毛毛虫。</p>
<p>爸爸每将一块拼板拼到正确的位置上，就会形成一个长度为$k$的片段，相应地他会写下第$k$个六边形数$k\cdot(2k-1)$。当爸爸完整地拼完毛毛虫后，他会算出写下的所有数的成绩。有趣的是，这一乘积的期望总是整数。例如，若$N=4$，则期望值为$994$。</p>
<p>若毛毛虫拼板共有$N=100$片，求此时乘积的期望，并对$987654319$取余作为你的答案。</p>
<p><i class=zh>译注：“清理（一）”参见第<a href="/253">253</a>题。</i></p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 867</title>
    <url>/867/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-867"><a href="#Problem-867" class="headerlink" title="Problem 867"></a><a href="https://projecteuler.net/problem=867">Problem 867</a></h1><hr>
<h2 id="Tiling-Dodecagon"><a href="#Tiling-Dodecagon" class="headerlink" title="Tiling Dodecagon"></a><strong>Tiling Dodecagon</strong></h2><p>There are $5$ ways to tile a regular dodecagon of side $1$ with regular polygons of side $1$.</p>
<div style="text-align:center">
<img src="/resources/images/0867_DodecaDiagram.jpg" alt="0867_DodecaDiagram.jpg">
</div>

<p>Let $T(n)$ be the number of ways to tile a regular dodecagon of side $n$ with regular polygons of side 1. Then $T(1) = 5$. You are also given $T(2) = 48$.</p>
<p>Find $T(10)$. Give your answer modulo $10^9+7$.</p>
<hr>
<h2 id="密铺十二边形"><a href="#密铺十二边形" class="headerlink" title="密铺十二边形"></a><strong>密铺十二边形</strong></h2><p>用边长为$1$的正多边形铺满边长为$1$的正十二边形，有$5$种不同的方案：</p>
<div style="text-align:center">
<img src="/resources/images/0867_DodecaDiagram.jpg" alt="0867_DodecaDiagram.jpg">
</div>

<p>记$T(n)$为用边长为$1$的正多边形铺满边长为$n$的正十二边形的方案数，因此$T(1) = 5$，而$T(2) = 48$。</p>
<p>求$T(10)$，并对$10^9+7$取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 868</title>
    <url>/868/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-868"><a href="#Problem-868" class="headerlink" title="Problem 868"></a><a href="https://projecteuler.net/problem=868">Problem 868</a></h1><hr>
<h2 id="Belfry-Maths"><a href="#Belfry-Maths" class="headerlink" title="Belfry Maths"></a><strong>Belfry Maths</strong></h2><p>There is a method that is used by Bell ringers to generate all variations of the order that bells are rung.</p>
<p>The same method can be used to create all permutations of a set of letters. Consider the letters to be permuted initially in order from smallest to largest. At each step swap the largest letter with the letter on its left or right whichever generates a permutation that has not yet been seen. If neither gives a new permutation then try the next largest letter and so on. This procedure continues until all permutations have been generated.</p>
<p>For example, $3$ swaps are required to reach the permutation CBA when starting with ABC.<br /><br>The swaps are ABC $\to$ ACB $\to$ CAB $\to$ CBA.<br /><br>Also $59$ swaps are required to reach BELFRY when starting with these letters in alphabetical order.</p>
<p>Find the number of swaps that are required to reach NOWPICKBELFRYMATHS when starting with these letters in alphabetical order.</p>
<hr>
<h2 id="钟楼数学"><a href="#钟楼数学" class="headerlink" title="钟楼数学"></a><strong>钟楼数学</strong></h2><p>敲钟人常常使用一种特别的方法来给出所有可能的敲钟顺序。</p>
<p>这种方法也可以用于生成一系列字母所有可能的排列。一开始，所有字母按照字典序从小到大排列。接下来的每一步中，先尝试将最大的字母和其左侧或右侧的字母交换以生成一个新的排列；若无法进行，则转而尝试交换次大的字母，依此类推。不断重复上述步骤即可生成所有可能的排列。</p>
<p>例如，从ABC开始，经过$3$次交换可以得到排列CBA。<br /><br>交换的过程为ABC $\to$ ACB $\to$ CAB $\to$ CBA。<br /><br>类似地，从按字典序排列的初始状态开始，经过$59$次交换，可以得到排列BELFRY。</p>
<p>求从按字典序排列的初始状态开始，得到排列NOWPICKBELFRYMATHS所需的交换次数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 869</title>
    <url>/869/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-869"><a href="#Problem-869" class="headerlink" title="Problem 869"></a><a href="https://projecteuler.net/problem=869">Problem 869</a></h1><hr>
<h2 id="Prime-Guessing"><a href="#Prime-Guessing" class="headerlink" title="Prime Guessing"></a><strong>Prime Guessing</strong></h2><p>A prime is drawn uniformly from all primes not exceeding $N$. The prime is written in binary notation, and a player tries to guess it bit-by-bit starting at the least significant bit. The player scores one point for each bit they guess correctly. Immediately after each guess, the player is informed whether their guess was correct, and also whether it was the last bit in the number - in which case the game is over.</p>
<p>Let $E(N)$ be the expected number of points assuming that the player always guesses to maximize their score. For example, $E(10)=2$, achievable by always guessing “$1$”. You are also given $E(30)=2.9$.</p>
<p>Find $E(10^8)$. Give your answer rounded to eight digits after the decimal point.</p>
<hr>
<h2 id="猜质数"><a href="#猜质数" class="headerlink" title="猜质数"></a>猜质数</h2><p>均匀随机地选择一个不超过$N$的质数，将其转为二进制表示，并让一名玩家从最低位开始逐位猜测这个质数。玩家每猜对一位数字可得一分；每次猜测之后，玩家可以立即知道猜测是否正确，以及是否是这个质数的最后一位，若是则游戏结束。</p>
<p>假设玩家总是采取最优策略，记$E(N)$为玩家的期望得分。例如，$E(10)=2$，对应的最优策略是始终猜测”$1$”。此外，还已知$E(30)=2.9$。</p>
<p>求$E(10^8)$，并四舍五入保留八位小数作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 87</title>
    <url>/87/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-87"><a href="#Problem-87" class="headerlink" title="Problem 87"></a><a href="https://projecteuler.net/problem=87">Problem 87</a></h1><hr>
<h2 id="Prime-Power-Triples"><a href="#Prime-Power-Triples" class="headerlink" title="Prime Power Triples"></a><strong>Prime Power Triples</strong></h2><p>The smallest number expressible as the sum of a prime square, prime cube, and prime fourth power is $28$. In fact, there are exactly four numbers below fifty that can be expressed in such a way:</p>
<p>$$<br>\begin{aligned}<br>28 &amp;= 2^2+2^3+2^4 \\<br>33 &amp;= 3^2+2^3+2^4 \\<br>49 &amp;= 5^2+2^3+2^4 \\<br>47 &amp;= 2^2+3^3+2^4<br>\end{aligned}<br>$$</p>
<p>How many numbers below fifty million can be expressed as the sum of a prime square, prime cube, and prime fourth power?</p>
<hr>
<h2 id="素数幂三元组"><a href="#素数幂三元组" class="headerlink" title="素数幂三元组"></a><strong>素数幂三元组</strong></h2><p>最小的、可以表示为一个素数的平方、一个素数的立方和一个素数的四次方之和的数是$28$。实际上，在小于$50$的数中，一共有$4$个数满足这一性质：</p>
<p>$$<br>\begin{aligned}<br>28 &amp;= 2^2+2^3+2^4 \\<br>33 &amp;= 3^2+2^3+2^4 \\<br>49 &amp;= 5^2+2^3+2^4 \\<br>47 &amp;= 2^2+3^3+2^4<br>\end{aligned}<br>$$</p>
<p>在小于五千万的数中，有多少个数满足上述性质？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 870</title>
    <url>/870/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-870"><a href="#Problem-870" class="headerlink" title="Problem 870"></a><a href="https://projecteuler.net/problem=870">Problem 870</a></h1><hr>
<h2 id="Stone-Game-IV"><a href="#Stone-Game-IV" class="headerlink" title="Stone Game IV"></a><strong>Stone Game IV</strong></h2><p>Two players play a game with a single pile of stones of initial size $n$. They take stones from the pile in turn, according to the following rules which depend on a fixed real number $r&gt;0$:</p>
<ul>
<li>In the first turn, the first player may take $k$ stones with $1 \le k &lt; n$.</li>
<li>If a player takes $m$ stones in a turn, then in the next turn the opponent may take $k$ stones with $1 \le k \le \lfloor r \cdot m \rfloor$.</li>
</ul>
<p>Whoever cannot make a legal move loses the game.</p>
<p>Let $L(r)$ be the set of initial pile sizes $n$ for which the second player has a winning strategy. For example, $L(0.5) = \{1\}$, $L(1) = \{1, 2, 4, 8, 16, \dots\}$, $L(2) = \{1, 2, 3, 5, 8, \dots\}$.</p>
<p>A real number $q &gt; 0$ is a <i>transition value</i> if $L(s)$ is different from $L(t)$ for all $s &lt; q &lt; t$.<br /><br>Let $T(i)$ be the $i$-th transition value. For example, $T(1) = 1$, $T(2) = 2$, $T(22) \approx 6.3043478261$.</p>
<p>Find $T(123456)$ and give your answer rounded to $10$ digits after the decimal point.</p>
<hr>
<h2 id="取石子游戏（四）"><a href="#取石子游戏（四）" class="headerlink" title="取石子游戏（四）"></a><strong>取石子游戏（四）</strong></h2><p>两位玩家正在玩一个游戏，游戏开始时有一堆共$n$枚石子。两位玩家轮流从堆中取走石子，但必须遵循以下基于固定实数$r&gt;0$的规则：</p>
<ul>
<li>在第一轮中，先手玩家可以取走的石子数$k$需满足$1 \le k &lt; n$。</li>
<li>如果一名玩家在某一轮取走$m$枚石子，则下一轮其对手可以取走的石子数$k$需满足$1 \le k \le \lfloor r \cdot m \rfloor$。</li>
</ul>
<p>首先无法行动的玩家输掉游戏。</p>
<p>记$L(r)$为使得后手玩家有必胜策略的石子数$n$所构成的集合。例如，$L(0.5) = \{1\}$，$L(1) = \{1, 2, 4, 8, 16, \dots\}$，$L(2) = \{1, 2, 3, 5, 8, \dots\}$。</p>
<p>考虑实数$q&gt;0$，若对于任意$s &lt; q &lt; t$均满足$L(s)$不等于$L(t)$，则称其为<i class=zh>过渡值</i>。<br>记$T(i)$为第$i$个过渡值。例如，$T(1) = 1$，$T(2) = 2$，$T(22) \approx 6.3043478261$。</p>
<p>求$T(123456)$，并四舍五入保留$10$位小数作为你的答案。</p>
<p><i class=zh>译注：“取石子游戏（三）”参见第<a href="/366">366</a>题。</i></p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 871</title>
    <url>/871/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-871"><a href="#Problem-871" class="headerlink" title="Problem 871"></a><a href="https://projecteuler.net/problem=871">Problem 871</a></h1><hr>
<h2 id="Drifting-Subsets"><a href="#Drifting-Subsets" class="headerlink" title="Drifting Subsets"></a><strong>Drifting Subsets</strong></h2><p>Let $f$ be a function from a finite set $S$ to itself. A <i>drifting subset</i> for $f$ is a subset $A$ of $S$ such that the number of elements in the union $A \cup f(A)$ is equal to twice the number of elements of $A$.<br /><br>We write $D(f)$ for the maximal number of elements among all drifting subsets for $f$.</p>
<p>For a positive integer $n$, define $f_n$ as the function from $\{0, 1, \dots, n - 1\}$ to itself sending $x$ to $x^3 + x + 1 \bmod n$.<br /><br>You are given $D(f_5) = 1$ and $D(f_{10}) = 3$.</p>
<p>Find $\displaystyle\sum_{i = 1}^{100} D(f_{10^5 + i})$.</p>
<hr>
<h2 id="漂移子集"><a href="#漂移子集" class="headerlink" title="漂移子集"></a><strong>漂移子集</strong></h2><p>记$f$为从有限集$S$到其本身的函数。若$S$的一个子集$A$满足，并集$A \cup f(A)$的元素数目是$A$的元素数目的两倍，则称$A$为$f$的<i class=zh>漂移子集</i>。<br /><br>记$D(f)$为$f$所有漂移子集的元素数目最大值。</p>
<p>对于正整数$n$，定义$f_n$为从集合$\{0, 1, \dots, n - 1\}$到其本身的函数，将任意元素$x$映射到$x^3 + x + 1 \bmod n$。<br /><br>已知$D(f_5) = 1$，$D(f_{10}) = 3$。</p>
<p>求$\displaystyle\sum_{i = 1}^{100} D(f_{10^5 + i})$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 872</title>
    <url>/872/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-872"><a href="#Problem-872" class="headerlink" title="Problem 872"></a><a href="https://projecteuler.net/problem=872">Problem 872</a></h1><hr>
<h2 id="Recursive-Tree"><a href="#Recursive-Tree" class="headerlink" title="Recursive Tree"></a><strong>Recursive Tree</strong></h2><p>A sequence of rooted trees $T_n$ is constructed such that $T_n$ has $n$ nodes numbered $1$ to $n$.</p>
<p>The sequence starts at $T_1$, a tree with a single node as a root with the number $1$.</p>
<p>For $n &gt; 1$, $T_n$ is constructed from $T_{n-1}$ using the following procedure:</p>
<ol>
<li>Trace a path from the root of $T_{n-1}$ to a leaf by following the largest-numbered child at each node.</li>
<li>Remove all edges along the traced path, disconnecting all nodes along it from their parents.</li>
<li>Connect all orphaned nodes directly to a new node numbered $n$, which becomes the root of $T_n$.</li>
</ol>
<p>For example, the following figure shows $T_6$ and $T_7$. The path traced through $T_6$ during the construction of $T_7$ is coloured red.</p>
<div style="text-align:center">
<img src="/resources/images/0872_tree.png" alt="0872_tree.png"></div>

<p>Let $f(n, k)$ be the sum of the node numbers along the path connecting the root of $T_n$ to the node $k$, including the root and the node $k$. For example, $f(6, 1) = 6 + 5 + 1 = 12$ and $f(10, 3) = 29$.</p>
<p>Find $f(10^{17}, 9^{17})$.</p>
<hr>
<h2 id="递归树"><a href="#递归树" class="headerlink" title="递归树"></a><strong>递归树</strong></h2><p>递归构造一个有根树序列$T_n$，其中$T_n$有$n$个节点，编号分别为$1$至$n$。</p>
<p>序列的第一项为$T_1$，这棵树只包含一个编号为$1$的节点作为根节点。</p>
<p>对于$n&gt;1$，树$T_n$根据下列规则由$T_{n-1}$构造而成：</p>
<ol>
<li>从$T_{n-1}$的根节点出发，不断沿编号最大的子节点移动，直至到达叶节点，并记录相应的路径。</li>
<li>移除路径上的所有边，使路径上的节点与其父节点分离。</li>
<li>将所有被分离出的节点连接到一个新的、编号为$n$的节点，并将其作为$T_n$的根节点。</li>
</ol>
<p>例如，下图展示了$T_6$和$T_7$。$T_6$中用于构造$T_7$的路径被标示为红色。</p>
<div style="text-align:center">
<img src="/resources/images/0872_tree.png" alt="0872_tree.png"></div>

<p>记$f(n, k)$为$T_n$中连接根节点和编号为$k$的节点的路径上，所有节点（包括路径的两端）的编号和。例如，$f(6, 1) = 6 + 5 + 1 = 12$，$f(10, 3) = 29$。</p>
<p>求$f(10^{17}, 9^{17})$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 873</title>
    <url>/873/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-873"><a href="#Problem-873" class="headerlink" title="Problem 873"></a><a href="https://projecteuler.net/problem=873">Problem 873</a></h1><hr>
<h2 id="Words-with-Gaps"><a href="#Words-with-Gaps" class="headerlink" title="Words with Gaps"></a><strong>Words with Gaps</strong></h2><p>Let $W(p,q,r)$ be the number of words that can be formed using the letter A $p$ times, the letter B $q$ times and the letter C $r$ times with the condition that every A is separated from every B by at least two Cs. For example, CACACCBB is a valid word for $W(2,2,4)$ but ACBCACBC is not.</p>
<p>You are given $W(2,2,4)=32$ and $W(4,4,44)=13908607644$.</p>
<p>Find $W(10^6,10^7,10^8)$. Give your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="带间隔的单词"><a href="#带间隔的单词" class="headerlink" title="带间隔的单词"></a><strong>带间隔的单词</strong></h2><p>记$W(p,q,r)$为由$p$个A、$q$个B和$r$个C构成、且任意A和B之间间隔至少两个C的单词数目。例如，对于$W(2,2,4)$，CACACCBB是一个合法单词，而ACBCACBC不是。</p>
<p>已知$W(2,2,4)=32$，$W(4,4,44)=13908607644$。</p>
<p>求$W(10^6,10^7,10^8)$, 并对$1\ 000\ 000\ 007$取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 874</title>
    <url>/874/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-874"><a href="#Problem-874" class="headerlink" title="Problem 874"></a><a href="https://projecteuler.net/problem=874">Problem 874</a></h1><hr>
<h2 id="Maximal-Prime-Score"><a href="#Maximal-Prime-Score" class="headerlink" title="Maximal Prime Score"></a><strong>Maximal Prime Score</strong></h2><p>Let $p(t)$ denote the $(t+1)$th prime number. So that $p(0) = 2$, $p(1) = 3$, etc.<br /><br>We define the <i>prime score</i> of a list of nonnegative integers $[a_1, \dots, a_n]$ as the sum $\sum_{i = 1}^n p(a_i)$.<br /><br>Let $M(k, n)$ be the maximal prime score among all lists $[a_1, \dots, a_n]$ such that:</p>
<ul>
<li>$0 \leq a_i &lt; k$ for each $i$;</li>
<li>the sum $\sum_{i = 1}^n a_i$ is a multiple of $k$.</li>
</ul>
<p>For example, $M(2, 5) = 14$ as $[0, 1, 1, 1, 1]$ attains a maximal prime score of $14$.</p>
<p>Find $M(7000, p(7000))$.</p>
<hr>
<h2 id="最大质数得分"><a href="#最大质数得分" class="headerlink" title="最大质数得分"></a><strong>最大质数得分</strong></h2><p>记$p(t)$为第$(t+1)$个质数，因此$p(0) = 2$，$p(1) = 3$，依此类推。<br /><br>定义非负整数列$[a_1, \dots, a_n]$的<i class=zh>质数得分</i>为$\sum_{i = 1}^n p(a_i)$。<br /><br>考虑所有满足如下条件的非负整数列$[a_1, \dots, a_n]$，记$M(k,n)$为其质数得分的最大值：</p>
<ul>
<li>对于所有$i$，$0 \leq a_i &lt; k$；</li>
<li>数列和$\sum_{i = 1}^n a_i$是$k$的倍数。</li>
</ul>
<p>例如，$M(2, 5) = 14$，最大质数得分$14$在数列$[0, 1, 1, 1, 1]$时取得。</p>
<p>求$M(7000, p(7000))$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 875</title>
    <url>/875/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-875"><a href="#Problem-875" class="headerlink" title="Problem 875"></a><a href="https://projecteuler.net/problem=875">Problem 875</a></h1><hr>
<h2 id="Quadruple-Congruence"><a href="#Quadruple-Congruence" class="headerlink" title="Quadruple Congruence"></a><strong>Quadruple Congruence</strong></h2><p>For a positive integer $n$ we define $q(n)$ to be the number of solutions to:</p>
<p>$$a_1^2+a_2^2+a_3^2+a_4^2 \equiv b_1^2+b_2^2+b_3^2+b_4^2 \pmod n$$</p>
<p>where $0 \leq a_i, b_i \lt n$. For example, $q(4)= 18432$.</p>
<p>Define $\displaystyle Q(n)=\sum_{i=1}^{n}q(i)$. You are given $Q(10)=18573381$.</p>
<p>Find $Q(12345678)$. Give your answer modulo $1001961001$.</p>
<hr>
<h2 id="四重同余"><a href="#四重同余" class="headerlink" title="四重同余"></a><strong>四重同余</strong></h2><p>对于正整数$n$，定义$q(n)$为如下同余方程的解的数目：<br>$$a_1^2+a_2^2+a_3^2+a_4^2 \equiv b_1^2+b_2^2+b_3^2+b_4^2 \pmod n$$<br>其中$0 \leq a_i, b_i \lt n$。例如，$q(4)= 18432$。</p>
<p>定义$\displaystyle Q(n)=\sum_{i=1}^{n}q(i)$。已知$Q(10)=18573381$。</p>
<p>求$Q(12345678)$，并对$1001961001$取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 876</title>
    <url>/876/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-876"><a href="#Problem-876" class="headerlink" title="Problem 876"></a><a href="https://projecteuler.net/problem=876">Problem 876</a></h1><hr>
<h2 id="Triplet-Tricks"><a href="#Triplet-Tricks" class="headerlink" title="Triplet Tricks"></a><strong>Triplet Tricks</strong></h2><p>Starting with three numbers $a, b, c$, at each step do one of the three operations:</p>
<ul>
<li>change $a$ to $2(b + c) - a$;</li>
<li>change $b$ to $2(c + a) - b$;</li>
<li>change $c$ to $2(a + b) - c$.</li>
</ul>
<p>Define $f(a, b, c)$ to be the minimum number of steps required for one number to become zero. If this is not possible then $f(a, b, c)=0$.</p>
<p>For example, $f(6,10,35)=3$:<br>$$(6,10,35) \to (6,10,-3) \to (8,10,-3) \to (8,0,-3).$$<br>However, $f(6,10,36)=0$ as no series of operations leads to a zero number.</p>
<p>Also define $F(a, b)=\sum_{c=1}^\infty f(a,b,c)$. You are given $F(6,10)=17$ and $F(36,100)=179$.</p>
<p>Find $\displaystyle\sum_{k=1}^{18}F(6^k,10^k)$.</p>
<hr>
<h2 id="三元戏法"><a href="#三元戏法" class="headerlink" title="三元戏法"></a><strong>三元戏法</strong></h2><p>从三个数$a, b, c$开始，每一步进行以下三种操作之一：</p>
<ul>
<li>将$a$替换为$2(b + c) - a$；</li>
<li>将$b$替换为$2(c + a) - b$；</li>
<li>将$c$替换为$2(a + b) - c$。</li>
</ul>
<p>定义$f(a, b, c)$为使其中一个数变为零所需的最少步数。如果无法做到这一点，则$f(a, b, c)=0$。</p>
<p>例如，$f(6,10,35)=3$：<br>$$(6,10,35) \to (6,10,-3) \to (8,10,-3) \to (8,0,-3).$$<br>而$f(6,10,36)=0$，因为不存在使得其中一个数变为零的操作序列。</p>
<p>再定义$F(a, b)=\sum_{c=1}^\infty f(a,b,c)$。已知$F(6,10)=17$，$F(36,100)=179$。</p>
<p>求$\displaystyle\sum_{k=1}^{18}F(6^k,10^k)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 877</title>
    <url>/877/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-877"><a href="#Problem-877" class="headerlink" title="Problem 877"></a><a href="https://projecteuler.net/problem=877">Problem 877</a></h1><hr>
<h2 id="XOR-Equation-A"><a href="#XOR-Equation-A" class="headerlink" title="XOR-Equation A"></a><strong>XOR-Equation A</strong></h2><p>We use $x\oplus y$ for the bitwise XOR of $x$ and $y$.<br /><br>Define the <i>XOR-product</i> of $x$ and $y$, denoted by $x \otimes y$, similar to a long multiplication in base $2$, except that the intermediate results are XORed instead of the usual integer addition.</p>
<p>For example, $7 \otimes 3 = 9$, or in base $2$, $111_2 \otimes 11_2 = 1001_2$:<br>$$<br>\begin{aligned}<br>\phantom{\otimes 111} 111_2 \\<br>\otimes \phantom{1111} 11_2 \\<br>\hline<br>\phantom{\otimes 111} 111_2 \\<br>\oplus \phantom{11} 111_2  \phantom{9} \\<br>\hline<br>\phantom{\otimes 11} 1001_2 \\<br>\end{aligned}<br>$$<br>We consider the equation:<br>$$(a \otimes a) \oplus (2 \otimes a \otimes b) \oplus (b \otimes b) = 5$$<br>For example, $(a, b) = (3, 6)$ is a solution.</p>
<p>Let $X(N)$ be the XOR of the $b$ values for all solutions to this equation satisfying $0 \le a \le b \le N$.<br /><br>You are given $X(10)=5$.</p>
<p>Find $X(10^{18})$.</p>
<hr>
<h2 id="异或等式（一）"><a href="#异或等式（一）" class="headerlink" title="异或等式（一）"></a><strong>异或等式（一）</strong></h2><p>用$x\oplus y$表示$x$和$y$按位异或的结果。<br /><br>考虑$x$和$y$的$2$进制长乘法，但将中间结果的相加替换为按位异或，定义其结果为$x$和$y$的<i class=zh>异或积</i>，并记作$x \otimes y$。 </p>
<p>例如，$7 \otimes 3 = 9$，或在$2$进制下，$111_2 \otimes 11_2 = 1001_2$：<br>$$<br>\begin{aligned}<br>\phantom{\otimes 111} 111_2 \\<br>\otimes \phantom{1111} 11_2 \\<br>\hline<br>\phantom{\otimes 111} 111_2 \\<br>\oplus \phantom{11} 111_2  \phantom{9} \\<br>\hline<br>\phantom{\otimes 11} 1001_2 \\<br>\end{aligned}<br>$$<br>考虑等式：<br>$$(a \otimes a) \oplus (2 \otimes a \otimes b) \oplus (b \otimes b) = 5$$<br>例如，$(a, b) = (3, 6)$是上式的一个解。</p>
<p>考虑所有满足$0 \le a \le b \le N$的上式的解，并记$X(N)$为所有这些解中$b$的取值按位异或的结果。<br /><br>已知$X(10)=5$。</p>
<p>求$X(10^{18})$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 878</title>
    <url>/878/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-878"><a href="#Problem-878" class="headerlink" title="Problem 878"></a><a href="https://projecteuler.net/problem=878">Problem 878</a></h1><hr>
<h2 id="XOR-Equation-B"><a href="#XOR-Equation-B" class="headerlink" title="XOR-Equation B"></a><strong>XOR-Equation B</strong></h2><p>We use $x\oplus y$ for the bitwise XOR of $x$ and $y$.<br /><br>Define the <i>XOR-product</i> of $x$ and $y$, denoted by $x \otimes y$, similar to a long multiplication in base $2$, except that the intermediate results are XORed instead of the usual integer addition.<br /><br>For example, $7 \otimes 3 = 9$, or in base $2$, $111_2 \otimes 11_2 = 1001_2$:<br>$$<br>\begin{aligned}<br>\phantom{\otimes 111} 111_2 \\<br>\otimes \phantom{1111} 11_2 \\<br>\hline<br>\phantom{\otimes 111} 111_2 \\<br>\oplus \phantom{11} 111_2  \phantom{9} \\<br>\hline<br>\phantom{\otimes 11} 1001_2 \\<br>\end{aligned}<br>$$<br>We consider the equation:<br>$$(a \otimes a) \oplus (2 \otimes a \otimes b) \oplus (b \otimes b) = k$$<br>For example, $(a, b) = (3, 6)$ is a solution to this equation for $k=5$.</p>
<p>Let $G(N,m)$ be the number of solutions to those equations with $k \le m$ and $0 \le a \le b \le N$.</p>
<p>You are given $G(1000,100)=398$.</p>
<p>Find $G(10^{17},1\ 000\ 000).$</p>
<hr>
<h2 id="异或等式（二）"><a href="#异或等式（二）" class="headerlink" title="异或等式（二）"></a><strong>异或等式（二）</strong></h2><p>用$x\oplus y$表示$x$和$y$按位异或的结果。<br /><br>考虑$x$和$y$的$2$进制长乘法，但将中间结果的相加替换为按位异或，定义其结果为$x$和$y$的<i class=zh>异或积</i>，并记作$x \otimes y$。 <br /><br>例如，$7 \otimes 3 = 9$，或在$2$进制下，$111_2 \otimes 11_2 = 1001_2$：<br>$$<br>\begin{aligned}<br>\phantom{\otimes 111} 111_2 \\<br>\otimes \phantom{1111} 11_2 \\<br>\hline<br>\phantom{\otimes 111} 111_2 \\<br>\oplus \phantom{11} 111_2  \phantom{9} \\<br>\hline<br>\phantom{\otimes 11} 1001_2 \\<br>\end{aligned}<br>$$<br>考虑等式：<br>$$(a \otimes a) \oplus (2 \otimes a \otimes b) \oplus (b \otimes b) = k$$<br>例如，$(a, b) = (3, 6)$是上式取$k=5$时的一个解。</p>
<p>若上式取遍所有$k \le m$，考虑其所有满足$0 \le a \le b \le N$的解，记$G(N,m)$为所有这些解的数目。</p>
<p>已知$G(1000,100)=398$。</p>
<p>求$G(10^{17},1\ 000\ 000)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 879</title>
    <url>/879/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-879"><a href="#Problem-879" class="headerlink" title="Problem 879"></a><a href="https://projecteuler.net/problem=879">Problem 879</a></h1><hr>
<h2 id="Touch-screen-Password"><a href="#Touch-screen-Password" class="headerlink" title="Touch-screen Password"></a><strong>Touch-screen Password</strong></h2><p>A touch-screen device can be unlocked with a “password” consisting of a sequence of two or more distinct spots that the user selects from a rectangular grid of spots on the screen. The user enters their sequence by touching the first spot, then tracing a straight line segment to the next spot, and so on until the end of the sequence. The user’s finger remains in contact with the screen throughout, and may only move in straight line segments from spot to spot.</p>
<p>If the finger traces a straight line that passes over an intermediate spot, then that is treated as two line segments with the intermediate spot included in the password sequence. For example, on a $3\times 3$ grid labelled with digits $1$ to $9$ (shown below), tracing $1-9$ is interpreted as $1-5-9$.</p>
<p>Once a spot has been selected it disappears from the screen. Thereafter, the spot may not be used as an endpoint of future line segments, and it is ignored by any future line segments which happen to pass through it. For example, tracing $1-9-3-7$ (which crosses the $5$ spot twice) will give the password $1-5-9-6-3-7$.</p>
<div style="text-align:center">
<img src="/resources/images/0879_touchscreen_159637.png" alt="1-5-9-6-3-7 example">
</div>

<p>There are $389488$ different passwords that can be formed on a $3 \times 3$ grid.</p>
<p>Find the number of different passwords that can be formed on a $4 \times 4$ grid.</p>
<hr>
<h2 id="触屏密码"><a href="#触屏密码" class="headerlink" title="触屏密码"></a><strong>触屏密码</strong></h2><p>触屏设备的解锁“密码”是由用户从屏幕上的长方形点阵中选择两个至多个不同触点组成的序列。用户先触摸第一个触点，然后沿直线移动到第二个触点，依此类推直至完成序列。在这过程中，用户的手指必须始终接触屏幕，且只能沿直线移动。</p>
<p>如果在手指沿直线移动时经过了一个中间触点，则应当将该中间触点加入序列并视为两段移动。例如，考虑一个大小为$3 \times 3$且标有数字$1$至$9$的点阵（如下所示），序列$1-9$实际上应当视为序列$1-5-9$。</p>
<p>触点被接触后就会从屏幕上消失，在此之后，既不能作为未来移动时的终点，也不会因为在移动时经过而被作为中间触点再次加入序列。例如，序列$1-9-3-7$（期间会经过触点$5$两次）实际上应当视为序列$1-5-9-6-3-7$。</p>
<div style="text-align:center">
<img src="/resources/images/0879_touchscreen_159637.png" alt="1-5-9-6-3-7 example">
</div>

<p>在$3\times 3$的点阵上，一共有$389488$种不同的密码。</p>
<p>求在$4\times 4$的点阵上，一共有多少种不同的密码？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 88</title>
    <url>/88/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-88"><a href="#Problem-88" class="headerlink" title="Problem 88"></a><a href="https://projecteuler.net/problem=88">Problem 88</a></h1><hr>
<h2 id="Product-sum-Numbers"><a href="#Product-sum-Numbers" class="headerlink" title="Product-sum Numbers"></a><strong>Product-sum Numbers</strong></h2><p>A natural number, $N$, that can be written as the sum and product of a given set of at least two natural numbers, $\{a_1,a_2,\ldots,a_k\}$ is called a product-sum number: $N = a_1 + a_2 + \ldots + a_k = a_1 \times a_2 \times \ldots \times a_k$.</p>
<p>For example, $6 = 1 + 2 + 3 = 1 \times 2 \times 3$.</p>
<p>For a given set of size, $k$, we shall call the smallest $N$ with this property a minimal product-sum number. The minimal product-sum numbers for sets of size, $k = 2$, $3$, $4$, $5$, and $6$ are as follows.</p>
<p>$$<br>\begin{aligned}<br>k=2&amp;: 4 = 2 \times 2 = 2 + 2 \\<br>k=3&amp;: 6 = 1 \times 2 \times 3 = 1 + 2 + 3 \\<br>k=4&amp;: 8 = 1 \times 1 \times 2 \times 4 = 1 + 1 + 2 + 4 \\<br>k=5&amp;: 8 = 1 \times 1 \times 2 \times 2 \times 2  = 1 + 1 + 2 + 2 + 2 \\<br>k=6&amp;: 12 = 1 \times 1 \times 1 \times 1 \times 2 \times 6 = 1 + 1 + 1 + 1 + 2 + 6<br>\end{aligned}<br>$$</p>
<p>Hence for $2\le k\le 6$, the sum of all the minimal product-sum numbers is $4+6+8+12 = 30$; note that $8$ is only counted once in the sum.</p>
<p>In fact, as the complete set of minimal product-sum numbers for $2 \le k\le 12$ is $\{4, 6, 8, 12, 15, 16\}$, the sum is $61$.</p>
<p>What is the sum of all the minimal product-sum numbers for $2 \le k \le 12000$?</p>
<hr>
<h2 id="积和数"><a href="#积和数" class="headerlink" title="积和数"></a><strong>积和数</strong></h2><p>若自然数$N$能够同时表示成一组至少两个自然数$\{a_1,a_2,\ldots,a_k\}$的积与和，也即$N = a_1 + a_2 + \ldots + a_k = a_1 \times a_2 \times \ldots \times a_k$，则称之为积和数。</p>
<p>例如，$6$是积和数，因为$6 = 1 + 2 + 3 = 1 \times 2 \times 3$。</p>
<p>给定这一组自然数的数目$k$，满足上述性质的最小$N$值被称为最小积和数。当$k = 2$、$3$、$4$、$5$、$6$时，最小积和数如下所示：</p>
<p>$$<br>\begin{aligned}<br>k=2&amp;: 4 = 2 \times 2 = 2 + 2 \\<br>k=3&amp;: 6 = 1 \times 2 \times 3 = 1 + 2 + 3 \\<br>k=4&amp;: 8 = 1 \times 1 \times 2 \times 4 = 1 + 1 + 2 + 4 \\<br>k=5&amp;: 8 = 1 \times 1 \times 2 \times 2 \times 2  = 1 + 1 + 2 + 2 + 2 \\<br>k=6&amp;: 12 = 1 \times 1 \times 1 \times 1 \times 2 \times 6 = 1 + 1 + 1 + 1 + 2 + 6<br>\end{aligned}<br>$$</p>
<p>因此，对于$2 \le k\le 6$，所有的最小积和数之和为$4+6+8+12 = 30$；注意$8$只被计算了一次。</p>
<p>已知对于$2 \le k\le 12$，所有最小积和数构成的集合是$\{4, 6, 8, 12, 15, 16\}$，这些数之和是$61$。</p>
<p>对于$2 \le k \le 12000$，所有最小积和数之和是多少？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 880</title>
    <url>/880/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-880"><a href="#Problem-880" class="headerlink" title="Problem 880"></a><a href="https://projecteuler.net/problem=880">Problem 880</a></h1><hr>
<h2 id="Nested-Radicals"><a href="#Nested-Radicals" class="headerlink" title="Nested Radicals"></a><strong>Nested Radicals</strong></h2><p>$(x,y)$ is called a <i>nested radical pair</i> if $x$ and $y$ are non-zero integers such that $x/y$ is not a cube of a rational number, and there exist integers $a$, $b$ and $c$ such that:<br>$$\sqrt{\sqrt[3]{x}+\sqrt[3]{y}}=\sqrt[3]{a}+\sqrt[3]{b}+\sqrt[3]{c}$$<br>For example, both $(-4,125)$ and $(5,5324)$ are nested radical pairs:<br>$$<br>\begin{aligned}<br>\begin{split}<br>\sqrt{\sqrt[3]{-4}+\sqrt[3]{125}}    &amp; = \sqrt[3]{-1}+\sqrt[3]{2}+\sqrt[3]{4}\\<br>\sqrt{\sqrt[3]{5}+\sqrt[3]{5324}}    &amp; = \sqrt[3]{-2}+\sqrt[3]{20}+\sqrt[3]{25}\\<br>\end{split}<br>\end{aligned}<br>$$<br>Let $H(N)$ be the sum of $|x|+|y|$ for all the nested radical pairs $(x, y)$ where $|x| \leq |y|\leq N$.<br /><br>For example, $H(10^3)=2535$.</p>
<p>Find $H(10^{15})$. Give your answer modulo $1031^3+2$.</p>
<hr>
<h2 id="嵌套根式"><a href="#嵌套根式" class="headerlink" title="嵌套根式"></a><strong>嵌套根式</strong></h2><p>若非零整数$x$和$y$满足，$x/y$不是有理数的立方，且存在满足以下条件的整数$a$、$b$、$c$，则称$(x,y)$为<i class=zh>嵌套根式对</i>：<br>$$\sqrt{\sqrt[3]{x}+\sqrt[3]{y}}=\sqrt[3]{a}+\sqrt[3]{b}+\sqrt[3]{c}$$<br>例如，$(-4,125)$和$(5,5324)$都是嵌套根式对：<br>$$<br>\begin{aligned}<br>\begin{split}<br>\sqrt{\sqrt[3]{-4}+\sqrt[3]{125}}    &amp; = \sqrt[3]{-1}+\sqrt[3]{2}+\sqrt[3]{4}\\<br>\sqrt{\sqrt[3]{5}+\sqrt[3]{5324}}    &amp; = \sqrt[3]{-2}+\sqrt[3]{20}+\sqrt[3]{25}\\<br>\end{split}<br>\end{aligned}<br>$$<br>考虑所有满足$|x| \leq |y|\leq N$的嵌套根式对$(x,y)$，记$H(N)$为所有$|x|+|y|$的和。<br /><br>例如，$H(10^3)=2535$。</p>
<p>求$H(10^{15})$，并对$1031^3+2$取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 881</title>
    <url>/881/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-881"><a href="#Problem-881" class="headerlink" title="Problem 881"></a><a href="https://projecteuler.net/problem=881">Problem 881</a></h1><hr>
<h2 id="Divisor-Graph-Width"><a href="#Divisor-Graph-Width" class="headerlink" title="Divisor Graph Width"></a><strong>Divisor Graph Width</strong></h2><p>For a positive integer $n$ create a graph using its divisors as vertices. An edge is drawn between two vertices $a &lt; b$ if their quotient $b/a$ is prime. The graph can be arranged into levels where vertex $n$ is at level $0$ and vertices that are a distance $k$ from $n$ are on level $k$. Define $g(n)$ to be the maximum number of vertices in a single level. </p>
<div style="text-align:center">
<img src="/resources/images/0881_example45.jpg" alt="0881_example45.jpg">
</div>

<p>The example above shows that $g(45) = 2$. You are also given $g(5040) = 12$.</p>
<p>Find the smallest number, $n$, such that $g(n) \ge 10^4$.</p>
<hr>
<h2 id="约数图宽度"><a href="#约数图宽度" class="headerlink" title="约数图宽度"></a><strong>约数图宽度</strong></h2><p>对于正整数$n$，以其约数为顶点构造图。若两个顶点$a &lt; b$的商$b/a$是质数，则连接这两个顶点。该图可以分成多层，其中顶点$n$在第$0$层，而距离$n$的距离为$k$的顶点则位于第$k$层。记$g(n)$为该图中任意一层的顶点数的最大值。</p>
<div style="text-align:center">
<img src="/resources/images/0881_example45.jpg" alt="0881_example45.jpg">
</div>

<p>如上所示可知$g(45) = 2$。已知$g(5040) = 12$。</p>
<p>求最小的、满足$g(n) \ge 10^4$的$n$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 882</title>
    <url>/882/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-882"><a href="#Problem-882" class="headerlink" title="Problem 882"></a><a href="https://projecteuler.net/problem=882">Problem 882</a></h1><hr>
<h2 id="Removing-Bits"><a href="#Removing-Bits" class="headerlink" title="Removing Bits"></a><strong>Removing Bits</strong></h2><p>Dr. One and Dr. Zero are playing the following partisan game.<br>The game begins with one $1$, two $2$’s, three $3$’s, $\ldots$, $n$ $n$’s. Starting with Dr. One, they make moves in turn.<br /><br>Dr. One chooses a number and changes it by removing a $1$ from its binary expansion.<br /><br>Dr. Zero chooses a number and changes it by removing a $0$ from its binary expansion.<br /><br>The player that is unable to move loses.<br>Note that leading zeros are not allowed in any binary expansion; in particular nobody can make a move on the number $0$.</p>
<p>They soon realize that Dr. Zero can never win the game. In order to make it more interesting, Dr. Zero is allowed to “skip the turn” several times, i.e. passing the turn back to Dr. One without making a move.</p>
<p>For example, when $n = 2$, Dr. Zero can win the game if allowed to skip $2$ turns. A sample game:<br>$$<br>[1, 2, 2]\xrightarrow{\textrm{Dr. One}}[1, 0, 2]\xrightarrow{\textrm{Dr. Zero}}[1, 0, 1]\xrightarrow{\textrm{Dr. One}}[1, 0, 0]\xrightarrow[\textrm{skip}]{\textrm{Dr. Zero}}<br>[1, 0, 0]\xrightarrow{\textrm{Dr. One}}[0, 0, 0]\xrightarrow[\textrm{skip}]{\textrm{Dr. Zero}}[0, 0, 0].<br>$$<br>Let $S(n)$ be the minimal number of skips needed so that Dr. Zero has a winning strategy.<br /><br>For example, $S(2) = 2$, $S(5) = 17$, $S(10) = 64$.</p>
<p>Find $S(10^5)$.</p>
<hr>
<h2 id="移除比特"><a href="#移除比特" class="headerlink" title="移除比特"></a><strong>移除比特</strong></h2><p>壹博士和零博士正在玩一个游戏。<br>游戏开始时有一个$1$、两个$2$、三个$3$、$\ldots$、和$n$个$n$。壹博士先行，然后双方交替行动。<br /><br>轮到壹博士行动时，壹博士可以选择一个数，并从其二进制表示中移除一个$1$。<br /><br>轮到零博士行动时，零博士可以选择一个数，并从其二进制表示中移除一个$0$。<br /><br>首先无法行动的玩家输掉游戏。<br>注意二进制表示中不允许有前导零；特别地，双方在行动时均不能选择数$0$进行移除。</p>
<p>他们很快意识到零博士永远不可能获胜。为了让这个游戏更有趣，零博士可以有限次地“跳过回合”，即不进行任何行动并将局面直接转交给壹博士。</p>
<p>例如，当$n = 2$时，若零博士能跳过$2$个回合就能获胜。一种可能的获胜方式是:<br>$$<br>[1, 2, 2]\xrightarrow{\textrm{壹博士}}[1, 0, 2]\xrightarrow{\textrm{零博士}}[1, 0, 1]\xrightarrow{\textrm{壹博士}}[1, 0, 0]\xrightarrow[\textrm{跳过}]{\textrm{零博士}}<br>[1, 0, 0]\xrightarrow{\textrm{壹博士}}[0, 0, 0]\xrightarrow[\textrm{跳过}]{\textrm{零博士}}[0, 0, 0].<br>$$<br>记$S(n)$为使零博士有必胜策略所需的最小跳过回合数。<br /><br>例如，$S(2) = 2$，$S(5) = 17$，$S(10) = 64$。</p>
<p>求$S(10^5)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 883</title>
    <url>/883/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-883"><a href="#Problem-883" class="headerlink" title="Problem 883"></a><a href="https://projecteuler.net/problem=883">Problem 883</a></h1><hr>
<h2 id="Remarkable-Triangles"><a href="#Remarkable-Triangles" class="headerlink" title="Remarkable Triangles"></a><strong>Remarkable Triangles</strong></h2><p>In this problem we consider triangles drawn on a <b>hexagonal lattice</b>, where each lattice point in the plane has six neighbouring points equally spaced around it, all distance $1$ away.</p>
<p>We call a triangle <i>remarkable</i> if</p>
<ul>
<li>All three vertices and its <b>incentre</b> lie on lattice points</li>
<li>At least one of its angles is $60^\circ$</li>
</ul>
<div style="text-align:center">
<img src="/resources/images/0883_diagram.png" alt="0883_diagram.png">
</div>

<p>Above are four examples of remarkable triangles, with $60^\circ$ angles illustrated in red. Triangles A and B have inradius $1$; C has inradius $\sqrt{3}$; D has inradius $2$.</p>
<p>Define $T(r)$ to be the number of remarkable triangles with inradius $\le r$. Rotations and reflections, such as triangles A and B above, are counted separately; however direct translations are not. That is, the same triangle drawn in different positions of the lattice is only counted once.</p>
<p>You are given $T(0.5)=2$, $T(2)=44$, and $T(10)=1302$.</p>
<p>Find $T(10^6)$.</p>
<hr>
<h2 id="卓越三角形"><a href="#卓越三角形" class="headerlink" title="卓越三角形"></a><strong>卓越三角形</strong></h2><p>本题所考虑的三角形的顶点均在<b>六边形格阵</b>上。六边形格阵是平面上的一种格点阵，其中每个格点周围都有六个相邻的、均匀分布的格点，其距离均为$1$。</p>
<p>所谓<i class=zh>卓越</i>三角形是满足以下条件的三角形：</p>
<ul>
<li>其三个顶点及其<b>内心</b>都落在格点上</li>
<li>至少一个角为$60^\circ$</li>
</ul>
<div style="text-align:center">
<img src="/resources/images/0883_diagram.png" alt="0883_diagram.png">
</div>

<p>如上所示是四个卓越三角形，其$60^\circ$的角被标记为红色。三角形A和B的内接圆半径为$1$，C的内接圆半径为$\sqrt{3}$，而D的内接圆半径为$2$。</p>
<p>记$T(r)$为所有内接圆半径小于等于$r$的卓越三角形的数目。旋转和翻转形成的不同三角形，如上图所示的三角形A和B，在计数时分别计算；而直接平移则不重复计算，也就是说，在格阵不同的位置绘制的完全相同的三角形只计算一次。</p>
<p>已知$T(0.5)=2$，$T(2)=44$，$T(10)=1302$。</p>
<p>求$T(10^6)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 884</title>
    <url>/884/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-884"><a href="#Problem-884" class="headerlink" title="Problem 884"></a><a href="https://projecteuler.net/problem=884">Problem 884</a></h1><hr>
<h2 id="Removing-Cubes"><a href="#Removing-Cubes" class="headerlink" title="Removing Cubes"></a><strong>Removing Cubes</strong></h2><p>Starting from a positive integer $n$, at each step we subtract from $n$ the largest perfect cube not exceeding $n$, until $n$ becomes $0$.<br><br>For example, with $n = 100$ the procedure ends in $4$ steps:<br>$$100 \xrightarrow{-4^3} 36 \xrightarrow{-3^3} 9 \xrightarrow{-2^3} 1 \xrightarrow{-1^3} 0.$$<br>Let $D(n)$ denote the number of steps of the procedure. Thus $D(100) = 4$.</p>
<p>Let $S(N)$ denote the sum of $D(n)$ for all positive integers $n$ <b>strictly less</b> than $N$.<br><br>For example, $S(100) = 512$.</p>
<p>Find $S(10^{17})$.</p>
<hr>
<h2 id="扣除立方数"><a href="#扣除立方数" class="headerlink" title="扣除立方数"></a><strong>扣除立方数</strong></h2><p>从任意正整数$n$开始，每一步依次扣除不超过$n$的最大立方数，直到$n$变为$0$。<br><br>例如，从$n = 100$开始需要$4$步：<br>$$100 \xrightarrow{-4^3} 36 \xrightarrow{-3^3} 9 \xrightarrow{-2^3} 1 \xrightarrow{-1^3} 0$$<br>记$D(n)$为从$n$开始所需要的步数，因此$D(100) = 4$。</p>
<p>记$S(N)$为所有<b>严格小于</b>$N$的正整数$n$所对应的$D(n)$之和。<br><br>例如，$S(100) = 512$。</p>
<p>求$S(10^{17})$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 885</title>
    <url>/885/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-885"><a href="#Problem-885" class="headerlink" title="Problem 885"></a><a href="https://projecteuler.net/problem=885">Problem 885</a></h1><hr>
<h2 id="Sorted-Digits"><a href="#Sorted-Digits" class="headerlink" title="Sorted Digits"></a><strong>Sorted Digits</strong></h2><p>For a positive integer $d$, let $f(d)$ be the number created by sorting the digits of $d$ in ascending order, removing any zeros. For example, $f(3403) = 334$.</p>
<p>Let $S(n)$ be the sum of $f(d)$ for all positive integers $d$ of $n$ digits or less. You are given $S(1) = 45$ and $S(5) = 1543545675$.</p>
<p>Find $S(18)$. Give your answer modulo $1123455689$.</p>
<hr>
<h2 id="数字排序"><a href="#数字排序" class="headerlink" title="数字排序"></a><strong>数字排序</strong></h2><p>对于正整数$d$，记$f(d)$为将$d$的各位非零数字按升序排序所得的结果。例如，$f(3403) = 334$。</p>
<p>记$S(n)$为所有至多$n$位的正整数$d$所对应的$f(d)$之和。已知$S(1) = 45$，$S(5) = 1543545675$。</p>
<p>求$S(18)$，并对$1123455689$取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 886</title>
    <url>/886/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-886"><a href="#Problem-886" class="headerlink" title="Problem 886"></a><a href="https://projecteuler.net/problem=886">Problem 886</a></h1><hr>
<h2 id="Coprime-Permutations"><a href="#Coprime-Permutations" class="headerlink" title="Coprime Permutations"></a><strong>Coprime Permutations</strong></h2><p>A permutation of $\{2,3,\ldots,n\}$ is a rearrangement of these numbers. A <i>coprime permutation</i> is a rearrangement such that all pairs of adjacent numbers are coprime.</p>
<p>Let $P(n)$ be the number of coprime permutations of $\{2,3,\ldots,n\}$.</p>
<p>For example, $P(4)=2$ as there are two coprime permutations, $(2,3,4)$ and $(4,3,2)$. You are also given $P(10)=576$.</p>
<p>Find $P(34)$ and give your answer modulo $83\ 456\ 729$.</p>
<hr>
<h2 id="互质重排"><a href="#互质重排" class="headerlink" title="互质重排"></a><strong>互质重排</strong></h2><p>$\{2,3,\ldots,n\}$的重排是将该集合中的所有数重新排列所得的结果，而<i class=zh>互质重排</i>则是相邻两数总是互质的重排。</p>
<p>记$P(n)$为$\{2,3,\ldots,n\}$的所有互质重排的数目。</p>
<p>例如，$P(4)=2$，即存在两种互质重排，分别是$(2,3,4)$和$(4,3,2)$。此外还已知$P(10)=576$。</p>
<p>求$P(34)$，并对$83\ 456\ 729$取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 887</title>
    <url>/887/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-887"><a href="#Problem-887" class="headerlink" title="Problem 887"></a><a href="https://projecteuler.net/problem=887">Problem 887</a></h1><hr>
<h2 id="Bounded-Binary-Search"><a href="#Bounded-Binary-Search" class="headerlink" title="Bounded Binary Search"></a><strong>Bounded Binary Search</strong></h2><p>Consider the problem of determining a secret number from a set $\{1, \ldots, N\}$ by repeatedly choosing a number $y$ and asking “Is the secret number greater than $y$?”.</p>
<p>If $N=1$ then no questions need to be asked. If $N=2$ then only one question needs to be asked. If $N=64$ then six questions need to be asked. However, in the latter case if the secret number is $1$ then six questions still need to be asked. We want to restrict the number of questions asked for small values.</p>
<p>Let $Q(N, d)$ be the least number of questions needed for a strategy that can find any secret number from the set $\{1, \ldots, N\}$ where no more than $x + d$ questions are needed to find the secret value $x$.</p>
<p>It can be proved that $Q(N, 0) = N - 1$. You are also given $Q(7, 1) = 3$ and $Q(777, 2) = 10$.</p>
<p>Find $\displaystyle \sum_{d=0}^7 \sum_{N=1}^{7^{10}} Q(N, d)$.</p>
<hr>
<h2 id="有界二分搜索"><a href="#有界二分搜索" class="headerlink" title="有界二分搜索"></a><strong>有界二分搜索</strong></h2><p>考虑如下问题：现需从集合$\{1, \ldots, N\}$中确定一个秘密数值，每次可以选择一个数$y$，并询问“秘密数值是否大于$y$？”。</p>
<p>如果$N=1$，则无需提问。如果$N=2$，则只需要问一个问题。如果$N=64$，则需要问六个问题，但采取这种策略时，即使秘密数值是$1$，也仍然需要问六个问题。相反，本题希望寻找一种尽可能减少秘密数值较小时所需提问数量的策略。</p>
<p>考虑所有从集合$\{1, \ldots, N\}$中找出任意秘密数值$x$所需的问题数不超过$x + d$的策略，记这种策略所需的最少提问次数为$Q(N,d)$。</p>
<p>可以证明$Q(N, 0) = N - 1$。已知$Q(7, 1) = 3$，$Q(777, 2) = 10$。</p>
<p>求$\displaystyle \sum_{d=0}^7 \sum_{N=1}^{7^{10}} Q(N, d)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 888</title>
    <url>/888/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-888"><a href="#Problem-888" class="headerlink" title="Problem 888"></a><a href="https://projecteuler.net/problem=888">Problem 888</a></h1><hr>
<h2 id="1249-Nim"><a href="#1249-Nim" class="headerlink" title="$1249$ Nim"></a><strong>$1249$ Nim</strong></h2><p>Two players play a game with a number of piles of stones, alternating turns. Each turn a player can choose to remove $1$, $2$, $4$, or $9$ stones from a single pile; or alternatively they can choose to split a pile containing two or more stones into two non-empty piles. The winner is the player who removes the last stone.</p>
<p>A collection of piles is called a losing position if the player to move cannot force a win with optimal play. Define $S(N, m)$ to be the number of distinct losing positions arising from $m$ piles of stones where each pile contains from $1$ to $N$ stones. Two positions are considered equivalent if they consist of the same pile sizes. That is, the order of the piles does not matter.</p>
<p>You are given $S(12,4)=204$ and $S(124,9)=2259208528408$.</p>
<p>Find $S(12491249,1249)$. Give your answer modulo $912491249$.</p>
<hr>
<h2 id="1249-取石子游戏"><a href="#1249-取石子游戏" class="headerlink" title="$1249$取石子游戏"></a><strong>$1249$取石子游戏</strong></h2><p>两位玩家正在玩一个游戏：游戏开始时有几堆石子，玩家轮流行动。每一回合，轮到行动的玩家可以从任一堆中移除$1$、$2$、$4$或$9$枚石子，或者将一堆至少两枚石子分成两个非空的堆。移除最后一枚石子的玩家获胜。</p>
<p>如果当前局面使得轮到行动的玩家在最优策略下仍无法获胜，则称之为必败态。定义$S(N, m)$为由$m$堆、每堆包含$1$至$N$枚石子构成的不同必败态的数量。如果两个局面由相同大小的堆构成，则认为它们是相同的，换言之，计算必败态时不计堆的顺序。</p>
<p>已知$S(12,4)=204$，$S(124,9)=2259208528408$。</p>
<p>求$S(12491249,1249)$，并对$912491249$取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 889</title>
    <url>/889/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-889"><a href="#Problem-889" class="headerlink" title="Problem 889"></a><a href="https://projecteuler.net/problem=889">Problem 889</a></h1><hr>
<h2 id="Rational-Blancmange"><a href="#Rational-Blancmange" class="headerlink" title="Rational Blancmange"></a><strong>Rational Blancmange</strong></h2><p>Recall the blancmange function from <a href="/226">Problem 226</a>: $T(x) = \sum\limits_{n = 0}^\infty\dfrac{s(2^nx)}{2^n}$, where $s(x)$ is the distance from $x$ to the nearest integer.</p>
<p>For positive integers $k, t, r$, we write<br>$$F(k, t, r) = (2^{2k} - 1)T\left(\frac{(2^t + 1)^r}{2^k + 1}\right).$$<br>It can be shown that $F(k, t, r)$ is always an integer.<br/><br>For example, $F(3, 1, 1) = 42$, $F(13, 3, 3) = 23093880$ and $F(103, 13, 6) \equiv 878922518\pmod {1\ 000\ 062\ 031}$.</p>
<p>Find $F(10^{18} + 31, 10^{14} + 31, 62)$. Give your answer modulo $1\ 000\ 062\ 031$.</p>
<hr>
<h2 id="有理牛奶冻"><a href="#有理牛奶冻" class="headerlink" title="有理牛奶冻"></a><strong>有理牛奶冻</strong></h2><p>考虑<a href="/226">226题</a>中提及的牛奶冻函数：$T(x) = \sum\limits_{n = 0}^\infty\dfrac{s(2^nx)}{2^n}$，其中$s(x)$是$x$到最近整数的距离。</p>
<p>对于正整数$k, t, r$，记：<br>$$F(k, t, r) = (2^{2k} - 1)T\left(\frac{(2^t + 1)^r}{2^k + 1}\right)$$<br>可以证明$F(k, t, r)$总是一个整数。<br/><br>例如，$F(3, 1, 1) = 42$，$F(13, 3, 3) = 23093880$，$F(103, 13, 6) \equiv 878922518\pmod {1\ 000\ 062\ 031}$。</p>
<p>求$F(10^{18} + 31, 10^{14} + 31, 62)$，并对$1\ 000\ 062\ 031$取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 89</title>
    <url>/89/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-89"><a href="#Problem-89" class="headerlink" title="Problem 89"></a><a href="https://projecteuler.net/problem=89">Problem 89</a></h1><hr>
<h2 id="Roman-Numerals"><a href="#Roman-Numerals" class="headerlink" title="Roman Numerals"></a><strong>Roman Numerals</strong></h2><p>For a number written in Roman numerals to be considered valid there are basic rules which must be followed. Even though the rules allow some numbers to be expressed in more than one way there is always a “best” way of writing a particular number.</p>
<p>For example, it would appear that there are at least six ways of writing the number sixteen:</p>
<blockquote>
<span style="font-family:courier new,monospace;">IIIIIIIIIIIIIIII</span><br />
<span style="font-family:courier new,monospace;">VIIIIIIIIIII</span><br />
<span style="font-family:courier new,monospace;">VVIIIIII</span><br />
<span style="font-family:courier new,monospace;">XIIIIII</span><br />
<span style="font-family:courier new,monospace;">VVVI</span><br />
<span style="font-family:courier new,monospace;">XVI</span>
</blockquote>

<p>However, according to the rules only <span style="font-family:courier new,monospace;">XIIIIII</span> and <span style="font-family:courier new,monospace;">XVI</span> are valid, and the last example is considered to be the most efficient, as it uses the least number of numerals.</p>
<p>The 11K text file, <a href="https://projecteuler.net/project/resources/p089_roman.txt">roman.txt</a> (right click and ‘Save Link/Target As…’), contains one thousand numbers written in valid, but not necessarily minimal, Roman numerals; see <a href="https://projecteuler.net/about=roman_numerals">About… Roman Numerals</a> for the definitive rules for this problem.</p>
<p>Find the number of characters saved by writing each of these in their minimal form.</p>
<p>Note: You can assume that all the Roman numerals in the file contain no more than four consecutive identical units.</p>
<hr>
<h2 id="罗马数字"><a href="#罗马数字" class="headerlink" title="罗马数字"></a><strong>罗马数字</strong></h2><p>要正确地用罗马数字表达一个数，必须遵循一些基本规则。尽管符合规则的写法有时会多于一种，但对每个数来说总是存在一种“最好的”写法。</p>
<p>例如，至少有六种写法可以表达十六这个数：</p>
<p><span style="font-family:courier new,monospace;">IIIIIIIIIIIIIIII</span><br><span style="font-family:courier new,monospace;">VIIIIIIIIIII</span><br><span style="font-family:courier new,monospace;">VVIIIIII</span><br><span style="font-family:courier new,monospace;">XIIIIII</span><br><span style="font-family:courier new,monospace;">VVVI</span><br><span style="font-family:courier new,monospace;">XVI</span></p>
<p>然而，根据规则，只有<span style="font-family:courier new,monospace;">XIIIIII</span>和<span style="font-family:courier new,monospace;">XVI</span>是合理的写法，而后一种因为使用了最少的数字而被认为是最有效的写法。</p>
<p>在文本文件<a href="https://projecteuler.net/project/resources/p089_roman.txt">roman.txt</a>中包含了一千个合理的罗马数字写法，但并不都是最有效的写法；有关罗马数字的明确规则，可以参考<a href="https://projecteuler.net/about=roman_numerals">“关于罗马数字”</a>。</p>
<p>如果将这些数都写成最有效的写法，求所能节省的字符数。</p>
<p>注意：你可以假定文件中的所有罗马数字写法都不包含连续超过四个相同字符。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 890</title>
    <url>/890/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-890"><a href="#Problem-890" class="headerlink" title="Problem 890"></a><a href="https://projecteuler.net/problem=890">Problem 890</a></h1><hr>
<h2 id="Binary-Partitions"><a href="#Binary-Partitions" class="headerlink" title="Binary Partitions"></a><strong>Binary Partitions</strong></h2><p>Let $p(n)$ be the number of ways to write $n$ as the sum of powers of two, ignoring order.</p>
<p>For example, $p(7) = 6$, the partitions being<br>$$<br>\begin{aligned}<br>7 &amp; = 1+1+1+1+1+1+1 \\<br>  &amp; =1+1+1+1+1+2 \\<br>  &amp; =1+1+1+2+2 \\<br>  &amp; =1+1+1+4 \\<br>  &amp; =1+2+2+2 \\<br>  &amp; =1+2+4<br>\end{aligned}<br>$$<br>You are also given $p(7^7) \equiv 144548435 \pmod {10^9+7}$.</p>
<p>Find $p(7^{777})$. Give your answer modulo $10^9 + 7$.</p>
<hr>
<h2 id="二进制分拆"><a href="#二进制分拆" class="headerlink" title="二进制分拆"></a><strong>二进制分拆</strong></h2><p>记$p(n)$为将$n$写成二的幂之和的方法数，不计顺序。</p>
<p>例如，$p(7) = 6$，对应的分拆包括：<br>$$<br>\begin{aligned}<br>7 &amp; = 1+1+1+1+1+1+1 \\<br>&amp; =1+1+1+1+1+2 \\<br>&amp; =1+1+1+2+2 \\<br>&amp; =1+1+1+4 \\<br>&amp; =1+2+2+2 \\<br>&amp; =1+2+4<br>\end{aligned}<br>$$<br>已知$p(7^7) \equiv 144548435 \pmod {10^9+7}$。</p>
<p>求$p(7^{777})$，并对$10^9 + 7$取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 891</title>
    <url>/891/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-891"><a href="#Problem-891" class="headerlink" title="Problem 891"></a><a href="https://projecteuler.net/problem=891">Problem 891</a></h1><hr>
<h2 id="Ambiguous-Clock"><a href="#Ambiguous-Clock" class="headerlink" title="Ambiguous Clock"></a><strong>Ambiguous Clock</strong></h2><p>A round clock only has three hands: hour, minute, second. All hands look identical and move continuously. Moreover, there is no number or reference mark so that the “upright position” is unknown. The clock functions the same as a normal $12$-hour analogue clock.</p>
<p>Despite the inconvenient design, for most time it is possible to tell the correct time (within a $12$-hour cycle) from the clock, just by measuring accurately the angles between the hands. For example, if all three hands coincide, then the time must be 12:00:00.</p>
<p>Nevertheless, there are several moments where the clock shows an ambiguous reading. For example, the following moment could be either 1:30:00 or 7:30:00 (with the clock rotated $180^\circ$). Thus both 1:30:00 and 7:30:00 are ambiguous moments. <br/><br>Note that even if two hands perfectly coincide, we can still see them as two distinct hands in the same position. Thus for example 3:00:00 and 9:00:00 are not ambiguous moments.</p>
<div style="text-align:center;"><img src="/resources/images/0891_clock.png?1714250610" alt="0891_clock.png"></div>

<p>How many ambiguous moments are there within a $12$-hour cycle?</p>
<hr>
<h2 id="不确定的钟"><a href="#不确定的钟" class="headerlink" title="不确定的钟"></a><strong>不确定的钟</strong></h2><p>一个圆形时钟上有三根指针：时针、分针和秒针。所有指针看上去完全相同，且连续地移动。另外，时钟上没有数字或参考标记，所以无法判断时钟是否处于“竖直状态”。除此之外，这个时钟的功能与类似的、普通的$12$小时制时钟完全相同。</p>
<p>尽管设计上有所不便，但对于大多数时刻，只要准确测量指针之间的角度，就可以从时钟上读出正确的时间（在一个$12$小时周期内）。例如，如果三根指针重合，那么时间一定是12:00:00。</p>
<p>然而，在特定时刻，时钟会给出不确定的读数。例如，下图中的时刻既可能是1:30:00，也可能是7:30:00（将时钟旋转$180^\circ$）。因此，1:30:00和7:30:00都是不确定的时刻。<br/><br>注意，即使两根指针完全重合，仍然可以看出它们是同一位置的两根不同指针。因此，如3:00:00和9:00:00这样的时刻不是不确定的时刻。</p>
<div style="text-align:center;"><img src="/resources/images/0891_clock.png?1714250610" alt="0891_clock.png"></div>

<p>在一个$12$小时周期内，有多少个不确定的时刻？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 892</title>
    <url>/892/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-892"><a href="#Problem-892" class="headerlink" title="Problem 892"></a><a href="https://projecteuler.net/problem=892">Problem 892</a></h1><hr>
<h2 id="Zebra-Circles"><a href="#Zebra-Circles" class="headerlink" title="Zebra Circles"></a><strong>Zebra Circles</strong></h2><p>Consider a circle where $2n$ distinct points have been marked on its circumference.</p>
<p>A <i>cutting</i> $C$ consists of connecting the $2n$ points with $n$ line segments, so that no two line segments intersect, including on their end points. The $n$ line segments then cut the circle into $n + 1$ pieces. Each piece is painted either black or white, so that adjacent pieces are opposite colours. Let $d(C)$ be the absolute difference between the numbers of black and white pieces under the cutting $C$.</p>
<p>Let $D(n)$ be the sum of $d(C)$ over all different cuttings $C$. For example, there are five different cuttings with $n = 3$.</p>
<div style="text-align:center;"><img src="/resources/images/0892_Zebra.png?1714876283" alt="0892_Zebra.png"></div>

<p>The upper three cuttings all have $d = 0$ because there are two black and two white pieces; the lower two cuttings both have $d = 2$ because there are three black and one white pieces. Therefore $D(3) = 0 + 0 + 0 + 2 + 2 = 4$. You are also given $D(100) \equiv 1172122931\pmod{1234567891}$.</p>
<p>Find $\displaystyle \sum_{n=1}^{10^7} D(n)$. Give your answer modulo $1234567891$.</p>
<hr>
<h2 id="斑马圆"><a href="#斑马圆" class="headerlink" title="斑马圆"></a><strong>斑马圆</strong></h2><p>考虑圆周上标记有$2n$个不同的点的圆。</p>
<p>圆上的一个<i class=zh>切割</i>$C$是指用$n$条线段连接这$2n$个点，使得任意两条线段不相交且不共端点。这$n$条线段将圆切割成$n + 1$块，每块区域被涂成黑色或白色，并满足相邻区域的颜色相反。令$d(C)$为在切割$C$下黑色和白色区域数量的差值的绝对值。</p>
<p>令$D(n)$为所有不同切割$C$的$d(C)$之和。例如，当$n = 3$时，有五种不同的切割。</p>
<div style="text-align:center;"><img src="/resources/images/0892_Zebra.png?1714876283" alt="0892_Zebra.png"></div>

<p>上排三种切割均对应$d=0$，因为它们都有两个黑色区域和两个白色区域；下排两种切割均对应$d=2$，因为它们有三个黑色区域和一个白色区域。因此$D(3) = 0 + 0 + 0 + 2 + 2 = 4$。已知$D(100) \equiv 1172122931\pmod{1234567891}$。</p>
<p>求$\displaystyle \sum_{n=1}^{10^7} D(n)$，并对$1234567891$取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 893</title>
    <url>/893/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-893"><a href="#Problem-893" class="headerlink" title="Problem 893"></a><a href="https://projecteuler.net/problem=893">Problem 893</a></h1><hr>
<h2 id="Matchsticks"><a href="#Matchsticks" class="headerlink" title="Matchsticks"></a><strong>Matchsticks</strong></h2><p>Define $M(n)$ to be the minimum number of matchsticks needed to represent the number $n$.</p>
<p>A number can be represented in digit form or as an expression involving addition and/or multiplication. Also order of operations must be followed, that is multiplication binding tighter than addition. Any other symbols or operations, such as brackets, subtraction, division or exponentiation, are not allowed.</p>
<p>The valid digits and symbols are shown below:</p>
<div style="text-align:center;"><img src="/resources/images/0893_DigitDiagram.jpg?1714876316" alt="0893_DigitDiagram.jpg" height="433" width="668"></div>

<p>For example, $28$ needs $12$ matchsticks to represent it in digit form but representing it as $4\times 7$ would only need $9$ matchsticks and as there is no way using fewer matchsticks $M(28) = 9$.</p>
<p>Define $\displaystyle T(N) = \sum_{n=1}^N M(n)$. You are given $T(100) = 916$.</p>
<p>Find $T(10^6)$.</p>
<hr>
<h2 id="火柴棍"><a href="#火柴棍" class="headerlink" title="火柴棍"></a><strong>火柴棍</strong></h2><p>定义$M(n)$为表示数$n$所需的最少火柴棒数量。</p>
<p>一个数既可以用数字形式表示，也可以用涉及加法和/或乘法的表达式表示，但必须遵守运算顺序，即乘法优先于加法。不允许使用任何其他符号或运算，如括号、减法、除法或幂运算。</p>
<p>有效的数字和符号如下所示：</p>
<div style="text-align:center;"><img src="/resources/images/0893_DigitDiagram.jpg?1714876316" alt="0893_DigitDiagram.jpg" height="433" width="668"></div>

<p><i class=zh>译注：最下排分别是“加号”和“乘号”。</i></p>
<p>例如，$28$用数字形式表示需要$12$根火柴棍，但将其表示为$4\times 7$只需要$9$根火柴棍，且不存在使用更少火柴棍的表示方法，因此$M(28) = 9$。</p>
<p>定义$\displaystyle T(N) = \sum_{n=1}^N M(n)$。已知$T(100) = 916$。</p>
<p>求$T(10^6)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 894</title>
    <url>/894/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-894"><a href="#Problem-894" class="headerlink" title="Problem 894"></a><a href="https://projecteuler.net/problem=894">Problem 894</a></h1><hr>
<h2 id="Spiral-of-Circles"><a href="#Spiral-of-Circles" class="headerlink" title="Spiral of Circles"></a><strong>Spiral of Circles</strong></h2><p>Consider a <strong><a title="circle with radius 1">unit circle</a></strong> $C_0$ on the plane that does not enclose the origin. For $k\ge 1$, a circle $C_k$ is created by scaling and rotating $C_{k - 1}$ <b>with respect to the origin</b>. That is, both the radius and the distance to the origin are scaled by the same factor, and the centre of rotation is the origin. The scaling factor is positive and strictly less than one. Both it and the rotation angle remain constant for each $k$.</p>
<p>It is given that $C_0$ is externally tangent to $C_1$, $C_7$ and $C_8$, as shown in the diagram below, and no two circles overlap.</p>
<div style="text-align:center;"><img src="/resources/images/0894_circle_spiral.jpg?1714305246" alt="0894_circle_spiral.jpg"></div>

<p>Find the total area of all the <strong><a title="A circular triangle is a triangle with circular arc edges">circular triangles</a></strong> in the diagram, i.e. the area painted green above.<br>Give your answer rounded to $10$ places after the decimal point.</p>
<hr>
<h2 id="圆形螺旋"><a href="#圆形螺旋" class="headerlink" title="圆形螺旋"></a><strong>圆形螺旋</strong></h2><p>考虑平面上一个不包含原点的<strong><a title="半径为1的圆">单位圆</a></strong>$C_0$。对于任意$k\ge 1$，通过对 $C_{k - 1}$进行<b>相对于原点</b>的缩放和旋转来得到圆$C_k$。也就是说，圆的半径和圆心到原点的距离都按相同的比例缩放，且旋转中心是原点。缩放因子为正且严格小于$1$。该缩放因子和旋转角度对每个$k$都保持不变。</p>
<p>如下图所示，已知$C_0$与$C_1$、$C_7$和$C_8$均外切，且任意两个圆不重叠。</p>
<div style="text-align:center;"><img src="/resources/images/0894_circle_spiral.jpg?1714305246" alt="0894_circle_spiral.jpg"></div>

<p>求图中所有<strong><a title="圆弧三角形是指由圆弧构成的三角形">圆弧三角形</a></strong>的总面积，即上图中绿色区域的总面积。<br>将你的答案四舍五入保留$10$位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 895</title>
    <url>/895/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-895"><a href="#Problem-895" class="headerlink" title="Problem 895"></a><a href="https://projecteuler.net/problem=895">Problem 895</a></h1><hr>
<h2 id="Gold-amp-Silver-Coin-Game-II"><a href="#Gold-amp-Silver-Coin-Game-II" class="headerlink" title="Gold &amp; Silver Coin Game II"></a><strong>Gold &amp; Silver Coin Game II</strong></h2><p>Gary and Sally play a game using gold and silver coins arranged into a number of vertical stacks, alternating turns. On Gary’s turn he chooses a gold coin and removes it from the game along with any other coins sitting on top. Sally does the same on her turn by removing a silver coin. The first player unable to make a move loses.</p>
<p>An arrangement is called <i>fair</i> if the person moving first, whether it be Gary or Sally, will lose the game if both play optimally.</p>
<p>An arrangement is called <i>balanced</i> if the number of gold and silver coins are equal.</p>
<p>Define $G(m)$ to be the number of fair and balanced arrangements consisting of three non-empty stacks, each not exceeding $m$ in size. Different orderings of the stacks are to be counted separately, so $G(2)=6$ due to the following six arrangements:</p>
<div style="text-align:center;"><img src="/resources/images/0895_G2.png?1714251811" alt="0895_G2.png"></div>

<p>You are also given $G(5)=348$ and $G(20)=125825982708$.</p>
<p>Find $G(9898)$ giving your answer modulo $989898989$.</p>
<hr>
<h2 id="金银硬币游戏（二）"><a href="#金银硬币游戏（二）" class="headerlink" title="金银硬币游戏（二）"></a><strong>金银硬币游戏（二）</strong></h2><p>盖瑞和萨利在玩一个游戏，游戏开始时有若干堆竖直堆放的金币和银币，两人轮流行动。轮到盖瑞时，他可以任选一枚金币，并将这枚金币和所有堆放在其上方的硬币移出游戏；轮到萨利时则是可以任选一枚银币。首先无法行动的玩家输掉游戏。</p>
<p>如果一个初始局面使得，无论先行玩家是盖瑞还是萨利，他在采取最优策略的情况下都必败，则称之为<i class=zh>公平</i>初始局面。</p>
<p>如果一个初始局面的金币和银币的数量相等，则称之为<i class=zh>平衡的</i>初始局面。</p>
<p>定义$G(m)$为由三个非空且大小不超过$m$的堆构成的公平且平衡的初始局面的数量。计数时需考虑堆的顺序，因此$G(2)=6$，这六种初始局面如下所示：</p>
<div style="text-align:center;"><img src="/resources/images/0895_G2.png?1714251811" alt="0895_G2.png"></div>

<p>已知$G(5)=348$，$G(20)=125825982708$。</p>
<p>求$G(9898)$，并对$989898989$取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 896</title>
    <url>/896/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-896"><a href="#Problem-896" class="headerlink" title="Problem 896"></a><a href="https://projecteuler.net/problem=896">Problem 896</a></h1><hr>
<h2 id="Divisible-Ranges"><a href="#Divisible-Ranges" class="headerlink" title="Divisible Ranges"></a><strong>Divisible Ranges</strong></h2><p>A contiguous range of positive integers is called a <i>divisible range</i> if all the integers in the range can be arranged in a row such that the $n$-th term is a multiple of $n$.<br/><br>For example, the range $[6..9]$ is a divisible range because we can arrange the numbers as $7,6,9,8$.<br/><br>In fact, it is the $4$th divisible range of length $4$, the first three being $[1..4], [2..5], [3..6]$.</p>
<p>Find the $36$th divisible range of length $36$.<br/><br>Give as answer the smallest number in the range.</p>
<hr>
<h2 id="可整除区间"><a href="#可整除区间" class="headerlink" title="可整除区间"></a><strong>可整除区间</strong></h2><p>如果某个区间内的正整数可以经过重排使得第$n$项是$n$的倍数，则称之为<i class=zh>可整除区间</i>。<br>例如，区间$[6..9]$可以重排成$7,6,9,8$，因此它是一个可整除区间。<br/><br>实际上，它是第$4$个长度为$4$的可整除区间，前三个分别是$[1..4]$，$[2..5]$，$[3..6]$。</p>
<p>求第$36$个长度为$36$的可整除区间。<br/><br>给出该区间内的最小整数作为答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 897</title>
    <url>/897/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-897"><a href="#Problem-897" class="headerlink" title="Problem 897"></a><a href="https://projecteuler.net/problem=897">Problem 897</a></h1><hr>
<h2 id="Maximal-n-gon-in-a-region"><a href="#Maximal-n-gon-in-a-region" class="headerlink" title="Maximal $n$-gon in a region"></a><strong>Maximal $n$-gon in a region</strong></h2><p>Let $G(n)$ denote the largest possible area of an <strong><a title="a polygon with n sides">$n$-gon</a></strong> contained in the region $\{(x, y) \in \Bbb R^2: x^4 \leq y \leq 1\}$.<br/><br>For example, $G(3) = 1$ and $G(5)\approx 1.477309771$.<br/><br>Find $G(101)$ rounded to nine digits after the decimal point.</p>
<hr>
<h2 id="区域内的最大-n-边形"><a href="#区域内的最大-n-边形" class="headerlink" title="区域内的最大$n$边形"></a><strong>区域内的最大$n$边形</strong></h2><p>令$G(n)$表示包含在区域$\{(x, y) \in \Bbb R^2: x^4 \leq y \leq 1\}$中的<strong><a title="有n条边的多边形">$n$边形</a></strong>的最大可能面积。<br>例如，$G(3) = 1$，$G(5)\approx 1.477309771$。<br/><br>求$G(101)$的值，并四舍五入保留九位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 898</title>
    <url>/898/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-898"><a href="#Problem-898" class="headerlink" title="Problem 898"></a><a href="https://projecteuler.net/problem=898">Problem 898</a></h1><hr>
<h2 id="Claire-Voyant"><a href="#Claire-Voyant" class="headerlink" title="Claire Voyant"></a><strong>Claire Voyant</strong></h2><p>Claire Voyant is a teacher playing a game with a class of students. A fair coin is tossed on the table. All the students can see the outcome of the toss, but Claire cannot. Each student then tells Claire whether the outcome is head or tail. The students may lie, but Claire knows the probability that each individual student lies. Moreover, the students lie independently. After that, Claire attempts to guess the outcome using an optimal strategy.</p>
<p>For example, for a class of four students with lying probabilities $20\%,40\%,60\%,80\%$, Claire guesses correctly with probability $0.832$.</p>
<p>Find the probability that Claire guesses correctly for a class of $51$ students each lying with a probability of $25\%, 26\%, \dots, 75\%$ respectively.</p>
<p>Give your answer rounded to $10$ digits after the decimal point.</p>
<hr>
<h2 id="克莱尔·瓦杨"><a href="#克莱尔·瓦杨" class="headerlink" title="克莱尔·瓦杨"></a><strong>克莱尔·瓦杨</strong></h2><p>克莱尔·瓦杨老师正在和全班学生玩一种游戏：抛掷一枚公平硬币，所有学生都能看到投掷的结果，但克莱尔看不到。然后，每个学生依次告诉克莱尔结果是正面还是反面。学生可能会撒谎，但克莱尔知道每个学生撒谎的概率。此外，每个学生是否撒谎是相互独立的。之后，克莱尔尝试用最优策略猜测硬币的正反面。</p>
<p>例如，若全班共有四名学生，他们撒谎的概率分别是$20\%$、$40\%$、$60\%$、$80\%$，克莱尔猜对的概率是$0.832$。</p>
<p>若全班共有$51$名学生，每个学生撒谎的概率分别是$25\%$、$26\%$、$\ldots$、$75\%$，求克莱尔猜对的概率。</p>
<p>将你的答案四舍五入保留$10$位小数。</p>
<p><i class=zh>译注：本题中老师的名字是对“Clairvoyant/先知”一词的文字游戏。</i></p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 899</title>
    <url>/899/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-899"><a href="#Problem-899" class="headerlink" title="Problem 899"></a><a href="https://projecteuler.net/problem=899">Problem 899</a></h1><hr>
<h2 id="DistribuNim-I"><a href="#DistribuNim-I" class="headerlink" title="DistribuNim I"></a><strong>DistribuNim I</strong></h2><p>Two players play a game with two piles of stones. The players alternately take stones from one or both piles, subject to:</p>
<ol>
<li>the total number of stones taken is equal to the size of the smallest pile before the move;</li>
<li>the move cannot take all the stones from a pile.</li>
</ol>
<p>The player that is unable to move loses.</p>
<p>For example, if the piles are of sizes $3$ and $5$ then there are three possible moves.<br>$$(3,5) \xrightarrow{(2,1)} (1,4)\qquad\qquad (3,5) \xrightarrow{(1,2)} (2,3)\qquad\qquad (3,5) \xrightarrow{(0,3)} (3,2)$$</p>
<p>Let $L(n)$ be the number of ordered pairs $(a,b)$ with $1 \leq a,b \leq n$ such that the initial game position with piles of sizes $a$ and $b$ is losing for the first player assuming optimal play.</p>
<p>You are given $L(7) = 21$ and $L(7^2) = 221$.</p>
<p>Find $L(7^{17})$.</p>
<hr>
<h2 id="分布式取石子游戏（一）"><a href="#分布式取石子游戏（一）" class="headerlink" title="分布式取石子游戏（一）"></a><strong>分布式取石子游戏（一）</strong></h2><p>两位玩家在玩一个游戏，游戏开始时有两堆石子，玩家轮流从一堆或两堆中取石子，并需遵守以下规则：</p>
<ol>
<li>取走的石子总数等于行动前较小堆的石子数量；</li>
<li>不能将任何一堆的石子全部取完。</li>
</ol>
<p>首先无法行动的玩家输掉游戏。</p>
<p>例如，如果两堆石子的大小分别为$3$和$5$，则有三种可能的行动：<br>$$(3,5) \xrightarrow{(2,1)} (1,4)\qquad\qquad (3,5) \xrightarrow{(1,2)} (2,3)\qquad\qquad (3,5) \xrightarrow{(0,3)} (3,2)$$</p>
<p>令$L(n)$为满足以下条件的有序对$(a,b)$的数量：$1 \leq a,b \leq n$，且假设双方都采用最优策略，若游戏开始时两堆石子数目为$a$和$b$，先手玩家必败。</p>
<p>已知$L(7) = 21$，$L(7^2) = 221$。</p>
<p>求$L(7^{17})$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 9</title>
    <url>/9/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-9"><a href="#Problem-9" class="headerlink" title="Problem 9"></a><a href="https://projecteuler.net/problem=9">Problem 9</a></h1><hr>
<h2 id="Special-Pythagorean-Triplet"><a href="#Special-Pythagorean-Triplet" class="headerlink" title="Special Pythagorean Triplet"></a><strong>Special Pythagorean Triplet</strong></h2><p>A Pythagorean triplet is a set of three natural numbers, $a&lt;b&lt;c$, for which,</p>
<p>$$a^2+b^2=c^2$$</p>
<p>For example, $3^2+4^2=9+16=25=5^2$.</p>
<p>There exists exactly one Pythagorean triplet for which $a + b + c = 1000$. Find the product $abc$.</p>
<hr>
<h2 id="特殊毕达哥拉斯三元组"><a href="#特殊毕达哥拉斯三元组" class="headerlink" title="特殊毕达哥拉斯三元组"></a><strong>特殊毕达哥拉斯三元组</strong></h2><p>毕达哥拉斯三元组由三个自然数$a&lt;b&lt;c$组成，并满足</p>
<p>$$a^2+b^2=c^2$$</p>
<p>例如，$3^2+4^2=9+16=25=5^2$。</p>
<p>有且只有一个毕达哥拉斯三元组满足 $a + b + c = 1000$。求这个三元组的乘积$abc$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 90</title>
    <url>/90/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-90"><a href="#Problem-90" class="headerlink" title="Problem 90"></a><a href="https://projecteuler.net/problem=90">Problem 90</a></h1><hr>
<h2 id="Cube-Digit-Pairs"><a href="#Cube-Digit-Pairs" class="headerlink" title="Cube Digit Pairs"></a><strong>Cube Digit Pairs</strong></h2><p>Each of the six faces on a cube has a different digit ($0$ to $9$) written on it; the same is done to a second cube. By placing the two cubes side-by-side in different positions we can form a variety of $2$-digit numbers.</p>
<p>For example, the square number $64$ could be formed:</p>
<center><img src="/resources/images/0090.png" alt=""></center>

<p>In fact, by carefully choosing the digits on both cubes it is possible to display all of the square numbers below one-hundred: $01$, $04$, $09$, $16$, $25$, $36$, $49$, $64$, and $81$.</p>
<p>For example, one way this can be achieved is by placing $\{0, 5, 6, 7, 8, 9\}$ on one cube and $\{1, 2, 3, 4, 8, 9\}$ on the other cube.</p>
<p>However, for this problem we shall allow the $6$ or $9$ to be turned upside-down so that an arrangement like $\{0, 5, 6, 7, 8, 9\}$ and $\{1, 2, 3, 4, 6, 7\}$ allows for all nine square numbers to be displayed; otherwise it would be impossible to obtain $09$.</p>
<p>In determining a distinct arrangement we are interested in the digits on each cube, not the order.</p>
<blockquote>
<p>$\{1, 2, 3, 4, 5, 6\}$ is equivalent to $\{3, 6, 4, 1, 2, 5\}$ <br /><br>$\{1, 2, 3, 4, 5, 6\}$ is distinct from $\{1, 2, 3, 4, 5, 9\}$</p>
</blockquote>
<p>But because we are allowing $6$ and $9$ to be reversed, the two distinct sets in the last example both represent the extended set $\{1, 2, 3, 4, 5, 6, 9\}$ for the purpose of forming $2$-digit numbers.</p>
<p>How many distinct arrangements of the two cubes allow for all of the square numbers to be displayed?</p>
<hr>
<h2 id="立方体数字对"><a href="#立方体数字对" class="headerlink" title="立方体数字对"></a><strong>立方体数字对</strong></h2><p>考虑两个立方体，每个立方体的六个面上标有六个不同的、$0$至$9$之间的数字。将这两个立方体并排摆放，我们就可以得到一系列两位数。</p>
<p>例如，平方数$64$可以通过这样摆放获得：</p>
<center><img src="/resources/images/0090.png" alt=""></center>

<p>事实上，通过精心选择两个立方体上的数字，我们可以摆放出所有小于$100$的平方数：$01$、$04$、$09$、$16$、$25$、$36$、$49$、$64$和$81$。</p>
<p>例如，其中一种方式是，在一个立方体上标上$\{0,5, 6, 7, 8, 9\}$，在另一个立方体上标上$\{1, 2, 3, 4, 8, 9\}$。</p>
<p>在本题中，我们允许将标有$6$或$9$的面颠倒过来互相表示，只有这样，如$\{0, 5, 6, 7, 8, 9\}$和$\{1, 2, 3, 4, 6, 7\}$这样本来无法表示$09$的标法，才能够摆放出全部九个平方数。</p>
<p>在考虑什么是不同的标法时，我们关注的是立方体上有哪些数字，而不关心它们的顺序。</p>
<blockquote>
<p>$\{1, 2, 3, 4, 5, 6\}$等价于$\{3, 6, 4, 1, 2, 5\}$ <br /><br>$\{1, 2, 3, 4, 5, 6\}$不同于$\{1, 2, 3, 4, 5, 9\}$</p>
</blockquote>
<p>但因为我们允许将$6$和$9$颠倒过来互相表示，后一个例子中的两种不同标法都可以拓展为$\{1, 2, 3, 4, 5, 6, 9\}$。</p>
<p>对这两个立方体，有多少种不同的标法，可以摆放出所有九个平方数？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 900</title>
    <url>/900/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-900"><a href="#Problem-900" class="headerlink" title="Problem 900"></a><a href="https://projecteuler.net/problem=900">Problem 900</a></h1><hr>
<h2 id="DistribuNim-II"><a href="#DistribuNim-II" class="headerlink" title="DistribuNim II"></a><strong>DistribuNim II</strong></h2><p>Two players play a game with at least two piles of stones. The players alternately take stones from one or more piles, subject to:</p>
<ol>
<li>the total number of stones taken is equal to the size of the smallest pile before the move;</li>
<li>the move cannot take all the stones from a pile.</li>
</ol>
<p>The player that is unable to move loses.</p>
<p>For example, if the piles are of sizes $2$, $2$ and $4$ then there are four possible moves.<br>$$ (2,2,4)\xrightarrow{(1,1,0)}(1,1,4)\quad (2,2,4)\xrightarrow{(1,0,1)}(1,2,3)\quad<br>(2,2,4)\xrightarrow{(0,1,1)}(2,1,3)\quad (2,2,4)\xrightarrow{(0,0,2)}(2,2,2)$$</p>
<p>Let $t(n)$ be the smallest nonnegative integer $k$ such that the position with $n$ piles of $n$ stones and a single pile of $n+k$ stones is losing for the first player assuming optimal play. For example, $t(1) = t(2) = 0$ and $t(3) = 2$.</p>
<p>Define $\displaystyle S(N) = \sum_{n=1}^{2^N} t(n)$. You are given $S(10) = 361522$.</p>
<p>Find $S(10^4)$. Give your answer modulo $900497239$.</p>
<hr>
<h2 id="分布式取石子游戏（二）"><a href="#分布式取石子游戏（二）" class="headerlink" title="分布式取石子游戏（二）"></a><strong>分布式取石子游戏（二）</strong></h2><p>两位玩家在玩一个游戏，游戏开始时有至少两堆石子，玩家轮流从一堆或多堆中取石子，并需遵守以下规则：</p>
<ol>
<li>取走的石子总数等于行动前最小堆的石子数量；</li>
<li>不能将任何一堆的石子全部取完。</li>
</ol>
<p>首先无法行动的玩家输掉游戏。</p>
<p>例如，如果堆的大小分别为$2$、$2$和$4$，则有四种可能的移动：<br>$$ (2,2,4)\xrightarrow{(1,1,0)}(1,1,4)\quad (2,2,4)\xrightarrow{(1,0,1)}(1,2,3)\quad<br>(2,2,4)\xrightarrow{(0,1,1)}(2,1,3)\quad (2,2,4)\xrightarrow{(0,0,2)}(2,2,2)$$</p>
<p>令$t(n)$为满足以下条件的最小非负整数$k$：假设双方都采用最优策略，若游戏开始时有$n$堆各$n$个石子和一堆$n+k$个石子，先手玩家必败。例如，$t(1) = t(2) = 0$，$t(3) = 2$。</p>
<p>定义$\displaystyle S(N) = \sum_{n=1}^{2^N} t(n)$。已知$S(10) = 361522$。</p>
<p>求$S(10^4)$，并对$900497239$取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 901</title>
    <url>/901/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-901"><a href="#Problem-901" class="headerlink" title="Problem 901"></a><a href="https://projecteuler.net/problem=901">Problem 901</a></h1><hr>
<h2 id="Well-Drilling"><a href="#Well-Drilling" class="headerlink" title="Well Drilling"></a><strong>Well Drilling</strong></h2><p>A driller drills for water. At each iteration the driller chooses a depth $d$ (a positive real number), drills to this depth and then checks if water was found. If so, the process terminates. Otherwise, a new depth is chosen and a new drilling starts from the ground level in a new location nearby.</p>
<p>Drilling to depth $d$ takes exactly $d$ hours. The groundwater depth is constant in the relevant area and its distribution is known to be an <a href="https://en.wikipedia.org/wiki/Exponential_distribution">exponential random variable</a> with expected value of $1$. In other words, the probability that the groundwater is deeper than $d$ is $e^{-d}$.</p>
<p>Assuming an optimal strategy, find the minimal expected drilling time in hours required to find water. Give your answer rounded to $9$ places after the decimal point.</p>
<hr>
<h2 id="钻井"><a href="#钻井" class="headerlink" title="钻井"></a><strong>钻井</strong></h2><p>一名钻井工人在钻探水源。每一轮，钻井工人选择一个（正实数）深度$d$，一直钻到这个深度，然后检查是否找到水。如果找到了，就结束钻探。否则，工人会在附近找一个新位置，选择一个新的深度，从地面开始新的钻探。</p>
<p>钻到深度$d$需要恰好$d$小时。在这片区域内，地下水的深度是恒定的，且满足期望值为1的<a href="https://zh.wikipedia.org/wiki/%E6%8C%87%E6%95%B0%E5%88%86%E5%B8%83">指数分布</a>。换言之，地下水深度超过$d$的概率是$e^{-d}$。</p>
<p>假设钻井工人采用最优策略，求找到水所需的最小预期钻探时间（以小时为单位），并将你的答案四舍五入保留$9$位小数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 91</title>
    <url>/91/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-91"><a href="#Problem-91" class="headerlink" title="Problem 91"></a><a href="https://projecteuler.net/problem=91">Problem 91</a></h1><hr>
<h2 id="Right-Triangles-with-Integer-Coordinates"><a href="#Right-Triangles-with-Integer-Coordinates" class="headerlink" title="Right Triangles with Integer Coordinates"></a><strong>Right Triangles with Integer Coordinates</strong></h2><p>The points $P(x_1,y_1)$ and $Q(x_2,y_2)$ are plotted at integer co-ordinates and are joined to the origin, $O(0,0)$, to form $\triangle OPQ$.</p>
<center><img src="/resources/images/0091_1.png" alt=""></center>

<p>There are exactly fourteen triangles containing a right angle that can be formed when each co-ordinate lies between $0$ and $2$ inclusive; that is, $0 \le x_1, y_1, x_2, y_2 \le 2$.</p>
<center><img src="/resources/images/0091_2.png" alt=""></center>

<p>Given that $0 \le x_1, y_1, x_2, y_2 \le 50$, how many right triangles can be formed?</p>
<hr>
<h2 id="格点直角三角形"><a href="#格点直角三角形" class="headerlink" title="格点直角三角形"></a><strong>格点直角三角形</strong></h2><p>考虑格点$P(x_1,y_1)$和$Q(x_2,y_2)$与原点$O(0,0)$相连构成的三角形$\triangle OPQ$。</p>
<center><img src="/resources/images/0091_1.png" alt=""></center>

<p>当点$P$和点$Q$的坐标在$0$到$2$之间，也即$0 \le x_1, y_1, x_2, y_2 \le 2$时，恰好能构造出$14$个直角三角形。</p>
<center><img src="/resources/images/0091_2.png" alt=""></center>

<p>若$0 \le x_1, y_1, x_2, y_2 \le 50$，能构造出多少个直角三角形？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 92</title>
    <url>/92/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-92"><a href="#Problem-92" class="headerlink" title="Problem 92"></a><a href="https://projecteuler.net/problem=92">Problem 92</a></h1><hr>
<h2 id="Square-Digit-Chains"><a href="#Square-Digit-Chains" class="headerlink" title="Square Digit Chains"></a><strong>Square Digit Chains</strong></h2><p>A number chain is created by continuously adding the square of the digits in a number to form a new number until it has been seen before.</p>
<p>For example,</p>
<p>$$<br>\begin{aligned}<br>&amp; 44 \rightarrow 32 \rightarrow 13 \rightarrow 10 \rightarrow \textbf{1} \rightarrow \textbf{1}\\<br>&amp; 85 \rightarrow \textbf{89} \rightarrow 145 \rightarrow 42 \rightarrow 20 \rightarrow 4 \rightarrow 16 \rightarrow 37 \rightarrow 58 \rightarrow \textbf{89}<br>\end{aligned}<br>$$</p>
<p>Therefore any chain that arrives at $1$ or $89$ will become stuck in an endless loop. What is most amazing is that EVERY starting number will eventually arrive at $1$ or $89$.</p>
<p>How many starting numbers below ten million will arrive at $89$?</p>
<hr>
<h2 id="平方数链"><a href="#平方数链" class="headerlink" title="平方数链"></a><strong>平方数链</strong></h2><p>从任意一个数开始，不断取其各位数字的平方和，直到出现重复，就得到了一条数链。</p>
<p>例如：</p>
<p>$$<br>\begin{aligned}<br>&amp; 44 \rightarrow 32 \rightarrow 13 \rightarrow 10 \rightarrow \textbf{1} \rightarrow \textbf{1}\\<br>&amp; 85 \rightarrow \textbf{89} \rightarrow 145 \rightarrow 42 \rightarrow 20 \rightarrow 4 \rightarrow 16 \rightarrow 37 \rightarrow 58 \rightarrow \textbf{89}<br>\end{aligned}<br>$$</p>
<p>如上所示，只要数链中出现$1$或$89$，之后就会进入循环。最令人惊奇的是，从<i class=zh>任意</i>一个数开始，最终都必定会到达$1$或$89$。</p>
<p>从任意小于一千万的数开始，有多少个最终会到达$89$？</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 93</title>
    <url>/93/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-93"><a href="#Problem-93" class="headerlink" title="Problem 93"></a><a href="https://projecteuler.net/problem=93">Problem 93</a></h1><hr>
<h2 id="Arithmetic-Expressions"><a href="#Arithmetic-Expressions" class="headerlink" title="Arithmetic Expressions"></a><strong>Arithmetic Expressions</strong></h2><p>By using each of the digits from the set, $\{1, 2, 3, 4\}$, exactly once, and making use of the four arithmetic operations $(+, -, \times, /)$ and brackets/parentheses, it is possible to form different positive integer targets.</p>
<p>For example,<br>$$<br>\begin{aligned}<br>8  &amp; = (4 \times (1 + 3)) / 2 \\<br>14 &amp; = 4 \times (3 + 1 / 2)   \\<br>19 &amp; = 4 \times (2 + 3) − 1   \\<br>36 &amp; = 3 \times 4 \times (2 + 1)<br>\end{aligned}<br>$$<br>Note that concatenations of the digits, like $12 + 34$, are not allowed.</p>
<p>Using the set, $\{1, 2, 3, 4\}$, it is possible to obtain thirty-one different target numbers of which $36$ is the maximum, and each of the numbers $1$ to $28$ can be obtained before encountering the first non-expressible number.</p>
<p>Find the set of four distinct digits, $a&lt;b&lt;c&lt;d$, for which the longest set of consecutive positive integers, $1$ to $n$, can be obtained, giving your answer as a string: $abcd$.</p>
<hr>
<h2 id="算术表达式"><a href="#算术表达式" class="headerlink" title="算术表达式"></a><strong>算术表达式</strong></h2><p>使用集合$\{1, 2, 3, 4\}$中每个数字恰好一次，再加上四则运算$(+, -, \times, /)$和括号，可以表示许多不同的整数。</p>
<p>例如：<br>$$<br>\begin{aligned}<br>8  &amp; = (4 \times (1 + 3)) / 2 \\<br>14 &amp; = 4 \times (3 + 1 / 2)   \\<br>19 &amp; = 4 \times (2 + 3) − 1   \\<br>36 &amp; = 3 \times 4 \times (2 + 1)<br>\end{aligned}<br>$$<br>注意不允许把数字连起来使用，比如$12 + 34$。</p>
<p>使用集合$\{1, 2, 3, 4\}$，可以表示出$31$个不同的数，其中最大值是$36$，并且可以连续表示$1$至$28$之间的所有数。</p>
<p>考虑所有四个不同数字$a&lt;b&lt;c&lt;d$构成的集合，求其中可以从$1$开始连续表示最多个正整数的集合，并以字符串$abcd$的形式给出你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 94</title>
    <url>/94/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-94"><a href="#Problem-94" class="headerlink" title="Problem 94"></a><a href="https://projecteuler.net/problem=94">Problem 94</a></h1><hr>
<h2 id="Almost-Equilateral-Triangles"><a href="#Almost-Equilateral-Triangles" class="headerlink" title="Almost Equilateral Triangles"></a><strong>Almost Equilateral Triangles</strong></h2><p>It is easily proved that no equilateral triangle exists with integral length sides and integral area. However, the <i>almost equilateral triangle</i> $5-5-6$ has an area of $12$ square units.</p>
<p>We shall define an <i>almost equilateral triangle</i> to be a triangle for which two sides are equal and the third differs by no more than one unit.</p>
<p>Find the sum of the perimeters of all <i>almost equilateral triangles</i> with integral side lengths and area and whose perimeters do not exceed one billion $(1,000,000,000)$.</p>
<hr>
<h2 id="几乎等边的三角形"><a href="#几乎等边的三角形" class="headerlink" title="几乎等边的三角形"></a><strong>几乎等边的三角形</strong></h2><p>容易证明，不存在边长和面积均为整数的等边三角形。但是，存在三边长$5-5-6$均为整数的<i class=zh>几乎等边的三角形</i> ，其面积$12$同样为整数。</p>
<p>定义<i class=zh>几乎等边的三角形</i>为有两条边一样长且第三边长与这两边最多相差$1$的三角形。</p>
<p>考虑所有边长和面积均为整数、周长不超过十亿$(1,000,000,000)$、<i class=zh>几乎等边的三角形</i>，求其周长之和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 95</title>
    <url>/95/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-95"><a href="#Problem-95" class="headerlink" title="Problem 95"></a><a href="https://projecteuler.net/problem=95">Problem 95</a></h1><hr>
<h2 id="Amicable-Chains"><a href="#Amicable-Chains" class="headerlink" title="Amicable Chains"></a><strong>Amicable Chains</strong></h2><p>The proper divisors of a number are all the divisors excluding the number itself. For example, the proper divisors of $28$ are $1$, $2$, $4$, $7$, and $14$. As the sum of these divisors is equal to $28$, we call it a perfect number.</p>
<p>Interestingly the sum of the proper divisors of $220$ is $284$ and the sum of the proper divisors of $284$ is $220$, forming a chain of two numbers. For this reason, $220$ and $284$ are called an amicable pair.</p>
<p>Perhaps less well known are longer chains. For example, starting with $12496$, we form a chain of five numbers:</p>
<p>$$ 12496 \rightarrow 14288 \rightarrow 15472 \rightarrow 14536 \rightarrow 14264 (\rightarrow 12496 \rightarrow \ldots)$$</p>
<p>Since this chain returns to its starting point, it is called an amicable chain.</p>
<p>Find the smallest member of the longest amicable chain with no element exceeding one million.</p>
<hr>
<h2 id="亲和数链"><a href="#亲和数链" class="headerlink" title="亲和数链"></a><strong>亲和数链</strong></h2><p>一个数除了其本身之外的因数称为真因数。例如，$28$的真因数有$1$、$2$、$4$、$7$、$14$。这些真因数的和恰好为$28$，因此我们称$28$是完全数。</p>
<p>有趣的是，$220$的真因数之和是$284$，同时$284$的真因数之和是$220$，构成了一个长度为$2$的链，我们称之为亲和数对。</p>
<p>不怎么为人所知的是，存在满足类似性质但更长的序列。例如，从$12496$出发，可以构成一个长度为$5$的链：</p>
<p>$$ 12496 \rightarrow 14288 \rightarrow 15472 \rightarrow 14536 \rightarrow 14264 (\rightarrow 12496 \rightarrow \ldots)$$</p>
<p>这条链最后又回到了起点，我们称之为亲和数链。</p>
<p>找出最长的、所有元素都不超过一百万的亲和数链，并给出其中最小的数。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 96</title>
    <url>/96/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-96"><a href="#Problem-96" class="headerlink" title="Problem 96"></a><a href="https://projecteuler.net/problem=96">Problem 96</a></h1><hr>
<h2 id="Su-Doku"><a href="#Su-Doku" class="headerlink" title="Su Doku"></a><strong>Su Doku</strong></h2><p>Su Doku (Japanese meaning <i>number place</i>) is the name given to a popular puzzle concept. Its origin is unclear, but credit must be attributed to Leonhard Euler who invented a similar, and much more difficult, puzzle idea called Latin Squares. The objective of Su Doku puzzles, however, is to replace the blanks (or zeros) in a $9$ by $9$ grid in such that each row, column, and $3$ by $3$ box contains each of the digits $1$ to $9$. Below is an example of a typical starting puzzle grid and its solution grid.</p>
<center>
<img src="/resources/images/0096_1.png">
<img src="/resources/images/0096_2.png">
</center>


<p>A well constructed Su Doku puzzle has a unique solution and can be solved by logic, although it may be necessary to employ “guess and test” methods in order to eliminate options (there is much contested opinion over this). The complexity of the search determines the difficulty of the puzzle; the example above is considered <i>easy</i> because it can be solved by straight forward direct deduction.</p>
<p>The 6K text file, <a href="https://projecteuler.net/project/resources/p096_sudoku.txt">sudoku.txt</a>(right click and ‘Save Link/Target As…’), contains fifty different Su Doku puzzles ranging in difficulty, but all with unique solutions (the first puzzle in the file is the example above).</p>
<p>By solving all fifty puzzles find the sum of the $3$-digit numbers found in the top left corner of each solution grid; for example, $483$ is the $3$-digit number found in the top left corner of the solution grid above.</p>
<hr>
<h2 id="数独"><a href="#数独" class="headerlink" title="数独"></a><strong>数独</strong></h2><p>数独（日语原意为<i class=zh>数的位置</i>）是一种热门的谜题。它的起源已不可考，但是与欧拉发明的一种类似而更加困难的谜题拉丁方阵之间有着千丝万缕的联系。数独的目标是替换掉$9 \times 9$网格中的空白位置（以数字$0$表示），使得每行、每列以及每个九宫格中恰好都包含数字$1$至$9$。如下是一个典型的数独谜题以及它的解答。</p>
<center>
<img src="/resources/images/0096_1.png">
<img src="/resources/images/0096_2.png">
</center>



<p>一个构造精良的数独谜题应该有唯一解，且能够通过逻辑推断来解决，尽管有时需要通过“猜测并检验”来排除一些选项（对于这一点目前仍有争议）。寻找答案时的复杂程度决定了题目的难度；如上这个谜题被认为是<i class=zh>简单</i>的谜题，因为解决该题只需要直接的演绎推理即可。</p>
<p>在文本文件<a href="https://projecteuler.net/project/resources/p096_sudoku.txt">sudoku.txt</a>中包含有五十个不同难度的数独谜题，但保证它们都只有唯一解（文件中的第一个谜题就是上述样例）。</p>
<p>解开这五十个谜题，找出每个谜题解答左上角的三个数字所构成的三位数，并求这些数的和；比如，上述样例解答对应的三位数就是$483$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 97</title>
    <url>/97/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-97"><a href="#Problem-97" class="headerlink" title="Problem 97"></a><a href="https://projecteuler.net/problem=97">Problem 97</a></h1><hr>
<h2 id="Large-Non-Mersenne-Prime"><a href="#Large-Non-Mersenne-Prime" class="headerlink" title="Large Non-Mersenne Prime"></a><strong>Large Non-Mersenne Prime</strong></h2><p>The first known prime found to exceed one million digits was discovered in $1999$, and is a Mersenne prime of the form $2^{6972593}−1$; it contains exactly $2,098,960$ digits. Subsequently other Mersenne primes, of the form $2^p−1$, have been found which contain more digits.</p>
<p>However, in $2004$ there was found a massive non-Mersenne prime which contains $2,357,207$ digits: $28433 \times 2^{7830457}+1$.</p>
<p>Find the last ten digits of this prime number.</p>
<hr>
<h2 id="巨大非梅森素数"><a href="#巨大非梅森素数" class="headerlink" title="巨大非梅森素数"></a><strong>巨大非梅森素数</strong></h2><p>$1999$年，数学家首次发现了超过一百万位的素数。这是一个梅森素数，可以表示为$2^{6972593}−1$，包含有$2,098,960$位数字。在此之后，更多形如$2^p−1$的梅森素数被发现，其位数也越来越多。</p>
<p>另外，在$2004$年，数学家还发现了一个巨大的非梅森素数，包含有$2,357,207$位数字，并可以表示为$28433\times 2^{7830457}+1$。</p>
<p>求这个素数的最后十位数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 98</title>
    <url>/98/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-98"><a href="#Problem-98" class="headerlink" title="Problem 98"></a><a href="https://projecteuler.net/problem=98">Problem 98</a></h1><hr>
<h2 id="Anagramic-Squares"><a href="#Anagramic-Squares" class="headerlink" title="Anagramic Squares"></a><strong>Anagramic Squares</strong></h2><p>By replacing each of the letters in the word CARE with $1$, $2$, $9$, and $6$ respectively, we form a square number: $1296 = 36^2$. What is remarkable is that, by using the same digital substitutions, the anagram, RACE, also forms a square number: $9216 = 96^2$. We shall call CARE (and RACE) a square anagram word pair and specify further that leading zeroes are not permitted, neither may a different letter have the same digital value as another letter.</p>
<p>Using <a href="https://projecteuler.net/project/resources/p098_words.txt">words.txt</a> (right click and ‘Save Link/Target As…’), a 16K text file containing nearly two-thousand common English words, find all the square anagram word pairs (a palindromic word is NOT considered to be an anagram of itself).</p>
<p>What is the largest square number formed by any member of such a pair?</p>
<p>NOTE: All anagrams formed must be contained in the given text file.</p>
<hr>
<h2 id="重排平方数"><a href="#重排平方数" class="headerlink" title="重排平方数"></a><strong>重排平方数</strong></h2><p>将单词CARE中的四个字母依次赋值为$1$、$2$、$9$、$6$，可以得到一个平方数：$1296 = 36^2$。神奇的是，使用同样的赋值规则，重排后的单词RACE同样对应于平方数：$9216 = 96^2$。我们因此称CARE和RACE为重排平方单词对，并且要求类似的单词对不允许有前导零，且不允许给不同字母赋相同的值。</p>
<p>在文本文件<a href="https://projecteuler.net/project/resources/p098_words.txt">words.txt</a>中包含了将近两千个常用英文单词，找出其中所有的重排平方单词对（一个回文单词不视为它自己的重排）。</p>
<p>在这些单词对中，通过赋值所能得到的最大平方数是多少？</p>
<p>注意：所有的重排单词必须出现在给定的文本文件中。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 99</title>
    <url>/99/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-99"><a href="#Problem-99" class="headerlink" title="Problem 99"></a><a href="https://projecteuler.net/problem=99">Problem 99</a></h1><hr>
<h2 id="Largest-Exponential"><a href="#Largest-Exponential" class="headerlink" title="Largest Exponential"></a><strong>Largest Exponential</strong></h2><p>Comparing two numbers written in index form like $2^{11}$ and $3^7$ is not difficult, as any calculator would confirm that $2^{11} = 2048 &lt; 3^7 = 2187$.</p>
<p>However, confirming that $632382^{518061}&gt; 519432^{525806}$ would be much more difficult, as both numbers contain over three million digits.</p>
<p>Using <a href="https://projecteuler.net/project/resources/p099_base_exp.txt">base_exp.txt</a>(right click and ‘Save Link/Target As…’), a $22$K text file containing one thousand lines with a base/exponent pair on each line, determine which line number has the greatest numerical value.</p>
<p>NOTE: The first two lines in the file represent the numbers in the example given above.</p>
<hr>
<h2 id="最大的幂"><a href="#最大的幂" class="headerlink" title="最大的幂"></a><strong>最大的幂</strong></h2><p>比较$2^{11}$和$3^7$并不困难，因为任何计算器都能验证 $2^{11} = 2048 &lt; 3^7 = 2187$。</p>
<p>然而，想要验证$632382^{518061}&gt;519432^{525806}$就会变得非常困难，因为这两个数都包含有超过三百万位数字。</p>
<p>在文本文件<a href="https://projecteuler.net/project/resources/p099_base_exp.txt">base_exp.txt</a>中有一千行，每一行有一对底数和指数。求这其中哪一行给出的幂的数值最大。</p>
<p>注意：文件的前两行就是上述两个例子。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 903</title>
    <url>/903/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-903"><a href="#Problem-903" class="headerlink" title="Problem 903"></a><a href="https://projecteuler.net/problem=903">Problem 903</a></h1><hr>
<h2 id="Total-Permutation-Powers"><a href="#Total-Permutation-Powers" class="headerlink" title="Total Permutation Powers"></a><strong>Total Permutation Powers</strong></h2><p>A permutation $\pi$ of $\{1, \dots, n\}$ can be represented in <b>one-line notation</b> as $\pi(1),\ldots,\pi(n) $. If all $n!$ permutations are written in lexicographic order then $\textrm{rank}(\pi)$ is the position of $\pi$ in this $1$-based list.</p>
<p>For example, $\text{rank}(2,1,3) = 3$ because the six permutations of $\{1, 2, 3\}$ in lexicographic order are:<br>$$1, 2, 3\quad 1, 3, 2 \quad 2, 1, 3 \quad 2, 3, 1 \quad 3, 1, 2 \quad 3, 2, 1$$</p>
<p>Let $Q(n)$ be the sum $\sum_{\pi}\sum_{i = 1}^{n!} \text{rank}(\pi^i)$, where $\pi$ ranges over all permutations of $\{1, \dots, n\}$, and $\pi^i$ is the permutation arising from applying $\pi$ $i$ times.</p>
<p>For example, $Q(2) = 5$, $Q(3) = 88$, $Q(6) = 133103808$ and $Q(10) \equiv 468421536 \pmod {10^9 + 7}$.</p>
<p>Find $Q(10^6)$. Give your answer modulo $(10^9 + 7)$.</p>
<hr>
<h2 id="所有置换的幂"><a href="#所有置换的幂" class="headerlink" title="所有置换的幂"></a><strong>所有置换的幂</strong></h2><p>集合$\{1, \dots, n\}$的任意置换$\pi$可以用<b>一行记法</b>表示为$\pi(1),\ldots,\pi(n)$。如果将所有$n!$个置换按字典序排列，那么$\textrm{rank}(\pi)$即是置换$\pi$在这个排列中的位置（从$1$开始计数）。</p>
<p>例如，$\text{rank}(2,1,3) = 3$，因为$\{1, 2, 3\}$的六个置换按字典序排列为：<br>$$1, 2, 3\quad 1, 3, 2 \quad 2, 1, 3 \quad 2, 3, 1 \quad 3, 1, 2 \quad 3, 2, 1$$</p>
<p>令$Q(n)$等于如下求和$\sum_{\pi}\sum_{i = 1}^{n!} \text{rank}(\pi^i)$，其中$\pi$取遍$\{1, \dots, n\}$的所有置换，$\pi^i$是指将置换$\pi$应用$i$次得到的置换。</p>
<p>已知$Q(2) = 5$，$Q(3) = 88$，$Q(6) = 133103808$，$Q(10) \equiv 468421536 \pmod {10^9 + 7}$。</p>
<p>求$Q(10^6)$，并对$(10^9 + 7)$取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 905</title>
    <url>/905/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-905"><a href="#Problem-905" class="headerlink" title="Problem 905"></a><a href="https://projecteuler.net/problem=905">Problem 905</a></h1><hr>
<h2 id="Now-I-Know"><a href="#Now-I-Know" class="headerlink" title="Now I Know"></a><strong>Now I Know</strong></h2><p>Three epistemologists, known as $A$, $B$, and $C$, are in a room, each wearing a hat with a number on it. They have been informed beforehand that all three numbers are positive and that one of the numbers is the sum of the other two.</p>
<p>Once in the room, they can see the numbers on each other’s hats but not on their own. Starting with $A$ and proceeding cyclically, each epistemologist must either honestly state “I don’t know my number” or announce “Now I know my number!” which terminates the game.</p>
<p>For instance, if their numbers are $A=2, B=1, C=1$ then $A$ declares “Now I know” at the first turn. If their numbers are $A=2, B=7, C=5$ then “I don’t know” is heard four times before $B$ finally declares “Now I know” at the fifth turn.</p>
<p>Let $F(A,B,C)$ be the number of turns it takes until an epistemologist declares “Now I know”, including the turn this declaration is made. So $F(2,1,1)=1$ and $F(2,7,5)=5$.</p>
<p>Find $\displaystyle \sum_{a=1}^7 \sum_{b=1}^{19} F(a^b, b^a, a^b + b^a)$.</p>
<hr>
<h2 id="现在我知道了"><a href="#现在我知道了" class="headerlink" title="现在我知道了"></a><strong>现在我知道了</strong></h2><p>三位认识论学者$A$、$B$和$C$待在一间房间里，每人戴着一顶写有数的帽子。他们事先被告知，所有三个数都是正数，且其中一个数等于其他两个数之和。</p>
<p>在房间里时，他们可以看到别人帽子上的数，但看不到自己的。从$A$开始，每位认识论学者轮流循环发言，每次发言必须诚实地声明“我不知道我的数”或宣布“现在我知道我的数了！”在后一种情况下，游戏结束。</p>
<p>例如，如果他们帽子上的数分别是$A=2, B=1, C=1$，那么$A$在第一轮就可以宣布“现在我知道了”。如果他们的帽子上的数分别是$A=2, B=7, C=5$，那么最初的四轮发言都是声明“我不知道”，直到$B$最终在第五轮宣布“现在我知道了”。</p>
<p>令$F(A,B,C)$表示直到某位认识论学者首次宣布“现在我知道了”所需的轮数（包括宣布的那一轮），因此$F(2,1,1)=1$，$F(2,7,5)=5$。</p>
<p>求$\displaystyle \sum_{a=1}^7 \sum_{b=1}^{19} F(a^b, b^a, a^b + b^a)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 902</title>
    <url>/902/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-902"><a href="#Problem-902" class="headerlink" title="Problem 902"></a><a href="https://projecteuler.net/problem=902">Problem 902</a></h1><hr>
<h2 id="Permutation-Powers"><a href="#Permutation-Powers" class="headerlink" title="Permutation Powers"></a><strong>Permutation Powers</strong></h2><p>A permutation $\pi$ of $\{1, \dots, n\}$ can be represented in <b>one-line notation</b> as $\pi(1),\ldots,\pi(n) $. If all $n!$ permutations are written in lexicographic order then $\textrm{rank}(\pi)$ is the position of $\pi$ in this $1$-based list.</p>
<p>For example, $\text{rank}(2,1,3) = 3$ because the six permutations of $\{1, 2, 3\}$ in lexicographic order are:<br>$$1, 2, 3\quad 1, 3, 2 \quad 2, 1, 3 \quad 2, 3, 1 \quad 3, 1, 2 \quad 3, 2, 1$$</p>
<p>For a positive integer $m$, we define the following permutation of $\{1, \dots, n\}$ with $n = \frac{m(m+1)}2$:<br>$$<br>\begin{aligned}<br>\sigma(i) &amp; = \begin{cases} \frac{k(k-1)}2 + 1 &amp; \textrm{if } i = \frac{k(k + 1)}2\textrm{ for }k\in\{1, \dots, m\};\\ i + 1 &amp; \textrm{otherwise};\end{cases}\\<br>\tau(i) &amp; = ((10^9 + 7)i \bmod n) + 1\\<br>\pi(i) &amp; = \tau^{-1}(\sigma(\tau(i)))<br>\end{aligned}<br>$$<br>where $\tau^{-1}$ is the inverse permutation of $\tau$.</p>
<p>Define $\displaystyle P(m) = \sum_{k=1}^{m!} \text{rank}(\pi^k)$, where $\pi^k$ is the permutation arising from applying $\pi$ $k$ times.<br/><br>For example, $P(2) = 4$, $P(3) = 780$ and $P(4) = 38810300$.</p>
<p>Find $P(100)$. Give your answer modulo $(10^9 + 7)$.</p>
<hr>
<h2 id="置换的幂"><a href="#置换的幂" class="headerlink" title="置换的幂"></a><strong>置换的幂</strong></h2><p>集合$\{1, \dots, n\}$的任意置换$\pi$可以用<b>一行记法</b>表示为$\pi(1),\ldots,\pi(n)$。如果将所有$n!$个置换按字典序排列，那么$\textrm{rank}(\pi)$即是置换$\pi$在这个排列中的位置（从$1$开始计数）。</p>
<p>例如，$\text{rank}(2,1,3) = 3$，因为$\{1, 2, 3\}$的六个置换按字典序排列为：<br>$$1, 2, 3\quad 1, 3, 2 \quad 2, 1, 3 \quad 2, 3, 1 \quad 3, 1, 2 \quad 3, 2, 1$$</p>
<p>对于正整数$m$，令$n = \frac{m(m+1)}2$，并定义如下$\{1, \dots, n\}$的置换：<br>$$<br>\begin{aligned}<br>\sigma(i) &amp; = \begin{cases} \frac{k(k-1)}2 + 1 &amp; \textrm{若存在} k\in\{1, \dots, m\}\textrm{使得}i = \frac{k(k + 1)}2;\\ i + 1 &amp; \textrm{其它情形};\end{cases}\\<br>\tau(i) &amp; = ((10^9 + 7)i \bmod n) + 1\\<br>\pi(i) &amp; = \tau^{-1}(\sigma(\tau(i)))<br>\end{aligned}<br>$$<br>其中$\tau^{-1}$表示$\tau$的逆置换。</p>
<p>定义$\displaystyle P(m) = \sum_{k=1}^{m!} \text{rank}(\pi^k)$，其中$\pi^k$是指将置换$\pi$应用$k$次得到的置换。<br/><br>已知$P(2) = 4$，$P(3) = 780$，$P(4) = 38810300$。</p>
<p>求$P(100)$，并对$(10^9 + 7)$取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 907</title>
    <url>/907/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-907"><a href="#Problem-907" class="headerlink" title="Problem 907"></a><a href="https://projecteuler.net/problem=907">Problem 907</a></h1><hr>
<h2 id="Stacking-Cups"><a href="#Stacking-Cups" class="headerlink" title="Stacking Cups"></a><strong>Stacking Cups</strong></h2><p>An infant’s toy consists of $n$ cups, labelled $C_1,\ldots,C_n$ in increasing order of size.</p>
<img src="/resources/images/0907_four_cups.png?1723769212" alt="0907_four_cups.png" height="162">

<p>The cups may be stacked in various combinations and orientations to form towers. The cups are shaped such that the following means of stacking are possible:</p>
<ul>
<li>Nesting: $C_k$ may sit snugly inside $C_{k+1}$.<img src="/resources/images/0907_nesting.png?1723769266" alt="0907_nesting.png" height="150"></li>
<li>Base-to-base: $C_{k+2}$ or $C_{k-2}$ may sit, right-way-up, on top of an up-side-down $C_k$, with their bottoms fitting together snugly.<img src="/resources/images/0907_base_to_base.png?1723769276" alt="0907_base_to_base.png" height="198"></li>
<li>Rim-to-rim: $C_{k+2}$ or $C_{k-2}$ may sit, up-side-down, on top of a right-way-up $C_k$, with their tops fitting together snugly.<img src="/resources/images/0907_rim_to_rim.png?1723769283" alt="0907_rim_to_rim.png" height="198">

</li>
</ul>
<p>Define $S(n)$ to be the number of ways to build a single tower using all $n$ cups according to the above rules.<br/><br>You are given $S(4)=12$, $S(8)=58$, and $S(20)=5560$.</p>
<p>Find $S(10^7)$, giving your answer modulo $1\ 000\ 000\ 007$.</p>
<hr>
<h2 id="叠杯子"><a href="#叠杯子" class="headerlink" title="叠杯子"></a><strong>叠杯子</strong></h2><p>某种婴儿玩具包含$n$个杯子，按大小递增顺序依次记为$C_1,\ldots,C_n$。</p>
<img src="/resources/images/0907_four_cups.png?1723769212" alt="0907_four_cups.png" height="162">

<p>这些杯子可以用多种方式进行堆叠。具体来说，杯子的形状被设计为允许采用如下的堆叠方式：</p>
<ul>
<li>嵌套：$C_k$可以紧密地嵌套在$C_{k+1}$里面。<img src="/resources/images/0907_nesting.png?1723769266" alt="0907_nesting.png" height="150"></li>
<li>底对底：正放的$C_{k+2}$或$C_{k-2}$可以放在倒置的$C_k$上面，并使底部紧密贴合。<img src="/resources/images/0907_base_to_base.png?1723769276" alt="0907_base_to_base.png" height="198"></li>
<li>顶对顶：倒置的$C_{k+2}$或$C_{k-2}$可以放在正放的$C_k$上面，并使顶部紧密贴合。<img src="/resources/images/0907_rim_to_rim.png?1723769283" alt="0907_rim_to_rim.png" height="198">

</li>
</ul>
<p>定义$S(n)$为按照上述规则将所有$n$个杯子全部堆叠在一起的方案数目。<br/><br>已知$S(4)=12$，$S(8)=58$，$S(20)=5560$。</p>
<p>求$S(10^7)$，并对$1\ 000\ 000\ 007$取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 906</title>
    <url>/906/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-906"><a href="#Problem-906" class="headerlink" title="Problem 906"></a><a href="https://projecteuler.net/problem=906">Problem 906</a></h1><hr>
<h2 id="A-Collective-Decision"><a href="#A-Collective-Decision" class="headerlink" title="A Collective Decision"></a><strong>A Collective Decision</strong></h2><p>Three friends attempt to collectively choose one of $n$ options, labeled $1,\dots,n$, based upon their individual preferences. They choose option $i$ if for every alternative option $j$ at least two of the three friends prefer $i$ over $j$. If no such option $i$ exists they fail to reach an agreement.</p>
<p>Define $P(n)$ to be the probability the three friends successfully reach an agreement and choose one option, where each of the friends’ individual order of preference is given by a (possibly different) random permutation of $1,\dots,n$.</p>
<p>You are given $P(3)=17/18$ and $P(10)\approx0.6760292265$.</p>
<p>Find $P(20\ 000)$. Give your answer rounded to ten places after the decimal point.</p>
<hr>
<h2 id="集体决定"><a href="#集体决定" class="headerlink" title="集体决定"></a><strong>集体决定</strong></h2><p>三位朋友试图根据他们各自的偏好集体从$n$个选项中选择其中之一，这些选项分别用$1,\dots,n$表示。如果存在选项$i$使得，对于任意其他选项$j$，至少有两位朋友更喜欢选项$i$胜过选项$j$，那么他们就会选择选项$i$。如果不存在这样的选项$i$，他们就无法达成一致。</p>
<p>定义$P(n)$为三位朋友成功达成一致的概率，其中每位朋友的个人偏好可以由$1,\dots,n$的一个（可能不同的）随机排列表示。</p>
<p>已知$P(3)=17/18$，$P(10)\approx0.6760292265$。</p>
<p>求$P(20\ 000)$，并四舍五入保留十位小数作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 904</title>
    <url>/904/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-904"><a href="#Problem-904" class="headerlink" title="Problem 904"></a><a href="https://projecteuler.net/problem=904">Problem 904</a></h1><hr>
<h2 id="Pythagorean-Angle"><a href="#Pythagorean-Angle" class="headerlink" title="Pythagorean Angle"></a><strong>Pythagorean Angle</strong></h2><p>Given a right-angled triangle with integer sides, the smaller angle formed by the two medians drawn on the the two perpendicular sides is denoted by $\theta$.</p>
<div style="text-align:center;"><img src="/resources/images/0904_pythagorean_angle.png?1723895050" alt="0904_Pythagorean_angle.jpg"></div>

<p>Let $f(\alpha, L)$ denote the sum of the sides of the right-angled triangle minimizing the absolute difference between $\theta$ and $\alpha$ among all right-angled triangles with integer sides and hypotenuse not exceeding $L$.<br/><br>If more than one triangle attains the minimum value, the triangle with the maximum area is chosen. All angles in this problem are measured in degrees.</p>
<p>For example, $f(30,10^2)=198$ and $f(10,10^6)= 1600158$.</p>
<p>Define $F(N,L)=\sum_{n=1}^{N}f\left(\sqrt[3]{n},L\right)$.<br/><br>You are given $F(10,10^6)= 16684370$.</p>
<p>Find $F(45000, 10^{10})$.</p>
<hr>
<h2 id="毕达哥拉斯角"><a href="#毕达哥拉斯角" class="headerlink" title="毕达哥拉斯角"></a><strong>毕达哥拉斯角</strong></h2><p>给定一个各边长为整数的直角三角形，在其两条相互垂直的边上各画一条中线，这两条中线交叉所形成的较小角记为$\theta$。</p>
<div style="text-align:center;"><img src="/resources/images/0904_pythagorean_angle.png?1723895050" alt="0904_Pythagorean_angle.jpg"></div>

<p>令$f(\alpha, L)$表示，在所有各边长为整数且斜边不超过$L$的直角三角形中，使$\theta$与$\alpha$的绝对差值最小的三角形的各边长之和。<br/><br>如果最小绝对差值对应多个三角形，则选择其中面积最大的一个。本题中的所有角度均以度数表示。</p>
<p>例如，$f(30,10^2)=198$，$f(10,10^6)= 1600158$。</p>
<p>定义$F(N,L)=\sum_{n=1}^{N}f\left(\sqrt[3]{n},L\right)$。<br/><br>已知$F(10,10^6)= 16684370$。</p>
<p>求$F(45000, 10^{10})$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 909</title>
    <url>/909/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-909"><a href="#Problem-909" class="headerlink" title="Problem 909"></a><a href="https://projecteuler.net/problem=909">Problem 909</a></h1><hr>
<h2 id="L-expressions-I"><a href="#L-expressions-I" class="headerlink" title="$L$-expressions I"></a><strong>$L$-expressions I</strong></h2><p>An <i>$L$-expression</i> is defined as any one of the following:</p>
<ul>
<li>a natural number;</li>
<li>the symbol $A$;</li>
<li>the symbol $Z$;</li>
<li>the symbol $S$;</li>
<li>a pair of $L$-expressions $u, v$, which is written as $u(v)$.</li>
</ul>
<p>An $L$-expression can be transformed according to the following rules:</p>
<ul>
<li>$A(x) \to x + 1$ for any natural number $x$;</li>
<li>$Z(u)(v) \to v$ for any $L$-expressions $u, v$;</li>
<li>$S(u)(v)(w) \to v(u(v)(w))$ for any $L$-expressions $u, v, w$.</li>
</ul>
<p>For example, after applying all possible rules, the $L$-expression $S(Z)(A)(0)$ is transformed to the number $1$:<br>$$S(Z)(A)(0) \to A(Z(A)(0)) \to A(0) \to 1.$$<br>Similarly, the $L$-expression $S(S)(S(S))(S(Z))(A)(0)$ is transformed to the number $6$ after applying all possible rules.</p>
<p>Find the result of the $L$-expression $S(S)(S(S))(S(S))(S(Z))(A)(0)$ after applying all possible rules. Give the last nine digits as your answer.</p>
<p><b>Note:</b> it can be proved that the $L$-expression in question can only be transformed a finite number of times, and the final result does not depend on the order of the transformations.</p>
<hr>
<h2 id="L-表达式（一）"><a href="#L-表达式（一）" class="headerlink" title="$L$-表达式（一）"></a><strong>$L$-表达式（一）</strong></h2><p>一条<i class=zh>$L$-表达式</i>可以是以下任意一种：</p>
<ul>
<li>一个自然数；</li>
<li>符号$A$；</li>
<li>符号$Z$；</li>
<li>符号$S$；</li>
<li>一对$L$-表达式$u, v$，并记作$u(v)$。</li>
</ul>
<p>$L$-表达式可以按照以下规则进行转换：</p>
<ul>
<li>对任意自然数$x$，$A(x) \to x + 1$；</li>
<li>对任意$L$-表达式$u, v$，$Z(u)(v) \to v$；</li>
<li>对任意$L$-表达式$u, v, w$，$S(u)(v)(w) \to v(u(v)(w))$。</li>
</ul>
<p>例如，在应用所有可能的规则后，$L$-表达式$S(Z)(A)(0)$可以被转换为数$1$：<br>$$S(Z)(A)(0) \to A(Z(A)(0)) \to A(0) \to 1.$$<br>类似地，$L$-表达式$S(S)(S(S))(S(Z))(A)(0)$在应用所有可能的规则后被转换为数$6$。</p>
<p>求$L$-表达式$S(S)(S(S))(S(S))(S(Z))(A)(0)$在应用所有可能的规则后的结果，并给出最后九位数字作为你的答案。</p>
<p><strong>注意：</strong>可以证明，本题所涉及的$L$-表达式只能被应用有限次转换，且最终结果不依赖于转换的顺序。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 908</title>
    <url>/908/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-908"><a href="#Problem-908" class="headerlink" title="Problem 908"></a><a href="https://projecteuler.net/problem=908">Problem 908</a></h1><hr>
<h2 id="Clock-Sequence-II"><a href="#Clock-Sequence-II" class="headerlink" title="Clock Sequence II"></a><strong>Clock Sequence II</strong></h2><p>A <i>clock sequence</i> is a periodic sequence of positive integers that can be broken into contiguous segments such that the sum of the $n$-th segment is equal to $n$.</p>
<p>For example, the sequence<br>$$1\ 2\ 3\ 4\ 3\ 2\ 1\ 2\ 3\ 4\ 3\ 2\ 1\ 2\ 3\ 4\ 3\ 2\ 1\ \cdots$$<br>is a clock sequence with period $6$, as it can be broken into<br>$$1\Big |2\Big |3\Big |4\Big |3\ 2\Big |1\ 2\ 3\Big |4\ 3\Big |2\ 1\ 2\ 3\Big |4\ 3\ 2\Big |1\ 2\ 3\ 4\Big |3\ 2\ 1\ 2\ 3\Big |\cdots$$<br>Let $C(N)$ be the number of different clock sequences with period at most $N$. For example, $C(3) = 3$, $C(4) = 7$ and $C(10) = 561$.</p>
<p>Find $C(10^4) \bmod 1111211113$.</p>
<hr>
<h2 id="钟摆序列（二）"><a href="#钟摆序列（二）" class="headerlink" title="钟摆序列（二）"></a><strong>钟摆序列（二）</strong></h2><p><i class=zh>钟摆序列</i>是一种具有周期性的正整数序列。这种序列可以被分成连续的片段，使得第$n$个片段之和等于$n$。</p>
<p>例如，序列<br>$$1\ 2\ 3\ 4\ 3\ 2\ 1\ 2\ 3\ 4\ 3\ 2\ 1\ 2\ 3\ 4\ 3\ 2\ 1\ \cdots$$<br>是一个周期为$6$的钟摆序列，因为它可以被分成<br>$$1\Big |2\Big |3\Big |4\Big |3\ 2\Big |1\ 2\ 3\Big |4\ 3\Big |2\ 1\ 2\ 3\Big |4\ 3\ 2\Big |1\ 2\ 3\ 4\Big |3\ 2\ 1\ 2\ 3\Big |\cdots$$</p>
<p>令$C(N)$为周期至多为$N$的不同钟摆序列的数量。例如，$C(3) = 3$，$C(4) = 7$，$C(10) = 561$。</p>
<p>求$C(10^4) \bmod 1111211113$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 911</title>
    <url>/911/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-911"><a href="#Problem-911" class="headerlink" title="Problem 911"></a><a href="https://projecteuler.net/problem=911">Problem 911</a></h1><hr>
<h2 id="Khinchin-Exceptions"><a href="#Khinchin-Exceptions" class="headerlink" title="Khinchin Exceptions"></a><strong>Khinchin Exceptions</strong></h2><p>An irrational number $x$ can be uniquely expressed as a <b>continued fraction</b> $[a_0; a_1,a_2,a_3,\dots]$:<br>$$x=a_{0}+\cfrac{1}{a_1+\cfrac{1}{a_2+\cfrac{1}{a_3+{_\ddots}}}}$$<br>where $a_0$ is an integer and $a_1,a_2,a_3,\dots$ are positive integers.</p>
<p>Define $k_j(x)$ to be the <b>geometric mean</b> of $a_1,a_2,\dots,a_j$.<br/><br>That is, $k_j(x)=(a_1a_2 \cdots a_j)^{1/j}$.<br/><br>Also define $k_\infty(x)=\lim_{j\to \infty} k_j(x)$.</p>
<p>Khinchin proved that <b>almost all</b> irrational numbers $x$ have the same value of $k_\infty(x)\approx2.685452\dots$ known as <b>Khinchin’s constant</b>. However, there are some exceptions to this rule.</p>
<p>For $n\geq 0$ define<br>$$\rho_n = \sum_{i=0}^{\infty} \frac{2^n}{2^{2^i}}$$<br>For example $\rho_2$, with continued fraction beginning $[3; 3, 1, 3, 4, 3, 1, 3,\dots]$, has $k_\infty(\rho_2)\approx2.059767$.</p>
<p>Find the geometric mean of $k_{\infty}(\rho_n)$ for $0\leq n\leq 50$, giving your answer rounded to six digits after the decimal point.</p>
<hr>
<h2 id="辛钦例外"><a href="#辛钦例外" class="headerlink" title="辛钦例外"></a><strong>辛钦例外</strong></h2><p>任意无理数$x$可以被唯一地表示为连分数$[a_0; a_1,a_2,a_3,\dots]$》<br>$$x=a_{0}+\cfrac{1}{a_1+\cfrac{1}{a_2+\cfrac{1}{a_3+{_\ddots}}}}$$<br>其中$a_0$是整数，$a_1,a_2,a_3,\dots$都是正整数。</p>
<p>定义$k_j(x)$为$a_1,a_2,\dots,a_j$的<strong>几何平均值</strong>。<br>换言之，$k_j(x)=(a_1a_2 \cdots a_j)^{1/j}$。<br/><br>同时定义$k_\infty(x)=\lim_{j\to \infty} k_j(x)$。</p>
<p>辛钦证明了，<strong>几乎所有</strong>无理数$x$对应的$k_\infty(x)$值都相同，约等于$2.685452\dots$，这个值被称为<strong>辛钦常数</strong>。然而，这个规则存在一些例外。</p>
<p>对于$n\geq 0$，定义<br>$$\rho_n = \sum_{i=0}^{\infty} \frac{2^n}{2^{2^i}}$$<br>例如，$\rho_2$的连分数表示的初始部分是$[3; 3, 1, 3, 4, 3, 1, 3,\dots]$，对应的$k_\infty(\rho_2)\approx2.059767$。</p>
<p>求$0\leq n\leq 50$范围内所有$k_{\infty}(\rho_n)$的几何平均值，并将你的答案四舍五入保留小数点后六位。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 910</title>
    <url>/910/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-910"><a href="#Problem-910" class="headerlink" title="Problem 910"></a><a href="https://projecteuler.net/problem=910">Problem 910</a></h1><hr>
<h2 id="L-expressions-II"><a href="#L-expressions-II" class="headerlink" title="$L$-expressions II"></a><strong>$L$-expressions II</strong></h2><p>An <i>$L$-expression</i> is defined as any one of the following:</p>
<ul>
<li>a natural number;</li>
<li>the symbol $A$;</li>
<li>the symbol $Z$;</li>
<li>the symbol $S$;</li>
<li>a pair of $L$-expressions $u, v$, which is written as $u(v)$.</li>
</ul>
<p>An $L$-expression can be transformed according to the following rules:</p>
<ul>
<li>$A(x) \to x + 1$ for any natural number $x$;</li>
<li>$Z(u)(v) \to v$ for any $L$-expressions $u, v$;</li>
<li>$S(u)(v)(w) \to v(u(v)(w))$ for any $L$-expressions $u, v, w$.</li>
</ul>
<p>For example, after applying all possible rules, the $L$-expression $S(Z)(A)(0)$ is transformed to the number $1$:<br>$$S(Z)(A)(0) \to A(Z(A)(0)) \to A(0) \to 1.$$<br>Similarly, the $L$-expression $S(S)(S(S))(S(Z))(A)(0)$ is transformed to the number $6$ after applying all possible rules.</p>
<p>Define the following $L$-expressions:</p>
<ul>
<li>$C_0 = Z$;</li>
<li>$C_i = S(C_{i - 1})$ for $i \ge 1$;</li>
<li>$D_i = C_i(S)(S)$.</li>
</ul>
<p>For natural numbers $a, b, c, d, e$, let $F(a, b, c, d, e)$ denote the result of the $L$-expression $D_a(D_b)(D_c)(C_d)(A)(e)$ after applying all possible rules.</p>
<p>Find the last nine digits of $F(12, 345678, 9012345, 678, 90)$.</p>
<p><b>Note:</b> it can be proved that the $L$-expression in question can only be transformed a finite number of times, and the final result does not depend on the order of the transformations.</p>
<hr>
<h2 id="L-表达式（二）"><a href="#L-表达式（二）" class="headerlink" title="$L$-表达式（二）"></a><strong>$L$-表达式（二）</strong></h2><p>一条<i class=zh>$L$-表达式</i>可以是以下任意一种：</p>
<ul>
<li>一个自然数；</li>
<li>符号$A$；</li>
<li>符号$Z$；</li>
<li>符号$S$；</li>
<li>一对$L$-表达式$u, v$，并记作$u(v)$。</li>
</ul>
<p>$L$-表达式可以按照以下规则进行转换：</p>
<ul>
<li>对任意自然数$x$，$A(x) \to x + 1$；</li>
<li>对任意$L$-表达式$u, v$，$Z(u)(v) \to v$；</li>
<li>对任意$L$-表达式$u, v, w$，$S(u)(v)(w) \to v(u(v)(w))$。</li>
</ul>
<p>例如，在应用所有可能的规则后，$L$-表达式$S(Z)(A)(0)$可以被转换为数$1$：<br>$$S(Z)(A)(0) \to A(Z(A)(0)) \to A(0) \to 1.$$<br>类似地，$L$-表达式$S(S)(S(S))(S(Z))(A)(0)$在应用所有可能的规则后被转换为数$6$。</p>
<p>定义如下的$L$-表达式：</p>
<ul>
<li>$C_0 = Z$;</li>
<li>$C_i = S(C_{i - 1})$ for $i \ge 1$;</li>
<li>$D_i = C_i(S)(S)$.</li>
</ul>
<p>对于自然数$a, b, c, d, e$，令$F(a, b, c, d, e)$表示表达式$D_a(D_b)(D_c)(C_d)(A)(e)$在应用所有可能的规则后得到的结果。</p>
<p>求$F(12, 345678, 9012345, 678, 90)$的最后九位数字。</p>
<p><strong>注意：</strong>可以证明，本题所涉及的$L$-表达式只能被应用有限次转换，且最终结果不依赖于转换的顺序。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 912</title>
    <url>/912/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-912"><a href="#Problem-912" class="headerlink" title="Problem 912"></a><a href="https://projecteuler.net/problem=912">Problem 912</a></h1><hr>
<h2 id="Where-are-the-Odds"><a href="#Where-are-the-Odds" class="headerlink" title="Where are the Odds?"></a><strong>Where are the Odds?</strong></h2><p>Let $s_n$ be the $n$-th positive integer that does not contain three consecutive ones in its binary representation.<br/><br>For example, $s_1 = 1$ and $s_7 = 8$.</p>
<p>Define $F(N)$ to be the sum of $n^2$ for all $n\leq N$ where $s_n$ is odd. You are given $F(10)=199$.</p>
<p>Find $F(10^{16})$ giving your answer modulo $10^9+7$.</p>
<hr>
<h2 id="奇数在哪里？"><a href="#奇数在哪里？" class="headerlink" title="奇数在哪里？"></a><strong>奇数在哪里？</strong></h2><p>令$s_n$为第$n$个二进制表示不包含三个连续的$1$的正整数。<br/><br>例如，$s_1 = 1$，$s_7 = 8$。</p>
<p>定义$F(N)$为所有满足$n\leq N$且$s_n$为奇数的$n^2$之和。已知$F(10)=199$。</p>
<p>求$F(10^{16})$，并对$10^9+7$取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 913</title>
    <url>/913/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-913"><a href="#Problem-913" class="headerlink" title="Problem 913"></a><a href="https://projecteuler.net/problem=913">Problem 913</a></h1><hr>
<h2 id="Row-major-vs-Column-major"><a href="#Row-major-vs-Column-major" class="headerlink" title="Row-major vs Column-major"></a><strong>Row-major vs Column-major</strong></h2><p>The numbers from $1$ to $12$ can be arranged into a $3 \times 4$ matrix in either <strong>row-major</strong> or <strong>column-major</strong> order:<br>$$R=\begin{pmatrix}<br>1 &amp; 2 &amp; 3 &amp; 4\\<br>5 &amp; 6 &amp; 7 &amp; 8\\<br>9 &amp; 10 &amp; 11 &amp; 12\end{pmatrix},<br>C=\begin{pmatrix}<br>1 &amp; 4 &amp; 7 &amp; 10\\<br>2 &amp; 5 &amp; 8 &amp; 11\\<br>3 &amp; 6 &amp; 9 &amp; 12\end{pmatrix}$$<br>By swapping two entries at a time, at least $8$ swaps are needed to transform $R$ to $C$.</p>
<p>Let $S(n, m)$ be the minimal number of swaps needed to transform an $n\times m$ matrix of $1$ to $nm$ from row-major order to column-major order. Thus $S(3, 4) = 8$.</p>
<p>You are given that the sum of $S(n, m)$ for $2 \leq n \leq m \leq 100$ is $12578833$.</p>
<p>Find the sum of $S(n^4, m^4)$ for $2 \leq n \leq m \leq 100$.</p></p>
<hr>
<h2 id="行优先与列优先"><a href="#行优先与列优先" class="headerlink" title="行优先与列优先"></a><strong>行优先与列优先</strong></h2><p>$1$到$12$这些数可以按<strong>行优先</strong>或<strong>列优先</strong>的顺序填入一个$3 \times 4$矩阵中：<br>$$R=\begin{pmatrix}<br>1 &amp; 2 &amp; 3 &amp; 4\\<br>5 &amp; 6 &amp; 7 &amp; 8\\<br>9 &amp; 10 &amp; 11 &amp; 12\end{pmatrix},<br>C=\begin{pmatrix}<br>1 &amp; 4 &amp; 7 &amp; 10\\<br>2 &amp; 5 &amp; 8 &amp; 11\\<br>3 &amp; 6 &amp; 9 &amp; 12\end{pmatrix}$$<br>每次交换两个元素，至少需要$8$次交换才能将$R$转换为$C$。</p>
<p>令$S(n, m)$为将一个包含$1$到$nm$的$n\times m$矩阵从行优先顺序转换为列优先顺序所需的最少交换次数，因此$S(3, 4) = 8$。</p>
<p>已知对于所有$2 \leq n \leq m \leq 100$，$S(n, m)$之和为$12578833$。</p>
<p>求对于所有$2 \leq n \leq m \leq 100$，$S(n^4, m^4)$之和。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 914</title>
    <url>/914/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-914"><a href="#Problem-914" class="headerlink" title="Problem 914"></a><a href="https://projecteuler.net/problem=914">Problem 914</a></h1><hr>
<h2 id="Triangles-inside-Circles"><a href="#Triangles-inside-Circles" class="headerlink" title="Triangles inside Circles"></a><strong>Triangles inside Circles</strong></h2><p>For a given integer $R$ consider all primitive Pythagorean triangles that can fit inside, without touching, a circle with radius $R$. Define $F(R)$ to be the largest inradius of those triangles. You are given $F(100) = 36$.</p>
<p>Find $F(10^{18})$.</p>
<hr>
<h2 id="圆内三角形"><a href="#圆内三角形" class="headerlink" title="圆内三角形"></a><strong>圆内三角形</strong></h2><p>对于给定的整数$R$，考虑所有可以完全放入半径为$R$的圆内，且不接触圆周的本原毕达哥拉斯三角形。定义$F(R)$为这些三角形中最大的内切圆半径。已知$F(100) = 36$。</p>
<p>求$F(10^{18})$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 916</title>
    <url>/916/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-916"><a href="#Problem-916" class="headerlink" title="Problem 916"></a><a href="https://projecteuler.net/problem=916">Problem 916</a></h1><hr>
<h2 id="Restricted-Permutations"><a href="#Restricted-Permutations" class="headerlink" title="Restricted Permutations"></a><strong>Restricted Permutations</strong></h2><p>Let $P(n)$ be the number of permutations of $\{1,2,3,\ldots,2n\}$ such that:</p>
<ol>
<li>There is no ascending subsequence with more than $n+1$ elements, and</li>
<li>There is no descending subsequence with more than two elements.</li>
</ol>
<p>Note that subsequences need not be contiguous. For example, the permutation $(4,1,3,2)$ is not counted because it has a descending subsequence of three elements: $(4,3,2)$. You are given $P(2)=13$ and $P(10) \equiv 45265702 \pmod{10^9 + 7}$.</p>
<p>Find $P(10^8)$ and give your answer modulo $10^9 + 7$.</p>
<hr>
<h2 id="有限制排列"><a href="#有限制排列" class="headerlink" title="有限制排列"></a><strong>有限制排列</strong></h2><p>令$P(n)$为满足以下条件的$\{1,2,3,\ldots,2n\}$的排列的数量：</p>
<ol>
<li>不存在长度超过$n+1$的递增子序列，且</li>
<li>不存在长度超过$2$的递减子序列。</li>
</ol>
<p>注意子序列不必连续。例如，排列$(4,1,3,2)$不符合条件，因为它有一个长度为$3$的递减子序列：$(4,3,2)$。已知$P(2)=13$，$P(10) \equiv 45265702 \pmod{10^9 + 7}$。</p>
<p>求$P(10^8)$，并对$10^9 + 7$取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 918</title>
    <url>/918/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-918"><a href="#Problem-918" class="headerlink" title="Problem 918"></a><a href="https://projecteuler.net/problem=918">Problem 918</a></h1><hr>
<h2 id="Recursive-Sequence-Summation"><a href="#Recursive-Sequence-Summation" class="headerlink" title="Recursive Sequence Summation"></a><strong>Recursive Sequence Summation</strong></h2><p>The sequence $a_n$ is defined by $a_1=1$, and then recursively for $n\geq 1$:<br>$$\begin{aligned}<br>a_{2n} &amp; =2a_n\\<br>a_{2n+1} &amp; =a_n-3a_{n+1}<br>\end{aligned}$$<br>The first ten terms are $1, 2, -5, 4, 17, -10, -17, 8, -47, 34$.<br/><br>Define $\displaystyle S(N) = \sum_{n=1}^N a_n$. You are given $S(10) = -13$.<br/><br>Find $S(10^{12})$.</p>
<hr>
<h2 id="递归序列求和"><a href="#递归序列求和" class="headerlink" title="递归序列求和"></a><strong>递归序列求和</strong></h2><p>序列$a_n$的定义为：$a_1=1$；对于$n\geq 1$，递归定义：<br>$$\begin{aligned}<br>a_{2n} &amp; =2a_n\\<br>a_{2n+1} &amp; =a_n-3a_{n+1}<br>\end{aligned}$$<br>该序列的前十项是$1, 2, -5, 4, 17, -10, -17, 8, -47, 34$。<br/><br>定义$\displaystyle S(N) = \sum_{n=1}^N a_n$。已知$S(10) = -13$。<br/><br>求$S(10^{12})$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 915</title>
    <url>/915/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-915"><a href="#Problem-915" class="headerlink" title="Problem 915"></a><a href="https://projecteuler.net/problem=915">Problem 915</a></h1><hr>
<h2 id="Giant-GCDs"><a href="#Giant-GCDs" class="headerlink" title="Giant GCDs"></a><strong>Giant GCDs</strong></h2><p>The function $s(n)$ is defined recursively for positive integers by $s(1) = 1$ and $s(n+1) = \big(s(n) - 1\big)^3 +2$ for $n\geq 1$. <br/><br>The sequence begins: $s(1) = 1, s(2) = 2, s(3) = 3, s(4) = 10, \ldots$.</p>
<p>For positive integers $N$, define<br>$$T(N) = \sum_{a=1}^N \sum_{b=1}^N \gcd\Big(s\big(s(a)\big), s\big(s(b)\big)\Big).$$<br>You are given $T(3) = 12$, $T(4) \equiv 24881925$ and $T(100)\equiv 14416749$ both modulo $123456789$.</p>
<p>Find $T(10^8)$. Give your answer modulo $123456789$.</p>
<hr>
<h2 id="超大的最大公约数"><a href="#超大的最大公约数" class="headerlink" title="超大的最大公约数"></a><strong>超大的最大公约数</strong></h2><p>对正整数递归定义函数$s(n)$如下：$s(1) = 1$；对$n\geq 1$，$s(n+1) = \big(s(n) - 1\big)^3 +2$。<br/><br>该序列的最初几项分别是：$s(1) = 1, s(2) = 2, s(3) = 3, s(4) = 10, \ldots$。</p>
<p>对正整数$N$，定义<br>$$T(N) = \sum_{a=1}^N \sum_{b=1}^N \gcd\Big(s\big(s(a)\big), s\big(s(b)\big)\Big).$$<br>已知$T(3) = 12$，$T(4) \equiv 24881925$，$T(100)\equiv 14416749$（对$123456789$取模）。</p>
<p>求$T(10^8)$，并对$123456789$取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 917</title>
    <url>/917/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-917"><a href="#Problem-917" class="headerlink" title="Problem 917"></a><a href="https://projecteuler.net/problem=917">Problem 917</a></h1><hr>
<h2 id="Minimal-Path-Using-Additive-Cost"><a href="#Minimal-Path-Using-Additive-Cost" class="headerlink" title="Minimal Path Using Additive Cost"></a><strong>Minimal Path Using Additive Cost</strong></h2><p>The sequence $s_n$ is defined by $s_1 = 102022661$ and $s_n = s_{n-1}^2 \bmod {998388889}$ for $n \gt 1$.</p>
<p>Let $a_n = s_{2n - 1}$ and $b_n = s_{2n}$ for $n=1,2,…$</p>
<p>Define an $N \times N$ matrix whose values are $M_{i,j} = a_i + b_j$.</p>
<p>Let $A(N)$ be the minimal path sum from $M_{1,1}$ (top left) to $M_{N,N}$ (bottom right), where each step is either right or down.</p>
<p>You are given $A(1) = 966774091$, $A(2) = 2388327490$ and $A(10) = 13389278727$.</p>
<p>Find $A(10^7)$.</p>
<hr>
<h2 id="代价为特定项相加时的最小路径和"><a href="#代价为特定项相加时的最小路径和" class="headerlink" title="代价为特定项相加时的最小路径和"></a><strong>代价为特定项相加时的最小路径和</strong></h2><p>序列$s_n$的定义为：$s_1 = 102022661$；对于$n \gt 1$，$s_n = s_{n-1}^2 \bmod {998388889}$。</p>
<p>对于$n=1,2,…$，令$a_n = s_{2n - 1}$，$b_n = s_{2n}$。</p>
<p>考虑一个$N \times N$矩阵，其元素值为$M_{i,j} = a_i + b_j$。</p>
<p>令$A(N)$为从$M_{1,1}$（左上角）移动到$M_{N,N}$（右下角）的最小路径和，每一步只能向右或向下移动。</p>
<p>已知$A(1) = 966774091$，$A(2) = 2388327490$，$A(10) = 13389278727$。</p>
<p>求$A(10^7)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 919</title>
    <url>/919/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-919"><a href="#Problem-919" class="headerlink" title="Problem 919"></a><a href="https://projecteuler.net/problem=919">Problem 919</a></h1><hr>
<h2 id="Fortunate-Triangles"><a href="#Fortunate-Triangles" class="headerlink" title="Fortunate Triangles"></a><strong>Fortunate Triangles</strong></h2><p>We call a triangle <i>fortunate</i> if it has integral sides and at least one of its vertices has the property that the distance from it to the triangle’s <b>orthocentre</b> is exactly half the distance from the same vertex to the triangle’s <b>circumcentre</b>.</p>
<div style="text-align:center">
<img src="/resources/images/0919_remarkablediagram.jpg" alt="0919_remarkablediagram.jpg">
</div>

<p>Triangle $ABC$ above is an example of a fortunate triangle with sides $(6,7,8)$. The distance from the vertex $C$ to the circumcentre $O$ is $\approx 4.131182$, while the distance from $C$ to the orthocentre $H$ is half that, at $\approx 2.065591$.</p>
<p>Define $S(P)$ to be the sum of $a+b+c$ over all fortunate triangles with sides $a\leq b\leq c$ and perimeter not exceeding $P$.</p>
<p>For example $S(10)=24$, arising from three triangles with sides $(1,2,2)$, $(2,3,4)$, and $(2,4,4)$. You are also given $S(100)=3331$.</p>
<p>Find $S(10^7)$.</p>
<hr>
<h2 id="幸运三角形"><a href="#幸运三角形" class="headerlink" title="幸运三角形"></a><strong>幸运三角形</strong></h2><p><i class=zh>幸运</i>三角形是指具有整数边长且至少有一个顶点满足以下性质的三角形：该顶点到三角形<b>垂心</b>的距离恰好是同一顶点到三角形<b>外心</b>的距离的一半。</p>
<div style="text-align:center">
<img src="/resources/images/0919_remarkablediagram.jpg" alt="0919_remarkablediagram.jpg">
</div>

<p>如上图所示的三角形$ABC$就是一个边长为$(6,7,8)$的幸运三角形。顶点$C$到外心$O$的距离约为$\approx 4.131182$，而$C$到垂心$H$的距离是其一半，约为$\approx 2.065591$。</p>
<p>定义$S(P)$为所有满足边长$a\leq b\leq c$且周长不超过$P$的幸运三角形的边长和$a+b+c$之和。</p>
<p>例如，$S(10)=24$，对应三个边长分别为$(1,2,2)$、$(2,3,4)$和$(2,4,4)$的三角形。此外还已知$S(100)=3331$。</p>
<p>求$S(10^7)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 920</title>
    <url>/920/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-920"><a href="#Problem-920" class="headerlink" title="Problem 920"></a><a href="https://projecteuler.net/problem=920">Problem 920</a></h1><hr>
<h2 id="Tau-Numbers"><a href="#Tau-Numbers" class="headerlink" title="Tau Numbers"></a><strong>Tau Numbers</strong></h2><p>For a positive integer $n$ we define $\tau(n)$ to be the count of the divisors of $n$. For example, the divisors of $12$ are $\{1,2,3,4,6,12\}$ and so $\tau(12) = 6$.</p>
<p>A positive integer $n$ is a <b>tau number</b> if it is divisible by $\tau(n)$. For example $\tau(12)=6$ and $6$ divides $12$ so $12$ is a tau number.</p>
<p>Let $m(k)$ be the smallest tau number $x$ such that $\tau(x) = k$. For example, $m(8) = 24$, $m(12)=60$ and $m(16)=384$.</p>
<p>Further define $M(n)$ to be the sum of all $m(k)$ whose values do not exceed $10^n$. You are given $M(3) = 3189$.</p>
<p>Find $M(16)$.</p>
<hr>
<h2 id="陶数"><a href="#陶数" class="headerlink" title="陶数"></a><strong>陶数</strong></h2><p>对于正整数$n$，定义$\tau(n)$为$n$的约数个数。例如，$12$的约数为$\{1,2,3,4,6,12\}$，因此$\tau(12) = 6$。</p>
<p>如果一个正整数$n$能被$\tau(n)$整除，则称之为<b>陶数</b>。例如，$\tau(12)=6$，且$6$能整除$12$，所以$12$是一个陶数。</p>
<p>记$m(k)$为满足$\tau(x) = k$的最小陶数$x$。例如，$m(8) = 24$，$m(12)=60$，$m(16)=384$。</p>
<p>另记$M(n)$为所有不超过$10^n$的$m(k)$之和。已知$M(3) = 3189$。</p>
<p>求$M(16)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 921</title>
    <url>/921/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-921"><a href="#Problem-921" class="headerlink" title="Problem 921"></a><a href="https://projecteuler.net/problem=921">Problem 921</a></h1><hr>
<h2 id="Golden-Recurrence"><a href="#Golden-Recurrence" class="headerlink" title="Golden Recurrence"></a><strong>Golden Recurrence</strong></h2><p>Consider the following recurrence relation:<br>$$<br>\begin{aligned}<br>a_0 &amp;= \frac{\sqrt 5 + 1}{2}\\<br>a_{n+1} &amp;= \dfrac{a_n(a_n^4 + 10a_n^2 + 5)}{5a_n^4 + 10a_n^2 + 1}<br>\end{aligned}<br>$$</p>
<p>Note that $a_0$ is the <b>golden ratio</b>.</p>
<p>$a_n$ can always be written in the form $\dfrac{p_n\sqrt{5}+1}{q_n}$, where $p_n$ and $q_n$ are positive integers.</p>
<p>Let $s(n)=p_n^5+q_n^5$. So, $s(0)=1^5+2^5=33$.</p>
<p>The <b>Fibonacci sequence</b> is defined as: $F_1=1$, $F_2=1$, $F_n=F_{n-1}+F_{n-2}$ for $n \gt 2$.</p>
<p>Define $\displaystyle S(m)=\sum_{i=2}^{m}s(F_i)$.</p>
<p>Find $S(1618034)$. Submit your answer modulo $398874989$.</p>
<hr>
<h2 id="黄金递推"><a href="#黄金递推" class="headerlink" title="黄金递推"></a><strong>黄金递推</strong></h2><p>考虑以下递推关系：<br>$$<br>\begin{aligned}<br>a_0 &amp;= \frac{\sqrt 5 + 1}{2}\\<br>a_{n+1} &amp;= \dfrac{a_n(a_n^4 + 10a_n^2 + 5)}{5a_n^4 + 10a_n^2 + 1}<br>\end{aligned}<br>$$</p>
<p>注意到，$a_0$恰好是<b>黄金比例</b>。</p>
<p>$a_n$总可以写成$\dfrac{p_n\sqrt{5}+1}{q_n}$的形式，其中$p_n$和$q_n$是正整数。</p>
<p>令$s(n)=p_n^5+q_n^5$。因此，$s(0)=1^5+2^5=33$。</p>
<p><b>斐波那契数列</b>的定义是：$F_1=1$，$F_2=1$，对于$n &gt; 2$有$F_n=F_{n-1}+F_{n-2}$。</p>
<p>定义$\displaystyle S(m)=\sum_{i=2}^{m}s(F_i)$。</p>
<p>求$S(1618034)$，并对$398874989$取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 922</title>
    <url>/922/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-922"><a href="#Problem-922" class="headerlink" title="Problem 922"></a><a href="https://projecteuler.net/problem=922">Problem 922</a></h1><hr>
<h2 id="Young’s-Game-A"><a href="#Young’s-Game-A" class="headerlink" title="Young’s Game A"></a><strong>Young’s Game A</strong></h2><p>A <b>Young diagram</b> is a finite collection of (equally-sized) squares in a grid-like arrangement of rows and columns, such that</p>
<ul>
<li>the left-most squares of all rows are aligned vertically;</li>
<li>the top squares of all columns are aligned horizontally;</li>
<li>the rows are non-increasing in size as we move top to bottom;</li>
<li>the columns are non-increasing in size as we move left to right.</li>
</ul>
<p>Two examples of Young diagrams are shown below.</p>
<div style="text-align:center">
<img src="/resources/images/0922_youngs_game_diagrams.png" alt="0922_youngs_game_diagrams.png">
</div>

<p>Two players Right and Down play a game on several Young diagrams, all disconnected from each other. Initially, a token is placed in the top-left square of each diagram. Then they take alternating turns, starting with Right. On Right’s turn, Right selects a token on one diagram and moves it <b>any number of squares</b> to the right. On Down’s turn, Down selects a token on one diagram and moves it <b>any number of squares</b> downwards. A player unable to make a legal move on their turn loses the game.</p>
<p>For $a,b,k\ge 1$ we define an <i>$(a,b,k)$-staircase</i> to be the Young diagram where the bottom-right frontier consists of $k$ <i>steps</i> of vertical height $a$ and horizontal length $b$. Shown below are four examples of staircases with $(a,b,k)$ respectively $(1,1,4)$, $(5,1,1)$, $(3,3,2)$, $(2,4,3)$.</p>
<div style="text-align:center">
<img src="/resources/images/0922_youngs_game_staircases.png" alt="0922_youngs_game_staircases.png">
</div>

<p>Additionally, define the <i>weight</i> of an $(a,b,k)$-staircase to be $a+b+k$.</p>
<p>Let $R(m, w)$ be the number ways of choosing $m$ staircases, each having weight not exceeding $w$, upon which Right (moving first in the game) will win the game assuming optimal play. Different orderings of the same set of staircases are to be counted separately.</p>
<p>For example, $R(2, 4)=7$ is illustrated below, with tokens as grey circles drawn in their initial positions.</p>
<div style="text-align:center">
<img src="/resources/images/0922_youngs_game_example.png" alt="0922_youngs_game_example.png">
</div>

<p>You are also given $R(3, 9)=314104$.</p>
<p>Find $R(8, 64)$ giving your answer modulo $10^9+7$.</p>
<hr>
<h2 id="杨氏游戏（一）"><a href="#杨氏游戏（一）" class="headerlink" title="杨氏游戏（一）"></a><strong>杨氏游戏（一）</strong></h2><p><b>杨氏图表</b>是指一类有限个（大小相等的）方格组合，这些方格按照网格状排列成行和列，且满足以下条件：</p>
<ul>
<li>所有行最左边的方格垂直对齐；</li>
<li>所有列最上边的方格水平对齐；</li>
<li>自上而下，行的宽度单调不增；</li>
<li>自左而右，列的高度单调不增。</li>
</ul>
<p>下图展示了两个杨氏图表的例子。</p>
<div style="text-align:center">
<img src="/resources/images/0922_youngs_game_diagrams.png" alt="0922_youngs_game_diagrams.png">
</div>

<p>两位玩家阿右和阿下在若干个相互分离的杨氏图表上玩一个游戏。游戏开始时，在每个图表的左上角方格放置一枚棋子。然后他们轮流行动，阿右先行。在阿右的回合，阿右选择一个图表中的棋子并向右移动<b>任意格</b>。在阿下的回合，阿下选择一个图表中的棋子并向下移动<b>任意格</b>。如果一位玩家在其回合无法进行合法移动，则输掉游戏。</p>
<p>对于$a,b,k\ge 1$，定义$(a,b,k)$-<i class=zh>阶梯</i>为满足如下条件的杨氏图表：其右下边界由$k$个<i class=zh>台阶</i>组成，每个台阶垂直高度为$a$，水平长度为$b$。下图展示了四个阶梯的例子，它们的$(a,b,k)$值分别为$(1,1,4)$、$(5,1,1)$、$(3,3,2)$、$(2,4,3)$。</p>
<div style="text-align:center">
<img src="/resources/images/0922_youngs_game_staircases.png" alt="0922_youngs_game_staircases.png">
</div>

<p>另外，定义$(a,b,k)$-阶梯的<i class=zh>重量</i>为$a+b+k$。</p>
<p>令$R(m, w)$为选择$m$个阶梯、每个阶梯的重量不超过$w$且在最优操作下阿右（游戏先手方）将获胜的方法数目。相同阶梯集合的不同排列要分别计数。</p>
<p>例如，下图展示了$R(2, 4)=7$，其中灰色圆圈表示棋子的初始位置。</p>
<div style="text-align:center">
<img src="/resources/images/0922_youngs_game_example.png" alt="0922_youngs_game_example.png">
</div>

<p>已知$R(3, 9)=314104$。</p>
<p>求$R(8, 64)$，并对$10^9+7$取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 923</title>
    <url>/923/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-923"><a href="#Problem-923" class="headerlink" title="Problem 923"></a><a href="https://projecteuler.net/problem=923">Problem 923</a></h1><hr>
<h2 id="Young’s-Game-B"><a href="#Young’s-Game-B" class="headerlink" title="Young’s Game B"></a><strong>Young’s Game B</strong></h2><p>A <b>Young diagram</b> is a finite collection of (equally-sized) squares in a grid-like arrangement of rows and columns, such that</p>
<ul>
<li>the left-most squares of all rows are aligned vertically;</li>
<li>the top squares of all columns are aligned horizontally;</li>
<li>the rows are non-increasing in size as we move top to bottom;</li>
<li>the columns are non-increasing in size as we move left to right.</li>
</ul>
<p>Two examples of Young diagrams are shown below.</p>
<div style="text-align:center">
<img src="/resources/images/0922_youngs_game_diagrams.png" alt="0922_youngs_game_diagrams.png">
</div>

<p>Two players Right and Down play a game on several Young diagrams, all disconnected from each other. Initially, a token is placed in the top-left square of each diagram. Then they take alternating turns, starting with Right. On Right’s turn, Right selects a token on one diagram and moves it <b>one square</b> to the right. On Down’s turn, Down selects a token on one diagram and moves it <b>one square</b> downwards. A player unable to make a legal move on their turn loses the game.</p>
<p>For $a,b,k\ge 1$ we define an <i>$(a,b,k)$-staircase</i> to be the Young diagram where the bottom-right frontier consists of $k$ <i>steps</i> of vertical height $a$ and horizontal length $b$. Shown below are four examples of staircases with $(a,b,k)$ respectively $(1,1,4)$, $(5,1,1)$, $(3,3,2)$, $(2,4,3)$.</p>
<div style="text-align:center">
<img src="/resources/images/0922_youngs_game_staircases.png" alt="0922_youngs_game_staircases.png">
</div>

<p>Additionally, define the <i>weight</i> of an $(a,b,k)$-staircase to be $a+b+k$.</p>
<p>Let $S(m, w)$ be the number ways of choosing $m$ staircases, each having weight not exceeding $w$, upon which Right (moving first in the game) will win the game assuming optimal play. Different orderings of the same set of staircases are to be counted separately.</p>
<p>For example, $S(2, 4)=7$ is illustrated below, with tokens as grey circles drawn in their initial positions.</p>
<div style="text-align:center">
<img src="/resources/images/0922_youngs_game_example.png" alt="0922_youngs_game_example.png">
</div>

<p>You are also given $S(3, 9)=315319$.</p>
<p>Find $S(8, 64)$ giving your answer modulo $10^9+7$.</p>
<hr>
<h2 id="杨氏游戏（二）"><a href="#杨氏游戏（二）" class="headerlink" title="杨氏游戏（二）"></a><strong>杨氏游戏（二）</strong></h2><p><b>杨氏图表</b>是指一类有限个（大小相等的）方格组合，这些方格按照网格状排列成行和列，且满足以下条件：</p>
<ul>
<li>所有行最左边的方格垂直对齐；</li>
<li>所有列最上边的方格水平对齐；</li>
<li>自上而下，行的宽度单调不增；</li>
<li>自左而右，列的高度单调不增。</li>
</ul>
<p>下图展示了两个杨氏图表的例子。</p>
<div style="text-align:center">
<img src="/resources/images/0922_youngs_game_diagrams.png" alt="0922_youngs_game_diagrams.png">
</div>

<p>两位玩家阿右和阿下在若干个相互分离的杨氏图表上玩一个游戏。游戏开始时，在每个图表的左上角方格放置一枚棋子。然后他们轮流行动，阿右先行。在阿右的回合，阿右选择一个图表中的棋子并向右移动<b>一格</b>。在阿下的回合，阿下选择一个图表中的棋子并向下移动<b>一格</b>。如果一位玩家在其回合无法进行合法移动，则输掉游戏。</p>
<p>对于$a,b,k\ge 1$，定义$(a,b,k)$-<i class=zh>阶梯</i>为满足如下条件的杨氏图表：其右下边界由$k$个<i class=zh>台阶</i>组成，每个台阶垂直高度为$a$，水平长度为$b$。下图展示了四个阶梯的例子，它们的$(a,b,k)$值分别为$(1,1,4)$、$(5,1,1)$、$(3,3,2)$、$(2,4,3)$。</p>
<div style="text-align:center">
<img src="/resources/images/0922_youngs_game_staircases.png" alt="0922_youngs_game_staircases.png">
</div>

<p>另外，定义$(a,b,k)$-阶梯的<i class=zh>重量</i>为$a+b+k$。</p>
<p>令$S(m, w)$为选择$m$个阶梯、每个阶梯的重量不超过$w$且在最优操作下阿右（游戏先手方）将获胜的方法数目。相同阶梯集合的不同排列要分别计数。</p>
<p>例如，下图展示了$S(2, 4)=7$，其中灰色圆圈表示棋子的初始位置。</p>
<div style="text-align:center">
<img src="/resources/images/0922_youngs_game_example.png" alt="0922_youngs_game_example.png">
</div>

<p>已知$S(3, 9)=315319$。</p>
<p>求$S(8, 64)$，并对$10^9+7$取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 924</title>
    <url>/924/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-924"><a href="#Problem-924" class="headerlink" title="Problem 924"></a><a href="https://projecteuler.net/problem=924">Problem 924</a></h1><hr>
<h2 id="Larger-Digit-Permutation-II"><a href="#Larger-Digit-Permutation-II" class="headerlink" title="Larger Digit Permutation II"></a><strong>Larger Digit Permutation II</strong></h2><p>Let $B(n)$ be the smallest number larger than $n$ that can be formed by rearranging digits of $n$, or $0$ if no such number exists. For example, $B(245) = 254$ and $B(542) = 0$.</p>
<p>Define $a_0 = 0$ and $a_n = a_{n - 1}^2 + 2$ for $n &gt; 0$.<br>Let $\displaystyle U(N) = \sum_{n = 1}^N B(a_n)$. You are given $U(10) \equiv 543870437 \pmod{10^9+7}$.</p>
<p>Find $U(10^{16})$. Give your answer modulo $10^9 + 7$.</p>
<hr>
<h2 id="更大的数字重排（二）"><a href="#更大的数字重排（二）" class="headerlink" title="更大的数字重排（二）"></a><strong>更大的数字重排（二）</strong></h2><p>令$B(n)$为通过重排$n$的数字所能形成的比$n$大的最小数，如果不存在这样的数则为$0$。例如，$B(245) = 254$，$B(542) = 0$。</p>
<p>定义$a_0 = 0$，且对于$n &gt; 0$有$a_n = a_{n - 1}^2 + 2$。<br>令$\displaystyle U(N) = \sum_{n = 1}^N B(a_n)$。已知$U(10) \equiv 543870437 \pmod{10^9+7}$。</p>
<p>求$U(10^{16})$，并对$10^9 + 7$取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 925</title>
    <url>/925/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-925"><a href="#Problem-925" class="headerlink" title="Problem 925"></a><a href="https://projecteuler.net/problem=925">Problem 925</a></h1><hr>
<h2 id="Larger-Digit-Permutation-III"><a href="#Larger-Digit-Permutation-III" class="headerlink" title="Larger Digit Permutation III"></a><strong>Larger Digit Permutation III</strong></h2><p>Let $B(n)$ be the smallest number larger than $n$ that can be formed by rearranging digits of $n$, or $0$ if no such number exists. For example, $B(245) = 254$ and $B(542) = 0$.</p>
<p>Define $\displaystyle T(N) = \sum_{n=1}^N B(n^2)$. You are given $T(10)=270$ and $T(100)=335316$.</p>
<p>Find $T(10^{16})$. Give your answer modulo $10^9 + 7$.</p>
<hr>
<h2 id="更大的数字重排（三）"><a href="#更大的数字重排（三）" class="headerlink" title="更大的数字重排（三）"></a><strong>更大的数字重排（三）</strong></h2><p>令$B(n)$为通过重排$n$的数字所能形成的比$n$大的最小数，如果不存在这样的数则为$0$。例如，$B(245) = 254$，$B(542) = 0$。</p>
<p>定义$\displaystyle T(N) = \sum_{n=1}^N B(n^2)$。已知$T(10)=270$，$T(100)=335316$。</p>
<p>求$T(10^{16})$，并对$10^9 + 7$取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 926</title>
    <url>/926/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-926"><a href="#Problem-926" class="headerlink" title="Problem 926"></a><a href="https://projecteuler.net/problem=926">Problem 926</a></h1><hr>
<h2 id="Total-Roundness"><a href="#Total-Roundness" class="headerlink" title="Total Roundness"></a><strong>Total Roundness</strong></h2><p>A <b>round number</b> is a number that ends with one or more zeros in a given base.</p>
<p>Let us define the <i>roundness</i> of a number $n$ in base $b$ as the number of zeros at the end of the base $b$ representation of $n$.<br/><br>For example, $20$ has roundness $2$ in base $2$, because the base $2$ representation of $20$ is $10100$, which ends with $2$ zeros.</p>
<p>Also define $R(n)$, the <i>total roundness</i> of a number $n$, as the sum of the roundness of $n$ in base $b$ for all $b &gt; 1$.<br/><br>For example, $20$ has roundness $2$ in base $2$ and roundness $1$ in base $4$, $5$, $10$, $20$, hence we get $R(20)=6$.<br/><br>You are also given $R(10!) = 312$.</p>
<p>Find $R(10\ 000\ 000!)$. Give your answer modulo $10^9 + 7$.</p>
<hr>
<h2 id="总取整度"><a href="#总取整度" class="headerlink" title="总取整度"></a><strong>总取整度</strong></h2><p><b>取整数</b>是指在给定进制下以一个或多个零结尾的数。</p>
<p>定义数$n$在进制$b$下的<i class=zh>取整度</i>为$n$在$b$进制表示下末尾零的个数。<br/><br>例如，$20$在$2$进制下的取整度为$2$，因为$20$的$2$进制表示是$10100$，末尾有$2$个零。</p>
<p>再定义$R(n)$为数$n$的<i class=zh>总取整度</i>，即$n$在所有$b &gt; 1$的进制$b$下的取整度之和。<br/><br>例如，$20$在$2$进制下的取整度为$2$，在$4$、$5$、$10$、$20$进制下的取整度为$1$，因此$R(20)=6$。<br/><br>已知$R(10!) = 312$。</p>
<p>求$R(10\ 000\ 000!)$，并对$10^9 + 7$取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 927</title>
    <url>/927/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-927"><a href="#Problem-927" class="headerlink" title="Problem 927"></a><a href="https://projecteuler.net/problem=927">Problem 927</a></h1><hr>
<h2 id="Prime-ary-Tree"><a href="#Prime-ary-Tree" class="headerlink" title="Prime-ary Tree"></a><strong>Prime-ary Tree</strong></h2><p>A full $k$-ary tree is a tree with a single root node, such that every node is either a leaf or has exactly $k$ ordered children. The <b>height</b> of a $k$-ary tree is the number of edges in the longest path from the root to a leaf.</p>
<p>For instance, there is one full $3$-ary tree of height $0$, one full $3$-ary tree of height $1$, and seven full $3$-ary trees of height $2$. These seven are shown below.</p>
<div style="text-align:center">
<img src="/resources/images/0927_PrimeTrees.jpg" alt="0927_PrimeTrees.jpg">
</div>

<p>For integers $n$ and $k$ with $n\ge 0$ and $k \ge 2$, define $t_k(n)$ to be the number of full $k$-ary trees of height $n$ or less.<br/><br>Thus, $t_3(0) = 1$, $t_3(1) = 2$, and $t_3(2) = 9$. Also, $t_2(0) = 1$, $t_2(1) = 2$, and $t_2(2) = 5$.</p>
<p>Define $S_k$ to be the set of positive integers $m$ such that $m$ divides $t_k(n)$ for some integer $n\ge 0$. For instance, the above values show that $1$, $2$, and $5$ are in $S_2$ and $1$, $2$, $3$, and $9$ are in $S_3$.</p>
<p>Let $S = \bigcap_p S_p$ where the intersection is taken over all primes $p$. Finally, define $R(N)$ to be the sum of all elements of $S$ not exceeding $N$. You are given that $R(20) = 18$ and $R(1000) = 2089$.</p>
<p>Find $R(10^7)$.</p>
<hr>
<h2 id="素数多叉树"><a href="#素数多叉树" class="headerlink" title="素数多叉树"></a><strong>素数多叉树</strong></h2><p>一个完满$k$叉树是一棵具有单一根结点的树，其中每个结点要么是叶结点，要么恰好有$k$个有序子结点。$k$叉树的<b>高度</b>是从根结点到任一叶结点的最长路径上的边数。</p>
<p>例如，高度为$0$的完满$3$叉树有一棵，高度为$1$的完满$3$叉树有一棵，而高度为$2$的完满$3$叉树有七棵，如下图所示：</p>
<div style="text-align:center">
<img src="/resources/images/0927_PrimeTrees.jpg" alt="0927_PrimeTrees.jpg">
</div>

<p>对于整数$n\ge 0$和$k\ge 2$，定义$t_k(n)$为高度不超过$n$的完满$k$叉树的数量。<br/><br>因此，$t_3(0) = 1$，$t_3(1) = 2$，$t_3(2) = 9$。同时，$t_2(0) = 1$，$t_2(1) = 2$，$t_2(2) = 5$。</p>
<p>定义$S_k$为能整除任意整数$n\ge 0$对应的$t_k(n)$的正整数$m$的集合。例如，从上面的例子可知，$1$、$2$和$5$属于$S_2$，而$1$、$2$、$3$和$9$属于$S_3$。</p>
<p>记$S = \bigcap_p S_p$，其中交集取遍所有素数$p$。再定义$R(N)$为$S$中不超过$N$的所有元素之和。已知$R(20) = 18$，$R(1000) = 2089$。</p>
<p>求$R(10^7)$。</p>
<p><i class=zh>译注：原文的</i>Full $k$-ary Tree<i class=zh>直译为“满</i>$k$<i class=zh>叉树”；然而，在中文网络中，“满二叉树”的概念其实对应于英文中的</i>Perfect Binary Tree<i class=zh>，或“完美二叉树”。为示区别，这里参考网络资料将其翻译为“完满</i>$k$<i class=zh>叉树”。</i> </p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 928</title>
    <url>/928/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-928"><a href="#Problem-928" class="headerlink" title="Problem 928"></a><a href="https://projecteuler.net/problem=928">Problem 928</a></h1><hr>
<h2 id="Cribbage"><a href="#Cribbage" class="headerlink" title="Cribbage"></a><strong>Cribbage</strong></h2><p>This problem is based on (but not identical to) the scoring for the card game <a href="https://en.wikipedia.org/wiki/Cribbage">Cribbage</a>.</p>
<p>Consider a normal pack of $52$ cards. A Hand is a selection of one or more of these cards.</p>
<p>For each Hand the <i>Hand score</i> is the sum of the values of the cards in the Hand where the value of Aces is $1$ and the value of court cards (Jack, Queen, King) is $10$.</p>
<p>The <i>Cribbage score</i> is obtained for a Hand by adding together the scores for:</p>
<ul>
<li>Pairs. A pair is two cards of the same rank. Every pair is worth $2$ points.</li>
<li>Runs. A run is a set of at least $3$ cards whose ranks are consecutive, e.g. $9$, $10$, Jack. Note that Ace is never high, so Queen, King, Ace is <b>not</b> a valid run. The number of points for each run is the size of the run. All locally maximum runs are counted. For example, $2$, $3$, $4$, $5$, $7$, $8$, $9$, the two runs of $2$, $3$, $4$, $5$ and $7$, $8$, $9$ are counted but not $2$, $3$, $4$ or $3$, $4$, $5$.</li>
<li>Fifteens. A fifteen is a combination of cards that has value adding to $15$. Every fifteen is worth $2$ points. For this purpose the value of the cards is the same as in the Hand Score.</li>
</ul>
<p>For example, $(5 \spadesuit, 5 \clubsuit, 5 \diamondsuit, K \heartsuit)$ has a Cribbage score of $14$ as there are four ways that fifteen can be made and also three pairs can be made.</p>
<p>The example $( A \diamondsuit, A \heartsuit, 2 \clubsuit, 3 \heartsuit, 4 \clubsuit, 5 \spadesuit)$ has a Cribbage score of $16$: two runs of five worth $10$ points, two ways of getting fifteen worth $4$ points and one pair worth $2$ points. In this example the Hand score is equal to the Cribbage score.</p>
<p>Find the number of Hands in a normal pack of cards where the Hand score is equal to the Cribbage score.</p>
<hr>
<h2 id="克里比奇纸牌"><a href="#克里比奇纸牌" class="headerlink" title="克里比奇纸牌"></a><strong>克里比奇纸牌</strong></h2><p>本题基于纸牌游戏<a href="https://zh.wikipedia.org/wiki/%E5%85%8B%E9%87%8C%E6%AF%94%E5%A5%87%E7%B4%99%E7%89%8C">克里比奇纸牌</a>的计分规则（但不完全相同）。</p>
<p>考虑一副标准的$52$张牌扑克；一手牌是指从中选择的一张或多张牌。</p>
<p>对于每一手牌，其<i class=zh>手牌得分</i>是其牌面点数的总和，其中$A$的点数为$1$，花牌（$J$、$Q$、$K$）的点数为$10$。</p>
<p>另一方面，一手牌的<i class=zh>克里比奇得分</i>则是将以下得分相加：</p>
<ul>
<li>对子：对子是两张相同点数的牌，每个对子值$2$分。</li>
<li>顺子：顺子是至少$3$张连续点数的牌，例如$9$、$10$、$J$。注意$A$被视为最小的牌，所以$Q$、$K$、$A$<b>不是</b>有效的顺子。每个顺子的得分等于顺子的长度，且计算得分时只考虑最长的顺子。例如，在$2$、$3$、$4$、$5$、$7$、$8$、$9$中，有$2$、$3$、$4$、$5$和$7$、$8$、$9$两个顺子，而不考虑$2$、$3$、$4$或$3$、$4$、$5$。</li>
<li>十五：十五是牌面点数之和为$15$的任意组合，每个十五值$2$分。这里的牌面点数与手牌得分中的牌面点数相同。</li>
</ul>
<p>例如，$(5 \spadesuit, 5 \clubsuit, 5 \diamondsuit, K \heartsuit)$的克里比奇得分为$14$，因为这手牌可以组成四种十五和三种对子。</p>
<p>再例如，$( A \diamondsuit, A \heartsuit, 2 \clubsuit, 3 \heartsuit, 4 \clubsuit, 5 \spadesuit)$的克里比奇得分为$16$：两种五张的顺子$10$分，两种十五$4$分，一种对子$2$分。在这个例子中，手牌得分恰好等于克里比奇得分。</p>
<p>在一副标准扑克中，求手牌得分恰好等于克里比奇得分的手牌数目。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 929</title>
    <url>/929/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-929"><a href="#Problem-929" class="headerlink" title="Problem 929"></a><a href="https://projecteuler.net/problem=929">Problem 929</a></h1><hr>
<h2 id="Odd-Run-Compositions"><a href="#Odd-Run-Compositions" class="headerlink" title="Odd-Run Compositions"></a><strong>Odd-Run Compositions</strong></h2><p>A <b>composition</b> of $n$ is a sequence of positive integers which sum to $n$. Such a sequence can be split into <i>runs</i>, where a run is a maximal contiguous subsequence of equal terms.</p>
<p>For example, $2,2,1,1,1,3,2,2$ is a composition of $14$ consisting of four runs:</p>
<div style="text-align:center">
$2, 2\quad 1, 1, 1\quad 3 \quad 2, 2$
</div>

<p>Let $F(n)$ be the number of compositions of $n$ where every run has odd length.</p>
<p>For example, $F(5)=10$:<br>$$<br>\begin{aligned}<br>&amp; 5 &amp;&amp; 4,1 &amp;&amp; 3,2 &amp;&amp; 2,3 &amp;&amp; 2,1,2\\<br>&amp; 2,1,1,1 &amp;&amp; 1,4 &amp;&amp; 1,3,1 &amp;&amp; 1,1,1,2 &amp;&amp; 1,1,1,1,1<br>\end{aligned}<br>$$<br>Find $F(10^5)$. Give your answer modulo $1111124111$.</p>
<hr>
<h2 id="奇数长度分段组成"><a href="#奇数长度分段组成" class="headerlink" title="奇数长度分段组成"></a><strong>奇数长度分段组成</strong></h2><p>$n$的一个<b>组成</b>是一个和为$n$的正整数序列；这一序列可以进一步分成若干<i class=zh>段</i>，每一段是由相等的数构成的最长连续子序列。</p>
<p>例如，$2,2,1,1,1,3,2,2$是$14$的一个组成，可以分成四段：</p>
<div style="text-align:center">
$2, 2\quad 1, 1, 1\quad 3 \quad 2, 2$
</div>

<p>令$F(n)$为$n$的所有组成中，满足每一段长度都为奇数的组成的数目。</p>
<p>例如，$F(5)=10$：<br>$$<br>\begin{aligned}<br>&amp; 5 &amp;&amp; 4,1 &amp;&amp; 3,2 &amp;&amp; 2,3 &amp;&amp; 2,1,2\\<br>&amp; 2,1,1,1 &amp;&amp; 1,4 &amp;&amp; 1,3,1 &amp;&amp; 1,1,1,2 &amp;&amp; 1,1,1,1,1<br>\end{aligned}<br>$$<br>求$F(10^5)$，并对$1111124111$取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 930</title>
    <url>/930/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-930"><a href="#Problem-930" class="headerlink" title="Problem 930"></a><a href="https://projecteuler.net/problem=930">Problem 930</a></h1><hr>
<h2 id="The-Gathering"><a href="#The-Gathering" class="headerlink" title="The Gathering"></a><strong>The Gathering</strong></h2><p>Given $n\ge 2$ bowls arranged in a circle, $m\ge 2$ balls are distributed amongst them.</p>
<p>Initially the balls are distributed randomly: for each ball, a bowl is chosen equiprobably and independently of the other balls. After this is done, we start the following process:</p>
<ol>
<li>Choose one of the $m$ balls equiprobably at random.</li>
<li>Choose a direction to move - either clockwise or anticlockwise - again equiprobably at random.</li>
<li>Move the chosen ball to the neighbouring bowl in the chosen direction.</li>
<li>Return to step $1$.</li>
</ol>
<p>This process stops when all the $m$ balls are located in the same bowl. Note that this may be after zero steps, if the balls happen to have been initially distributed all in the same bowl.</p>
<p>Let $F(n, m)$ be the expected number of times we move a ball before the process stops. For example, $F(2, 2) = \frac{1}{2}$, $F(3, 2) = \frac{4}{3}$, $F(2, 3) = \frac{9}{4}$, and $F(4, 5) = \frac{6875}{24}$.</p>
<p>Let $G(N, M) = \sum_{n=2}^N \sum_{m=2}^M F(n, m)$. For example, $G(3, 3) = \frac{137}{12}$ and $G(4, 5) = \frac{6277}{12}$. You are also given that $G(6, 6) \approx 1.681521567954e4$ in scientific format with $12$ significant digits after the decimal point.</p>
<p>Find $G(12, 12)$. Give your answer in scientific format with $12$ significant digits after the decimal point.</p>
<hr>
<h2 id="小球聚会"><a href="#小球聚会" class="headerlink" title="小球聚会"></a><strong>小球聚会</strong></h2><p>将$n\ge 2$个碗排成一圈，并向其中放入$m\ge 2$个球。</p>
<p>一开始，球是随机分布的：对于每个球，等概率且独立地选择一个碗，并将球放入。全部放完之后，我们进行以下操作：</p>
<ol>
<li>等概率地从$m$个球中随机选择一个。</li>
<li>等概率地随机选择一个移动方向：顺时针或逆时针。</li>
<li>将选中的球移动到所选方向的相邻碗中。</li>
<li>返回步骤$1$。</li>
</ol>
<p>当所有$m$个球都位于同一个碗中时，停止操作。如果球一开始恰好就放在同一个碗中，则不需要进行任何操作，立刻停止。</p>
<p>令$F(n, m)$为在停止前移动球的期望次数。例如，$F(2, 2) = \frac{1}{2}$，$F(3, 2) = \frac{4}{3}$，$F(2, 3) = \frac{9}{4}$，$F(4, 5) = \frac{6875}{24}$。</p>
<p>令$G(N, M) = \sum_{n=2}^N \sum_{m=2}^M F(n, m)$。例如，$G(3, 3) = \frac{137}{12}$，$G(4, 5) = \frac{6277}{12}$。已知$G(6, 6) \approx 1.681521567954e4$（以科学计数法表示，小数点后保留$12$位有效数字）。</p>
<p>求$G(12, 12)$，并以科学计数法表示给出你的答案，小数点后保留$12$位有效数字。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 934</title>
    <url>/934/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-934"><a href="#Problem-934" class="headerlink" title="Problem 934"></a><a href="https://projecteuler.net/problem=934">Problem 934</a></h1><hr>
<h2 id="Unlucky-Primes"><a href="#Unlucky-Primes" class="headerlink" title="Unlucky Primes"></a><strong>Unlucky Primes</strong></h2><p>We define the <em>unlucky prime</em> of a number $n$, denoted $u(n)$, as the smallest prime number $p$ such that the remainder of $n$ divided by $p$ (i.e. $n \bmod p$) is not a multiple of seven.<br/><br>For example, $u(14) = 3$, $u(147) = 2$ and $u(1470) = 13$.</p>
<p>Let $U(N)$ be the sum $\sum_{n = 1}^N u(n)$.<br/><br>You are given $U(1470) = 4293$.</p>
<p>Find $U(10^{17})$.</p>
<hr>
<h2 id="不幸素数"><a href="#不幸素数" class="headerlink" title="不幸素数"></a><strong>不幸素数</strong></h2><p>定义数$n$对应的<i class=zh>不幸素数</i>$u(n)$为最小的、使得$n$除以$p$的余数（即$n \bmod p$）不是$7$的倍数的素数$p$。<br/><br>例如，$u(14) = 3$，$u(147) = 2$，$u(1470) = 13$。</p>
<p>记$U(N)$为求和$\sum_{n = 1}^N u(n)$。<br/><br>已知$U(1470) = 4293$。</p>
<p>求$U(10^{17})$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 932</title>
    <url>/932/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-932"><a href="#Problem-932" class="headerlink" title="Problem 932"></a><a href="https://projecteuler.net/problem=932">Problem 932</a></h1><hr>
<h2 id="2025"><a href="#2025" class="headerlink" title="$2025$"></a><strong>$2025$</strong></h2><p>For the year $2025$:</p>
<p>$$2025 = (20 + 25)^2$$</p>
<p>Given positive integers $a$ and $b$, the concatenation $ab$ we call a $2025$-number if $ab = (a+b)^2$.<br/><br>Other examples are $3025$ and $81$.<br/><br>Note $9801$ is not a $2025$-number because the concatenation of $98$ and $1$ is $981$.</p>
<p>Let $T(n)$ be the sum of all $2025$-numbers with $n$ digits or less. You are given $T(4) = 5131$.</p>
<p>Find $T(16)$.</p>
<hr>
<h2 id="2025-1"><a href="#2025-1" class="headerlink" title="$2025$"></a><strong>$2025$</strong></h2><p>今年的年份$2025$满足</p>
<p>$$2025 = (20 + 25)^2$$</p>
<p>给定正整数$a$和$b$，如果将其连接后满足等式$ab = (a+b)^2$，则称$ab$为$2025$数。<br/><br>其它的例子有$3025$和$81$。<br/><br>注意$9801$不是$2025$数，因为$98$和$1$连接后是$981$。</p>
<p>令$T(n)$为所有不超过$n$位的$2025$数之和。已知$T(4) = 5131$。</p>
<p>求$T(16)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 936</title>
    <url>/936/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-936"><a href="#Problem-936" class="headerlink" title="Problem 936"></a><a href="https://projecteuler.net/problem=936">Problem 936</a></h1><hr>
<h2 id="Peerless-Trees"><a href="#Peerless-Trees" class="headerlink" title="Peerless Trees"></a><strong>Peerless Trees</strong></h2><p>A <em>peerless tree</em> is a tree with no edge between two vertices of the same degree. Let $P(n)$ be the number of peerless trees on $n$ unlabelled vertices.</p>
<p>There are six of these trees on seven unlabelled vertices, $P(7)=6$, shown below.</p>
<div style="text-align:center">
<img src="/resources/images/0936_diagram.jpg" alt="0936_diagram.jpg">
</div>

<p>Define $\displaystyle S(N) = \sum_{n=3}^N P(n)$. You are given $S(10) = 74$.</p>
<p>Find $S(50)$.</p>
<hr>
<h2 id="无同树"><a href="#无同树" class="headerlink" title="无同树"></a><strong>无同树</strong></h2><p><i class=zh>无同树</i>是指没有连接相同度数顶点的边的树。记$P(n)$为包含$n$个无标记顶点的无同树的数量。</p>
<p>包含七个无标记顶点的无同树有六棵，即$P(7)=6$，如下图所示。</p>
<div style="text-align:center">
<img src="/resources/images/0936_diagram.jpg" alt="0936_diagram.jpg">
</div>

<p>定义$\displaystyle S(N) = \sum_{n=3}^N P(n)$。已知$S(10) = 74$。</p>
<p>求$S(50)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 931</title>
    <url>/931/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-931"><a href="#Problem-931" class="headerlink" title="Problem 931"></a><a href="https://projecteuler.net/problem=931">Problem 931</a></h1><hr>
<h2 id="Totient-Graph"><a href="#Totient-Graph" class="headerlink" title="Totient Graph"></a><strong>Totient Graph</strong></h2><p>For a positive integer $n$ construct a graph using all the divisors of $n$ as the vertices. An edge is drawn between $a$ and $b$ if $a$ is divisible by $b$ and $a/b$ is prime, and is given weight $\phi(a)-\phi(b)$, where $\phi$ is the Euler totient function.<br/><br>Define $t(n)$ to be the total weight of this graph.<br/><br>The example below shows that $t(45) = 52$:</p>
<div style="text-align:center">
<img src="/resources/images/0931_totientgraph.png" alt="0931_totientgraph.png">
</div>

<p>Let $T(N)=\displaystyle\sum_{n=1}^{N} t(n)$. You are given $T(10)=26$ and $T(10^2)=5282$.</p>
<p>Find $T(10^{12})$. Give your answer modulo $715827883$.</p>
<hr>
<h2 id="欧拉函数图"><a href="#欧拉函数图" class="headerlink" title="欧拉函数图"></a><strong>欧拉函数图</strong></h2><p>对于正整数$n$，以$n$的所有因数为顶点构造图。若$a$能被$b$整除，且$a/b$是素数，则在$a$和$b$对应的顶点之间作一条边，该边的权重为$\phi(a)-\phi(b)$，其中$\phi$表示欧拉函数。<br/><br>定义$t(n)$为该图的总权重。<br/><br>下图展示了$t(45) = 52$：</p>
<div style="text-align:center">
<img src="/resources/images/0931_totientgraph.png" alt="0931_totientgraph.png">
</div>

<p>令$T(N)=\displaystyle\sum_{n=1}^{N} t(n)$。已知$T(10)=26$，$T(10^2)=5282$。</p>
<p>求$T(10^{12})$，并对$715827883$取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 933</title>
    <url>/933/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-933"><a href="#Problem-933" class="headerlink" title="Problem 933"></a><a href="https://projecteuler.net/problem=933">Problem 933</a></h1><hr>
<h2 id="Paper-Cutting"><a href="#Paper-Cutting" class="headerlink" title="Paper Cutting"></a><strong>Paper Cutting</strong></h2><p>Starting with one piece of integer-sized rectangle paper, two players make moves in turn.<br>A valid move consists of choosing one piece of paper and cutting it <strong>both</strong> horizontally and vertically, so that it becomes four pieces of smaller rectangle papers, all of which are integer-sized.<br>The player that does not have a valid move loses the game.</p>
<p>Let $C(w, h)$ be the number of winning moves for the first player, when the original paper has size $w \times h$. For example, $C(5,3)=4$, with the four winning moves shown below.</p>
<div style="text-align:center">
<img src="/resources/images/0933_PaperCutting3.jpg" alt="0933_PaperCutting2.jpg">
</div>

<p>Also write $\displaystyle D(W, H) = \sum_{w = 2}^W\sum_{h = 2}^H C(w, h)$. You are given that $D(12, 123) = 327398$.</p>
<p>Find $D(123, 1234567)$.</p>
<hr>
<h2 id="纸张切割"><a href="#纸张切割" class="headerlink" title="纸张切割"></a><strong>纸张切割</strong></h2><p>两名玩家在用一张长宽均为整数的矩形纸张玩游戏，两人轮流行动。<br>在该游戏中，一步有效行动是指，任选一张纸并将其<strong>同时</strong>水平和垂直切割成四张较小的、长宽均为整数的矩形纸张。<br>无法进行有效行动的玩家输掉游戏。</p>
<p>记$C(w, h)$为当初始纸张尺寸为$w \times h$时，先手玩家必胜的行动数目。例如，$C(5,3)=4$，下图展示了四种先手必胜行动。</p>
<div style="text-align:center">
<img src="/resources/images/0933_PaperCutting3.jpg" alt="0933_PaperCutting2.jpg">
</div>

<p>同时记$\displaystyle D(W, H) = \sum_{w = 2}^W\sum_{h = 2}^H C(w, h)$。已知$D(12, 123) = 327398$。</p>
<p>求$D(123, 1234567)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 935</title>
    <url>/935/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-935"><a href="#Problem-935" class="headerlink" title="Problem 935"></a><a href="https://projecteuler.net/problem=935">Problem 935</a></h1><hr>
<h2 id="Rolling-Square"><a href="#Rolling-Square" class="headerlink" title="Rolling Square"></a><strong>Rolling Square</strong></h2><p>A square of side length $b&lt;1$ is rolling around the inside of a larger square of side length $1$, always touching the larger square but without sliding.<br/><br>Initially the two squares share a common corner. At each step, the small square rotates clockwise about a corner that touches the large square, until another of its corners touches the large square. Here is an illustration of the first three steps for $b = \frac{5}{13}$.</p>
<div style="text-align:center">
<img src="/resources/images/0935_rolling.png" alt="0935_rolling.png">
</div>

<p>For some values of $b$, the small square may return to its initial position after several steps. For example, when $b = \frac{1}{2}$, this happens in $4$ steps; and for $b = \frac{5}{13}$ it happens in $24$ steps.</p>
<p>Let $F(N)$ be the number of different values of $b$ for which the small square first returns to its initial position within at most $N$ steps. For example, $F(6) = 4$, with the corresponding $b$ values:<br>$$\frac{1}{2},\quad 2 - \sqrt{2},\quad 2 + \sqrt{2} - \sqrt{2 + 4\sqrt{2}},\quad  8 - 5\sqrt{2} + 4\sqrt{3} - 3\sqrt{6},$$<br>the first three in $4$ steps and the last one in $6$ steps. Note that it does not matter whether the small square returns to its original <strong>orientation</strong>.<br>Also $F(100) = 805$.</p>
<p>Find $F(10^8)$.</p>
<hr>
<h2 id="翻滚的正方形"><a href="#翻滚的正方形" class="headerlink" title="翻滚的正方形"></a><strong>翻滚的正方形</strong></h2><p>一个边长为$b&lt;1$的小正方形在边长为$1$的大正方形内部以始终接触大正方形且不滑动的方式翻滚。<br/><br>一开始，这两个正方形在一个角上重合。此后每一步，小正方形围绕其接触大正方形的一个角顺时针旋转，直到它的另一个角接触到大正方形。如下图所示是$b = \frac{5}{13}$时前三步的示意图。</p>
<div style="text-align:center">
<img src="/resources/images/0935_rolling.png" alt="0935_rolling.png">
</div>

<p>对于$b$的某些取值，小正方形可能在若干步后回到其初始位置。例如，当$b = \frac{1}{2}$时，需要$4$步；而对于$b = \frac{5}{13}$，则需要$24$步。</p>
<p>令$F(N)$为使小正方形在最多$N$步内首次回到其初始位置的$b$的不同取值的数目。例如，$F(6) = 4$，对应的 $b$ 值为：<br>$$\frac{1}{2},\quad 2 - \sqrt{2},\quad 2 + \sqrt{2} - \sqrt{2 + 4\sqrt{2}},\quad  8 - 5\sqrt{2} + 4\sqrt{3} - 3\sqrt{6},$$<br>其中，前三个需要$4$步，最后一个需要$6$步。注意这里并不要求小正方形回到其初始<strong>方向</strong>。<br>此外，$F(100) = 805$。</p>
<p>求$F(10^8)$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 937</title>
    <url>/937/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-937"><a href="#Problem-937" class="headerlink" title="Problem 937"></a><a href="https://projecteuler.net/problem=937">Problem 937</a></h1><hr>
<h2 id="Equiproduct-Partition"><a href="#Equiproduct-Partition" class="headerlink" title="Equiproduct Partition"></a><strong>Equiproduct Partition</strong></h2><p>Let $\theta=\sqrt{-2}$.</p>
<p>Define $T$ to be the set of numbers of the form $a+b\theta$, where $a$ and $b$ are integers and either $a\gt 0$, or $a=0$ and $b\gt 0$. For a set $S \subseteq T$ and element $z \in T$, define $p(S,z)$ to be the number of ways of choosing two distinct elements from $S$ with product either $z$ or $-z$.</p>
<p>For example if $S=\{1,2,4\}$ and $z=4$, there is only one valid pair of elements with product $\pm4$, namely $1$ and $4$. Thus, in this case $p(S,z)=1$.</p>
<p>For another example, if $S=\{1,\theta,1+\theta,2-\theta\}$ and $z=2-\theta$, we have $1\cdot(2-\theta)=z$ and $\theta\cdot(1+\theta)=-z$, giving $p(S,z)=2$.</p>
<p>Let $A$ and $B$ be two sets satisfying the following conditions:</p>
<ul>
<li>$1 \in A$</li>
<li>$A \cap B = \emptyset$</li>
<li>$A \cup B = T$</li>
<li>$p(A,z) = p(B,z)$ for all $z\in T$</li>
</ul>
<p>Remarkably, these four conditions uniquely determine the sets $A$ and $B$.</p>
<p>Let $F_n$ be the set of the first $n$ factorials: $F_n=\{1!,2!,\dots,n!\}$, and define $G(n)$ to be the sum of all elements of $F_n\cap A$.</p>
<p>You are given $G(4) = 25$, $G(7) = 745$, and $G(100) \equiv 709772949 \pmod{10^9+7}$.</p>
<p>Find $G(10^8)$ and give your answer modulo $10^9+7$.</p>
<hr>
<h2 id="等积划分"><a href="#等积划分" class="headerlink" title="等积划分"></a><strong>等积划分</strong></h2><p>令$\theta=\sqrt{-2}$。</p>
<p>定义$T$为形如$a+b\theta$的数所构成的集合，其中$a$和$b$均为整数，且满足$a\gt 0$，或$a=0$且$b\gt 0$。对于集合$S \subseteq T$和元素$z \in T$，定义$p(S,z)$为从$S$中选择两个不同元素且它们的乘积为$z$或$-z$的方法数。</p>
<p>例如，如果$S=\{1,2,4\}$且$z=4$，只有一个合法元素对（$1$和$4$）的乘积为$\pm4$，因此$p(S,z)=1$。</p>
<p>再例如，如果$S=\{1,\theta,1+\theta,2-\theta\}$且$z=2-\theta$，则有$1\cdot(2-\theta)=z$和$\theta\cdot(1+\theta)=-z$，因此$p(S,z)=2$。</p>
<p>记$A$和$B$是满足以下条件的两个集合：</p>
<ul>
<li>$1 \in A$</li>
<li>$A \cap B = \emptyset$</li>
<li>$A \cup B = T$</li>
<li>对于所有$z\in T$，有$p(A,z) = p(B,z)$</li>
</ul>
<p>值得注意的是，这四个条件唯一确定了集合$A$和$B$。</p>
<p>令$F_n$为前$n$个阶乘的集合：$F_n=\{1!,2!,\dots,n!\}$，并定义$G(n)$为$F_n\cap A$中所有元素的和。</p>
<p>已知$G(4) = 25$，$G(7) = 745$，以及$G(100) \equiv 709772949 \pmod{10^9+7}$。</p>
<p>求$G(10^8)$，并对$10^9+7$取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 938</title>
    <url>/938/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-938"><a href="#Problem-938" class="headerlink" title="Problem 938"></a><a href="https://projecteuler.net/problem=938">Problem 938</a></h1><hr>
<h2 id="Exhausting-a-Colour"><a href="#Exhausting-a-Colour" class="headerlink" title="Exhausting a Colour"></a><strong>Exhausting a Colour</strong></h2><p>A deck of cards contains $R$ red cards and $B$ black cards.<br/><br>A card is chosen uniformly randomly from the deck and removed. A second card is then chosen uniformly randomly from the cards remaining and removed.</p>
<ul>
<li>If both cards are red, they are discarded.</li>
<li>If both cards are black, they are both put back in the deck.</li>
<li>If they are different colours, the red card is put back in the deck and the black card is discarded.</li>
</ul>
<p>Play ends when all the remaining cards in the deck are the same colour and let $P(R,B)$ be the probability that this colour is black. </p>
<p>You are given $P(2,2) = 0.4666666667$, $P(10,9) = 0.4118903397$ and $P(34,25) = 0.3665688069$.</p>
<p>Find $P(24690,12345)$. Give your answer with $10$ digits after the decimal point.</p>
<hr>
<h2 id="耗尽同色牌"><a href="#耗尽同色牌" class="headerlink" title="耗尽同色牌"></a><strong>耗尽同色牌</strong></h2><p>考虑一副包含$R$张红牌和$B$张黑牌的牌组。<br/><br>从牌组中均匀随机地选择并抽出一张牌，然后从剩余的牌中均匀随机地选择并抽出另一张牌。</p>
<ul>
<li>如果两张牌都是红色，则丢弃这两张牌。</li>
<li>如果两张牌都是黑色，则放回这两张牌。</li>
<li>如果它们的颜色不同，则放回红牌并丢弃黑牌。</li>
</ul>
<p>当牌组中所有剩余的牌都是同一种颜色时，游戏结束，并记$P(R,B)$为此时剩余牌的颜色均为黑色的概率。</p>
<p>已知$P(2,2) = 0.4666666667$，$P(10,9) = 0.4118903397$，$P(34,25) = 0.3665688069$。</p>
<p>求$P(24690,12345)$，并保留$10$位小数作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 939</title>
    <url>/939/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-939"><a href="#Problem-939" class="headerlink" title="Problem 939"></a><a href="https://projecteuler.net/problem=939">Problem 939</a></h1><hr>
<h2 id="Partisan-Nim"><a href="#Partisan-Nim" class="headerlink" title="Partisan Nim"></a><strong>Partisan Nim</strong></h2><p>Two players A and B are playing a variant of Nim.<br>At the beginning, there are several piles of stones. Each pile is either at the side of A or at the side of B. The piles are unordered.</p>
<p>They make moves in turn. At a player’s turn, the player can</p>
<ul>
<li>either choose a pile on the opponent’s side and remove one stone from that pile;</li>
<li>or choose a pile on their own side and remove the whole pile.</li>
</ul>
<p>The winner is the player who removes the last stone.</p>
<p>Let $E(N)$ be the number of initial settings with at most $N$ stones such that, whoever plays first, A always has a winning strategy.</p>
<p>For example $E(4) = 9$; the settings are:</p>
<table>
<thead>
<tr>
<th align="center">Nr.</th>
<th align="center">Piles at the side of A</th>
<th align="center">Piles at the side of B</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1</td>
<td align="center">$4$</td>
<td align="center">none</td>
</tr>
<tr>
<td align="center">2</td>
<td align="center">$1, 3$</td>
<td align="center">none</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">$2, 2$</td>
<td align="center">none</td>
</tr>
<tr>
<td align="center">4</td>
<td align="center">$1, 1, 2$</td>
<td align="center">none</td>
</tr>
<tr>
<td align="center">5</td>
<td align="center">$3$</td>
<td align="center">$1$</td>
</tr>
<tr>
<td align="center">6</td>
<td align="center">$1, 2$</td>
<td align="center">$1$</td>
</tr>
<tr>
<td align="center">7</td>
<td align="center">$2$</td>
<td align="center">$1, 1$</td>
</tr>
<tr>
<td align="center">8</td>
<td align="center">$3$</td>
<td align="center">none</td>
</tr>
<tr>
<td align="center">9</td>
<td align="center">$2$</td>
<td align="center">none</td>
</tr>
</tbody></table>
<p>Find $E(5000) \bmod 1234567891$.</p>
<hr>
<h2 id="偏心的取石子游戏"><a href="#偏心的取石子游戏" class="headerlink" title="偏心的取石子游戏"></a><strong>偏心的取石子游戏</strong></h2><p>两名玩家A和B正在玩一种变体取石子游戏。<br>游戏开始时，有数堆石子，每一堆石子要么属于A，要么属于B；石子堆之间是无序的。</p>
<p>两名玩家轮流行动。轮到任一玩家时，该玩家可以</p>
<ul>
<li>选择属于对手的一堆石子，并从中移除一枚石子；或者</li>
<li>选择属于自己的一堆石子，并移除整堆。</li>
</ul>
<p>移除最后一枚石子的玩家获胜。</p>
<p>令$E(N)$为最多有$N$枚石子，且无论谁先行动A总是有必胜策略的初始局面数量。</p>
<p>例如，$E(4) = 9$，这些初始局面分别是：</p>
<table>
<thead>
<tr>
<th align="center">编号</th>
<th align="center">属于A的石子堆</th>
<th align="center">属于B的石子堆</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1</td>
<td align="center">$4$</td>
<td align="center">无</td>
</tr>
<tr>
<td align="center">2</td>
<td align="center">$1, 3$</td>
<td align="center">无</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">$2, 2$</td>
<td align="center">无</td>
</tr>
<tr>
<td align="center">4</td>
<td align="center">$1, 1, 2$</td>
<td align="center">无</td>
</tr>
<tr>
<td align="center">5</td>
<td align="center">$3$</td>
<td align="center">$1$</td>
</tr>
<tr>
<td align="center">6</td>
<td align="center">$1, 2$</td>
<td align="center">$1$</td>
</tr>
<tr>
<td align="center">7</td>
<td align="center">$2$</td>
<td align="center">$1, 1$</td>
</tr>
<tr>
<td align="center">8</td>
<td align="center">$3$</td>
<td align="center">无</td>
</tr>
<tr>
<td align="center">9</td>
<td align="center">$2$</td>
<td align="center">无</td>
</tr>
</tbody></table>
<p>求$E(5000) \bmod 1234567891$。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 941</title>
    <url>/941/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-941"><a href="#Problem-941" class="headerlink" title="Problem 941"></a><a href="https://projecteuler.net/problem=941">Problem 941</a></h1><hr>
<h2 id="de-Bruijn’s-Combination-Lock"><a href="#de-Bruijn’s-Combination-Lock" class="headerlink" title="de Bruijn’s Combination Lock"></a><strong>de Bruijn’s Combination Lock</strong></h2><p>de Bruijn has a digital combination lock with $k$ buttons numbered $0$ to $k-1$ where $k \le 10$.<br/><br>The lock opens when the last $n$ buttons pressed match the preset combination.</p>
<p>Unfortunately he has forgotten the combination. He creates a sequence of these digits which contains every possible combination of length $n$. Then by pressing the buttons in this order he is sure to open the lock.</p>
<p>Consider all sequences of shortest possible length that contains every possible combination of the digits.<br>Denote by $C(k, n)$ the lexicographically smallest of these.</p>
<p>For example, $C(3,2)=0010211220$.</p>
<p>Define the sequence $a_n$ by $a_0=0$ and<br>$$a_n=(920461 a_{n-1}+800217387569)\bmod 10^{12} \text{ for }\  n &gt; 0$$<br>Interpret each $a_n$ as a $12$-digit combination, adding leading zeros for any $a_n$ with less than $12$ digits.</p>
<p>Given a positive integer $N$, we are interested in the order the combinations $a_1,\dots,a_N$ appear in $C(10,12)$. </p>
<p>Denote by $p_n$ the <em>place</em>, numbered $1,\dots,N$, in which $a_n$ appears out of $a_1,\dots,a_N$. Define $\displaystyle F(N)=\sum_{n=1}^Np_na_n$.</p>
<p>For example, the combination $a_1=800217387569$ is entered before $a_2=696996536878$. Therefore:<br>$$F(2)=1\cdot800217387569 + 2\cdot696996536878 = 2194210461325$$<br>You are also given $F(10)=32698850376317$.</p>
<p>Find $F(10^7)$. Give your answer modulo $1234567891$.</p>
<hr>
<h2 id="德布鲁因的组合锁"><a href="#德布鲁因的组合锁" class="headerlink" title="德布鲁因的组合锁"></a><strong>德布鲁因的组合锁</strong></h2><p>德布鲁因有一个数字组合锁，锁上有$k$个按钮，编号从$0$到$k-1$，其中$k \le 10$。<br/><br>只有最后按下的$n$个按钮与预设的密码组合相匹配时，锁才会被打开。</p>
<p>不巧的是，他忘记了密码组合。相反，他构造了一个包含所有长度为$n$的密码组合的数字序列，只需按照这个序列按下按钮，他确信能够打开锁。</p>
<p>考虑所有包含全部密码组合且长度最短的序列。<br>用$C(k, n)$表示这些序列中字典序最小的一个。</p>
<p>例如，$C(3, 2) = 0010211220$。</p>
<p>定义序列$a_n$，其中$a_0=0$且<br>$$a_n=(920461 a_{n-1}+800217387569)\bmod 10^{12} \text{ for }\  n &gt; 0$$<br>每个$a_n$可以视为一个$12$位数字的密码组合，若$a_n$少于$12$位数字则添加前导零。</p>
<p>给定正整数$N$，我们感兴趣的是密码组合$a_1,\dots,a_N$在$C(10,12)$中出现的顺序。<br/><br>记$a_n$在$a_1,\dots,a_N$中出现的顺序或<i class=zh>位置</i>为$p_n$，也即$p_n$的取值为$1,\dots,N$。定义$\displaystyle F(N)=\sum_{n=1}^Np_na_n$。</p>
<p>例如，密码组合$a_1=800217387569$在$a_2=696996536878$之前出现，因此：<br>$$F(2)=1\cdot800217387569 + 2\cdot696996536878 = 2194210461325$$<br>已知$F(10)=32698850376317$。</p>
<p>求$F(10^7)$，并对$1234567891$取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
  <entry>
    <title>Problem 940</title>
    <url>/940/</url>
    <content><![CDATA[<hr>
<h1 id="Problem-940"><a href="#Problem-940" class="headerlink" title="Problem 940"></a><a href="https://projecteuler.net/problem=940">Problem 940</a></h1><hr>
<h2 id="Two-Dimensional-Recurrence"><a href="#Two-Dimensional-Recurrence" class="headerlink" title="Two-Dimensional Recurrence"></a><strong>Two-Dimensional Recurrence</strong></h2><p>The <strong>Fibonacci sequence</strong> $(f_i)$ is the unique sequence such that</p>
<ul>
<li>$f_0=0$</li>
<li>$f_1=1$</li>
<li>$f_{i+1}=f_i+f_{i-1}$</li>
</ul>
<p>Similarly, there is a unique function $A(m,n)$ such that</p>
<ul>
<li>$A(0,0)=0$</li>
<li>$A(0,1)=1$</li>
<li>$A(m+1,n)=A(m,n+1)+A(m,n)$</li>
<li>$A(m+1,n+1)=2A(m+1,n)+A(m,n)$</li>
</ul>
<p>Define $S(k)=\displaystyle\sum_{i=2}^k\sum_{j=2}^k A(f_i,f_j)$. For example<br>$$<br>\begin{aligned}<br>S(3)&amp;=A(1,1)+A(1,2)+A(2,1)+A(2,2)\\<br>&amp;=2+5+7+16\\<br>&amp;=30<br>\end{aligned}<br>$$</p>
<p>You are also given $S(5)=10396$.</p>
<p>Find $S(50)$, giving your answer modulo $1123581313$.</p>
<hr>
<h2 id="二维递归"><a href="#二维递归" class="headerlink" title="二维递归"></a><strong>二维递归</strong></h2><p><strong>斐波那契数列</strong>$(f_i)$是指满足以下条件的唯一数列：</p>
<ul>
<li>$f_0=0$</li>
<li>$f_1=1$</li>
<li>$f_{i+1}=f_i+f_{i-1}$</li>
</ul>
<p>类似地，存在唯一的函数$A(m,n)$满足：</p>
<ul>
<li>$A(0,0)=0$</li>
<li>$A(0,1)=1$</li>
<li>$A(m+1,n)=A(m,n+1)+A(m,n)$</li>
<li>$A(m+1,n+1)=2A(m+1,n)+A(m,n)$</li>
</ul>
<p>定义$S(k)=\displaystyle\sum_{i=2}^k\sum_{j=2}^k A(f_i,f_j)$。例如：<br>$$<br>\begin{aligned}<br>S(3)&amp;=A(1,1)+A(1,2)+A(2,1)+A(2,2)\\<br>&amp;=2+5+7+16\\<br>&amp;=30<br>\end{aligned}<br>$$</p>
<p>已知$S(5)=10396$。</p>
<p>求$S(50)$，并对$1123581313$取余作为你的答案。</p>
<hr>
]]></content>
  </entry>
</search>
